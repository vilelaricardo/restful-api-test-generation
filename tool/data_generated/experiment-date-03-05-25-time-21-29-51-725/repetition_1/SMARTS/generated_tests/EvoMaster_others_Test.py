#!/usr/bin/env python

import json
import unittest
import requests
import os
if os.name == 'nt':
    class timeout_decorator:
        @staticmethod
        def timeout(*args, **kwargs):
            return lambda f: f # return a no-op decorator
else:
    import timeout_decorator
from em_test_utils import *


#  This file was automatically generated by EvoMaster on 2025-05-04T01:23:28.383Z[Etc/UTC]
#  
#  The generated test suite contains 5 tests
#  
#  Covered targets: 21
#  
#  Used time: 0h 41m 51s
#  
#  Needed budget for current results: 98%
#  
#  This file contains test cases that represent failed calls, but not indicative of faults.
class EvoMaster_others_Test(unittest.TestCase):

    
    baseUrlOfSut = "http://localhost:8000"
    
    
    
    
    
    
    
    
    
    
    # Calls:
    # 1 - (201) POST:/v1/estudantes/lote
    # 2 - (422) PATCH:/v1/estudantes/lote
    # 3 - (200) PATCH:/v1/estudantes/lote
    @timeout_decorator.timeout(60)
    def test_0(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"numeroNISResponsavel\": \"55896223695\", " + \
            " \"nomeMaeEstudante\": \"Paloma Prado\", " + \
            " \"nome\": \"Dr. Simon Dominato Madeira\", " + \
            " \"dataNascimento\": \"2008-09-16\", " + \
            " \"genero\": 5, " + \
            " \"nomeSocial\": \"YXWGpw\", " + \
            " \"sexo\": \"5\", " + \
            " \"numeroNIS\": \"47396910820\", " + \
            " \"rg\": \"1qD0tf9Mn85Iba_\", " + \
            " \"certidaoNascimento\": \"42377829995102870245692965036266\", " + \
            " \"cnh\": \"7654321\", " + \
            " \"bairro\": \"São Ferreira\", " + \
            " \"municipio\": 4314902, " + \
            " \"uf\": 835, " + \
            " \"estudantePpl\": 1, " + \
            " \"dataInicioMatricula\": \"1970-06-26\", " + \
            " \"inep\": 41071670, " + \
            " \"dataInicioPeriodoLetivo\": \"1928-08-16\", " + \
            " \"formaOrganizacaoTurma\": 1, " + \
            " \"estudanteAnoPeriodo\": 3 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_1.status_code == 422
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Não foi possível processar as informações."
        assert res_1.json()["errors"]["message"] == "JSON inválido."
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_47_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_48_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_2.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
    
    
    # Calls:
    # (404) GET:/v1/profissionais/{cpf}
    @timeout_decorator.timeout(60)
    def test_1(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/0_U2PEP9BezRz",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Nenhum profissional de educação encontrado."
    
    
    # Calls:
    # (404) GET:/v1/estudantes/{cpfNis}
    @timeout_decorator.timeout(60)
    def test_2(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/rvUAX",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Nenhum estudante encontrado."
    
    
    # Calls:
    # (422) POST:/v1/profissionais
    # Using 1 example:
    #   123456789
    @timeout_decorator.timeout(60)
    def test_3(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"tipoEnsinoMedio\": 832, " + \
            " \"nome\": \"ybYAsNTOE\", " + \
            " \"genero\": 9, " + \
            " \"telefone\": \"bQBilwU\", " + \
            " \"nomeSocial\": \"tB8KxOQIUF0iKfO\", " + \
            " \"cep\": \"k\", " + \
            " \"municipio\": 667, " + \
            " \"uf\": 450, " + \
            " \"inep\": 537, " + \
            " \"matriculaRede\": \"123456789\", " + \
            " \"tipoVinculo\": 500, " + \
            " \"dataFim\": \"1904-07-19\", " + \
            " \"cargaHoraria\": 553 " + \
            " } "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_0.status_code == 422
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #2 ($dataNascimento) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
    
    
    # Calls:
    # (422) POST:/v1/profissionais/lote
    @timeout_decorator.timeout(60)
    def test_4(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 422
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "JSON inválido."


if __name__ == '__main__':
    unittest.main()
