#!/usr/bin/env python

import json
import unittest
import requests
import os
if os.name == 'nt':
    class timeout_decorator:
        @staticmethod
        def timeout(*args, **kwargs):
            return lambda f: f # return a no-op decorator
else:
    import timeout_decorator
from em_test_utils import *


#  This file was automatically generated by EvoMaster on 2025-05-04T13:18:53.153Z[Etc/UTC]
#  
#  The generated test suite contains 7 tests
#  
#  Covered targets: 27
#  
#  Used time: 0h 41m 52s
#  
#  Needed budget for current results: 96%
#  
#  This file contains test cases that represent failed calls, but not indicative of faults.
class EvoMaster_others_Test(unittest.TestCase):

    
    baseUrlOfSut = "http://localhost:8000"
    
    
    
    
    
    
    
    
    
    
    # Calls:
    # (null) POST:/v1/estudantes
    # Using 1 example:
    #   2024
    @timeout_decorator.timeout(60)
    def test_0(self):
        
        try:
            headers = {}
            headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
            headers["content-type"] = "application/json"
            body = {}
            body = " { " + \
                " \"numeroNISResponsavel\": \"77374013075\", " + \
                " \"nomeMaeEstudante\": \"Matheus da Fontoura\", " + \
                " \"nome\": \"Manuela Quaresma Filho\", " + \
                " \"email\": \"marli.pinto@yahoo.com\", " + \
                " \"telefone\": \"nE2XIGQ\", " + \
                " \"tipoDeficiencia\": [ " + \
                " 1, " + \
                " 272, " + \
                " 3 " + \
                " ], " + \
                " \"orgaoEmissor\": \"vosb-zZ\", " + \
                " \"cnh\": \"86166621104\", " + \
                " \"logradouro\": \"Rodovia Nicolas da Barra\", " + \
                " \"bairro\": \"Bairro minus\", " + \
                " \"cep\": \"01001000\", " + \
                " \"estudantePpl\": 42, " + \
                " \"instituicao\": 6, " + \
                " \"formaOrganizacaoTurma\": 991, " + \
                " \"turmaOrganizacaoQuantidadeTotal\": 326, " + \
                " \"estudanteIntegral\": 1, " + \
                " \"anoMatricula\": 923 " + \
                " } "
            headers['Accept'] = "*/*"
            requests \
                    .post(self.baseUrlOfSut + "/v1/estudantes",
                        headers=headers, data=body)
        except AssertionError as e:
            raise e
        except Exception as e:
            pass
    
    
    # Calls:
    # (null) GET:/v1/profissionais
    @timeout_decorator.timeout(60)
    def test_1(self):
        
        try:
            headers = {}
            headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
            headers['Accept'] = "*/*"
            requests \
                    .get(self.baseUrlOfSut + "/v1/profissionais?" + 
                        "page=597&" + 
                        "per_page=826",
                        headers=headers)
        except AssertionError as e:
            raise e
        except Exception as e:
            pass
    
    
    # Calls:
    # 1 - (201) POST:/v1/estudantes/lote
    # 2 - (422) PATCH:/v1/estudantes/lote
    @timeout_decorator.timeout(60)
    def test_2(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpfResponsavel\": \"yq6grf2g10\", " + \
            " \"cpf\": \"\", " + \
            " \"dataNascimento\": \"EkhyoJLWT3\", " + \
            " \"genero\": 1, " + \
            " \"racaCor\": 1, " + \
            " \"email\": \"zcRofJ\", " + \
            " \"nomeSocial\": \"r\", " + \
            " \"tipoDeficiencia\": [], " + \
            " \"numeroNIS\": \"ytcEo5SH\", " + \
            " \"cnh\": \"LQQ\", " + \
            " \"logradouro\": \"sHC\", " + \
            " \"numero\": \"YUYrX\", " + \
            " \"cep\": \"RfXA0\", " + \
            " \"uf\": -2092012412, " + \
            " \"instituicao\": 557, " + \
            " \"inep\": 377, " + \
            " \"dataInicioPeriodoLetivo\": \"1963-03-26\", " + \
            " \"formaOrganizacaoTurma\": 544, " + \
            " \"estudanteAnoPeriodo\": 1, " + \
            " \"anoMatricula\": 416 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_1.status_code == 422
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Não foi possível processar as informações."
        assert res_1.json()["errors"]["message"] == "JSON inválido."
    
    
    # Calls:
    # (404) GET:/v1/profissionais/{cpf}
    @timeout_decorator.timeout(60)
    def test_3(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/z",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Nenhum profissional de educação encontrado."
    
    
    # Calls:
    # (404) GET:/v1/estudantes/{cpfNis}
    @timeout_decorator.timeout(60)
    def test_4(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/axRCB1d",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Nenhum estudante encontrado."
    
    
    # Calls:
    # (422) POST:/v1/profissionais
    # Using 1 example:
    #   5
    @timeout_decorator.timeout(60)
    def test_5(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"nivelEscolaridade\": 5, " + \
            " \"nome\": \"goniuAdzAxdAbX0S\", " + \
            " \"genero\": 6, " + \
            " \"racaCor\": 42, " + \
            " \"email\": \"DGRjqe32X\", " + \
            " \"telefone\": \"_ft_\", " + \
            " \"nomeSocial\": \"vwW97KTMS0\", " + \
            " \"numero\": \"\", " + \
            " \"cep\": \"bhXr6k\", " + \
            " \"municipio\": 542, " + \
            " \"uf\": 748, " + \
            " \"inep\": 707, " + \
            " \"dataFim\": \"1936-03-31\", " + \
            " \"cargaHoraria\": 681 " + \
            " } "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_0.status_code == 422
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #2 ($dataNascimento) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
    
    
    # Calls:
    # (422) POST:/v1/profissionais/lote
    @timeout_decorator.timeout(60)
    def test_6(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 422
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "JSON inválido."


if __name__ == '__main__':
    unittest.main()
