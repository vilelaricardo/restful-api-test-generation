#!/usr/bin/env python

import json
import unittest
import requests
import os
if os.name == 'nt':
    class timeout_decorator:
        @staticmethod
        def timeout(*args, **kwargs):
            return lambda f: f # return a no-op decorator
else:
    import timeout_decorator
from em_test_utils import *


#  This file was automatically generated by EvoMaster on 2025-05-04T03:44:26.001Z[Etc/UTC]
#  
#  The generated test suite contains 5 tests
#  
#  Covered targets: 21
#  
#  Used time: 0h 41m 21s
#  
#  Needed budget for current results: 99%
#  
#  This file contains test cases that represent failed calls, but not indicative of faults.
class EvoMaster_others_Test(unittest.TestCase):

    
    baseUrlOfSut = "http://localhost:8000"
    
    
    
    
    
    
    
    
    
    
    # Calls:
    # 1 - (201) POST:/v1/estudantes/lote
    # 2 - (200) PATCH:/v1/estudantes/lote
    # 3 - (422) PATCH:/v1/estudantes/lote
    # Using 2 examples:
    #   2025
    #   25
    @timeout_decorator.timeout(60)
    def test_0(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpfResponsavel\": \"64432193255\", " + \
            " \"nomeMaeEstudante\": \"Agatha Cervantes Filho\", " + \
            " \"cpf\": \"20O6yhHTOx\", " + \
            " \"nome\": \"lxgudpDH8a\", " + \
            " \"dataNascimento\": \"2009-03-25\", " + \
            " \"racaCor\": 0, " + \
            " \"email\": \"aaron.camacho.vila.filho@fake.com\", " + \
            " \"numeroNIS\": \"Q\", " + \
            " \"certidaoNascimento\": \"55306795430039831163299094499403\", " + \
            " \"cnh\": \"56267273661\", " + \
            " \"logradouro\": \"lv\", " + \
            " \"bairro\": \"São Matos\", " + \
            " \"numero\": \"32\", " + \
            " \"cep\": \"98216152\", " + \
            " \"municipio\": 2408102, " + \
            " \"estudantePpl\": 2, " + \
            " \"serieAno\": 25, " + \
            " \"matriculaRede\": \"56789\", " + \
            " \"instituicao\": 94528, " + \
            " \"inep\": 688, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 622 " + \
            " }, " + \
            " { " + \
            " \"genero\": 7, " + \
            " \"telefone\": \"11969630845\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1 " + \
            " ], " + \
            " \"sexo\": \"3\", " + \
            " \"numeroNIS\": \"39762962688\", " + \
            " \"cnh\": \"tWef\", " + \
            " \"logradouro\": \"\", " + \
            " \"bairro\": \"VpMM\", " + \
            " \"numero\": \"78990\", " + \
            " \"cep\": \"\", " + \
            " \"municipio\": 3106200, " + \
            " \"uf\": 987, " + \
            " \"estudantePpl\": 1, " + \
            " \"serieAno\": 71, " + \
            " \"matriculaRede\": \"56789\", " + \
            " \"instituicao\": 149583, " + \
            " \"dataInicioPeriodoLetivo\": \"1934-00-13\", " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 1, " + \
            " \"anoMatricula\": 2025 " + \
            " }, " + \
            " { " + \
            " \"nomeMaeEstudante\": \"Ornela Prado\", " + \
            " \"cpf\": \"24696353737\", " + \
            " \"nome\": \"Veronica Salinas\", " + \
            " \"racaCor\": 42, " + \
            " \"telefone\": \"11969630845\", " + \
            " \"nomeSocial\": \"\", " + \
            " \"numeroNIS\": \"5\", " + \
            " \"orgaoEmissor\": \"SSP-AL\", " + \
            " \"certidaoNascimento\": \"90654054626385161369985276284266\", " + \
            " \"logradouro\": \"Rua Avenida Verdugo\", " + \
            " \"bairro\": \"São Pontes\", " + \
            " \"numero\": \"248\", " + \
            " \"estudantePpl\": 1, " + \
            " \"matriculaRede\": \"56789\", " + \
            " \"inep\": 16004124, " + \
            " \"formaOrganizacaoTurma\": 394, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 765, " + \
            " \"estudanteAnoPeriodo\": 3, " + \
            " \"anoMatricula\": 2024 " + \
            " }, " + \
            " { " + \
            " \"numeroNISResponsavel\": \"15759073986\", " + \
            " \"cpf\": \"78003371899\", " + \
            " \"dataNascimento\": \"2006-07-17\", " + \
            " \"racaCor\": 2, " + \
            " \"email\": \"aaron.cauan.marinho.jr@fake.com\", " + \
            " \"telefone\": \"3333333\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 2, " + \
            " 1, " + \
            " 2, " + \
            " 1, " + \
            " 611 " + \
            " ], " + \
            " \"sexo\": \"4\", " + \
            " \"orgaoEmissor\": \"SSP\", " + \
            " \"certidaoNascimento\": \"22313987863187931993781600717690\", " + \
            " \"bairro\": \"São Verdugo\", " + \
            " \"numero\": \"587\", " + \
            " \"municipio\": 3106200, " + \
            " \"uf\": 617, " + \
            " \"dataInicioMatricula\": \"1986-04-03\", " + \
            " \"serieAno\": 27, " + \
            " \"matriculaRede\": \"Teste Ricardo\", " + \
            " \"instituicao\": 611, " + \
            " \"inep\": 585, " + \
            " \"dataInicioPeriodoLetivo\": \"1922-07-23\", " + \
            " \"formaOrganizacaoTurma\": 6, " + \
            " \"estudanteIntegral\": 0, " + \
            " \"anoMatricula\": 2024 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_27_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_28_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_29_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_30_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_1.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_2.status_code == 422
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Não foi possível processar as informações."
        assert res_2.json()["errors"]["message"] == "JSON inválido."
    
    
    # Calls:
    # (404) GET:/v1/profissionais/{cpf}
    @timeout_decorator.timeout(60)
    def test_1(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/aAGQfH9MxC",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Nenhum profissional de educação encontrado."
    
    
    # Calls:
    # (404) GET:/v1/estudantes/{cpfNis}
    @timeout_decorator.timeout(60)
    def test_2(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/kBfFZIMl9K",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Nenhum estudante encontrado."
    
    
    # Calls:
    # (422) POST:/v1/profissionais
    # Using 1 example:
    #   1
    @timeout_decorator.timeout(60)
    def test_3(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpf\": \"\", " + \
            " \"genero\": 6, " + \
            " \"racaCor\": 0, " + \
            " \"telefone\": \"vM598dWe3CM7DvWv\", " + \
            " \"municipio\": 787, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 1, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Yj6ma\" " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 508, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"qXiyMBnketThk\" " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 738, " + \
            " \"anoConclusaoFormacaoAcademica\": 491 " + \
            " } " + \
            " ], " + \
            " \"tipoVinculo\": 368 " + \
            " } "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_0.status_code == 422
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #1 ($nome) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
    
    
    # Calls:
    # (422) POST:/v1/profissionais/lote
    @timeout_decorator.timeout(60)
    def test_4(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 422
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "JSON inválido."


if __name__ == '__main__':
    unittest.main()
