#!/usr/bin/env python

import json
import unittest
import requests
import os
if os.name == 'nt':
    class timeout_decorator:
        @staticmethod
        def timeout(*args, **kwargs):
            return lambda f: f # return a no-op decorator
else:
    import timeout_decorator
from em_test_utils import *


#  This file was automatically generated by EvoMaster on 2025-05-04T03:44:25.865Z[Etc/UTC]
#  
#  The generated test suite contains 74 tests
#  
#  Covered targets: 3126
#  
#  Used time: 0h 41m 21s
#  
#  Needed budget for current results: 99%
#  
#  This file contains test cases that are likely to indicate faults.
class EvoMaster_faults_Test(unittest.TestCase):

    
    baseUrlOfSut = "http://localhost:8000"
    
    
    
    
    
    
    
    
    
    
    # Calls:
    # (500) POST:/v1/estudantes/lote
    # Found 2 potential faults. Type-codes: 100, 200
    @timeout_decorator.timeout(60)
    def test_0_with500(self):
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes/lote
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["errors"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 500
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Ocorreu um erro."
        assert res_0.json()["errors"]["message"] == "JSON inválido."
    
    
    # Calls:
    # (500) POST:/v1/estudantes
    # Found 2 potential faults. Type-codes: 100, 200
    @timeout_decorator.timeout(60)
    def test_1_with500(self):
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"kp\", " + \
            " \"numeroNISResponsavel\": \"WS\", " + \
            " \"dataNascimento\": \"tD\", " + \
            " \"racaCor\": 2, " + \
            " \"email\": \"1\", " + \
            " \"nomeSocial\": \"\", " + \
            " \"sexo\": \"0\", " + \
            " \"rg\": \"eqsilVsEYMn2v7\", " + \
            " \"orgaoEmissor\": \"R0ay\", " + \
            " \"cnh\": \"VXp\", " + \
            " \"logradouro\": \"WIKNZQ0To2\", " + \
            " \"numero\": \"HkGle\", " + \
            " \"municipio\": 333, " + \
            " \"uf\": 757, " + \
            " \"serieAno\": 861, " + \
            " \"instituicao\": 44, " + \
            " \"dataInicioPeriodoLetivo\": \"1984-03-31\", " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 828, " + \
            " \"estudanteAnoPeriodo\": 3 " + \
            " } "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_0.status_code == 500
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Ocorreu um erro."
        assert res_0.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório. (and 2 more errors)"
    
    
    # Calls:
    # (500) GET:/v1/estudantes/inep/{inep}
    # Found 1 potential fault of type-code 100
    @timeout_decorator.timeout(60)
    def test_2_with500(self):
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes/inep/{inep}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/kWrvpJyn?" + 
                    "page=335&" + 
                    "situacao_final=EVOMASTER",
                    headers=headers)
        
        assert res_0.status_code == 500
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não foi possível obter os estudantes."
        assert res_0.json()["errors"]["message"] == "O campo situacao_final é inválido."
    
    
    # Calls:
    # 1 - (201) POST:/v1/estudantes/lote
    # 2 - (500) GET:/v1/estudantes/lote/{id}/erros
    # Found 1 potential fault of type-code 100
    @timeout_decorator.timeout(60)
    def test_3_with500(self):
        
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpfResponsavel\": \"66220344197\", " + \
            " \"numeroNISResponsavel\": \"80452421827\", " + \
            " \"nomeMaeEstudante\": \"Dr. Laís Saraiva Neto\", " + \
            " \"nome\": \"M1fh30rg6UvmSe\", " + \
            " \"racaCor\": 2, " + \
            " \"email\": \"JHr4yo_fF0Uw1Bfn\", " + \
            " \"telefone\": \"11949911257\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1, " + \
            " 548, " + \
            " 3 " + \
            " ], " + \
            " \"numeroNIS\": \"27714742025\", " + \
            " \"orgaoEmissor\": \"SSP-MG\", " + \
            " \"certidaoNascimento\": \"74618393168735065142795527323533\", " + \
            " \"numero\": \"70\", " + \
            " \"municipio\": 4314902, " + \
            " \"uf\": 42, " + \
            " \"dataInicioMatricula\": \"2062-08-23\", " + \
            " \"instituicao\": 136293, " + \
            " \"inep\": 41072472, " + \
            " \"dataInicioPeriodoLetivo\": \"1912-12-20\", " + \
            " \"formaOrganizacaoTurma\": 1, " + \
            " \"estudanteAnoPeriodo\": 1, " + \
            " \"estudanteIntegral\": 42, " + \
            " \"anoMatricula\": 2024 " + \
            " }, " + \
            " { " + \
            " \"cpfResponsavel\": \"96106007861\", " + \
            " \"numeroNISResponsavel\": \"85436298944\", " + \
            " \"nomeMaeEstudante\": \"Sra. Beatriz Cruz Estrada\", " + \
            " \"nome\": \"Aaron Bezerra Jr.\", " + \
            " \"genero\": 9, " + \
            " \"racaCor\": 3, " + \
            " \"email\": \"aaron.andre.aranda@fake.com\", " + \
            " \"telefone\": \"11949911257\", " + \
            " \"nomeSocial\": \"rRAEEBPUPdYf\", " + \
            " \"sexo\": \"0\", " + \
            " \"rg\": \"3551293790667329\", " + \
            " \"orgaoEmissor\": \"SSP-RJ\", " + \
            " \"certidaoNascimento\": \"76065867711194023593344681235575\", " + \
            " \"cnh\": \"01354673004\", " + \
            " \"bairro\": \"cFyjYeS1iRw57\", " + \
            " \"numero\": \"9\", " + \
            " \"cep\": \"dw2AhA\", " + \
            " \"municipio\": 1302603, " + \
            " \"estudantePpl\": 1, " + \
            " \"dataInicioMatricula\": \"2091-07-06\", " + \
            " \"matriculaRede\": \"Teste Ricardo\", " + \
            " \"instituicao\": 146, " + \
            " \"inep\": 29477735, " + \
            " \"dataInicioPeriodoLetivo\": \"1916-12-17\", " + \
            " \"estudanteIntegral\": 1 " + \
            " }, " + \
            " { " + \
            " \"cpfResponsavel\": \"28307498392\", " + \
            " \"numeroNISResponsavel\": \"e\", " + \
            " \"cpf\": \"50579756505\", " + \
            " \"racaCor\": 3, " + \
            " \"telefone\": \"HMpj582\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 3, " + \
            " 3, " + \
            " 754, " + \
            " 1, " + \
            " 3 " + \
            " ], " + \
            " \"sexo\": \"1\", " + \
            " \"numeroNIS\": \"95458295333\", " + \
            " \"rg\": \"T\", " + \
            " \"certidaoNascimento\": \"18000726784190980087811069484411\", " + \
            " \"logradouro\": \"\", " + \
            " \"bairro\": \"São Rangel\", " + \
            " \"numero\": \"23\", " + \
            " \"cep\": \"hqiPx\", " + \
            " \"municipio\": 4314902, " + \
            " \"uf\": 42, " + \
            " \"dataInicioMatricula\": \"1993-03-31\", " + \
            " \"serieAno\": 25, " + \
            " \"matriculaRede\": \"56789\", " + \
            " \"inep\": 29476534, " + \
            " \"formaOrganizacaoTurma\": 426, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 3, " + \
            " \"estudanteAnoPeriodo\": 1, " + \
            " \"estudanteIntegral\": 42 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        location_lote = "/v1/estudantes/lote" + "/" + str(res_0.json()['id'])
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes/lote/{id}/erros
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(resolve_location(location_lote, self.baseUrlOfSut + str("/v1/estudantes/lote/35/erros?page=515&per_page=126")),
                    headers=headers)
        
        assert res_1.status_code == 500
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Não foi possível obter detalhamento do lote."
        assert res_1.json()["errors"]["message"] == "Lote com status de envio"
    
    
    # Calls:
    # 1 - (201) POST:/v1/profissionais/lote
    # 2 - (500) GET:/v1/profissionais/lote/{id}/erros
    # Found 2 potential faults. Type-codes: 100, 200
    # Using 4 examples:
    #   1
    #   2014
    #   44
    #   Universidade Federal do Rio de Janeiro
    @timeout_decorator.timeout(60)
    def test_4_with500(self):
        
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"tipoEnsinoMedio\": 1, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"cpf\": \"e6Wf1ER4\", " + \
            " \"nome\": \"Aaron Branco Colaço\", " + \
            " \"dataNascimento\": \"jCbwTmfCP3i\", " + \
            " \"email\": \"RTT0VngF3Deo0O@example.com\", " + \
            " \"telefone\": \"0iBLZHSjg6HJPmG\", " + \
            " \"nomeSocial\": \"test\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 2, " + \
            " 540 " + \
            " ], " + \
            " \"sexo\": \"5\", " + \
            " \"logradouro\": \"TD5zuBZUjmiPx\", " + \
            " \"numero\": \"6843\", " + \
            " \"cep\": \"17757711\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"kiGY\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"1924-03-15\", " + \
            " \"dataFim\": \"2008-05-11\", " + \
            " \"cargaHoraria\": 44 " + \
            " }, " + \
            " { " + \
            " \"cpf\": \"15710401889\", " + \
            " \"dataNascimento\": \"2010-12-22\", " + \
            " \"genero\": 2, " + \
            " \"racaCor\": 3, " + \
            " \"email\": \"aaron.breno.soares@fake.com\", " + \
            " \"telefone\": \"0\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1, " + \
            " 3 " + \
            " ], " + \
            " \"sexo\": \"2\", " + \
            " \"bairro\": \"São Barreto\", " + \
            " \"numero\": \"941\", " + \
            " \"cep\": \"80310980\", " + \
            " \"inep\": 29182158, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " } " + \
            " ], " + \
            " \"tipoVinculo\": 0, " + \
            " \"dataIngresso\": \"2016-11-24\", " + \
            " \"dataFim\": \"1909-04-26\", " + \
            " \"cargaHoraria\": 44 " + \
            " }, " + \
            " { " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"nome\": \"9cOkYXSy\", " + \
            " \"racaCor\": 1, " + \
            " \"email\": \"Hj7h0hzNfMxxnS\", " + \
            " \"nomeSocial\": \"8hbo50Mnoym\", " + \
            " \"sexo\": \"1\", " + \
            " \"bairro\": \"São Pacheco\", " + \
            " \"numero\": \"3010\", " + \
            " \"cep\": \"23192536\", " + \
            " \"inep\": \"29390109\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"anoInicioFormacaoAcademica\": 2016 " + \
            " }, " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Rio de Janeiro\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"w\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 801, " + \
            " \"cargaHoraria\": 40 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 595, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"cpf\": \"64767402964\", " + \
            " \"nome\": \"Aaron Barreto Beltrão Neto\", " + \
            " \"genero\": 1, " + \
            " \"racaCor\": 0, " + \
            " \"email\": \"aaron.bonilha.valente@fake.com\", " + \
            " \"telefone\": \"3333333\", " + \
            " \"nomeSocial\": \"YXWGpw\", " + \
            " \"sexo\": \"3\", " + \
            " \"numero\": \"98\", " + \
            " \"cep\": \"58670302\", " + \
            " \"municipio\": 3106200, " + \
            " \"matriculaRede\": \"Teste Ricardo\", " + \
            " \"tipoVinculo\": 1, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"1909-02-29\", " + \
            " \"cargaHoraria\": 44 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        location_lote = "/v1/profissionais/lote" + "/" + str(res_0.json()['id'])
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        # Fault100. HTTP Status 500. GET:/v1/profissionais/lote/{id}/erros
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(resolve_location(location_lote, self.baseUrlOfSut + str("/v1/profissionais/lote/13/erros?per_page=523")),
                    headers=headers)
        
        assert res_1.status_code == 500
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Não foi possível obter detalhamento do lote."
        assert res_1.json()["errors"]["message"] == "Lote com status de envio"
    
    
    # Calls:
    # 1 - (201) POST:/v1/profissionais/lote
    # 2 - (500) GET:/v1/profissionais/lote/{id}/erros
    # Found 2 potential faults. Type-codes: 100, 200
    # Using 3 examples:
    #   1
    #   123456789
    #   2010
    @timeout_decorator.timeout(60)
    def test_5_with500(self):
        
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"nome\": \"4LIstyQrkDyWbCvz\", " + \
            " \"racaCor\": 4, " + \
            " \"telefone\": \"11933018135\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1, " + \
            " 2, " + \
            " 651, " + \
            " 2 " + \
            " ], " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"bairro\": \"TOGs\", " + \
            " \"formacoesAcademicas\": [], " + \
            " \"inep\": 29479800, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"2057-09-26\", " + \
            " \"dataFim\": \"2003-11-14\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 1, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"cpf\": \"59949805600\", " + \
            " \"nome\": \"Agustina Marin\", " + \
            " \"dataNascimento\": \"kts\", " + \
            " \"genero\": 3, " + \
            " \"tipoDeficiencia\": [ " + \
            " 2, " + \
            " 3, " + \
            " 1, " + \
            " 1, " + \
            " 3 " + \
            " ], " + \
            " \"logradouro\": \"Rua Largo Fabrício Serna\", " + \
            " \"bairro\": \"São Guerra\", " + \
            " \"numero\": \"gN45u6\", " + \
            " \"cep\": \"uX5\", " + \
            " \"municipio\": 3550308, " + \
            " \"uf\": 687, " + \
            " \"inep\": \"35428899\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 249 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 402, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoInicioFormacaoAcademica\": 2016 " + \
            " } " + \
            " ], " + \
            " \"dataIngresso\": \"2082-08-10\", " + \
            " \"dataFim\": \"2011-10-12\", " + \
            " \"cargaHoraria\": 524 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"cpf\": \"57938251429\", " + \
            " \"email\": \"QtizGek2\", " + \
            " \"telefone\": \"11933018135\", " + \
            " \"nomeSocial\": \"YXWGpw\", " + \
            " \"logradouro\": \"Rua R. Christopher\", " + \
            " \"bairro\": \"São Fernandes\", " + \
            " \"numero\": \"5522\", " + \
            " \"cep\": \"57908156\", " + \
            " \"inep\": \"41079515\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 597, " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " }, " + \
            " { " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 1 " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"Teste Ricardo\", " + \
            " \"dataIngresso\": \"2062-07-29\", " + \
            " \"dataFim\": \"2050-05-09\" " + \
            " }, " + \
            " { " + \
            " \"cpf\": \"39471462800\", " + \
            " \"dataNascimento\": \"it4fpIbYyPl\", " + \
            " \"racaCor\": 3, " + \
            " \"email\": \"valentina.bittencourt.salazar@fake.com\", " + \
            " \"telefone\": \"3333333\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 2 " + \
            " ], " + \
            " \"sexo\": \"2\", " + \
            " \"numero\": \"5522\", " + \
            " \"cep\": \"91250515\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 544, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoInicioFormacaoAcademica\": 2016 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 1, " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"anoInicioFormacaoAcademica\": 801 " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"123456789\", " + \
            " \"dataIngresso\": \"1942-06-23\" " + \
            " }, " + \
            " { " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"cpf\": \"65548919270\", " + \
            " \"nome\": \"Srta. Renata D\u0027ávila\", " + \
            " \"dataNascimento\": \"jWwZiI1eacSJfc\", " + \
            " \"genero\": 3, " + \
            " \"telefone\": \"3333333\", " + \
            " \"sexo\": \"4\", " + \
            " \"cep\": \"90356476\", " + \
            " \"inep\": \"33004803\", " + \
            " \"matriculaRede\": \"DyJvBxdRU\", " + \
            " \"codigoFuncao\": 2 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        location_lote = "/v1/profissionais/lote" + "/" + str(res_0.json()['id'])
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        # Fault100. HTTP Status 500. GET:/v1/profissionais/lote/{id}/erros
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(resolve_location(location_lote, self.baseUrlOfSut + str("/v1/profissionais/lote/43/erros?per_page=10")),
                    headers=headers)
        
        assert res_1.status_code == 500
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Não foi possível obter detalhamento do lote."
        assert res_1.json()["errors"]["message"] == "Lote com status de envio"
    
    
    # Calls:
    # 1 - (201) POST:/v1/profissionais/lote
    # 2 - (500) GET:/v1/profissionais/lote/{id}/erros
    # Found 2 potential faults. Type-codes: 100, 200
    # Using 2 examples:
    #   123456789
    #   2014
    @timeout_decorator.timeout(60)
    def test_6_with500(self):
        
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"cpf\": \"25049511593\", " + \
            " \"dataNascimento\": \"EtFuZzacfha2SJoX\", " + \
            " \"genero\": 5, " + \
            " \"telefone\": \"3333333\", " + \
            " \"sexo\": \"3\", " + \
            " \"logradouro\": \"WMKdTa01\", " + \
            " \"bairro\": \"São Alcantara\", " + \
            " \"matriculaRede\": \"123456789\", " + \
            " \"dataFim\": \"2026-08-03\", " + \
            " \"cargaHoraria\": 40 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 391, " + \
            " \"dataNascimento\": \"2005-05-22\", " + \
            " \"inep\": \"32081618\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " } " + \
            " ], " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataFim\": \"1954-02-30\", " + \
            " \"cargaHoraria\": 40 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        location_lote = "/v1/profissionais/lote" + "/" + str(res_0.json()['id'])
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        # Fault100. HTTP Status 500. GET:/v1/profissionais/lote/{id}/erros
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(resolve_location(location_lote, self.baseUrlOfSut + str("/v1/profissionais/lote/11/erros?page=820&per_page=523")),
                    headers=headers)
        
        assert res_1.status_code == 500
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Não foi possível obter detalhamento do lote."
        assert res_1.json()["errors"]["message"] == "Lote com status de envio"
    
    
    # Calls:
    # 1 - (201) POST:/v1/profissionais/lote
    # 2 - (500) GET:/v1/profissionais/lote/{id}
    # Found 3 potential faults. Type-codes: 100, 200
    # Using 1 example:
    #   1
    @timeout_decorator.timeout(60)
    def test_7_with500(self):
        
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"cpf\": \"92247983731\", " + \
            " \"dataNascimento\": \"1984-04-02\", " + \
            " \"genero\": 4, " + \
            " \"logradouro\": \"Rua R. Benício\", " + \
            " \"numero\": \"438\", " + \
            " \"inep\": 855, " + \
            " \"dataFim\": \"2094-13-30\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 1, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"cpf\": \"10438814843\", " + \
            " \"nome\": \"Teobaldo Inácio Pacheco Neto\", " + \
            " \"logradouro\": \"U6nqyAvzPtE\", " + \
            " \"numero\": \"N\", " + \
            " \"inep\": 29481643, " + \
            " \"tipoVinculo\": 0, " + \
            " \"cargaHoraria\": 40 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nome\": \"Donald Jackson\", " + \
            " \"genero\": 3, " + \
            " \"nomeSocial\": \"YXWGpw\", " + \
            " \"sexo\": \"0\", " + \
            " \"logradouro\": \"Rua Rua Vinícius Madeira\", " + \
            " \"numero\": \"78990\", " + \
            " \"uf\": 43, " + \
            " \"inep\": \"29478154\", " + \
            " \"tipoVinculo\": 461, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataFim\": \"1951-11-01\", " + \
            " \"cargaHoraria\": 40 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        location_lote = "/v1/profissionais/lote" + "/" + str(res_0.json()['id'])
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        # Fault100. HTTP Status 500. GET:/v1/profissionais/lote/{id}
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id} -> Object instance has properties which are not allowed by the schema: ["errors"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(resolve_location(location_lote, self.baseUrlOfSut + str("/v1/profissionais/lote/wXqX?page=196&per_page=1258382974")),
                    headers=headers)
        
        assert res_1.status_code == 500
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Ocorreu um erro."
        assert res_1.json()["errors"]["message"] == "A quantidade máxima de registros por página é de 5000 registros."
    
    
    # Calls:
    # 1 - (500) POST:/v1/estudantes
    # 2 - (500) POST:/v1/estudantes
    # 3 - (500) POST:/v1/estudantes
    # 4 - (500) POST:/v1/estudantes
    # 5 - (500) POST:/v1/estudantes
    # 6 - (500) POST:/v1/estudantes
    # 7 - (500) POST:/v1/estudantes
    # 8 - (500) GET:/v1/estudantes
    # Found 15 potential faults. Type-codes: 100, 200
    @timeout_decorator.timeout(60)
    def test_8_with500(self):
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"numeroNISResponsavel\": \"72190511394\", " + \
            " \"nomeMaeEstudante\": \"Oliver Castanho\", " + \
            " \"cpf\": \"86331378600\", " + \
            " \"dataNascimento\": \"2007-01-04\", " + \
            " \"genero\": 3, " + \
            " \"racaCor\": 1, " + \
            " \"nomeSocial\": \"8hbo50Mnoym\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 3, " + \
            " 2, " + \
            " 1, " + \
            " 62, " + \
            " 3 " + \
            " ], " + \
            " \"rg\": \"ahQ\", " + \
            " \"certidaoNascimento\": \"YyGHZI7SbO2P\", " + \
            " \"cnh\": \"01354673004\", " + \
            " \"numero\": \"uYCX\", " + \
            " \"cep\": \"26320887\", " + \
            " \"municipio\": 1302603, " + \
            " \"uf\": 26, " + \
            " \"estudantePpl\": 2, " + \
            " \"dataInicioMatricula\": \"1952-08-15\", " + \
            " \"serieAno\": 58, " + \
            " \"instituicao\": 133509, " + \
            " \"inep\": 32023235, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 4, " + \
            " \"estudanteAnoPeriodo\": 42, " + \
            " \"estudanteIntegral\": 0 " + \
            " } "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_0.status_code == 500
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Ocorreu um erro."
        assert res_0.json()["errors"]["message"] == "O campo nome é obrigatório."
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"19874979887\", " + \
            " \"nomeMaeEstudante\": \"Cristina Thalita Deverso Jr.\", " + \
            " \"cpf\": \"65548919270\", " + \
            " \"nome\": \"Wilson César Serna Filho\", " + \
            " \"genero\": 4, " + \
            " \"racaCor\": 4, " + \
            " \"email\": \"srta.samanta.escobar.ortiz@fake.com\", " + \
            " \"nomeSocial\": \"8hbo50Mnoym\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1 " + \
            " ], " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"numeroNIS\": \"Dn_zogw7C\", " + \
            " \"rg\": \"5845934473062270\", " + \
            " \"certidaoNascimento\": \"12908964481251501143782247841447\", " + \
            " \"bairro\": \"\", " + \
            " \"numero\": \"55\", " + \
            " \"cep\": \"83258311\", " + \
            " \"dataInicioMatricula\": \"2026-00-02\", " + \
            " \"serieAno\": 25, " + \
            " \"inep\": 29191637, " + \
            " \"formaOrganizacaoTurma\": 448, " + \
            " \"estudanteAnoPeriodo\": 3, " + \
            " \"anoMatricula\": 2024 " + \
            " } "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_1.status_code == 500
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Ocorreu um erro."
        assert res_1.json()["errors"]["message"] == "O campo dataNascimento é obrigatório. (and 1 more error)"
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpf\": \"57938251429\", " + \
            " \"nome\": \"Srta. Samanta Escobar Ortiz\", " + \
            " \"genero\": 7, " + \
            " \"email\": \"tiago.serna.casanova@fake.com\", " + \
            " \"sexo\": \"4\", " + \
            " \"numeroNIS\": \"33327099794\", " + \
            " \"rg\": \"7783243565793581\", " + \
            " \"cnh\": \"56267273661\", " + \
            " \"municipio\": 4200705, " + \
            " \"uf\": 11, " + \
            " \"serieAno\": 74, " + \
            " \"matriculaRede\": \"e2XouiaD2aNA 8\", " + \
            " \"inep\": 583, " + \
            " \"dataInicioPeriodoLetivo\": \"1965-01-32\" " + \
            " } "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_2.status_code == 500
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Ocorreu um erro."
        assert res_2.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"59231438603\", " + \
            " \"nomeMaeEstudante\": \"Eloah Montenegro Valente Jr.\", " + \
            " \"cpf\": \"97026895117\", " + \
            " \"nome\": \"lhjJ0lUSp_\", " + \
            " \"dataNascimento\": \"\", " + \
            " \"genero\": 3, " + \
            " \"telefone\": \"s2p\", " + \
            " \"numeroNIS\": \"83222432830\", " + \
            " \"orgaoEmissor\": \"SSP\", " + \
            " \"numero\": \"945\", " + \
            " \"municipio\": 1302603, " + \
            " \"dataInicioMatricula\": \"1971-10-11\", " + \
            " \"instituicao\": 106383, " + \
            " \"dataInicioPeriodoLetivo\": \"2048-12-21\", " + \
            " \"formaOrganizacaoTurma\": 6, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 3, " + \
            " \"estudanteAnoPeriodo\": 2, " + \
            " \"estudanteIntegral\": 42 " + \
            " } "
        headers['Accept'] = "application/json"
        res_3 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_3.status_code == 500
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "Ocorreu um erro."
        assert res_3.json()["errors"]["message"] == "O campo dataNascimento é obrigatório."
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"nomeMaeEstudante\": \"César da Fontoura\", " + \
            " \"nome\": \"D6FbdAx1uHz\", " + \
            " \"dataNascimento\": \"2008-10-22\", " + \
            " \"racaCor\": 1, " + \
            " \"tipoDeficiencia\": [ " + \
            " 2, " + \
            " 847, " + \
            " 3 " + \
            " ], " + \
            " \"sexo\": \"0\", " + \
            " \"numeroNIS\": \"tv85kZd\", " + \
            " \"rg\": \"2080086234785437\", " + \
            " \"uf\": 33, " + \
            " \"dataInicioMatricula\": \"1942-08-17\", " + \
            " \"serieAno\": 27, " + \
            " \"matriculaRede\": \"jvjvjv1\", " + \
            " \"instituicao\": 133116, " + \
            " \"inep\": 32056524, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 0, " + \
            " \"estudanteIntegral\": 1 " + \
            " } "
        headers['Accept'] = "application/json"
        res_4 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_4.status_code == 500
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "Ocorreu um erro."
        assert res_4.json()["errors"]["message"] == "O campo numeroNIS deve ser numérico. (and 1 more error)"
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpf\": \"98460053180\", " + \
            " \"dataNascimento\": \"2005-07-07\", " + \
            " \"racaCor\": 0, " + \
            " \"email\": \"srta.karen.alessandra.furtado.filho@fake.com\", " + \
            " \"telefone\": \"11969630845\", " + \
            " \"nomeSocial\": \"Vrh6iZ94o\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 2, " + \
            " 3, " + \
            " 2, " + \
            " 3, " + \
            " 622 " + \
            " ], " + \
            " \"certidaoNascimento\": \"03053497854764419118712789626917\", " + \
            " \"numero\": \"7921\", " + \
            " \"cep\": \"58227429\", " + \
            " \"municipio\": 3106200, " + \
            " \"matriculaRede\": \"jvjvjv1\", " + \
            " \"inep\": 282, " + \
            " \"dataInicioPeriodoLetivo\": \"1961-04-22\", " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 808 " + \
            " } "
        headers['Accept'] = "application/json"
        res_5 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_5.status_code == 500
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "Ocorreu um erro."
        assert res_5.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"19874979887\", " + \
            " \"numeroNISResponsavel\": \"u6nbCnqv\", " + \
            " \"cpf\": \"99899571938\", " + \
            " \"nome\": \"Tomás Antônio Saraiva\", " + \
            " \"dataNascimento\": \"2008-03-11\", " + \
            " \"genero\": 9, " + \
            " \"numeroNIS\": \"D1NWZK\", " + \
            " \"rg\": \"2780564565055024\", " + \
            " \"orgaoEmissor\": \"SSP-PE\", " + \
            " \"certidaoNascimento\": \"14996986206442995416346505388973\", " + \
            " \"cnh\": \"02342004738\", " + \
            " \"logradouro\": \"Rua Avenida Salazar\", " + \
            " \"uf\": 13, " + \
            " \"estudantePpl\": 1, " + \
            " \"dataInicioMatricula\": \"1971-10-30\", " + \
            " \"matriculaRede\": \"7\", " + \
            " \"inep\": 41069056, " + \
            " \"estudanteAnoPeriodo\": 3 " + \
            " } "
        headers['Accept'] = "application/json"
        res_6 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_6.status_code == 500
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == False
        assert res_6.json()["message"] == "Ocorreu um erro."
        assert res_6.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório. (and 2 more errors)"
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_7 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?" + 
                    "page=355&" + 
                    "situacao_matricula=INATIVAS&" + 
                    "situacao_final=REPROVADAS",
                    headers=headers)
        
        assert res_7.status_code == 500
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == False
        assert res_7.json()["message"] == "Ocorreu um erro inesperado."
        assert res_7.json()["errors"]["message"] == "O campo ano_matricula é obrigatório quando o campo situacao_final é informado."
    
    
    # Calls:
    # 1 - (500) POST:/v1/estudantes
    # 2 - (500) POST:/v1/estudantes
    # 3 - (500) POST:/v1/estudantes
    # 4 - (500) POST:/v1/estudantes
    # 5 - (500) POST:/v1/estudantes
    # 6 - (500) POST:/v1/estudantes
    # 7 - (500) POST:/v1/estudantes
    # 8 - (500) POST:/v1/estudantes
    # 9 - (500) GET:/v1/estudantes
    # Found 17 potential faults. Type-codes: 100, 200
    # Using 2 examples:
    #   2025
    #   25
    @timeout_decorator.timeout(60)
    def test_9_with500(self):
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"56310494309\", " + \
            " \"cpf\": \"10267828802\", " + \
            " \"nome\": \"Aaron Branco Rocha\", " + \
            " \"dataNascimento\": \"2007-06-27\", " + \
            " \"genero\": 4, " + \
            " \"racaCor\": 1, " + \
            " \"email\": \"iyA2p2_SZ8ymWcOP\", " + \
            " \"telefone\": \"acN130\", " + \
            " \"nomeSocial\": \"8hbo50Mnoym\", " + \
            " \"sexo\": \"2\", " + \
            " \"numeroNIS\": \"03596873454\", " + \
            " \"orgaoEmissor\": \"SSP\", " + \
            " \"certidaoNascimento\": \"12354851265228790493985702083834\", " + \
            " \"cnh\": \"cIwYy4TylIy\", " + \
            " \"logradouro\": \"Rua R. Cortês\", " + \
            " \"bairro\": \"qyX\", " + \
            " \"cep\": \"26547171\", " + \
            " \"municipio\": 2611606, " + \
            " \"estudantePpl\": 1, " + \
            " \"dataInicioMatricula\": \"2051-09-31\", " + \
            " \"matriculaRede\": \"p1UXnyq\", " + \
            " \"dataInicioPeriodoLetivo\": \"2025-06-19\", " + \
            " \"formaOrganizacaoTurma\": 1, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 1, " + \
            " \"estudanteAnoPeriodo\": 3, " + \
            " \"estudanteIntegral\": 0 " + \
            " } "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_0.status_code == 500
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Ocorreu um erro."
        assert res_0.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"nomeMaeEstudante\": \"Heloise Faria\", " + \
            " \"cpf\": \"27287459191\", " + \
            " \"dataNascimento\": \"2005-07-22\", " + \
            " \"genero\": 4, " + \
            " \"telefone\": \"11969630845\", " + \
            " \"nomeSocial\": \"8hbo50Mnoym\", " + \
            " \"sexo\": \"1\", " + \
            " \"numeroNIS\": \"98559670355\", " + \
            " \"certidaoNascimento\": \"55306795430039831163299094499403\", " + \
            " \"cnh\": \"3333333\", " + \
            " \"serieAno\": 25, " + \
            " \"instituicao\": 830, " + \
            " \"estudanteIntegral\": 1, " + \
            " \"anoMatricula\": 615 " + \
            " } "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_1.status_code == 500
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Ocorreu um erro."
        assert res_1.json()["errors"]["message"] == "O campo nome é obrigatório."
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"numeroNISResponsavel\": \"b\", " + \
            " \"nomeMaeEstudante\": \"YgOPb_ByMveEJVm\", " + \
            " \"cpf\": \"76713826474\", " + \
            " \"telefone\": \"11949911257\", " + \
            " \"nomeSocial\": \"rRAEEBPUPdYf\", " + \
            " \"sexo\": \"3\", " + \
            " \"certidaoNascimento\": \"40847338198850320550266164352167\", " + \
            " \"cnh\": \"56267273661\", " + \
            " \"numero\": \"42168\", " + \
            " \"municipio\": 346, " + \
            " \"uf\": 35, " + \
            " \"serieAno\": 74, " + \
            " \"formaOrganizacaoTurma\": 22, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 3, " + \
            " \"estudanteIntegral\": 0, " + \
            " \"anoMatricula\": 2024 " + \
            " } "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_2.status_code == 500
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Ocorreu um erro."
        assert res_2.json()["errors"]["message"] == "O campo numeroNISResponsavel deve ser numérico. (and 1 more error)"
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"numeroNISResponsavel\": \"32074502318\", " + \
            " \"nomeMaeEstudante\": \"Srta. Angélica Larissa Quintana Neto\", " + \
            " \"dataNascimento\": \"2009-05-21\", " + \
            " \"genero\": 3, " + \
            " \"racaCor\": 2, " + \
            " \"telefone\": \"11969630845\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1, " + \
            " 2, " + \
            " 2000096991, " + \
            " 1, " + \
            " 377 " + \
            " ], " + \
            " \"sexo\": \"2\", " + \
            " \"rg\": \"5894023090349445\", " + \
            " \"certidaoNascimento\": \"25173789387763125845009043404846\", " + \
            " \"municipio\": 4200705, " + \
            " \"uf\": 33, " + \
            " \"estudantePpl\": 2, " + \
            " \"dataInicioMatricula\": \"2068-02-05\", " + \
            " \"matriculaRede\": \"n\", " + \
            " \"instituicao\": 106180, " + \
            " \"inep\": -1615791148, " + \
            " \"dataInicioPeriodoLetivo\": \"2073-09-09\" " + \
            " } "
        headers['Accept'] = "application/json"
        res_3 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_3.status_code == 500
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "Ocorreu um erro."
        assert res_3.json()["errors"]["message"] == "O campo nome é obrigatório. (and 1 more error)"
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"7QuL\", " + \
            " \"genero\": 0, " + \
            " \"nomeSocial\": \"8hbo50Mnoym\", " + \
            " \"numeroNIS\": \"25555389893\", " + \
            " \"rg\": \"9624115913947354\", " + \
            " \"orgaoEmissor\": \"SSP-SP\", " + \
            " \"logradouro\": \"Rua Travessa Meireles\", " + \
            " \"dataInicioMatricula\": \"2074-03-11\", " + \
            " \"matriculaRede\": \"4IECfxJkEA\", " + \
            " \"instituicao\": 72889, " + \
            " \"estudanteAnoPeriodo\": 2, " + \
            " \"anoMatricula\": 2024 " + \
            " } "
        headers['Accept'] = "application/json"
        res_4 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_4.status_code == 500
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "Ocorreu um erro."
        assert res_4.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpf\": \"pk8sFu679tN\", " + \
            " \"dataNascimento\": \"2005-02-14\", " + \
            " \"telefone\": \"lcVX2\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 3, " + \
            " 1, " + \
            " 2, " + \
            " 0, " + \
            " 1 " + \
            " ], " + \
            " \"rg\": \"4705629513103317\", " + \
            " \"orgaoEmissor\": \"Nt Uteu4fY\", " + \
            " \"bairro\": \"São Pena\", " + \
            " \"uf\": 13, " + \
            " \"estudantePpl\": 1, " + \
            " \"dataInicioMatricula\": \"1910-09-02\", " + \
            " \"serieAno\": 44, " + \
            " \"matriculaRede\": \"jvjvjv1\", " + \
            " \"inep\": 33007411, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 4 " + \
            " } "
        headers['Accept'] = "application/json"
        res_5 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_5.status_code == 500
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "Ocorreu um erro."
        assert res_5.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"49323985813\", " + \
            " \"numeroNISResponsavel\": \"41379422660\", " + \
            " \"nomeMaeEstudante\": \"Dayane Leon Teles\", " + \
            " \"nome\": \"\", " + \
            " \"dataNascimento\": \"2008-07-01\", " + \
            " \"genero\": 0, " + \
            " \"racaCor\": 42, " + \
            " \"email\": \"agustina.isabella.verdugo.sobrinho@fake.com\", " + \
            " \"telefone\": \"11969630845\", " + \
            " \"sexo\": \"1\", " + \
            " \"numeroNIS\": \"36183869002\", " + \
            " \"orgaoEmissor\": \"SSP-AL\", " + \
            " \"logradouro\": \"Rua Largo Emily\", " + \
            " \"bairro\": \"mAUo8yo2oTxy_lv\", " + \
            " \"numero\": \"706\", " + \
            " \"cep\": \"78386256\", " + \
            " \"municipio\": 3550308, " + \
            " \"uf\": 27, " + \
            " \"serieAno\": 25, " + \
            " \"instituicao\": 81776, " + \
            " \"inep\": 401, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 4, " + \
            " \"estudanteIntegral\": 0 " + \
            " } "
        headers['Accept'] = "application/json"
        res_6 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_6.status_code == 500
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == False
        assert res_6.json()["message"] == "Ocorreu um erro."
        assert res_6.json()["errors"]["message"] == "O campo nome é obrigatório. (and 1 more error)"
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"31180285999\", " + \
            " \"nome\": \"Aaron Bonilha\", " + \
            " \"dataNascimento\": \"1985-06-15\", " + \
            " \"genero\": 8, " + \
            " \"telefone\": \"uUmRT2yHIsIO\", " + \
            " \"nomeSocial\": \"8hbo50Mnoym\", " + \
            " \"numeroNIS\": \"03035393801\", " + \
            " \"rg\": \"5268157450972391\", " + \
            " \"certidaoNascimento\": \"l\", " + \
            " \"bairro\": \"o\", " + \
            " \"cep\": \"84750813\", " + \
            " \"uf\": 33, " + \
            " \"serieAno\": 44, " + \
            " \"estudanteAnoPeriodo\": 2, " + \
            " \"estudanteIntegral\": 42, " + \
            " \"anoMatricula\": 2025 " + \
            " } "
        headers['Accept'] = "application/json"
        res_7 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_7.status_code == 500
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == False
        assert res_7.json()["message"] == "Ocorreu um erro."
        assert res_7.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_8 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?" + 
                    "page=138&" + 
                    "per_page=523&" + 
                    "situacao_matricula=ATIVAS&" + 
                    "situacao_final=APROVADAS",
                    headers=headers)
        
        assert res_8.status_code == 500
        assert "application/json" in res_8.headers["content-type"]
        assert res_8.json()["success"] == False
        assert res_8.json()["message"] == "Ocorreu um erro inesperado."
        assert res_8.json()["errors"]["message"] == "O campo ano_matricula é obrigatório quando o campo situacao_final é informado."
    
    
    # Calls:
    # 1 - (500) POST:/v1/estudantes
    # 2 - (500) POST:/v1/estudantes
    # 3 - (500) POST:/v1/estudantes
    # 4 - (200) GET:/v1/estudantes
    # Found 7 potential faults. Type-codes: 100, 200
    @timeout_decorator.timeout(60)
    def test_10_with500(self):
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"45667698102\", " + \
            " \"numeroNISResponsavel\": \"W1NBx72mg\", " + \
            " \"nome\": \"Aaron Bittencourt Sobrinho\", " + \
            " \"dataNascimento\": \"2005-12-16\", " + \
            " \"telefone\": \"Ji7Ol9uqFOYdNn\", " + \
            " \"nomeSocial\": \"mdfg9NH\", " + \
            " \"sexo\": \"3\", " + \
            " \"numeroNIS\": \"58622063628\", " + \
            " \"orgaoEmissor\": \"SSP\", " + \
            " \"logradouro\": \"Rua Rua Antonieta Souza\", " + \
            " \"bairro\": \"84GJxA\", " + \
            " \"uf\": 35, " + \
            " \"estudantePpl\": 42, " + \
            " \"dataInicioMatricula\": \"1902-01-16\", " + \
            " \"serieAno\": 74, " + \
            " \"matriculaRede\": \"56789\", " + \
            " \"dataInicioPeriodoLetivo\": \"2011-05-12\", " + \
            " \"estudanteIntegral\": 0 " + \
            " } "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_0.status_code == 500
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Ocorreu um erro."
        assert res_0.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório. (and 2 more errors)"
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"numeroNISResponsavel\": \"91315112232\", " + \
            " \"nomeMaeEstudante\": \"snM\", " + \
            " \"cpf\": \"57236892661\", " + \
            " \"nome\": \"3WGQtmdQ07\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1, " + \
            " 1 " + \
            " ], " + \
            " \"numeroNIS\": \"54678482941\", " + \
            " \"orgaoEmissor\": \"rI\", " + \
            " \"certidaoNascimento\": \"60432931057391518018474464865946\", " + \
            " \"logradouro\": \"Rua Largo Guilherme Quintana\", " + \
            " \"numero\": \"9\", " + \
            " \"cep\": \"81343569\", " + \
            " \"instituicao\": 28146, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 3, " + \
            " \"estudanteAnoPeriodo\": 3, " + \
            " \"estudanteIntegral\": 0 " + \
            " } "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_1.status_code == 500
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Ocorreu um erro."
        assert res_1.json()["errors"]["message"] == "O campo dataNascimento é obrigatório."
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"00336925212\", " + \
            " \"numeroNISResponsavel\": \"49476650090\", " + \
            " \"nome\": \"Aaron Barreto Medina Neto\", " + \
            " \"racaCor\": 3, " + \
            " \"telefone\": \"11933018135\", " + \
            " \"rg\": \"rS8uLl\", " + \
            " \"certidaoNascimento\": \"60432931057391518018474464865946\", " + \
            " \"cnh\": \"02342004738\", " + \
            " \"logradouro\": \"Geh3Wf_Ir\", " + \
            " \"bairro\": \"qsC3\", " + \
            " \"numero\": \"23086\", " + \
            " \"municipio\": 2408102, " + \
            " \"estudantePpl\": 2, " + \
            " \"matriculaRede\": \"e2XouiaD2aNA 8\", " + \
            " \"instituicao\": 94528, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 1, " + \
            " \"estudanteAnoPeriodo\": 2 " + \
            " } "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_2.status_code == 500
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Ocorreu um erro."
        assert res_2.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_3.json()["data"]) == 10
        assert res_3.json()["data"][0]["cpf"] == "49255179888"
        assert res_3.json()["data"][0]["nome"] == "111"
        assert res_3.json()["data"][0]["nomeSocial"] == "test"
        assert res_3.json()["data"][0]["numeroNIS"] is None
        assert res_3.json()["data"][0]["rg"] == "22307981"
        assert res_3.json()["data"][0]["orgaoEmissor"] == "SSP"
        assert res_3.json()["data"][0]["cpfResponsavel"] == "48405399283"
        assert res_3.json()["data"][0]["nomeMaeEstudante"] == "Valentina Rezende"
        assert res_3.json()["data"][0]["numeroNISResponsavel"] == "64668522654"
        assert res_3.json()["data"][0]["dataNascimento"] == "2024-12-28"
        assert res_3.json()["data"][0]["logradouro"] == "Rua teste"
        assert res_3.json()["data"][0]["bairro"] == "Santa Lucia"
        assert res_3.json()["data"][0]["numero"] == "220"
        assert res_3.json()["data"][0]["cep"] == "57018780"
        assert res_3.json()["data"][0]["municipio"] == 1100940.0
        assert res_3.json()["data"][0]["certidaoNascimento"] == "33333333"
        assert res_3.json()["data"][0]["cnh"] == "3333333"
        assert res_3.json()["data"][0]["uf"] == 11.0
        assert res_3.json()["data"][0]["racaCor"] == 3.0
        assert len(res_3.json()["data"][0]["tipoDeficiencia"]) == 3
        assert res_3.json()["data"][0]["tipoDeficiencia"][0] == 1.0
        assert res_3.json()["data"][0]["tipoDeficiencia"][1] == 2.0
        assert res_3.json()["data"][0]["tipoDeficiencia"][2] == 3.0
        assert res_3.json()["data"][0]["genero"] == 3.0
        assert res_3.json()["data"][0]["telefone"] == "3333333"
        assert res_3.json()["data"][0]["email"] == "AFTER-TWO@AFTER-TWO.com"
        assert res_3.json()["data"][0]["situacaoCadastroValidado"] == 3.0
        assert len(res_3.json()["data"][0]["matriculas"]) == 1
        assert res_3.json()["data"][0]["matriculas"][0]["codigoMatriculaSgp"] == 1733024.0
        assert res_3.json()["data"][0]["matriculas"][0]["codInstituicao"] == 7259.0
        assert res_3.json()["data"][0]["matriculas"][0]["dataInicioMatricula"] == "2024-09-28"
        assert res_3.json()["data"][0]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_3.json()["data"][0]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_3.json()["data"][0]["matriculas"][0]["situacaoMatricula"] == True
        assert res_3.json()["data"][0]["matriculas"][0]["serieAno"] == 74.0
        assert res_3.json()["data"][0]["matriculas"][0]["etapaEnsinoConsolidado"] == "Formação inicial continuada ou qualificação profissional (FIC)"
        assert res_3.json()["data"][0]["matriculas"][0]["matriculaRede"] == "Teste Ricardo"
        assert res_3.json()["data"][0]["matriculas"][0]["deletadaEm"] is None
        assert res_3.json()["data"][0]["matriculas"][0]["inep"] == "12005037"
        assert res_3.json()["data"][0]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_3.json()["data"][0]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_3.json()["data"][0]["matriculas"][0]["dataInicioPeriodoLetivo"] == "2024-09-28"
        assert res_3.json()["data"][0]["matriculas"][0]["formaOrganizacaoTurma"] == 1.0
        assert res_3.json()["data"][0]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] == 0.0
        assert res_3.json()["data"][0]["matriculas"][0]["estudanteAnoPeriodo"] == 1.0
        assert res_3.json()["data"][0]["matriculas"][0]["estudanteIntegral"] == True
        assert res_3.json()["data"][0]["matriculas"][0]["dataAtivacaoMatricula"] == "2024-09-27 00:00:00"
        assert res_3.json()["data"][0]["matriculas"][0]["anoMatricula"] == 2024.0
        assert len(res_3.json()["data"][0]["outrasMatriculas"]) == 0
        assert res_3.json()["data"][1]["cpf"] == "67089268578"
        assert res_3.json()["data"][1]["nome"] == "6cc97vMeCP9KgSI"
        assert res_3.json()["data"][1]["nomeSocial"] == "rRAEEBPUPdYf"
        assert res_3.json()["data"][1]["numeroNIS"] == "30183310316"
        assert res_3.json()["data"][1]["rg"] == "53669048"
        assert res_3.json()["data"][1]["orgaoEmissor"] == "i4tf"
        assert res_3.json()["data"][1]["cpfResponsavel"] == "52008260631"
        assert res_3.json()["data"][1]["nomeMaeEstudante"] == "7aTq92Zi"
        assert res_3.json()["data"][1]["numeroNISResponsavel"] == "11273745692"
        assert res_3.json()["data"][1]["dataNascimento"] == "2008-10-29"
        assert res_3.json()["data"][1]["logradouro"] == "rWjgYPU1P8"
        assert res_3.json()["data"][1]["bairro"] == "G5tQ1ZJN0"
        assert res_3.json()["data"][1]["numero"] == "55"
        assert res_3.json()["data"][1]["cep"] == "19141821"
        assert res_3.json()["data"][1]["municipio"] == 4200705.0
        assert res_3.json()["data"][1]["certidaoNascimento"] == "373271505447"
        assert res_3.json()["data"][1]["cnh"] == "56267273661"
        assert res_3.json()["data"][1]["uf"] == 42.0
        assert res_3.json()["data"][1]["racaCor"] == 0.0
        assert len(res_3.json()["data"][1]["tipoDeficiencia"]) == 3
        assert res_3.json()["data"][1]["tipoDeficiencia"][0] == 1.0
        assert res_3.json()["data"][1]["tipoDeficiencia"][1] == 2.0
        assert res_3.json()["data"][1]["tipoDeficiencia"][2] == 3.0
        assert res_3.json()["data"][1]["genero"] == 4.0
        assert res_3.json()["data"][1]["telefone"] == "11969630845"
        assert res_3.json()["data"][1]["email"] == "RTT0VngF3Deo0O@example.com"
        assert res_3.json()["data"][1]["situacaoCadastroValidado"] == 4.0
        assert len(res_3.json()["data"][1]["matriculas"]) == 1
        assert res_3.json()["data"][1]["matriculas"][0]["codigoMatriculaSgp"] == 1.020298E7
        assert res_3.json()["data"][1]["matriculas"][0]["codInstituicao"] == 81776.0
        assert res_3.json()["data"][1]["matriculas"][0]["dataInicioMatricula"] == "2024-02-19"
        assert res_3.json()["data"][1]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_3.json()["data"][1]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_3.json()["data"][1]["matriculas"][0]["situacaoMatricula"] == True
        assert res_3.json()["data"][1]["matriculas"][0]["serieAno"] == 71.0
        assert res_3.json()["data"][1]["matriculas"][0]["etapaEnsinoConsolidado"] == "EJA - Ensino Médio"
        assert res_3.json()["data"][1]["matriculas"][0]["matriculaRede"] == "jvjvjv1"
        assert res_3.json()["data"][1]["matriculas"][0]["deletadaEm"] is None
        assert res_3.json()["data"][1]["matriculas"][0]["inep"] == "26540720"
        assert res_3.json()["data"][1]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_3.json()["data"][1]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_3.json()["data"][1]["matriculas"][0]["dataInicioPeriodoLetivo"] == "2024-01-29"
        assert res_3.json()["data"][1]["matriculas"][0]["formaOrganizacaoTurma"] == 1.0
        assert res_3.json()["data"][1]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] == 3.0
        assert res_3.json()["data"][1]["matriculas"][0]["estudanteAnoPeriodo"] == 3.0
        assert res_3.json()["data"][1]["matriculas"][0]["estudanteIntegral"] == True
        assert res_3.json()["data"][1]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_3.json()["data"][1]["matriculas"][0]["anoMatricula"] == 2024.0
        assert len(res_3.json()["data"][1]["outrasMatriculas"]) == 0
        assert res_3.json()["data"][2]["cpf"] == "81601036620"
        assert res_3.json()["data"][2]["nome"] == "7nCcq XDiMfCbaJ0cFs"
        assert res_3.json()["data"][2]["nomeSocial"] == "YXWGpw"
        assert res_3.json()["data"][2]["numeroNIS"] == "34442480673"
        assert res_3.json()["data"][2]["rg"] == "21577661"
        assert res_3.json()["data"][2]["orgaoEmissor"] == "vC2a0H9Lv4"
        assert res_3.json()["data"][2]["cpfResponsavel"] == "85307915250"
        assert res_3.json()["data"][2]["nomeMaeEstudante"] == "uoUPQKkc8iCGVq2wAS1"
        assert res_3.json()["data"][2]["numeroNISResponsavel"] == "27296692788"
        assert res_3.json()["data"][2]["dataNascimento"] == "1998-08-08"
        assert res_3.json()["data"][2]["logradouro"] == "01PKhhqGroyvggLAFUEoOHr3Q0KI"
        assert res_3.json()["data"][2]["bairro"] == "nL4bOxhpEiU2PjnP"
        assert res_3.json()["data"][2]["numero"] == "02"
        assert res_3.json()["data"][2]["cep"] == "76984525"
        assert res_3.json()["data"][2]["municipio"] == 4200705.0
        assert res_3.json()["data"][2]["certidaoNascimento"] == "3679215604607"
        assert res_3.json()["data"][2]["cnh"] == "02342004738"
        assert res_3.json()["data"][2]["uf"] == 42.0
        assert res_3.json()["data"][2]["racaCor"] == 2.0
        assert len(res_3.json()["data"][2]["tipoDeficiencia"]) == 3
        assert res_3.json()["data"][2]["tipoDeficiencia"][0] == 1.0
        assert res_3.json()["data"][2]["tipoDeficiencia"][1] == 2.0
        assert res_3.json()["data"][2]["tipoDeficiencia"][2] == 3.0
        assert res_3.json()["data"][2]["genero"] == 3.0
        assert res_3.json()["data"][2]["telefone"] == "11949911257"
        assert res_3.json()["data"][2]["email"] == "4mphnZDvXrC@example.com"
        assert res_3.json()["data"][2]["situacaoCadastroValidado"] == 4.0
        assert len(res_3.json()["data"][2]["matriculas"]) == 1
        assert res_3.json()["data"][2]["matriculas"][0]["codigoMatriculaSgp"] == 1.0202989E7
        assert res_3.json()["data"][2]["matriculas"][0]["codInstituicao"] == 81776.0
        assert res_3.json()["data"][2]["matriculas"][0]["dataInicioMatricula"] == "2024-11-01"
        assert res_3.json()["data"][2]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_3.json()["data"][2]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_3.json()["data"][2]["matriculas"][0]["situacaoMatricula"] == True
        assert res_3.json()["data"][2]["matriculas"][0]["serieAno"] == 58.0
        assert res_3.json()["data"][2]["matriculas"][0]["etapaEnsinoConsolidado"] == "Educação de Jovens e Adultos (EJA) - Fundamental"
        assert res_3.json()["data"][2]["matriculas"][0]["matriculaRede"] == "e2XouiaD2aNA 8"
        assert res_3.json()["data"][2]["matriculas"][0]["deletadaEm"] is None
        assert res_3.json()["data"][2]["matriculas"][0]["inep"] == "26540720"
        assert res_3.json()["data"][2]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_3.json()["data"][2]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_3.json()["data"][2]["matriculas"][0]["dataInicioPeriodoLetivo"] == "2024-10-22"
        assert res_3.json()["data"][2]["matriculas"][0]["formaOrganizacaoTurma"] == 6.0
        assert res_3.json()["data"][2]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] == 4.0
        assert res_3.json()["data"][2]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_3.json()["data"][2]["matriculas"][0]["estudanteIntegral"] == False
        assert res_3.json()["data"][2]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_3.json()["data"][2]["matriculas"][0]["anoMatricula"] is None
        assert len(res_3.json()["data"][2]["outrasMatriculas"]) == 0
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_3.json()["pagination"]["total"] == 598780.0
        assert res_3.json()["pagination"]["count"] == 10.0
        assert res_3.json()["pagination"]["per_page"] == 10.0
        assert res_3.json()["pagination"]["current_page"] == 1.0
        assert res_3.json()["pagination"]["total_pages"] == 59878.0
        assert res_3.json()["pagination"]["links"]["previous"] is None
        assert res_3.json()["pagination"]["links"]["next"] == 2.0
    
    
    # Calls:
    # 1 - (500) POST:/v1/estudantes
    # 2 - (500) POST:/v1/estudantes
    # 3 - (500) POST:/v1/estudantes
    # 4 - (500) POST:/v1/estudantes
    # 5 - (200) GET:/v1/estudantes
    # Found 9 potential faults. Type-codes: 100, 200
    # Using 1 example:
    #   2024
    @timeout_decorator.timeout(60)
    def test_11_with500(self):
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"49323985813\", " + \
            " \"nome\": \"Aaron Benício Aranda\", " + \
            " \"dataNascimento\": \"2006-03-26\", " + \
            " \"racaCor\": 42, " + \
            " \"nomeSocial\": \"8hbo50Mnoym\", " + \
            " \"tipoDeficiencia\": [], " + \
            " \"certidaoNascimento\": \"20363109848181349675695233636165\", " + \
            " \"bairro\": \"São Lutero\", " + \
            " \"cep\": \"dQ\", " + \
            " \"municipio\": 2700409, " + \
            " \"uf\": 56, " + \
            " \"estudantePpl\": 0, " + \
            " \"dataInicioMatricula\": \"2092-06-07\", " + \
            " \"serieAno\": 74, " + \
            " \"formaOrganizacaoTurma\": 6, " + \
            " \"estudanteAnoPeriodo\": 1, " + \
            " \"anoMatricula\": 2024 " + \
            " } "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_0.status_code == 500
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Ocorreu um erro."
        assert res_0.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"JMOLYJkB\", " + \
            " \"numeroNISResponsavel\": \"73617527941\", " + \
            " \"nomeMaeEstudante\": \"Agatha Cervantes Filho\", " + \
            " \"cpf\": \"bs80Uv20F\", " + \
            " \"dataNascimento\": \"2010-08-18\", " + \
            " \"genero\": 42, " + \
            " \"racaCor\": 2, " + \
            " \"email\": \"alan.matias.aranda.jr@fake.com\", " + \
            " \"telefone\": \"3333333\", " + \
            " \"nomeSocial\": \"\", " + \
            " \"sexo\": \"2\", " + \
            " \"numeroNIS\": \"54208525636\", " + \
            " \"rg\": \"7271398526855689\", " + \
            " \"orgaoEmissor\": \"SSP\", " + \
            " \"certidaoNascimento\": \"15547312590447816032917622651210\", " + \
            " \"numero\": \"10070\", " + \
            " \"cep\": \"23569841\", " + \
            " \"municipio\": 2408102, " + \
            " \"uf\": 26, " + \
            " \"serieAno\": 643, " + \
            " \"formaOrganizacaoTurma\": 6, " + \
            " \"anoMatricula\": 859 " + \
            " } "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_1.status_code == 500
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Ocorreu um erro."
        assert res_1.json()["errors"]["message"] == "O campo nome é obrigatório. (and 1 more error)"
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"numeroNISResponsavel\": \"36613982135\", " + \
            " \"dataNascimento\": \"2008-09-21\", " + \
            " \"genero\": 42, " + \
            " \"nomeSocial\": \"rRAEEBPUPdYf\", " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"orgaoEmissor\": \"SSP-RS\", " + \
            " \"certidaoNascimento\": \"53291821192186633016547712217388\", " + \
            " \"cep\": \"\", " + \
            " \"uf\": 13, " + \
            " \"dataInicioMatricula\": \"1911-03-12\", " + \
            " \"instituicao\": 185345, " + \
            " \"dataInicioPeriodoLetivo\": \"2011-01-17\", " + \
            " \"formaOrganizacaoTurma\": 6, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 4, " + \
            " \"estudanteAnoPeriodo\": 2, " + \
            " \"estudanteIntegral\": 0 " + \
            " } "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_2.status_code == 500
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Ocorreu um erro."
        assert res_2.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"73686212900\", " + \
            " \"numeroNISResponsavel\": \"Sqhve\", " + \
            " \"bairro\": \"São Lourenço\", " + \
            " \"cep\": \"19129715\", " + \
            " \"municipio\": 2611606, " + \
            " \"instituicao\": 185877, " + \
            " \"dataInicioPeriodoLetivo\": \"1911-12-11\", " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 0, " + \
            " \"estudanteAnoPeriodo\": 3, " + \
            " \"estudanteIntegral\": 1 " + \
            " } "
        headers['Accept'] = "application/json"
        res_3 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_3.status_code == 500
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "Ocorreu um erro."
        assert res_3.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório. (and 2 more errors)"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?ano_matricula=2024",
                    headers=headers)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_4.json()["data"]) == 10
        assert res_4.json()["data"][0]["cpf"] == "49255179888"
        assert res_4.json()["data"][0]["nome"] == "111"
        assert res_4.json()["data"][0]["nomeSocial"] == "test"
        assert res_4.json()["data"][0]["numeroNIS"] is None
        assert res_4.json()["data"][0]["rg"] == "22307981"
        assert res_4.json()["data"][0]["orgaoEmissor"] == "SSP"
        assert res_4.json()["data"][0]["cpfResponsavel"] == "48405399283"
        assert res_4.json()["data"][0]["nomeMaeEstudante"] == "Valentina Rezende"
        assert res_4.json()["data"][0]["numeroNISResponsavel"] == "64668522654"
        assert res_4.json()["data"][0]["dataNascimento"] == "2024-12-28"
        assert res_4.json()["data"][0]["logradouro"] == "Rua teste"
        assert res_4.json()["data"][0]["bairro"] == "Santa Lucia"
        assert res_4.json()["data"][0]["numero"] == "220"
        assert res_4.json()["data"][0]["cep"] == "57018780"
        assert res_4.json()["data"][0]["municipio"] == 1100940.0
        assert res_4.json()["data"][0]["certidaoNascimento"] == "33333333"
        assert res_4.json()["data"][0]["cnh"] == "3333333"
        assert res_4.json()["data"][0]["uf"] == 11.0
        assert res_4.json()["data"][0]["racaCor"] == 3.0
        assert len(res_4.json()["data"][0]["tipoDeficiencia"]) == 3
        assert res_4.json()["data"][0]["tipoDeficiencia"][0] == 1.0
        assert res_4.json()["data"][0]["tipoDeficiencia"][1] == 2.0
        assert res_4.json()["data"][0]["tipoDeficiencia"][2] == 3.0
        assert res_4.json()["data"][0]["genero"] == 3.0
        assert res_4.json()["data"][0]["telefone"] == "3333333"
        assert res_4.json()["data"][0]["email"] == "AFTER-TWO@AFTER-TWO.com"
        assert res_4.json()["data"][0]["situacaoCadastroValidado"] == 3.0
        assert len(res_4.json()["data"][0]["matriculas"]) == 1
        assert res_4.json()["data"][0]["matriculas"][0]["codigoMatriculaSgp"] == 1733024.0
        assert res_4.json()["data"][0]["matriculas"][0]["codInstituicao"] == 7259.0
        assert res_4.json()["data"][0]["matriculas"][0]["dataInicioMatricula"] == "2024-09-28"
        assert res_4.json()["data"][0]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_4.json()["data"][0]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_4.json()["data"][0]["matriculas"][0]["situacaoMatricula"] == True
        assert res_4.json()["data"][0]["matriculas"][0]["serieAno"] == 74.0
        assert res_4.json()["data"][0]["matriculas"][0]["etapaEnsinoConsolidado"] == "Formação inicial continuada ou qualificação profissional (FIC)"
        assert res_4.json()["data"][0]["matriculas"][0]["matriculaRede"] == "Teste Ricardo"
        assert res_4.json()["data"][0]["matriculas"][0]["deletadaEm"] is None
        assert res_4.json()["data"][0]["matriculas"][0]["inep"] == "12005037"
        assert res_4.json()["data"][0]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_4.json()["data"][0]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_4.json()["data"][0]["matriculas"][0]["dataInicioPeriodoLetivo"] == "2024-09-28"
        assert res_4.json()["data"][0]["matriculas"][0]["formaOrganizacaoTurma"] == 1.0
        assert res_4.json()["data"][0]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] == 0.0
        assert res_4.json()["data"][0]["matriculas"][0]["estudanteAnoPeriodo"] == 1.0
        assert res_4.json()["data"][0]["matriculas"][0]["estudanteIntegral"] == True
        assert res_4.json()["data"][0]["matriculas"][0]["dataAtivacaoMatricula"] == "2024-09-27 00:00:00"
        assert res_4.json()["data"][0]["matriculas"][0]["anoMatricula"] == 2024.0
        assert len(res_4.json()["data"][0]["outrasMatriculas"]) == 0
        assert res_4.json()["data"][1]["cpf"] == "67089268578"
        assert res_4.json()["data"][1]["nome"] == "6cc97vMeCP9KgSI"
        assert res_4.json()["data"][1]["nomeSocial"] == "rRAEEBPUPdYf"
        assert res_4.json()["data"][1]["numeroNIS"] == "30183310316"
        assert res_4.json()["data"][1]["rg"] == "53669048"
        assert res_4.json()["data"][1]["orgaoEmissor"] == "i4tf"
        assert res_4.json()["data"][1]["cpfResponsavel"] == "52008260631"
        assert res_4.json()["data"][1]["nomeMaeEstudante"] == "7aTq92Zi"
        assert res_4.json()["data"][1]["numeroNISResponsavel"] == "11273745692"
        assert res_4.json()["data"][1]["dataNascimento"] == "2008-10-29"
        assert res_4.json()["data"][1]["logradouro"] == "rWjgYPU1P8"
        assert res_4.json()["data"][1]["bairro"] == "G5tQ1ZJN0"
        assert res_4.json()["data"][1]["numero"] == "55"
        assert res_4.json()["data"][1]["cep"] == "19141821"
        assert res_4.json()["data"][1]["municipio"] == 4200705.0
        assert res_4.json()["data"][1]["certidaoNascimento"] == "373271505447"
        assert res_4.json()["data"][1]["cnh"] == "56267273661"
        assert res_4.json()["data"][1]["uf"] == 42.0
        assert res_4.json()["data"][1]["racaCor"] == 0.0
        assert len(res_4.json()["data"][1]["tipoDeficiencia"]) == 3
        assert res_4.json()["data"][1]["tipoDeficiencia"][0] == 1.0
        assert res_4.json()["data"][1]["tipoDeficiencia"][1] == 2.0
        assert res_4.json()["data"][1]["tipoDeficiencia"][2] == 3.0
        assert res_4.json()["data"][1]["genero"] == 4.0
        assert res_4.json()["data"][1]["telefone"] == "11969630845"
        assert res_4.json()["data"][1]["email"] == "RTT0VngF3Deo0O@example.com"
        assert res_4.json()["data"][1]["situacaoCadastroValidado"] == 4.0
        assert len(res_4.json()["data"][1]["matriculas"]) == 1
        assert res_4.json()["data"][1]["matriculas"][0]["codigoMatriculaSgp"] == 1.020298E7
        assert res_4.json()["data"][1]["matriculas"][0]["codInstituicao"] == 81776.0
        assert res_4.json()["data"][1]["matriculas"][0]["dataInicioMatricula"] == "2024-02-19"
        assert res_4.json()["data"][1]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_4.json()["data"][1]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_4.json()["data"][1]["matriculas"][0]["situacaoMatricula"] == True
        assert res_4.json()["data"][1]["matriculas"][0]["serieAno"] == 71.0
        assert res_4.json()["data"][1]["matriculas"][0]["etapaEnsinoConsolidado"] == "EJA - Ensino Médio"
        assert res_4.json()["data"][1]["matriculas"][0]["matriculaRede"] == "jvjvjv1"
        assert res_4.json()["data"][1]["matriculas"][0]["deletadaEm"] is None
        assert res_4.json()["data"][1]["matriculas"][0]["inep"] == "26540720"
        assert res_4.json()["data"][1]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_4.json()["data"][1]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_4.json()["data"][1]["matriculas"][0]["dataInicioPeriodoLetivo"] == "2024-01-29"
        assert res_4.json()["data"][1]["matriculas"][0]["formaOrganizacaoTurma"] == 1.0
        assert res_4.json()["data"][1]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] == 3.0
        assert res_4.json()["data"][1]["matriculas"][0]["estudanteAnoPeriodo"] == 3.0
        assert res_4.json()["data"][1]["matriculas"][0]["estudanteIntegral"] == True
        assert res_4.json()["data"][1]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_4.json()["data"][1]["matriculas"][0]["anoMatricula"] == 2024.0
        assert len(res_4.json()["data"][1]["outrasMatriculas"]) == 0
        assert res_4.json()["data"][2]["cpf"] == "81601036620"
        assert res_4.json()["data"][2]["nome"] == "7nCcq XDiMfCbaJ0cFs"
        assert res_4.json()["data"][2]["nomeSocial"] == "YXWGpw"
        assert res_4.json()["data"][2]["numeroNIS"] == "34442480673"
        assert res_4.json()["data"][2]["rg"] == "21577661"
        assert res_4.json()["data"][2]["orgaoEmissor"] == "vC2a0H9Lv4"
        assert res_4.json()["data"][2]["cpfResponsavel"] == "85307915250"
        assert res_4.json()["data"][2]["nomeMaeEstudante"] == "uoUPQKkc8iCGVq2wAS1"
        assert res_4.json()["data"][2]["numeroNISResponsavel"] == "27296692788"
        assert res_4.json()["data"][2]["dataNascimento"] == "1998-08-08"
        assert res_4.json()["data"][2]["logradouro"] == "01PKhhqGroyvggLAFUEoOHr3Q0KI"
        assert res_4.json()["data"][2]["bairro"] == "nL4bOxhpEiU2PjnP"
        assert res_4.json()["data"][2]["numero"] == "02"
        assert res_4.json()["data"][2]["cep"] == "76984525"
        assert res_4.json()["data"][2]["municipio"] == 4200705.0
        assert res_4.json()["data"][2]["certidaoNascimento"] == "3679215604607"
        assert res_4.json()["data"][2]["cnh"] == "02342004738"
        assert res_4.json()["data"][2]["uf"] == 42.0
        assert res_4.json()["data"][2]["racaCor"] == 2.0
        assert len(res_4.json()["data"][2]["tipoDeficiencia"]) == 3
        assert res_4.json()["data"][2]["tipoDeficiencia"][0] == 1.0
        assert res_4.json()["data"][2]["tipoDeficiencia"][1] == 2.0
        assert res_4.json()["data"][2]["tipoDeficiencia"][2] == 3.0
        assert res_4.json()["data"][2]["genero"] == 3.0
        assert res_4.json()["data"][2]["telefone"] == "11949911257"
        assert res_4.json()["data"][2]["email"] == "4mphnZDvXrC@example.com"
        assert res_4.json()["data"][2]["situacaoCadastroValidado"] == 4.0
        assert len(res_4.json()["data"][2]["matriculas"]) == 1
        assert res_4.json()["data"][2]["matriculas"][0]["codigoMatriculaSgp"] == 1.0202989E7
        assert res_4.json()["data"][2]["matriculas"][0]["codInstituicao"] == 81776.0
        assert res_4.json()["data"][2]["matriculas"][0]["dataInicioMatricula"] == "2024-11-01"
        assert res_4.json()["data"][2]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_4.json()["data"][2]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_4.json()["data"][2]["matriculas"][0]["situacaoMatricula"] == True
        assert res_4.json()["data"][2]["matriculas"][0]["serieAno"] == 58.0
        assert res_4.json()["data"][2]["matriculas"][0]["etapaEnsinoConsolidado"] == "Educação de Jovens e Adultos (EJA) - Fundamental"
        assert res_4.json()["data"][2]["matriculas"][0]["matriculaRede"] == "e2XouiaD2aNA 8"
        assert res_4.json()["data"][2]["matriculas"][0]["deletadaEm"] is None
        assert res_4.json()["data"][2]["matriculas"][0]["inep"] == "26540720"
        assert res_4.json()["data"][2]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_4.json()["data"][2]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_4.json()["data"][2]["matriculas"][0]["dataInicioPeriodoLetivo"] == "2024-10-22"
        assert res_4.json()["data"][2]["matriculas"][0]["formaOrganizacaoTurma"] == 6.0
        assert res_4.json()["data"][2]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] == 4.0
        assert res_4.json()["data"][2]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_4.json()["data"][2]["matriculas"][0]["estudanteIntegral"] == False
        assert res_4.json()["data"][2]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_4.json()["data"][2]["matriculas"][0]["anoMatricula"] is None
        assert len(res_4.json()["data"][2]["outrasMatriculas"]) == 0
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_4.json()["pagination"]["total"] == 598560.0
        assert res_4.json()["pagination"]["count"] == 10.0
        assert res_4.json()["pagination"]["per_page"] == 10.0
        assert res_4.json()["pagination"]["current_page"] == 1.0
        assert res_4.json()["pagination"]["total_pages"] == 59856.0
        assert res_4.json()["pagination"]["links"]["previous"] is None
        assert res_4.json()["pagination"]["links"]["next"] == 2.0
    
    
    # Calls:
    # 1 - (500) GET:/v1/estudantes/inep/{inep}
    # 2 - (200) GET:/v1/estudantes/inep/{inep}
    # Found 2 potential faults. Type-codes: 100, 200
    @timeout_decorator.timeout(60)
    def test_12_with500(self):
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes/inep/{inep}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/41532074?" + 
                    "page=885&" + 
                    "per_page=523&" + 
                    "situacao_matricula=INATIVAS&" + 
                    "situacao_final=REPROVADAS",
                    headers=headers)
        
        assert res_0.status_code == 500
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não foi possível obter os estudantes."
        assert res_0.json()["errors"]["message"] == "O campo ano_matricula é obrigatório quando o campo situacao_final é informado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/inep/{inep} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/32079222?" + 
                    "page=448&" + 
                    "per_page=126",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Estudantes obtidos com sucesso."
        assert len(res_1.json()["data"]) == 0
        assert res_1.json()["pagination"]["total"] == 2500.0
        assert res_1.json()["pagination"]["count"] == 0.0
        assert res_1.json()["pagination"]["per_page"] == 126.0
        assert res_1.json()["pagination"]["current_page"] == 448.0
        assert res_1.json()["pagination"]["total_pages"] == 20.0
        assert res_1.json()["pagination"]["links"]["previous"] == 447.0
        assert res_1.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # 1 - (500) POST:/v1/estudantes
    # 2 - (500) POST:/v1/estudantes
    # 3 - (500) POST:/v1/estudantes
    # 4 - (500) POST:/v1/estudantes
    # 5 - (500) POST:/v1/estudantes
    # 6 - (500) POST:/v1/estudantes
    # 7 - (500) POST:/v1/estudantes
    # 8 - (500) POST:/v1/estudantes
    # 9 - (200) GET:/v1/estudantes
    # Found 17 potential faults. Type-codes: 100, 200
    # Using 2 examples:
    #   2025
    #   25
    @timeout_decorator.timeout(60)
    def test_13_with500(self):
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"43852858887\", " + \
            " \"numeroNISResponsavel\": \"79027130082\", " + \
            " \"cpf\": \"55083406535\", " + \
            " \"genero\": 8, " + \
            " \"racaCor\": 5, " + \
            " \"telefone\": \"11969630845\", " + \
            " \"nomeSocial\": \"YXWGpw\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 3, " + \
            " 2 " + \
            " ], " + \
            " \"sexo\": \"3\", " + \
            " \"numeroNIS\": \"\", " + \
            " \"rg\": \"0527370873396746\", " + \
            " \"certidaoNascimento\": \"vvr7\", " + \
            " \"numero\": \"40208\", " + \
            " \"uf\": 31, " + \
            " \"estudantePpl\": 42, " + \
            " \"inep\": 668, " + \
            " \"dataInicioPeriodoLetivo\": \"1914-12-14\", " + \
            " \"estudanteAnoPeriodo\": 42, " + \
            " \"estudanteIntegral\": 42, " + \
            " \"anoMatricula\": 2024 " + \
            " } "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_0.status_code == 500
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Ocorreu um erro."
        assert res_0.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpf\": \"75369048517\", " + \
            " \"nome\": \"Maria Alice Chaves\", " + \
            " \"dataNascimento\": \"mICTrRFCfk2jxZgD\", " + \
            " \"telefone\": \"3333333\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 2, " + \
            " 1 " + \
            " ], " + \
            " \"certidaoNascimento\": \"JdIWwO_H\", " + \
            " \"cnh\": \"3333333\", " + \
            " \"bairro\": \"São Pena\", " + \
            " \"numero\": \"3052\", " + \
            " \"cep\": \"\", " + \
            " \"municipio\": 4200705, " + \
            " \"uf\": 42, " + \
            " \"estudantePpl\": 0, " + \
            " \"serieAno\": 25, " + \
            " \"inep\": 28008731, " + \
            " \"formaOrganizacaoTurma\": 6, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 682, " + \
            " \"estudanteIntegral\": 1 " + \
            " } "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_1.status_code == 500
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Ocorreu um erro."
        assert res_1.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"68761115550\", " + \
            " \"numeroNISResponsavel\": \"62892487178\", " + \
            " \"genero\": 3, " + \
            " \"telefone\": \"11933018135\", " + \
            " \"rg\": \"zkQOUP5jy\", " + \
            " \"orgaoEmissor\": \"Nt Uteu4fY\", " + \
            " \"cnh\": \"02342004738\", " + \
            " \"cep\": \"92675251\", " + \
            " \"municipio\": 12, " + \
            " \"uf\": 11, " + \
            " \"matriculaRede\": \"56789\", " + \
            " \"dataInicioPeriodoLetivo\": \"1967-10-23\", " + \
            " \"formaOrganizacaoTurma\": 1, " + \
            " \"estudanteIntegral\": 1 " + \
            " } "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_2.status_code == 500
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Ocorreu um erro."
        assert res_2.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"43852858887\", " + \
            " \"numeroNISResponsavel\": \"70370927487\", " + \
            " \"dataNascimento\": \"2008-08-10\", " + \
            " \"racaCor\": 3, " + \
            " \"tipoDeficiencia\": [ " + \
            " 1, " + \
            " 2, " + \
            " 2, " + \
            " 2 " + \
            " ], " + \
            " \"sexo\": \"1\", " + \
            " \"numeroNIS\": \"66718604590\", " + \
            " \"rg\": \"4368095330057450\", " + \
            " \"orgaoEmissor\": \"SSP-MG\", " + \
            " \"certidaoNascimento\": \"87564829435355982617253768009124\", " + \
            " \"cnh\": \"02342004738\", " + \
            " \"logradouro\": \"Rua Travessa Maurício\", " + \
            " \"bairro\": \"São Verdara\", " + \
            " \"numero\": \"41217\", " + \
            " \"cep\": \"35684096\", " + \
            " \"uf\": 76, " + \
            " \"dataInicioMatricula\": \"2041-04-23\", " + \
            " \"serieAno\": 25, " + \
            " \"instituicao\": 190213, " + \
            " \"estudanteAnoPeriodo\": 3, " + \
            " \"estudanteIntegral\": 1, " + \
            " \"anoMatricula\": 2025 " + \
            " } "
        headers['Accept'] = "application/json"
        res_3 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_3.status_code == 500
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "Ocorreu um erro."
        assert res_3.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"42602512443\", " + \
            " \"nomeMaeEstudante\": \"Srta. Stephanie Lúcia Domingues Jr.\", " + \
            " \"genero\": 7, " + \
            " \"email\": \"4Dhx0aikyke\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1 " + \
            " ], " + \
            " \"sexo\": \"2\", " + \
            " \"numeroNIS\": \"18588854601\", " + \
            " \"orgaoEmissor\": \"Nt Uteu4fY\", " + \
            " \"certidaoNascimento\": \"59432796688253299274669290554711\", " + \
            " \"bairro\": \"\", " + \
            " \"municipio\": 4200705, " + \
            " \"estudantePpl\": 42, " + \
            " \"serieAno\": 25, " + \
            " \"matriculaRede\": \"Teste Ricardo\", " + \
            " \"inep\": 900, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 0, " + \
            " \"estudanteAnoPeriodo\": 2, " + \
            " \"anoMatricula\": 2024 " + \
            " } "
        headers['Accept'] = "application/json"
        res_4 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_4.status_code == 500
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "Ocorreu um erro."
        assert res_4.json()["errors"]["message"] == "O campo nome é obrigatório. (and 1 more error)"
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"A\", " + \
            " \"nomeMaeEstudante\": \"Dirce Cervantes Ferminiano\", " + \
            " \"cpf\": \"\", " + \
            " \"nome\": \"Srta. Suellen Uchoa Sobrinho\", " + \
            " \"racaCor\": 1, " + \
            " \"telefone\": \"11933018135\", " + \
            " \"sexo\": \"4\", " + \
            " \"rg\": \"9161604620103568\", " + \
            " \"cnh\": \"02342004738\", " + \
            " \"logradouro\": \"Rua Av. César\", " + \
            " \"numero\": \"7143\", " + \
            " \"cep\": \"3IP6FB\", " + \
            " \"uf\": 26, " + \
            " \"dataInicioPeriodoLetivo\": \"2059-00-25\" " + \
            " } "
        headers['Accept'] = "application/json"
        res_5 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_5.status_code == 500
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "Ocorreu um erro."
        assert res_5.json()["errors"]["message"] == "O campo dataNascimento é obrigatório. (and 1 more error)"
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"BAKZnf6geU\", " + \
            " \"numeroNISResponsavel\": \"2_a\", " + \
            " \"cpf\": \"62039187847\", " + \
            " \"dataNascimento\": \"2008-03-10\", " + \
            " \"email\": \"srta.pamela.godoi@fake.com\", " + \
            " \"telefone\": \"11949911257\", " + \
            " \"sexo\": \"0\", " + \
            " \"numeroNIS\": \"84449859267\", " + \
            " \"rg\": \"azCz_R\", " + \
            " \"orgaoEmissor\": \"SSP\", " + \
            " \"logradouro\": \"Rua Rua de Aguiar\", " + \
            " \"bairro\": \"São Aranda\", " + \
            " \"cep\": \"60181171\", " + \
            " \"municipio\": 4200705, " + \
            " \"dataInicioMatricula\": \"1974-02-31\", " + \
            " \"serieAno\": 25, " + \
            " \"matriculaRede\": \"Jd8yrAtiUgYuYM\", " + \
            " \"inep\": 16004124, " + \
            " \"dataInicioPeriodoLetivo\": \"1994-12-18\", " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 0, " + \
            " \"estudanteIntegral\": 0, " + \
            " \"anoMatricula\": 845 " + \
            " } "
        headers['Accept'] = "application/json"
        res_6 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_6.status_code == 500
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == False
        assert res_6.json()["message"] == "Ocorreu um erro."
        assert res_6.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório. (and 2 more errors)"
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"55714890574\", " + \
            " \"numeroNISResponsavel\": \"60926959097\", " + \
            " \"cpf\": \"82783619598\", " + \
            " \"nome\": \"Willian Jefferson Delvalle\", " + \
            " \"dataNascimento\": \"2010-02-23\", " + \
            " \"genero\": 6, " + \
            " \"racaCor\": 4, " + \
            " \"telefone\": \"11933018135\", " + \
            " \"nomeSocial\": \"8hbo50Mnoym\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1, " + \
            " 806, " + \
            " 2, " + \
            " 1 " + \
            " ], " + \
            " \"sexo\": \"4\", " + \
            " \"orgaoEmissor\": \"vC2a0H9Lv4\", " + \
            " \"certidaoNascimento\": \"12898719243833622556767693160339\", " + \
            " \"numero\": \"74\", " + \
            " \"cep\": \"84825357\", " + \
            " \"municipio\": 1100940, " + \
            " \"uf\": 42, " + \
            " \"estudantePpl\": 42, " + \
            " \"dataInicioMatricula\": \"2078-00-18\", " + \
            " \"serieAno\": 44, " + \
            " \"matriculaRede\": \"e2XouiaD2aNA 8\", " + \
            " \"formaOrganizacaoTurma\": 1, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 0, " + \
            " \"estudanteAnoPeriodo\": 2, " + \
            " \"estudanteIntegral\": 0, " + \
            " \"anoMatricula\": 2024 " + \
            " } "
        headers['Accept'] = "application/json"
        res_7 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_7.status_code == 500
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == False
        assert res_7.json()["message"] == "Ocorreu um erro."
        assert res_7.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_8 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?" + 
                    "page=813&" + 
                    "per_page=10&" + 
                    "situacao_matricula=INATIVAS",
                    headers=headers)
        
        assert res_8.status_code == 200
        assert "application/json" in res_8.headers["content-type"]
        assert res_8.json()["success"] == True
        assert res_8.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_8.json()["data"]) == 0
        assert res_8.json()["pagination"]["total"] == 1407.0
        assert res_8.json()["pagination"]["count"] == 0.0
        assert res_8.json()["pagination"]["per_page"] == 10.0
        assert res_8.json()["pagination"]["current_page"] == 813.0
        assert res_8.json()["pagination"]["total_pages"] == 141.0
        assert res_8.json()["pagination"]["links"]["previous"] == 812.0
        assert res_8.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # 1 - (500) POST:/v1/estudantes
    # 2 - (500) POST:/v1/estudantes
    # 3 - (500) POST:/v1/estudantes
    # 4 - (200) GET:/v1/estudantes
    # Found 7 potential faults. Type-codes: 100, 200
    @timeout_decorator.timeout(60)
    def test_14_with500(self):
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"numeroNISResponsavel\": \"08568529796\", " + \
            " \"nomeMaeEstudante\": \"Srta. Daiane Leon Sobrinho\", " + \
            " \"cpf\": \"42484366477\", " + \
            " \"dataNascimento\": \"2007-12-17\", " + \
            " \"racaCor\": 1, " + \
            " \"telefone\": \"11949911257\", " + \
            " \"nomeSocial\": \"8hbo50Mnoym\", " + \
            " \"rg\": \"9201096495248305\", " + \
            " \"orgaoEmissor\": \"vC2a0H9Lv4\", " + \
            " \"certidaoNascimento\": \"45002947142265130471661927806261\", " + \
            " \"logradouro\": \"Rua Rua Flores\", " + \
            " \"bairro\": \"São Lutero\", " + \
            " \"cep\": \"99377882\", " + \
            " \"municipio\": 4200705, " + \
            " \"matriculaRede\": \"Teste Ricardo\", " + \
            " \"dataInicioPeriodoLetivo\": \"2003-04-15\", " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 1, " + \
            " \"estudanteAnoPeriodo\": 3, " + \
            " \"estudanteIntegral\": 0 " + \
            " } "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_0.status_code == 500
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Ocorreu um erro."
        assert res_0.json()["errors"]["message"] == "O campo nome é obrigatório."
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"numeroNISResponsavel\": \"47331976290\", " + \
            " \"cpf\": \"64720853749\", " + \
            " \"nome\": \"Aaron Bittencourt Sobrinho\", " + \
            " \"dataNascimento\": \"JUPzy4Ob\", " + \
            " \"genero\": 0, " + \
            " \"racaCor\": 2, " + \
            " \"email\": \"agustina.isabella.prado@fake.com\", " + \
            " \"nomeSocial\": \"YXWGpw\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 2, " + \
            " 3, " + \
            " 3 " + \
            " ], " + \
            " \"sexo\": \"4\", " + \
            " \"numeroNIS\": \"65938776031\", " + \
            " \"cnh\": \"3333333\", " + \
            " \"logradouro\": \"Rua Av. Carol\", " + \
            " \"municipio\": 3550308, " + \
            " \"estudantePpl\": 1, " + \
            " \"serieAno\": 27, " + \
            " \"matriculaRede\": \"56789\", " + \
            " \"instituicao\": 185616, " + \
            " \"inep\": 32079222, " + \
            " \"formaOrganizacaoTurma\": 6, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 3, " + \
            " \"estudanteAnoPeriodo\": 3, " + \
            " \"estudanteIntegral\": 0, " + \
            " \"anoMatricula\": 368 " + \
            " } "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_1.status_code == 500
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Ocorreu um erro."
        assert res_1.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"nomeMaeEstudante\": \"Carol Galvão Ferminiano\", " + \
            " \"nome\": \"Agustina Hosana Feliciano\", " + \
            " \"racaCor\": 4, " + \
            " \"bairro\": \"São Rios\", " + \
            " \"numero\": \"6843\", " + \
            " \"cep\": \"45527537\", " + \
            " \"municipio\": 1302603, " + \
            " \"estudantePpl\": 2, " + \
            " \"dataInicioMatricula\": \"1965-04-03\", " + \
            " \"inep\": 29391253, " + \
            " \"dataInicioPeriodoLetivo\": \"2014-09-18\", " + \
            " \"formaOrganizacaoTurma\": 1, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 3, " + \
            " \"estudanteAnoPeriodo\": 3, " + \
            " \"anoMatricula\": 2024 " + \
            " } "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_2.status_code == 500
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Ocorreu um erro."
        assert res_2.json()["errors"]["message"] == "O campo dataNascimento é obrigatório. (and 1 more error)"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?" + 
                    "page=4&" + 
                    "per_page=126&" + 
                    "situacao_matricula=INATIVAS&" + 
                    "ano_matricula=339",
                    headers=headers)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_3.json()["data"]) == 0
        assert res_3.json()["pagination"]["total"] == 0.0
        assert res_3.json()["pagination"]["count"] == 0.0
        assert res_3.json()["pagination"]["per_page"] == 126.0
        assert res_3.json()["pagination"]["current_page"] == 4.0
        assert res_3.json()["pagination"]["total_pages"] == 0.0
        assert res_3.json()["pagination"]["links"]["previous"] == 3.0
        assert res_3.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # 1 - (200) GET:/v1/estudantes/{cpfNis}
    # 2 - (401) GET:/v1/profissionais/lote/{id}/erros
    # 3 - (500) POST:/v1/estudantes
    # 4 - (201) POST:/v1/profissionais/lote
    # 5 - (500) POST:/v1/estudantes
    # 6 - (422) POST:/v1/profissionais
    # 7 - (500) POST:/v1/estudantes
    # 8 - (401) GET:/v1/estudantes/inep/{inep}
    # Found 10 potential faults. Type-codes: 100, 200
    # Using 4 examples:
    #   1
    #   2024
    #   2025
    #   Universidade Federal do Rio de Janeiro
    @timeout_decorator.timeout(60)
    def test_15_with500(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/{cpfNis} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/41342326601",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Dados obtidos com sucesso."
        assert res_0.json()["data"]["cpf"] == "41342326601"
        assert res_0.json()["data"]["nome"] == "Alexandre Fontes"
        assert res_0.json()["data"]["nomeSocial"] is None
        assert res_0.json()["data"]["numeroNIS"] == "05142472288"
        assert res_0.json()["data"]["rg"] == "61721505123607315325"
        assert res_0.json()["data"]["orgaoEmissor"] == "HGVa-Ee"
        assert res_0.json()["data"]["cpfResponsavel"] == "73985166238"
        assert res_0.json()["data"]["nomeMaeEstudante"] == "Gael da Paz"
        assert res_0.json()["data"]["numeroNISResponsavel"] == "55933230831"
        assert res_0.json()["data"]["dataNascimento"] == "1968-07-13"
        assert res_0.json()["data"]["logradouro"] == "Rua Nathan Porteira"
        assert res_0.json()["data"]["bairro"] == "Bairro fugiat"
        assert res_0.json()["data"]["numero"] == "441"
        assert res_0.json()["data"]["cep"] == "53885610"
        assert res_0.json()["data"]["municipio"] == 2508505.0
        assert res_0.json()["data"]["certidaoNascimento"] == "31501372366976360604592444220260"
        assert res_0.json()["data"]["cnh"] == "53176403800"
        assert res_0.json()["data"]["uf"] == 11.0
        assert res_0.json()["data"]["racaCor"] == 2.0
        assert len(res_0.json()["data"]["tipoDeficiencia"]) == 3
        assert res_0.json()["data"]["tipoDeficiencia"][0] == 5.0
        assert res_0.json()["data"]["tipoDeficiencia"][1] == 9.0
        assert res_0.json()["data"]["tipoDeficiencia"][2] == 10.0
        assert res_0.json()["data"]["genero"] == 2.0
        assert res_0.json()["data"]["telefone"] is None
        assert res_0.json()["data"]["email"] == "talita.viana@gmail.com"
        assert res_0.json()["data"]["situacaoCadastroValidado"] == 4.0
        assert len(res_0.json()["data"]["matriculas"]) == 1
        assert res_0.json()["data"]["matriculas"][0]["codigoMatriculaSgp"] == 1676274.0
        assert res_0.json()["data"]["matriculas"][0]["codInstituicao"] == 6.0
        assert res_0.json()["data"]["matriculas"][0]["dataInicioMatricula"] == "1976-04-10"
        assert res_0.json()["data"]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_0.json()["data"]["matriculas"][0]["dataFimOuAprovacao"] == "1980-07-10"
        assert res_0.json()["data"]["matriculas"][0]["situacaoMatricula"] == True
        assert res_0.json()["data"]["matriculas"][0]["serieAno"] == 46.0
        assert res_0.json()["data"]["matriculas"][0]["etapaEnsinoConsolidado"] == "Educação de Jovens e Adultos (EJA) - Fundamental"
        assert res_0.json()["data"]["matriculas"][0]["matriculaRede"] is None
        assert res_0.json()["data"]["matriculas"][0]["deletadaEm"] is None
        assert res_0.json()["data"]["matriculas"][0]["inep"] == "27014088"
        assert res_0.json()["data"]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_0.json()["data"]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_0.json()["data"]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_0.json()["data"]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_0.json()["data"]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_0.json()["data"]["matriculas"][0]["estudanteAnoPeriodo"] == 1.0
        assert res_0.json()["data"]["matriculas"][0]["estudanteIntegral"] is None
        assert res_0.json()["data"]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_0.json()["data"]["matriculas"][0]["anoMatricula"] is None
        assert len(res_0.json()["data"]["outrasMatriculas"]) == 0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id}/erros -> Response status 401 not defined for path '/v1/profissionais/lote/{id}/erros'.
        headers = {}
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/35/erros?per_page=10",
                    headers=headers)
        
        assert res_1.status_code == 401
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Não autorizado"
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"xj1gq\", " + \
            " \"nome\": \"Walter Camacho\", " + \
            " \"dataNascimento\": \"2008-12-01\", " + \
            " \"racaCor\": 1, " + \
            " \"email\": \"5jf\", " + \
            " \"telefone\": \"11949911257\", " + \
            " \"sexo\": \"0\", " + \
            " \"numeroNIS\": \"29349396149\", " + \
            " \"rg\": \"9002013143264065\", " + \
            " \"orgaoEmissor\": \"i4tf\", " + \
            " \"bairro\": \"São Carvalho\", " + \
            " \"cep\": \"23121277\", " + \
            " \"uf\": 43, " + \
            " \"estudantePpl\": 1, " + \
            " \"dataInicioPeriodoLetivo\": \"2056-08-13\", " + \
            " \"formaOrganizacaoTurma\": 1, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 1, " + \
            " \"estudanteAnoPeriodo\": 3 " + \
            " } "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_2.status_code == 500
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Ocorreu um erro."
        assert res_2.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"nome\": \"Clarice Dantas\", " + \
            " \"dataNascimento\": \"2007-06-22\", " + \
            " \"sexo\": \"5\", " + \
            " \"numero\": \"23\", " + \
            " \"cep\": \"61891062\", " + \
            " \"uf\": 31, " + \
            " \"inep\": \"41068394\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Rio de Janeiro\", " + \
            " \"anoInicioFormacaoAcademica\": 2016 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7 " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"Teste Ricardo\", " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataFim\": \"1994-13-10\", " + \
            " \"cargaHoraria\": 40 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_3 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_3.status_code == 201
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Operação realizada com sucesso"
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpf\": \"lO_pvaK0yI\", " + \
            " \"genero\": 4, " + \
            " \"racaCor\": 1, " + \
            " \"email\": \"william.oliveira.sales.jr@fake.com\", " + \
            " \"telefone\": \"11949911257\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 3, " + \
            " 917, " + \
            " 64 " + \
            " ], " + \
            " \"sexo\": \"3\", " + \
            " \"certidaoNascimento\": \"30615987317165628733524125663412\", " + \
            " \"bairro\": \"São Amaral\", " + \
            " \"cep\": \"74571265\", " + \
            " \"uf\": 13, " + \
            " \"dataInicioMatricula\": \"2031-05-12\", " + \
            " \"matriculaRede\": \"7\", " + \
            " \"instituicao\": 577, " + \
            " \"dataInicioPeriodoLetivo\": \"1938-04-15\", " + \
            " \"estudanteAnoPeriodo\": 42, " + \
            " \"estudanteIntegral\": 0, " + \
            " \"anoMatricula\": 2024 " + \
            " } "
        headers['Accept'] = "application/json"
        res_4 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_4.status_code == 500
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "Ocorreu um erro."
        assert res_4.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"tipoEnsinoMedio\": 601, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"racaCor\": 42, " + \
            " \"tipoDeficiencia\": [ " + \
            " 1, " + \
            " 3, " + \
            " 369 " + \
            " ], " + \
            " \"sexo\": \"5\", " + \
            " \"bairro\": \"São Fonseca\", " + \
            " \"numero\": \"43847\", " + \
            " \"municipio\": 2408102, " + \
            " \"uf\": 31, " + \
            " \"inep\": \"41354524\", " + \
            " \"formacoesAcademicas\": [], " + \
            " \"tipoVinculo\": 1, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"2081-06-03\", " + \
            " \"dataFim\": \"1978-04-28\" " + \
            " } "
        headers['Accept'] = "application/json"
        res_5 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_5.status_code == 422
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #1 ($nome) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"TV\", " + \
            " \"nomeMaeEstudante\": \"90JVI\", " + \
            " \"cpf\": \"88985278452\", " + \
            " \"nome\": \"Sr. Morgana Amoreira\", " + \
            " \"dataNascimento\": \"2006-09-20\", " + \
            " \"genero\": 1, " + \
            " \"tipoDeficiencia\": [ " + \
            " 442, " + \
            " 40, " + \
            " 1 " + \
            " ], " + \
            " \"numeroNIS\": \"53465062823\", " + \
            " \"rg\": \"5534239845556783\", " + \
            " \"orgaoEmissor\": \"uMlbJ\", " + \
            " \"cep\": \"23121277\", " + \
            " \"estudantePpl\": 2, " + \
            " \"serieAno\": 44, " + \
            " \"matriculaRede\": \"jvjvjv1\", " + \
            " \"inep\": 29188784, " + \
            " \"dataInicioPeriodoLetivo\": \"1937-03-25\", " + \
            " \"formaOrganizacaoTurma\": 1, " + \
            " \"estudanteAnoPeriodo\": 1, " + \
            " \"estudanteIntegral\": 42, " + \
            " \"anoMatricula\": 2025 " + \
            " } "
        headers['Accept'] = "application/json"
        res_6 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_6.status_code == 500
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == False
        assert res_6.json()["message"] == "Ocorreu um erro."
        assert res_6.json()["errors"]["message"] == "O campo dataInicioMatricula é obrigatório. (and 2 more errors)"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/inep/{inep} -> Response status 401 not defined for path '/v1/estudantes/inep/{inep}'.
        headers = {}
        headers['Accept'] = "application/json"
        res_7 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/29480841?" + 
                    "per_page=15&" + 
                    "situacao_matricula=EVOMASTER&" + 
                    "ano_matricula=2024",
                    headers=headers)
        
        assert res_7.status_code == 401
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == False
        assert res_7.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # 1 - (200) GET:/v1/profissionais
    # 2 - (500) POST:/v1/estudantes
    # 3 - (200) GET:/v1/estudantes/{cpfNis}
    # 4 - (400) GET:/v1/estudantes/lote/{id}/erros
    # 5 - (200) GET:/v1/estudantes/lote/{id}
    # 6 - (401) GET:/v1/estudantes/lote
    # Found 8 potential faults. Type-codes: 100, 200
    @timeout_decorator.timeout(60)
    def test_16_with500(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?" + 
                    "page=737&" + 
                    "per_page=10",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_0.json()["data"]) == 0
        assert res_0.json()["pagination"]["total"] == 3.0
        assert res_0.json()["pagination"]["count"] == 0.0
        assert res_0.json()["pagination"]["per_page"] == 10.0
        assert res_0.json()["pagination"]["current_page"] == 737.0
        assert res_0.json()["pagination"]["total_pages"] == 1.0
        assert res_0.json()["pagination"]["links"]["previous"] == 736.0
        assert res_0.json()["pagination"]["links"]["next"] is None
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"jbhF2wYO90\", " + \
            " \"numeroNISResponsavel\": \"04023407878\", " + \
            " \"nomeMaeEstudante\": \"Carol Galvão Ferminiano\", " + \
            " \"dataNascimento\": \"2024-12-28\", " + \
            " \"genero\": 9, " + \
            " \"telefone\": \"11949911257\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 3, " + \
            " 938, " + \
            " 3, " + \
            " 3 " + \
            " ], " + \
            " \"rg\": \"0653550633942446\", " + \
            " \"orgaoEmissor\": \"U32oLjbMO6\", " + \
            " \"certidaoNascimento\": \"10057012781232386812960369075081\", " + \
            " \"bairro\": \"São Matos\", " + \
            " \"municipio\": 3106200, " + \
            " \"uf\": 31, " + \
            " \"estudantePpl\": 42, " + \
            " \"serieAno\": 44, " + \
            " \"matriculaRede\": \"56789\", " + \
            " \"dataInicioPeriodoLetivo\": \"2002-10-26\", " + \
            " \"formaOrganizacaoTurma\": 236, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 4, " + \
            " \"estudanteAnoPeriodo\": 1, " + \
            " \"estudanteIntegral\": 1, " + \
            " \"anoMatricula\": 557 " + \
            " } "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_1.status_code == 500
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Ocorreu um erro."
        assert res_1.json()["errors"]["message"] == "O campo nome é obrigatório. (and 1 more error)"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/{cpfNis} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/46711422449",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Dados obtidos com sucesso."
        assert res_2.json()["data"]["cpf"] == "46711422449"
        assert res_2.json()["data"]["nome"] == "Alan Matos Delvalle Jr."
        assert res_2.json()["data"]["nomeSocial"] is None
        assert res_2.json()["data"]["numeroNIS"] == "78247064188"
        assert res_2.json()["data"]["rg"] == "8007720609490748"
        assert res_2.json()["data"]["orgaoEmissor"] == "SSP-RJ"
        assert res_2.json()["data"]["cpfResponsavel"] == "44650325447"
        assert res_2.json()["data"]["nomeMaeEstudante"] == "Joyce Rafaela Salas"
        assert res_2.json()["data"]["numeroNISResponsavel"] == "15192527540"
        assert res_2.json()["data"]["dataNascimento"] == "2007-07-20"
        assert res_2.json()["data"]["logradouro"] == "Rua Largo Meireles"
        assert res_2.json()["data"]["bairro"] == "São Saito"
        assert res_2.json()["data"]["numero"] == "45649"
        assert res_2.json()["data"]["cep"] == "45211173"
        assert res_2.json()["data"]["municipio"] == 3304557.0
        assert res_2.json()["data"]["certidaoNascimento"] == "31657926320976729744137915964017"
        assert res_2.json()["data"]["cnh"] is None
        assert res_2.json()["data"]["uf"] == 33.0
        assert res_2.json()["data"]["racaCor"] == 2.0
        assert len(res_2.json()["data"]["tipoDeficiencia"]) == 0
        assert res_2.json()["data"]["genero"] == 1.0
        assert res_2.json()["data"]["telefone"] is None
        assert res_2.json()["data"]["email"] == "alan.matos.delvalle.jr@fake.com"
        assert res_2.json()["data"]["situacaoCadastroValidado"] is None
        assert len(res_2.json()["data"]["matriculas"]) == 1
        assert res_2.json()["data"]["matriculas"][0]["codigoMatriculaSgp"] == 8177697.0
        assert res_2.json()["data"]["matriculas"][0]["codInstituicao"] == 185888.0
        assert res_2.json()["data"]["matriculas"][0]["dataInicioMatricula"] == "2024-01-01"
        assert res_2.json()["data"]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_2.json()["data"]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_2.json()["data"]["matriculas"][0]["situacaoMatricula"] == True
        assert res_2.json()["data"]["matriculas"][0]["serieAno"] == 27.0
        assert res_2.json()["data"]["matriculas"][0]["etapaEnsinoConsolidado"] == "Ensino Médio"
        assert res_2.json()["data"]["matriculas"][0]["matriculaRede"] is None
        assert res_2.json()["data"]["matriculas"][0]["deletadaEm"] is None
        assert res_2.json()["data"]["matriculas"][0]["inep"] == "41080807"
        assert res_2.json()["data"]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_2.json()["data"]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_2.json()["data"]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_2.json()["data"]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_2.json()["data"]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_2.json()["data"]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_2.json()["data"]["matriculas"][0]["estudanteIntegral"] is None
        assert res_2.json()["data"]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_2.json()["data"]["matriculas"][0]["anoMatricula"] is None
        assert len(res_2.json()["data"]["outrasMatriculas"]) == 0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/26/erros",
                    headers=headers)
        
        assert res_3.status_code == 400
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "O ID fornecido não é um UUID válido. ID: 26"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/99832941-7c8a-4be5-8f97-c563f5e5f131?incluir_objetos_processados=false",
                    headers=headers)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["status_processamento"] == "Enviado"
        assert res_4.json()["message"] == "Lote recuperado com sucesso. ID: 99832941-7c8a-4be5-8f97-c563f5e5f131"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Response status 401 not defined for path '/v1/estudantes/lote'.
        headers = {}
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?" + 
                    "page=160&" + 
                    "per_page=1258382974",
                    headers=headers)
        
        assert res_5.status_code == 401
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # 1 - (422) POST:/v1/profissionais
    # 2 - (500) POST:/v1/estudantes
    # 3 - (400) GET:/v1/estudantes/lote/{id}/erros
    # 4 - (200) GET:/v1/profissionais/lote
    # 5 - (400) GET:/v1/estudantes/lote/{id}/erros
    # 6 - (200) GET:/v1/profissionais/lote/{id}
    # Found 17 potential faults. Type-codes: 100, 200
    # Using 3 examples:
    #   1
    #   2010
    #   25
    @timeout_decorator.timeout(60)
    def test_17_with500(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"racaCor\": 4, " + \
            " \"email\": \"3tZINHm55REi\", " + \
            " \"telefone\": \"3333333\", " + \
            " \"nomeSocial\": \"rRAEEBPUPdYf\", " + \
            " \"sexo\": \"2\", " + \
            " \"bairro\": \"zeBuaZCOiXNp\", " + \
            " \"cep\": \"18563020\", " + \
            " \"municipio\": 3304557, " + \
            " \"uf\": 24, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoInicioFormacaoAcademica\": 2016 " + \
            " }, " + \
            " { " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 1, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\", " + \
            " \"anoInicioFormacaoAcademica\": 923 " + \
            " } " + \
            " ], " + \
            " \"inep\": 32081618, " + \
            " \"matriculaRede\": \"aT\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 1, " + \
            " \"dataIngresso\": \"1971-06-08\", " + \
            " \"cargaHoraria\": 229 " + \
            " } "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_0.status_code == 422
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #1 ($nome) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"54967796001\", " + \
            " \"numeroNISResponsavel\": \"69835209161\", " + \
            " \"nomeMaeEstudante\": \"Dr. Gisela Noelí Madeira Neto\", " + \
            " \"cpf\": \"brl0Ry\", " + \
            " \"dataNascimento\": \"2008-10-29\", " + \
            " \"racaCor\": 3, " + \
            " \"email\": \"srta.jessica.barros.quintana@fake.com\", " + \
            " \"telefone\": \"3333333\", " + \
            " \"nomeSocial\": \"8hbo50Mnoym\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1, " + \
            " 10, " + \
            " 9 " + \
            " ], " + \
            " \"sexo\": \"1\", " + \
            " \"numeroNIS\": \"36141729334\", " + \
            " \"orgaoEmissor\": \"Nt Uteu4fY\", " + \
            " \"certidaoNascimento\": \"25433142092800974488815900538523\", " + \
            " \"numero\": \"93882\", " + \
            " \"municipio\": 2508505, " + \
            " \"uf\": 33, " + \
            " \"estudantePpl\": 2, " + \
            " \"serieAno\": 25, " + \
            " \"matriculaRede\": \"\", " + \
            " \"inep\": 16004124, " + \
            " \"dataInicioPeriodoLetivo\": \"1934-12-22\", " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 3, " + \
            " \"anoMatricula\": 2024 " + \
            " } "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_1.status_code == 500
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Ocorreu um erro."
        assert res_1.json()["errors"]["message"] == "O campo nome é obrigatório."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/8SR4l49a/erros?per_page=916",
                    headers=headers)
        
        assert res_2.status_code == 400
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "O ID fornecido não é um UUID válido. ID: 8SR4l49a"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/0/dataEnvio'] String "2025-05-04 00:37:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1/dataEnvio'] String "2025-05-04 00:37:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2/dataEnvio'] String "2025-05-04 00:37:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/3/dataEnvio'] String "2025-05-04 00:37:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/4/dataEnvio'] String "2025-05-04 00:37:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/5/dataEnvio'] String "2025-05-04 00:37:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/6/dataEnvio'] String "2025-05-04 00:37:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/7/dataEnvio'] String "2025-05-04 00:36:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/8/dataEnvio'] String "2025-05-04 00:35:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/9/dataEnvio'] String "2025-05-04 00:33:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote?per_page=10",
                    headers=headers)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_3.json()["data"]) == 10
        assert res_3.json()["data"][0]["dataEnvio"] == "2025-05-04 00:37:41"
        assert res_3.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_3.json()["data"][1]["dataEnvio"] == "2025-05-04 00:37:35"
        assert res_3.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_3.json()["data"][2]["dataEnvio"] == "2025-05-04 00:37:32"
        assert res_3.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_3.json()["pagination"]["total"] == 2510.0
        assert res_3.json()["pagination"]["count"] == 10.0
        assert res_3.json()["pagination"]["per_page"] == 10.0
        assert res_3.json()["pagination"]["current_page"] == 1.0
        assert res_3.json()["pagination"]["total_pages"] == 251.0
        assert res_3.json()["pagination"]["links"]["previous"] is None
        assert res_3.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/26/erros?page=660",
                    headers=headers)
        
        assert res_4.status_code == 400
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "O ID fornecido não é um UUID válido. ID: 26"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id} -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/2dedf564-c12f-41a0-862b-141796ac33e7?page=892",
                    headers=headers)
        
        assert res_5.status_code == 200
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == True
        assert res_5.json()["status_processamento"] == "Enviado"
        assert res_5.json()["message"] == "Lote recuperado com sucesso. ID: 2dedf564-c12f-41a0-862b-141796ac33e7"
    
    
    # Calls:
    # 1 - (400) GET:/v1/estudantes/lote/{id}/erros
    # 2 - (422) PATCH:/v1/estudantes/lote
    # 3 - (500) GET:/v1/profissionais/lote/{id}
    # 4 - (200) GET:/v1/estudantes/lote
    # 5 - (200) GET:/v1/profissionais/lote
    # 6 - (200) GET:/v1/estudantes/inep/{inep}
    # Found 18 potential faults. Type-codes: 100, 200
    @timeout_decorator.timeout(60)
    def test_18_with500(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/11/erros?page=505",
                    headers=headers)
        
        assert res_0.status_code == 400
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "O ID fornecido não é um UUID válido. ID: 11"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_1.status_code == 422
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Não foi possível processar as informações."
        assert res_1.json()["errors"]["message"] == "JSON inválido."
        
        # Fault100. HTTP Status 500. GET:/v1/profissionais/lote/{id}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/dedee11f-2285-4987-82de-66b89ad1dc04",
                    headers=headers)
        
        assert res_2.status_code == 500
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Não foi possível recuperar o lote. ID fornecido: dedee11f-2285-4987-82de-66b89ad1dc04 Nenhum lote correspondente foi encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?page=1",
                    headers=headers)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_3.json()["data"]) == 10
        assert res_3.json()["data"][0]["dataEnvio"] == "2025-05-04 00:40:47"
        assert res_3.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_3.json()["data"][1]["dataEnvio"] == "2025-05-04 00:40:43"
        assert res_3.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_3.json()["data"][2]["dataEnvio"] == "2025-05-04 00:40:12"
        assert res_3.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_3.json()["pagination"]["total"] == 9591.0
        assert res_3.json()["pagination"]["count"] == 10.0
        assert res_3.json()["pagination"]["per_page"] == 10.0
        assert res_3.json()["pagination"]["current_page"] == 1.0
        assert res_3.json()["pagination"]["total_pages"] == 960.0
        assert res_3.json()["pagination"]["links"]["previous"] is None
        assert res_3.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/0/dataEnvio'] String "2025-05-04 00:41:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1/dataEnvio'] String "2025-05-04 00:40:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2/dataEnvio'] String "2025-05-04 00:38:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/3/dataEnvio'] String "2025-05-04 00:38:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/4/dataEnvio'] String "2025-05-04 00:38:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/5/dataEnvio'] String "2025-05-04 00:37:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/6/dataEnvio'] String "2025-05-04 00:37:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/7/dataEnvio'] String "2025-05-04 00:37:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/8/dataEnvio'] String "2025-05-04 00:37:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/9/dataEnvio'] String "2025-05-04 00:37:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_4.json()["data"]) == 10
        assert res_4.json()["data"][0]["dataEnvio"] == "2025-05-04 00:41:02"
        assert res_4.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_4.json()["data"][1]["dataEnvio"] == "2025-05-04 00:40:54"
        assert res_4.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_4.json()["data"][2]["dataEnvio"] == "2025-05-04 00:38:13"
        assert res_4.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_4.json()["pagination"]["total"] == 2515.0
        assert res_4.json()["pagination"]["count"] == 10.0
        assert res_4.json()["pagination"]["per_page"] == 10.0
        assert res_4.json()["pagination"]["current_page"] == 1.0
        assert res_4.json()["pagination"]["total_pages"] == 252.0
        assert res_4.json()["pagination"]["links"]["previous"] is None
        assert res_4.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/inep/{inep} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/29480841?per_page=916",
                    headers=headers)
        
        assert res_5.status_code == 200
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == True
        assert res_5.json()["message"] == "Estudantes obtidos com sucesso."
        assert len(res_5.json()["data"]) == 500
        assert res_5.json()["data"][0]["cpf"] == "96757311097"
        assert res_5.json()["data"][0]["nome"] == "Aaron Christopher Urias"
        assert res_5.json()["data"][0]["nomeSocial"] is None
        assert res_5.json()["data"][0]["numeroNIS"] == "72389574551"
        assert res_5.json()["data"][0]["rg"] == "9496801126500764"
        assert res_5.json()["data"][0]["orgaoEmissor"] == "SSP-AL"
        assert res_5.json()["data"][0]["cpfResponsavel"] == "89674981950"
        assert res_5.json()["data"][0]["nomeMaeEstudante"] == "Srta. Franciele Faro Serra"
        assert res_5.json()["data"][0]["numeroNISResponsavel"] == "94149055437"
        assert res_5.json()["data"][0]["dataNascimento"] == "2005-08-12"
        assert res_5.json()["data"][0]["logradouro"] == "Rua Avenida Verdugo"
        assert res_5.json()["data"][0]["bairro"] == "São Saraiva"
        assert res_5.json()["data"][0]["numero"] == "2423"
        assert res_5.json()["data"][0]["cep"] == "63586053"
        assert res_5.json()["data"][0]["municipio"] == 2704302.0
        assert res_5.json()["data"][0]["certidaoNascimento"] == "59825522975993214867677012778048"
        assert res_5.json()["data"][0]["cnh"] is None
        assert res_5.json()["data"][0]["uf"] == 27.0
        assert res_5.json()["data"][0]["racaCor"] == 1.0
        assert len(res_5.json()["data"][0]["tipoDeficiencia"]) == 0
        assert res_5.json()["data"][0]["genero"] == 3.0
        assert res_5.json()["data"][0]["telefone"] is None
        assert res_5.json()["data"][0]["email"] == "aaron.christopher.urias@fake.com"
        assert res_5.json()["data"][0]["situacaoCadastroValidado"] is None
        assert len(res_5.json()["data"][0]["matriculas"]) == 1
        assert res_5.json()["data"][0]["matriculas"][0]["codigoMatriculaSgp"] == 7950764.0
        assert res_5.json()["data"][0]["matriculas"][0]["codInstituicao"] == 106263.0
        assert res_5.json()["data"][0]["matriculas"][0]["dataInicioMatricula"] == "2024-01-01"
        assert res_5.json()["data"][0]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_5.json()["data"][0]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_5.json()["data"][0]["matriculas"][0]["situacaoMatricula"] == True
        assert res_5.json()["data"][0]["matriculas"][0]["serieAno"] == 27.0
        assert res_5.json()["data"][0]["matriculas"][0]["etapaEnsinoConsolidado"] == "Ensino Médio"
        assert res_5.json()["data"][0]["matriculas"][0]["matriculaRede"] is None
        assert res_5.json()["data"][0]["matriculas"][0]["deletadaEm"] is None
        assert res_5.json()["data"][0]["matriculas"][0]["inep"] == "29480841"
        assert res_5.json()["data"][0]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_5.json()["data"][0]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_5.json()["data"][0]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_5.json()["data"][0]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_5.json()["data"][0]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_5.json()["data"][0]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_5.json()["data"][0]["matriculas"][0]["estudanteIntegral"] is None
        assert res_5.json()["data"][0]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_5.json()["data"][0]["matriculas"][0]["anoMatricula"] is None
        assert len(res_5.json()["data"][0]["outrasMatriculas"]) == 0
        assert res_5.json()["data"][1]["cpf"] == "91619496208"
        assert res_5.json()["data"][1]["nome"] == "Adriel Emanuel Padrão Neto"
        assert res_5.json()["data"][1]["nomeSocial"] is None
        assert res_5.json()["data"][1]["numeroNIS"] == "12631407646"
        assert res_5.json()["data"][1]["rg"] == "3530282830276345"
        assert res_5.json()["data"][1]["orgaoEmissor"] == "SSP-AL"
        assert res_5.json()["data"][1]["cpfResponsavel"] == "26151844904"
        assert res_5.json()["data"][1]["nomeMaeEstudante"] == "Cristina Verdara Toledo"
        assert res_5.json()["data"][1]["numeroNISResponsavel"] == "35004956551"
        assert res_5.json()["data"][1]["dataNascimento"] == "2007-10-17"
        assert res_5.json()["data"][1]["logradouro"] == "Rua Av. Solano"
        assert res_5.json()["data"][1]["bairro"] == "São Lourenço"
        assert res_5.json()["data"][1]["numero"] == "659"
        assert res_5.json()["data"][1]["cep"] == "77688310"
        assert res_5.json()["data"][1]["municipio"] == 2704302.0
        assert res_5.json()["data"][1]["certidaoNascimento"] == "24835719707029413160298742970079"
        assert res_5.json()["data"][1]["cnh"] is None
        assert res_5.json()["data"][1]["uf"] == 27.0
        assert res_5.json()["data"][1]["racaCor"] == 3.0
        assert len(res_5.json()["data"][1]["tipoDeficiencia"]) == 0
        assert res_5.json()["data"][1]["genero"] == 0.0
        assert res_5.json()["data"][1]["telefone"] is None
        assert res_5.json()["data"][1]["email"] == "adriel.emanuel.padrao.neto@fake.com"
        assert res_5.json()["data"][1]["situacaoCadastroValidado"] is None
        assert len(res_5.json()["data"][1]["matriculas"]) == 1
        assert res_5.json()["data"][1]["matriculas"][0]["codigoMatriculaSgp"] == 7950174.0
        assert res_5.json()["data"][1]["matriculas"][0]["codInstituicao"] == 106263.0
        assert res_5.json()["data"][1]["matriculas"][0]["dataInicioMatricula"] == "2024-01-01"
        assert res_5.json()["data"][1]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_5.json()["data"][1]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_5.json()["data"][1]["matriculas"][0]["situacaoMatricula"] == True
        assert res_5.json()["data"][1]["matriculas"][0]["serieAno"] == 45.0
        assert res_5.json()["data"][1]["matriculas"][0]["etapaEnsinoConsolidado"] == "EJA - Ensino Médio"
        assert res_5.json()["data"][1]["matriculas"][0]["matriculaRede"] is None
        assert res_5.json()["data"][1]["matriculas"][0]["deletadaEm"] is None
        assert res_5.json()["data"][1]["matriculas"][0]["inep"] == "29480841"
        assert res_5.json()["data"][1]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_5.json()["data"][1]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_5.json()["data"][1]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_5.json()["data"][1]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_5.json()["data"][1]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_5.json()["data"][1]["matriculas"][0]["estudanteAnoPeriodo"] == 1.0
        assert res_5.json()["data"][1]["matriculas"][0]["estudanteIntegral"] is None
        assert res_5.json()["data"][1]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_5.json()["data"][1]["matriculas"][0]["anoMatricula"] is None
        assert len(res_5.json()["data"][1]["outrasMatriculas"]) == 0
        assert res_5.json()["data"][2]["cpf"] == "74799988212"
        assert res_5.json()["data"][2]["nome"] == "Agatha Ana Pedrosa Jr."
        assert res_5.json()["data"][2]["nomeSocial"] is None
        assert res_5.json()["data"][2]["numeroNIS"] == "17103704056"
        assert res_5.json()["data"][2]["rg"] == "2343516462771539"
        assert res_5.json()["data"][2]["orgaoEmissor"] == "SSP-AL"
        assert res_5.json()["data"][2]["cpfResponsavel"] == "10385584920"
        assert res_5.json()["data"][2]["nomeMaeEstudante"] == "Srta. Poliana Maya Lovato Neto"
        assert res_5.json()["data"][2]["numeroNISResponsavel"] == "96551476898"
        assert res_5.json()["data"][2]["dataNascimento"] == "2008-04-29"
        assert res_5.json()["data"][2]["logradouro"] == "Rua Rua Wellington"
        assert res_5.json()["data"][2]["bairro"] == "São Santana"
        assert res_5.json()["data"][2]["numero"] == "9504"
        assert res_5.json()["data"][2]["cep"] == "35892036"
        assert res_5.json()["data"][2]["municipio"] == 2704302.0
        assert res_5.json()["data"][2]["certidaoNascimento"] == "35433679432243095172708527915890"
        assert res_5.json()["data"][2]["cnh"] is None
        assert res_5.json()["data"][2]["uf"] == 27.0
        assert res_5.json()["data"][2]["racaCor"] == 4.0
        assert len(res_5.json()["data"][2]["tipoDeficiencia"]) == 0
        assert res_5.json()["data"][2]["genero"] == 4.0
        assert res_5.json()["data"][2]["telefone"] is None
        assert res_5.json()["data"][2]["email"] == "agatha.ana.pedrosa.jr@fake.com"
        assert res_5.json()["data"][2]["situacaoCadastroValidado"] is None
        assert len(res_5.json()["data"][2]["matriculas"]) == 1
        assert res_5.json()["data"][2]["matriculas"][0]["codigoMatriculaSgp"] == 7950446.0
        assert res_5.json()["data"][2]["matriculas"][0]["codInstituicao"] == 106263.0
        assert res_5.json()["data"][2]["matriculas"][0]["dataInicioMatricula"] == "2024-01-01"
        assert res_5.json()["data"][2]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_5.json()["data"][2]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_5.json()["data"][2]["matriculas"][0]["situacaoMatricula"] == True
        assert res_5.json()["data"][2]["matriculas"][0]["serieAno"] == 45.0
        assert res_5.json()["data"][2]["matriculas"][0]["etapaEnsinoConsolidado"] == "EJA - Ensino Médio"
        assert res_5.json()["data"][2]["matriculas"][0]["matriculaRede"] is None
        assert res_5.json()["data"][2]["matriculas"][0]["deletadaEm"] is None
        assert res_5.json()["data"][2]["matriculas"][0]["inep"] == "29480841"
        assert res_5.json()["data"][2]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_5.json()["data"][2]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_5.json()["data"][2]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_5.json()["data"][2]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_5.json()["data"][2]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_5.json()["data"][2]["matriculas"][0]["estudanteAnoPeriodo"] == 1.0
        assert res_5.json()["data"][2]["matriculas"][0]["estudanteIntegral"] is None
        assert res_5.json()["data"][2]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_5.json()["data"][2]["matriculas"][0]["anoMatricula"] is None
        assert len(res_5.json()["data"][2]["outrasMatriculas"]) == 0
        # Skipping assertions on the remaining 497 elements. This limit of 3 elements can be increased in the configurations
        assert res_5.json()["pagination"]["total"] == 500.0
        assert res_5.json()["pagination"]["count"] == 500.0
        assert res_5.json()["pagination"]["per_page"] == 916.0
        assert res_5.json()["pagination"]["current_page"] == 1.0
        assert res_5.json()["pagination"]["total_pages"] == 1.0
        assert res_5.json()["pagination"]["links"]["previous"] is None
        assert res_5.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # 1 - (500) GET:/v1/estudantes/lote/{id}
    # 2 - (200) GET:/v1/profissionais/inep/{inep}
    # 3 - (400) GET:/v1/estudantes/lote/{id}/erros
    # 4 - (200) GET:/v1/estudantes/{cpfNis}
    # 5 - (500) GET:/v1/estudantes/inep/{inep}
    # 6 - (500) GET:/v1/profissionais/lote/{id}
    # 7 - (200) GET:/v1/profissionais/lote
    # 8 - (201) POST:/v1/profissionais/lote
    # Found 10 potential faults. Type-codes: 100, 200
    @timeout_decorator.timeout(60)
    def test_19_with500(self):
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes/lote/{id}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/701cc861-aaf0-46b4-8dfc-76f3233b2a33?page=941",
                    headers=headers)
        
        assert res_0.status_code == 500
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não foi possível recuperar o lote. ID fornecido: 701cc861-aaf0-46b4-8dfc-76f3233b2a33 Nenhum lote correspondente foi encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/inep/32043686?per_page=10",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_1.json()["data"]) == 0
        assert res_1.json()["pagination"]["total"] == 0.0
        assert res_1.json()["pagination"]["count"] == 0.0
        assert res_1.json()["pagination"]["per_page"] == 10.0
        assert res_1.json()["pagination"]["current_page"] == 1.0
        assert res_1.json()["pagination"]["total_pages"] == 1.0
        assert res_1.json()["pagination"]["links"]["previous"] is None
        assert res_1.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/11/erros",
                    headers=headers)
        
        assert res_2.status_code == 400
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "O ID fornecido não é um UUID válido. ID: 11"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/{cpfNis} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/67418207441",
                    headers=headers)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Dados obtidos com sucesso."
        assert res_3.json()["data"]["cpf"] == "67418207441"
        assert res_3.json()["data"]["nome"] == "Aaron Batista Pereira Sobrinho"
        assert res_3.json()["data"]["nomeSocial"] is None
        assert res_3.json()["data"]["numeroNIS"] == "84853845833"
        assert res_3.json()["data"]["rg"] == "0675978745578514"
        assert res_3.json()["data"]["orgaoEmissor"] == "SSP-SP"
        assert res_3.json()["data"]["cpfResponsavel"] == "14482802816"
        assert res_3.json()["data"]["nomeMaeEstudante"] == "Sra. Débora Teles Sobrinho"
        assert res_3.json()["data"]["numeroNISResponsavel"] == "47331976290"
        assert res_3.json()["data"]["dataNascimento"] == "2006-11-04"
        assert res_3.json()["data"]["logradouro"] == "Rua Largo Rafaela"
        assert res_3.json()["data"]["bairro"] == "São Padilha"
        assert res_3.json()["data"]["numero"] == "3010"
        assert res_3.json()["data"]["cep"] == "19167209"
        assert res_3.json()["data"]["municipio"] == 3550308.0
        assert res_3.json()["data"]["certidaoNascimento"] == "75486245619389196448258412702914"
        assert res_3.json()["data"]["cnh"] is None
        assert res_3.json()["data"]["uf"] == 35.0
        assert res_3.json()["data"]["racaCor"] == 1.0
        assert len(res_3.json()["data"]["tipoDeficiencia"]) == 0
        assert res_3.json()["data"]["genero"] == 0.0
        assert res_3.json()["data"]["telefone"] is None
        assert res_3.json()["data"]["email"] == "aaron.batista.pereira.sobrinho@fake.com"
        assert res_3.json()["data"]["situacaoCadastroValidado"] is None
        assert len(res_3.json()["data"]["matriculas"]) == 1
        assert res_3.json()["data"]["matriculas"][0]["codigoMatriculaSgp"] == 9969003.0
        assert res_3.json()["data"]["matriculas"][0]["codInstituicao"] == 134128.0
        assert res_3.json()["data"]["matriculas"][0]["dataInicioMatricula"] == "2024-01-01"
        assert res_3.json()["data"]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_3.json()["data"]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_3.json()["data"]["matriculas"][0]["situacaoMatricula"] == True
        assert res_3.json()["data"]["matriculas"][0]["serieAno"] == 25.0
        assert res_3.json()["data"]["matriculas"][0]["etapaEnsinoConsolidado"] == "Ensino Médio"
        assert res_3.json()["data"]["matriculas"][0]["matriculaRede"] is None
        assert res_3.json()["data"]["matriculas"][0]["deletadaEm"] is None
        assert res_3.json()["data"]["matriculas"][0]["inep"] == "32056524"
        assert res_3.json()["data"]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_3.json()["data"]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_3.json()["data"]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_3.json()["data"]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_3.json()["data"]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_3.json()["data"]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_3.json()["data"]["matriculas"][0]["estudanteIntegral"] is None
        assert res_3.json()["data"]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_3.json()["data"]["matriculas"][0]["anoMatricula"] is None
        assert len(res_3.json()["data"]["outrasMatriculas"]) == 0
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes/inep/{inep}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/Wot?" + 
                    "page=923&" + 
                    "situacao_matricula=EVOMASTER&" + 
                    "situacao_final=REPROVADAS",
                    headers=headers)
        
        assert res_4.status_code == 500
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "Ocorreu um erro."
        assert res_4.json()["errors"]["message"] == "Situação de matricula informada incorreta, possíveis valores: ATIVAS,INATIVAS"
        
        # Fault100. HTTP Status 500. GET:/v1/profissionais/lote/{id}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/1f523be1-d6d7-4e45-be35-6b170af35b38?per_page=523",
                    headers=headers)
        
        assert res_5.status_code == 500
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "Não foi possível recuperar o lote. ID fornecido: 1f523be1-d6d7-4e45-be35-6b170af35b38 Nenhum lote correspondente foi encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_6 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote?page=702",
                    headers=headers)
        
        assert res_6.status_code == 200
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == True
        assert res_6.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_6.json()["data"]) == 0
        assert res_6.json()["pagination"]["total"] == 2501.0
        assert res_6.json()["pagination"]["count"] == 0.0
        assert res_6.json()["pagination"]["per_page"] == 10.0
        assert res_6.json()["pagination"]["current_page"] == 702.0
        assert res_6.json()["pagination"]["total_pages"] == 251.0
        assert res_6.json()["pagination"]["links"]["previous"] == 701.0
        assert res_6.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"cpf\": \"TeOKSf_\", " + \
            " \"nome\": \"Aaron Arruda Leon\", " + \
            " \"dataNascimento\": \"2010-08-19\", " + \
            " \"genero\": 5, " + \
            " \"email\": \"joao.silva@email.com\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 2 " + \
            " ], " + \
            " \"sexo\": \"5\", " + \
            " \"logradouro\": \"Rua R. Bruna\", " + \
            " \"bairro\": \"São Ferraz\", " + \
            " \"uf\": 27, " + \
            " \"inep\": 33088152, " + \
            " \"formacoesAcademicas\": [], " + \
            " \"matriculaRede\": \"56789\", " + \
            " \"tipoVinculo\": 322, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"1910-13-23\" " + \
            " }, " + \
            " { " + \
            " \"cpf\": \"25206910694\", " + \
            " \"dataNascimento\": \"2009-12-06\", " + \
            " \"genero\": 3, " + \
            " \"racaCor\": 2, " + \
            " \"email\": \"dbJ\", " + \
            " \"bairro\": \"São Pacheco\", " + \
            " \"cep\": \"Q\", " + \
            " \"inep\": 33237204, " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"2026-05-17\", " + \
            " \"dataFim\": \"1984-01-02\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_7 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_7.status_code == 201
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == True
        assert res_7.json()["message"] == "Operação realizada com sucesso"
    
    
    # Calls:
    # 1 - (500) GET:/v1/estudantes
    # 2 - (200) GET:/v1/estudantes/inep/{inep}
    # 3 - (200) GET:/v1/estudantes/solicitacoes-alteracoes
    # 4 - (401) GET:/v1/profissionais
    # 5 - (200) GET:/v1/estudantes/lote
    # 6 - (400) GET:/v1/estudantes/lote/{id}/erros
    # 7 - (200) GET:/v1/estudantes/lote
    # 8 - (200) GET:/v1/estudantes/lote
    # 9 - (422) POST:/v1/profissionais
    # Found 18 potential faults. Type-codes: 100, 200
    # Using 2 examples:
    #   1
    #   Universidade Federal do Rio de Janeiro
    @timeout_decorator.timeout(60)
    def test_20_with500(self):
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?" + 
                    "page=752&" + 
                    "situacao_final=APROVADAS",
                    headers=headers)
        
        assert res_0.status_code == 500
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Ocorreu um erro inesperado."
        assert res_0.json()["errors"]["message"] == "O campo ano_matricula é obrigatório quando o campo situacao_final é informado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/inep/{inep} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/T?" + 
                    "page=1459614535&" + 
                    "per_page=523&" + 
                    "ano_matricula=2024&" + 
                    "situacao_final=REPROVADAS",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Estudantes obtidos com sucesso."
        assert len(res_1.json()["data"]) == 0
        assert res_1.json()["pagination"]["total"] == 0.0
        assert res_1.json()["pagination"]["count"] == 0.0
        assert res_1.json()["pagination"]["per_page"] == 523.0
        assert res_1.json()["pagination"]["current_page"] == 1.459614535E9
        assert res_1.json()["pagination"]["total_pages"] == 1.0
        assert res_1.json()["pagination"]["links"]["previous"] == 1.459614534E9
        assert res_1.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/solicitacoes-alteracoes?" + 
                    "per_page=15&" + 
                    "cpfAtual=93773545959",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Operação realizada com sucesso"
        assert len(res_2.json()["data"]) == 2
        assert res_2.json()["data"][0]["cpfAtual"] == "93773545959"
        assert res_2.json()["data"][0]["cpfNovo"] == "70460115243"
        assert res_2.json()["data"][0]["situacaoCpf"] is None
        assert res_2.json()["data"][0]["descricaoSituacaoCpf"] is None
        assert res_2.json()["data"][0]["tipoSituacaoCpf"] is None
        assert res_2.json()["data"][0]["nomeAtual"] == "Robin Greenfelder"
        assert res_2.json()["data"][0]["nomeNovo"] == "Robin Greenfelder"
        assert res_2.json()["data"][0]["nomeValidado"] is None
        assert res_2.json()["data"][0]["dataNascimentoAtual"] == "2024-12-28"
        assert res_2.json()["data"][0]["dataNascimentoNovo"] == "2024-12-28"
        assert res_2.json()["data"][0]["dataNascimentoValidada"] is None
        assert res_2.json()["data"][0]["nomeMaeEstudanteAtual"] == "Valentina Rezende"
        assert res_2.json()["data"][0]["nomeMaeEstudanteNovo"] == "Valentina Rezende"
        assert res_2.json()["data"][0]["nomeMaeEstudanteValidado"] is None
        assert res_2.json()["data"][0]["dataValidacaoCadastral"] is None
        assert res_2.json()["data"][1]["cpfAtual"] == "93773545959"
        assert res_2.json()["data"][1]["cpfNovo"] == "70460115243"
        assert res_2.json()["data"][1]["situacaoCpf"] is None
        assert res_2.json()["data"][1]["descricaoSituacaoCpf"] is None
        assert res_2.json()["data"][1]["tipoSituacaoCpf"] is None
        assert res_2.json()["data"][1]["nomeAtual"] == "Robin Greenfelder"
        assert res_2.json()["data"][1]["nomeNovo"] == "Robin Greenfelder"
        assert res_2.json()["data"][1]["nomeValidado"] is None
        assert res_2.json()["data"][1]["dataNascimentoAtual"] == "2024-12-28"
        assert res_2.json()["data"][1]["dataNascimentoNovo"] == "2024-12-28"
        assert res_2.json()["data"][1]["dataNascimentoValidada"] is None
        assert res_2.json()["data"][1]["nomeMaeEstudanteAtual"] == "Valentina Rezende"
        assert res_2.json()["data"][1]["nomeMaeEstudanteNovo"] == "Valentina Rezende"
        assert res_2.json()["data"][1]["nomeMaeEstudanteValidado"] is None
        assert res_2.json()["data"][1]["dataValidacaoCadastral"] is None
        assert res_2.json()["pagination"]["total"] == 2.0
        assert res_2.json()["pagination"]["count"] == 2.0
        assert res_2.json()["pagination"]["per_page"] == 15.0
        assert res_2.json()["pagination"]["current_page"] == 1.0
        assert res_2.json()["pagination"]["total_pages"] == 1.0
        assert res_2.json()["pagination"]["links"]["previous"] is None
        assert res_2.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> Response status 401 not defined for path '/v1/profissionais'.
        headers = {}
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?per_page=107",
                    headers=headers)
        
        assert res_3.status_code == 401
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "Não autorizado"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?per_page=686",
                    headers=headers)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_4.json()["data"]) == 686
        assert res_4.json()["data"][0]["dataEnvio"] == "2025-05-04 00:36:59"
        assert res_4.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_4.json()["data"][1]["dataEnvio"] == "2025-05-04 00:36:52"
        assert res_4.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_4.json()["data"][2]["dataEnvio"] == "2025-05-04 00:36:44"
        assert res_4.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 683 elements. This limit of 3 elements can be increased in the configurations
        assert res_4.json()["pagination"]["total"] == 9588.0
        assert res_4.json()["pagination"]["count"] == 686.0
        assert res_4.json()["pagination"]["per_page"] == 686.0
        assert res_4.json()["pagination"]["current_page"] == 1.0
        assert res_4.json()["pagination"]["total_pages"] == 14.0
        assert res_4.json()["pagination"]["links"]["previous"] is None
        assert res_4.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/fEGzvWwB6L7/erros?per_page=1258382974",
                    headers=headers)
        
        assert res_5.status_code == 400
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "O ID fornecido não é um UUID válido. ID: fEGzvWwB6L7"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_6 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?per_page=799",
                    headers=headers)
        
        assert res_6.status_code == 200
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == True
        assert res_6.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_6.json()["data"]) == 799
        assert res_6.json()["data"][0]["dataEnvio"] == "2025-05-04 00:36:59"
        assert res_6.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_6.json()["data"][1]["dataEnvio"] == "2025-05-04 00:36:52"
        assert res_6.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_6.json()["data"][2]["dataEnvio"] == "2025-05-04 00:36:44"
        assert res_6.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 796 elements. This limit of 3 elements can be increased in the configurations
        assert res_6.json()["pagination"]["total"] == 9588.0
        assert res_6.json()["pagination"]["count"] == 799.0
        assert res_6.json()["pagination"]["per_page"] == 799.0
        assert res_6.json()["pagination"]["current_page"] == 1.0
        assert res_6.json()["pagination"]["total_pages"] == 12.0
        assert res_6.json()["pagination"]["links"]["previous"] is None
        assert res_6.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_7 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?" + 
                    "page=818&" + 
                    "per_page=916",
                    headers=headers)
        
        assert res_7.status_code == 200
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == True
        assert res_7.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_7.json()["data"]) == 0
        assert res_7.json()["pagination"]["total"] == 9588.0
        assert res_7.json()["pagination"]["count"] == 0.0
        assert res_7.json()["pagination"]["per_page"] == 916.0
        assert res_7.json()["pagination"]["current_page"] == 818.0
        assert res_7.json()["pagination"]["total_pages"] == 11.0
        assert res_7.json()["pagination"]["links"]["previous"] == 817.0
        assert res_7.json()["pagination"]["links"]["next"] is None
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"tipoEnsinoMedio\": 1, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"genero\": 42, " + \
            " \"sexo\": \"3\", " + \
            " \"bairro\": \"o7gFgLJcUSB5k\", " + \
            " \"municipio\": 2408102, " + \
            " \"uf\": 843, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 1, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Rio de Janeiro\", " + \
            " \"anoConclusaoFormacaoAcademica\": 904 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 175, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 1, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"t1SS\", " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 200 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 1, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"f\" " + \
            " } " + \
            " ], " + \
            " \"codigoFuncao\": 24, " + \
            " \"cargaHoraria\": 40 " + \
            " } "
        headers['Accept'] = "application/json"
        res_8 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_8.status_code == 422
        assert "application/json" in res_8.headers["content-type"]
        assert res_8.json()["success"] == False
        assert res_8.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #1 ($nome) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
    
    
    # Calls:
    # (200) GET:/v1/profissionais/inep/{inep}
    # Found 2 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_21(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/inep/ewgjg0GuCcfGiYqC",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_0.json()["data"]) == 0
        assert res_0.json()["pagination"]["total"] == 0.0
        assert res_0.json()["pagination"]["count"] == 0.0
        assert res_0.json()["pagination"]["per_page"] == 10.0
        assert res_0.json()["pagination"]["current_page"] == 1.0
        assert res_0.json()["pagination"]["total_pages"] == 1.0
        assert res_0.json()["pagination"]["links"]["previous"] is None
        assert res_0.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # (200) GET:/v1/profissionais
    # Found 5 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_22(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_0.json()["data"]) == 3
        assert res_0.json()["data"][0]["tipoEnsinoMedio"] == 2.0
        assert res_0.json()["data"][0]["nivelEscolaridade"] == 10.0
        assert res_0.json()["data"][0]["cpf"] == "43839402000"
        assert res_0.json()["data"][0]["nome"] == "João da Silva 2"
        assert res_0.json()["data"][0]["dataNascimento"] == "1985-06-15"
        assert res_0.json()["data"][0]["genero"] == 1.0
        assert res_0.json()["data"][0]["racaCor"] == 2.0
        assert res_0.json()["data"][0]["email"] == "joao.silva@email.com"
        assert res_0.json()["data"][0]["telefone"] is None
        assert res_0.json()["data"][0]["nomeSocial"] is None
        assert res_0.json()["data"][0]["logradouro"] == "Rua das Flores"
        assert res_0.json()["data"][0]["bairro"] == "Centro"
        assert res_0.json()["data"][0]["numero"] == "123"
        assert res_0.json()["data"][0]["cep"] == "01001000"
        assert res_0.json()["data"][0]["municipio"] == 2700409.0
        assert res_0.json()["data"][0]["uf"] == 27.0
        assert res_0.json()["data"][0]["codigoInstituicao"] == 6.0
        assert res_0.json()["data"][0]["cargaHoraria"] == 40.0
        assert res_0.json()["data"][0]["situacaoAtiva"] == True
        assert res_0.json()["data"][0]["dataIngresso"] == "2015-02-10"
        assert res_0.json()["data"][0]["dataFim"] is None
        assert res_0.json()["data"][0]["codigoFuncao"] == 2.0
        assert res_0.json()["data"][0]["matriculaRede"] == "56789"
        assert res_0.json()["data"][0]["tipoVinculo"] == 0.0
        assert res_0.json()["data"][0]["inep"] == "27014088"
        assert len(res_0.json()["data"][0]["tipoDeficiencia"]) == 3
        assert res_0.json()["data"][0]["tipoDeficiencia"][0] == 1.0
        assert res_0.json()["data"][0]["tipoDeficiencia"][1] == 2.0
        assert res_0.json()["data"][0]["tipoDeficiencia"][2] == 3.0
        assert len(res_0.json()["data"][0]["formacoesAcademicas"]) == 2
        assert res_0.json()["data"][0]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_0.json()["data"][0]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_0.json()["data"][0]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_0.json()["data"][0]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_0.json()["data"][0]["formacoesAcademicas"][0]["principal"] is None
        assert res_0.json()["data"][0]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_0.json()["data"][0]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_0.json()["data"][0]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_0.json()["data"][0]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_0.json()["data"][0]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_0.json()["data"][0]["formacoesAcademicas"][1]["principal"] is None
        assert res_0.json()["data"][0]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_0.json()["data"][1]["tipoEnsinoMedio"] == 2.0
        assert res_0.json()["data"][1]["nivelEscolaridade"] == 10.0
        assert res_0.json()["data"][1]["cpf"] == "33722248094"
        assert res_0.json()["data"][1]["nome"] == "João da Silva 2"
        assert res_0.json()["data"][1]["dataNascimento"] == "1985-06-15"
        assert res_0.json()["data"][1]["genero"] == 1.0
        assert res_0.json()["data"][1]["racaCor"] == 2.0
        assert res_0.json()["data"][1]["email"] == "joao.silva@email.com"
        assert res_0.json()["data"][1]["telefone"] is None
        assert res_0.json()["data"][1]["nomeSocial"] is None
        assert res_0.json()["data"][1]["logradouro"] == "Rua das Flores"
        assert res_0.json()["data"][1]["bairro"] == "Centro"
        assert res_0.json()["data"][1]["numero"] == "123"
        assert res_0.json()["data"][1]["cep"] == "01001000"
        assert res_0.json()["data"][1]["municipio"] == 2700409.0
        assert res_0.json()["data"][1]["uf"] == 27.0
        assert res_0.json()["data"][1]["codigoInstituicao"] == 6.0
        assert res_0.json()["data"][1]["cargaHoraria"] == 40.0
        assert res_0.json()["data"][1]["situacaoAtiva"] == True
        assert res_0.json()["data"][1]["dataIngresso"] == "2015-02-10"
        assert res_0.json()["data"][1]["dataFim"] is None
        assert res_0.json()["data"][1]["codigoFuncao"] == 2.0
        assert res_0.json()["data"][1]["matriculaRede"] == "56789"
        assert res_0.json()["data"][1]["tipoVinculo"] == 0.0
        assert res_0.json()["data"][1]["inep"] == "27014088"
        assert len(res_0.json()["data"][1]["tipoDeficiencia"]) == 3
        assert res_0.json()["data"][1]["tipoDeficiencia"][0] == 1.0
        assert res_0.json()["data"][1]["tipoDeficiencia"][1] == 2.0
        assert res_0.json()["data"][1]["tipoDeficiencia"][2] == 3.0
        assert len(res_0.json()["data"][1]["formacoesAcademicas"]) == 2
        assert res_0.json()["data"][1]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_0.json()["data"][1]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_0.json()["data"][1]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_0.json()["data"][1]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_0.json()["data"][1]["formacoesAcademicas"][0]["principal"] is None
        assert res_0.json()["data"][1]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_0.json()["data"][1]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_0.json()["data"][1]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_0.json()["data"][1]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_0.json()["data"][1]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_0.json()["data"][1]["formacoesAcademicas"][1]["principal"] is None
        assert res_0.json()["data"][1]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_0.json()["data"][2]["tipoEnsinoMedio"] == 2.0
        assert res_0.json()["data"][2]["nivelEscolaridade"] == 10.0
        assert res_0.json()["data"][2]["cpf"] == "31863200037"
        assert res_0.json()["data"][2]["nome"] == "João da Silva 2"
        assert res_0.json()["data"][2]["dataNascimento"] == "1985-06-15"
        assert res_0.json()["data"][2]["genero"] == 1.0
        assert res_0.json()["data"][2]["racaCor"] == 2.0
        assert res_0.json()["data"][2]["email"] == "joao.silva@email.com"
        assert res_0.json()["data"][2]["telefone"] is None
        assert res_0.json()["data"][2]["nomeSocial"] is None
        assert res_0.json()["data"][2]["logradouro"] == "Rua das Flores"
        assert res_0.json()["data"][2]["bairro"] == "Centro"
        assert res_0.json()["data"][2]["numero"] == "123"
        assert res_0.json()["data"][2]["cep"] == "01001000"
        assert res_0.json()["data"][2]["municipio"] == 2700409.0
        assert res_0.json()["data"][2]["uf"] == 27.0
        assert res_0.json()["data"][2]["codigoInstituicao"] == 6.0
        assert res_0.json()["data"][2]["cargaHoraria"] == 40.0
        assert res_0.json()["data"][2]["situacaoAtiva"] == True
        assert res_0.json()["data"][2]["dataIngresso"] == "2015-02-10"
        assert res_0.json()["data"][2]["dataFim"] is None
        assert res_0.json()["data"][2]["codigoFuncao"] == 2.0
        assert res_0.json()["data"][2]["matriculaRede"] == "56789"
        assert res_0.json()["data"][2]["tipoVinculo"] == 0.0
        assert res_0.json()["data"][2]["inep"] == "27014088"
        assert len(res_0.json()["data"][2]["tipoDeficiencia"]) == 3
        assert res_0.json()["data"][2]["tipoDeficiencia"][0] == 1.0
        assert res_0.json()["data"][2]["tipoDeficiencia"][1] == 2.0
        assert res_0.json()["data"][2]["tipoDeficiencia"][2] == 3.0
        assert len(res_0.json()["data"][2]["formacoesAcademicas"]) == 2
        assert res_0.json()["data"][2]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_0.json()["data"][2]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_0.json()["data"][2]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_0.json()["data"][2]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_0.json()["data"][2]["formacoesAcademicas"][0]["principal"] is None
        assert res_0.json()["data"][2]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_0.json()["data"][2]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_0.json()["data"][2]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_0.json()["data"][2]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_0.json()["data"][2]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_0.json()["data"][2]["formacoesAcademicas"][1]["principal"] is None
        assert res_0.json()["data"][2]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_0.json()["pagination"]["total"] == 3.0
        assert res_0.json()["pagination"]["count"] == 3.0
        assert res_0.json()["pagination"]["per_page"] == 10.0
        assert res_0.json()["pagination"]["current_page"] == 1.0
        assert res_0.json()["pagination"]["total_pages"] == 1.0
        assert res_0.json()["pagination"]["links"]["previous"] is None
        assert res_0.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # (200) GET:/v1/estudantes/lote
    # Found 3 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_23(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?" + 
                    "page=701&" + 
                    "per_page=523",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_0.json()["data"]) == 0
        assert res_0.json()["pagination"]["total"] == 9581.0
        assert res_0.json()["pagination"]["count"] == 0.0
        assert res_0.json()["pagination"]["per_page"] == 523.0
        assert res_0.json()["pagination"]["current_page"] == 701.0
        assert res_0.json()["pagination"]["total_pages"] == 19.0
        assert res_0.json()["pagination"]["links"]["previous"] == 700.0
        assert res_0.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # 1 - (201) POST:/v1/estudantes/lote
    # 2 - (201) POST:/v1/estudantes/lote
    # 3 - (200) GET:/v1/estudantes/lote
    # Found 3 potential faults of type-code 200
    # Using 2 examples:
    #   2025
    #   25
    @timeout_decorator.timeout(60)
    def test_24(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpfResponsavel\": \"4fNhktd\", " + \
            " \"numeroNISResponsavel\": \"l\", " + \
            " \"nomeMaeEstudante\": \"I3J90\", " + \
            " \"cpf\": \"Ca5EZ\", " + \
            " \"genero\": 8, " + \
            " \"email\": \"j80lvnow0WFznm\", " + \
            " \"telefone\": \"3333333\", " + \
            " \"nomeSocial\": \"YXWGpw\", " + \
            " \"tipoDeficiencia\": [], " + \
            " \"sexo\": \"5\", " + \
            " \"rg\": \"0220843070724592\", " + \
            " \"orgaoEmissor\": \"SSP-MG\", " + \
            " \"certidaoNascimento\": \"0h7oIq\", " + \
            " \"bairro\": \"São Rangel\", " + \
            " \"numero\": \"EW\", " + \
            " \"uf\": 31, " + \
            " \"serieAno\": 25, " + \
            " \"matriculaRede\": \"7\", " + \
            " \"dataInicioPeriodoLetivo\": \"2034-03-23\", " + \
            " \"anoMatricula\": 115 " + \
            " }, " + \
            " { " + \
            " \"cpf\": \"67418207441\", " + \
            " \"nome\": \"Aaron Barreto Cruz\", " + \
            " \"genero\": 9, " + \
            " \"email\": \"aaron.andre.garcia.sobrinho@fake.com\", " + \
            " \"numeroNIS\": \"mxhzBGw\", " + \
            " \"rg\": \"1750450009640766\", " + \
            " \"cnh\": \"56267273661\", " + \
            " \"logradouro\": \"Rua Av. Saito\", " + \
            " \"numero\": \"2\", " + \
            " \"municipio\": 4314902, " + \
            " \"uf\": 33, " + \
            " \"serieAno\": 829, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 3, " + \
            " \"estudanteIntegral\": 0, " + \
            " \"anoMatricula\": 2024 " + \
            " }, " + \
            " { " + \
            " \"numeroNISResponsavel\": \"00933947631\", " + \
            " \"dataNascimento\": \"2009-05-08\", " + \
            " \"genero\": 8, " + \
            " \"nomeSocial\": \"8hbo50Mnoym\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 2 " + \
            " ], " + \
            " \"sexo\": \"0\", " + \
            " \"rg\": \"1473594458106906\", " + \
            " \"orgaoEmissor\": \"SSP-AL\", " + \
            " \"certidaoNascimento\": \"83524105764187835788705446821213\", " + \
            " \"cnh\": \"02342004738\", " + \
            " \"logradouro\": \"m\", " + \
            " \"bairro\": \"São Pena\", " + \
            " \"numero\": \"KZS\", " + \
            " \"municipio\": 339, " + \
            " \"instituicao\": 93416, " + \
            " \"inep\": 32039727, " + \
            " \"formaOrganizacaoTurma\": 1, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 4, " + \
            " \"estudanteAnoPeriodo\": 42, " + \
            " \"anoMatricula\": 2025 " + \
            " }, " + \
            " { " + \
            " \"numeroNISResponsavel\": \"37443639786\", " + \
            " \"nomeMaeEstudante\": \"Srta. Gabrielly Dias Martines\", " + \
            " \"cpf\": \"33722248094\", " + \
            " \"nome\": \"Aaron Benjamin Martines\", " + \
            " \"dataNascimento\": \"2009-09-04\", " + \
            " \"genero\": 5, " + \
            " \"racaCor\": 5, " + \
            " \"sexo\": \"4\", " + \
            " \"rg\": \"1081200005585622\", " + \
            " \"orgaoEmissor\": \"Nt Uteu4fY\", " + \
            " \"cnh\": \"J2HjDvJv0\", " + \
            " \"bairro\": \"São Mendes\", " + \
            " \"dataInicioMatricula\": \"2033-01-11\", " + \
            " \"instituicao\": 94474, " + \
            " \"dataInicioPeriodoLetivo\": \"2087-01-32\", " + \
            " \"formaOrganizacaoTurma\": 437, " + \
            " \"estudanteAnoPeriodo\": 42, " + \
            " \"estudanteIntegral\": 0, " + \
            " \"anoMatricula\": 83 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpfResponsavel\": \"17202839318\", " + \
            " \"nome\": \"Aaron Carmona\", " + \
            " \"genero\": 3, " + \
            " \"tipoDeficiencia\": [ " + \
            " 1 " + \
            " ], " + \
            " \"sexo\": \"2\", " + \
            " \"numeroNIS\": \"14745302742\", " + \
            " \"rg\": \"2865521214093470\", " + \
            " \"certidaoNascimento\": \"TdHGULQDbkEa4Aws\", " + \
            " \"cnh\": \"01354673004\", " + \
            " \"logradouro\": \"Rua Rua Fernandes\", " + \
            " \"numero\": \"2113\", " + \
            " \"cep\": \"23192536\", " + \
            " \"estudantePpl\": 42, " + \
            " \"instituicao\": 28146, " + \
            " \"inep\": 812, " + \
            " \"dataInicioPeriodoLetivo\": \"1988-07-30\", " + \
            " \"formaOrganizacaoTurma\": 6, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 4, " + \
            " \"estudanteIntegral\": 42 " + \
            " }, " + \
            " { " + \
            " \"nomeMaeEstudante\": \"Yasmin Franciele Aguiar\", " + \
            " \"cpf\": \"eDbxLX_V\", " + \
            " \"dataNascimento\": \"2009-08-09\", " + \
            " \"telefone\": \"11969630845\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 2, " + \
            " 3, " + \
            " 3, " + \
            " 605, " + \
            " 3 " + \
            " ], " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"numeroNIS\": \"YrBA7\", " + \
            " \"orgaoEmissor\": \"SSP-PE\", " + \
            " \"certidaoNascimento\": \"34700195315351621224949852784761\", " + \
            " \"logradouro\": \"Rua R. Kauan Jimenes\", " + \
            " \"numero\": \"97579\", " + \
            " \"cep\": \"93918982\", " + \
            " \"estudantePpl\": 0, " + \
            " \"serieAno\": 75, " + \
            " \"dataInicioPeriodoLetivo\": \"2072-12-30\", " + \
            " \"formaOrganizacaoTurma\": 4, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 1, " + \
            " \"estudanteAnoPeriodo\": 3, " + \
            " \"estudanteIntegral\": 0, " + \
            " \"anoMatricula\": 161 " + \
            " }, " + \
            " { " + \
            " \"nomeMaeEstudante\": \"v8LdTQfRZmfL\", " + \
            " \"cpf\": \"76394307041\", " + \
            " \"racaCor\": 1, " + \
            " \"rg\": \"6221651994329059\", " + \
            " \"orgaoEmissor\": \"\", " + \
            " \"logradouro\": \"Rua Av. Chaves\", " + \
            " \"numero\": \"aC\", " + \
            " \"cep\": \"40417043\", " + \
            " \"uf\": 11, " + \
            " \"matriculaRede\": \"e2XouiaD2aNA 8\", " + \
            " \"instituicao\": 278, " + \
            " \"inep\": 29182697, " + \
            " \"formaOrganizacaoTurma\": 844, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 3, " + \
            " \"estudanteAnoPeriodo\": 1, " + \
            " \"estudanteIntegral\": 42 " + \
            " }, " + \
            " { " + \
            " \"numeroNISResponsavel\": \"65222812588\", " + \
            " \"nomeMaeEstudante\": \"Srta. Alana Feliciano Filho\", " + \
            " \"cpf\": \"\", " + \
            " \"nome\": \"Aaron Cervantes Mascarenhas\", " + \
            " \"dataNascimento\": \"2005-05-22\", " + \
            " \"genero\": 1, " + \
            " \"telefone\": \"bOvWFECC1W\", " + \
            " \"nomeSocial\": \"test\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 2, " + \
            " 2, " + \
            " 2, " + \
            " 3 " + \
            " ], " + \
            " \"rg\": \"lTq\", " + \
            " \"orgaoEmissor\": \"Nt Uteu4fY\", " + \
            " \"cnh\": \"3333333\", " + \
            " \"logradouro\": \"QDl_rGLLOoN2l\", " + \
            " \"cep\": \"49272836\", " + \
            " \"municipio\": 3304557, " + \
            " \"instituicao\": 72889, " + \
            " \"inep\": 33, " + \
            " \"formaOrganizacaoTurma\": 6, " + \
            " \"estudanteIntegral\": 42, " + \
            " \"anoMatricula\": 2024 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_1.status_code == 201
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_2.json()["data"]) == 10
        assert res_2.json()["data"][0]["dataEnvio"] == "2025-05-04 00:36:37"
        assert res_2.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_2.json()["data"][1]["dataEnvio"] == "2025-05-04 00:36:33"
        assert res_2.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_2.json()["data"][2]["dataEnvio"] == "2025-05-04 00:34:43"
        assert res_2.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_2.json()["pagination"]["total"] == 9585.0
        assert res_2.json()["pagination"]["count"] == 10.0
        assert res_2.json()["pagination"]["per_page"] == 10.0
        assert res_2.json()["pagination"]["current_page"] == 1.0
        assert res_2.json()["pagination"]["total_pages"] == 959.0
        assert res_2.json()["pagination"]["links"]["previous"] is None
        assert res_2.json()["pagination"]["links"]["next"] == 2.0
    
    
    # Calls:
    # 1 - (201) POST:/v1/estudantes/lote
    # 2 - (200) GET:/v1/estudantes/lote/{id}
    # Found 1 potential fault of type-code 200
    # Using 1 example:
    #   25
    @timeout_decorator.timeout(60)
    def test_25(self):
        
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpfResponsavel\": \"lyWG7RPXpQj\", " + \
            " \"cpf\": \"rv\", " + \
            " \"nome\": \"Aaron Antônio Branco\", " + \
            " \"genero\": 6, " + \
            " \"tipoDeficiencia\": [], " + \
            " \"numeroNIS\": \"49051428566\", " + \
            " \"logradouro\": \"Rua R. Meireles\", " + \
            " \"cep\": \"19292439\", " + \
            " \"uf\": 43, " + \
            " \"estudantePpl\": 0, " + \
            " \"serieAno\": 41, " + \
            " \"matriculaRede\": \"vzcpW5fHwJHf9\", " + \
            " \"instituicao\": 94518, " + \
            " \"inep\": 12131229, " + \
            " \"formaOrganizacaoTurma\": 6, " + \
            " \"estudanteAnoPeriodo\": 2, " + \
            " \"estudanteIntegral\": 42, " + \
            " \"anoMatricula\": 2024 " + \
            " }, " + \
            " { " + \
            " \"genero\": 4, " + \
            " \"racaCor\": 4, " + \
            " \"email\": \"\", " + \
            " \"telefone\": \"11933018135\", " + \
            " \"orgaoEmissor\": \"SSP-SP\", " + \
            " \"cnh\": \"3333333\", " + \
            " \"numero\": \"587\", " + \
            " \"cep\": \"29920193\", " + \
            " \"uf\": 43, " + \
            " \"serieAno\": 25, " + \
            " \"instituicao\": 742, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 1, " + \
            " \"estudanteAnoPeriodo\": 1 " + \
            " }, " + \
            " { " + \
            " \"numeroNISResponsavel\": \"gTnpy\", " + \
            " \"nomeMaeEstudante\": \"Dr. Isabel Franco Pontes\", " + \
            " \"cpf\": \"50555144500\", " + \
            " \"dataNascimento\": \"6tB0gnZWCb71Ny\", " + \
            " \"racaCor\": 42, " + \
            " \"email\": \"aaron.carmona.queiros@fake.com\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1, " + \
            " 1, " + \
            " 1, " + \
            " 2 " + \
            " ], " + \
            " \"sexo\": \"1\", " + \
            " \"rg\": \"3801670495126577\", " + \
            " \"cnh\": \"01354673004\", " + \
            " \"logradouro\": \"Y_ZPJBchYGrf4\", " + \
            " \"cep\": \"30125063\", " + \
            " \"uf\": 26, " + \
            " \"estudantePpl\": 2, " + \
            " \"serieAno\": 41, " + \
            " \"matriculaRede\": \"kNkOUDA_\", " + \
            " \"formaOrganizacaoTurma\": 397, " + \
            " \"estudanteAnoPeriodo\": 1, " + \
            " \"estudanteIntegral\": 0, " + \
            " \"anoMatricula\": 2024 " + \
            " }, " + \
            " { " + \
            " \"numeroNISResponsavel\": \"94149055437\", " + \
            " \"nomeMaeEstudante\": \"Srta. Hosana Ortega\", " + \
            " \"dataNascimento\": \"2009-09-16\", " + \
            " \"genero\": 4, " + \
            " \"racaCor\": 42, " + \
            " \"nomeSocial\": \"COm8Noy9Ah7RO\", " + \
            " \"sexo\": \"3\", " + \
            " \"numeroNIS\": \"41766633133\", " + \
            " \"orgaoEmissor\": \"SSP-MG\", " + \
            " \"bairro\": \"São Tamoio\", " + \
            " \"municipio\": 2611606, " + \
            " \"uf\": 26, " + \
            " \"estudantePpl\": 1, " + \
            " \"matriculaRede\": \"T3biI\", " + \
            " \"inep\": 41075412, " + \
            " \"estudanteAnoPeriodo\": 1, " + \
            " \"estudanteIntegral\": 42, " + \
            " \"anoMatricula\": 2024 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        location_lote = "/v1/estudantes/lote" + "/" + str(res_0.json()['id'])
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(resolve_location(location_lote, self.baseUrlOfSut + str("/v1/estudantes/lote/942b1538-4590-4ead-a800-0b5832da4b13")),
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["status_processamento"] == "Enviado"
        assert res_1.json()["message"] == "Lote recuperado com sucesso. ID: 1512a7c1-e013-40d1-92cf-97aa1b61df10"
    
    
    # Calls:
    # (200) GET:/v1/estudantes
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_26(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?per_page=126",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_0.json()["data"]) == 126
        assert res_0.json()["data"][0]["cpf"] == "49255179888"
        assert res_0.json()["data"][0]["nome"] == "111"
        assert res_0.json()["data"][0]["nomeSocial"] == "test"
        assert res_0.json()["data"][0]["numeroNIS"] is None
        assert res_0.json()["data"][0]["rg"] == "22307981"
        assert res_0.json()["data"][0]["orgaoEmissor"] == "SSP"
        assert res_0.json()["data"][0]["cpfResponsavel"] == "48405399283"
        assert res_0.json()["data"][0]["nomeMaeEstudante"] == "Valentina Rezende"
        assert res_0.json()["data"][0]["numeroNISResponsavel"] == "64668522654"
        assert res_0.json()["data"][0]["dataNascimento"] == "2024-12-28"
        assert res_0.json()["data"][0]["logradouro"] == "Rua teste"
        assert res_0.json()["data"][0]["bairro"] == "Santa Lucia"
        assert res_0.json()["data"][0]["numero"] == "220"
        assert res_0.json()["data"][0]["cep"] == "57018780"
        assert res_0.json()["data"][0]["municipio"] == 1100940.0
        assert res_0.json()["data"][0]["certidaoNascimento"] == "33333333"
        assert res_0.json()["data"][0]["cnh"] == "3333333"
        assert res_0.json()["data"][0]["uf"] == 11.0
        assert res_0.json()["data"][0]["racaCor"] == 3.0
        assert len(res_0.json()["data"][0]["tipoDeficiencia"]) == 3
        assert res_0.json()["data"][0]["tipoDeficiencia"][0] == 1.0
        assert res_0.json()["data"][0]["tipoDeficiencia"][1] == 2.0
        assert res_0.json()["data"][0]["tipoDeficiencia"][2] == 3.0
        assert res_0.json()["data"][0]["genero"] == 3.0
        assert res_0.json()["data"][0]["telefone"] == "3333333"
        assert res_0.json()["data"][0]["email"] == "AFTER-TWO@AFTER-TWO.com"
        assert res_0.json()["data"][0]["situacaoCadastroValidado"] == 3.0
        assert len(res_0.json()["data"][0]["matriculas"]) == 1
        assert res_0.json()["data"][0]["matriculas"][0]["codigoMatriculaSgp"] == 1733024.0
        assert res_0.json()["data"][0]["matriculas"][0]["codInstituicao"] == 7259.0
        assert res_0.json()["data"][0]["matriculas"][0]["dataInicioMatricula"] == "2024-09-28"
        assert res_0.json()["data"][0]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_0.json()["data"][0]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["situacaoMatricula"] == True
        assert res_0.json()["data"][0]["matriculas"][0]["serieAno"] == 74.0
        assert res_0.json()["data"][0]["matriculas"][0]["etapaEnsinoConsolidado"] == "Formação inicial continuada ou qualificação profissional (FIC)"
        assert res_0.json()["data"][0]["matriculas"][0]["matriculaRede"] == "Teste Ricardo"
        assert res_0.json()["data"][0]["matriculas"][0]["deletadaEm"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["inep"] == "12005037"
        assert res_0.json()["data"][0]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["dataInicioPeriodoLetivo"] == "2024-09-28"
        assert res_0.json()["data"][0]["matriculas"][0]["formaOrganizacaoTurma"] == 1.0
        assert res_0.json()["data"][0]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] == 0.0
        assert res_0.json()["data"][0]["matriculas"][0]["estudanteAnoPeriodo"] == 1.0
        assert res_0.json()["data"][0]["matriculas"][0]["estudanteIntegral"] == True
        assert res_0.json()["data"][0]["matriculas"][0]["dataAtivacaoMatricula"] == "2024-09-27 00:00:00"
        assert res_0.json()["data"][0]["matriculas"][0]["anoMatricula"] == 2024.0
        assert len(res_0.json()["data"][0]["outrasMatriculas"]) == 0
        assert res_0.json()["data"][1]["cpf"] == "67089268578"
        assert res_0.json()["data"][1]["nome"] == "6cc97vMeCP9KgSI"
        assert res_0.json()["data"][1]["nomeSocial"] == "rRAEEBPUPdYf"
        assert res_0.json()["data"][1]["numeroNIS"] == "30183310316"
        assert res_0.json()["data"][1]["rg"] == "53669048"
        assert res_0.json()["data"][1]["orgaoEmissor"] == "i4tf"
        assert res_0.json()["data"][1]["cpfResponsavel"] == "52008260631"
        assert res_0.json()["data"][1]["nomeMaeEstudante"] == "7aTq92Zi"
        assert res_0.json()["data"][1]["numeroNISResponsavel"] == "11273745692"
        assert res_0.json()["data"][1]["dataNascimento"] == "2008-10-29"
        assert res_0.json()["data"][1]["logradouro"] == "rWjgYPU1P8"
        assert res_0.json()["data"][1]["bairro"] == "G5tQ1ZJN0"
        assert res_0.json()["data"][1]["numero"] == "55"
        assert res_0.json()["data"][1]["cep"] == "19141821"
        assert res_0.json()["data"][1]["municipio"] == 4200705.0
        assert res_0.json()["data"][1]["certidaoNascimento"] == "373271505447"
        assert res_0.json()["data"][1]["cnh"] == "56267273661"
        assert res_0.json()["data"][1]["uf"] == 42.0
        assert res_0.json()["data"][1]["racaCor"] == 0.0
        assert len(res_0.json()["data"][1]["tipoDeficiencia"]) == 3
        assert res_0.json()["data"][1]["tipoDeficiencia"][0] == 1.0
        assert res_0.json()["data"][1]["tipoDeficiencia"][1] == 2.0
        assert res_0.json()["data"][1]["tipoDeficiencia"][2] == 3.0
        assert res_0.json()["data"][1]["genero"] == 4.0
        assert res_0.json()["data"][1]["telefone"] == "11969630845"
        assert res_0.json()["data"][1]["email"] == "RTT0VngF3Deo0O@example.com"
        assert res_0.json()["data"][1]["situacaoCadastroValidado"] == 4.0
        assert len(res_0.json()["data"][1]["matriculas"]) == 1
        assert res_0.json()["data"][1]["matriculas"][0]["codigoMatriculaSgp"] == 1.020298E7
        assert res_0.json()["data"][1]["matriculas"][0]["codInstituicao"] == 81776.0
        assert res_0.json()["data"][1]["matriculas"][0]["dataInicioMatricula"] == "2024-02-19"
        assert res_0.json()["data"][1]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_0.json()["data"][1]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["situacaoMatricula"] == True
        assert res_0.json()["data"][1]["matriculas"][0]["serieAno"] == 71.0
        assert res_0.json()["data"][1]["matriculas"][0]["etapaEnsinoConsolidado"] == "EJA - Ensino Médio"
        assert res_0.json()["data"][1]["matriculas"][0]["matriculaRede"] == "jvjvjv1"
        assert res_0.json()["data"][1]["matriculas"][0]["deletadaEm"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["inep"] == "26540720"
        assert res_0.json()["data"][1]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["dataInicioPeriodoLetivo"] == "2024-01-29"
        assert res_0.json()["data"][1]["matriculas"][0]["formaOrganizacaoTurma"] == 1.0
        assert res_0.json()["data"][1]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] == 3.0
        assert res_0.json()["data"][1]["matriculas"][0]["estudanteAnoPeriodo"] == 3.0
        assert res_0.json()["data"][1]["matriculas"][0]["estudanteIntegral"] == True
        assert res_0.json()["data"][1]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["anoMatricula"] == 2024.0
        assert len(res_0.json()["data"][1]["outrasMatriculas"]) == 0
        assert res_0.json()["data"][2]["cpf"] == "81601036620"
        assert res_0.json()["data"][2]["nome"] == "7nCcq XDiMfCbaJ0cFs"
        assert res_0.json()["data"][2]["nomeSocial"] == "YXWGpw"
        assert res_0.json()["data"][2]["numeroNIS"] == "34442480673"
        assert res_0.json()["data"][2]["rg"] == "21577661"
        assert res_0.json()["data"][2]["orgaoEmissor"] == "vC2a0H9Lv4"
        assert res_0.json()["data"][2]["cpfResponsavel"] == "85307915250"
        assert res_0.json()["data"][2]["nomeMaeEstudante"] == "uoUPQKkc8iCGVq2wAS1"
        assert res_0.json()["data"][2]["numeroNISResponsavel"] == "27296692788"
        assert res_0.json()["data"][2]["dataNascimento"] == "1998-08-08"
        assert res_0.json()["data"][2]["logradouro"] == "01PKhhqGroyvggLAFUEoOHr3Q0KI"
        assert res_0.json()["data"][2]["bairro"] == "nL4bOxhpEiU2PjnP"
        assert res_0.json()["data"][2]["numero"] == "02"
        assert res_0.json()["data"][2]["cep"] == "76984525"
        assert res_0.json()["data"][2]["municipio"] == 4200705.0
        assert res_0.json()["data"][2]["certidaoNascimento"] == "3679215604607"
        assert res_0.json()["data"][2]["cnh"] == "02342004738"
        assert res_0.json()["data"][2]["uf"] == 42.0
        assert res_0.json()["data"][2]["racaCor"] == 2.0
        assert len(res_0.json()["data"][2]["tipoDeficiencia"]) == 3
        assert res_0.json()["data"][2]["tipoDeficiencia"][0] == 1.0
        assert res_0.json()["data"][2]["tipoDeficiencia"][1] == 2.0
        assert res_0.json()["data"][2]["tipoDeficiencia"][2] == 3.0
        assert res_0.json()["data"][2]["genero"] == 3.0
        assert res_0.json()["data"][2]["telefone"] == "11949911257"
        assert res_0.json()["data"][2]["email"] == "4mphnZDvXrC@example.com"
        assert res_0.json()["data"][2]["situacaoCadastroValidado"] == 4.0
        assert len(res_0.json()["data"][2]["matriculas"]) == 1
        assert res_0.json()["data"][2]["matriculas"][0]["codigoMatriculaSgp"] == 1.0202989E7
        assert res_0.json()["data"][2]["matriculas"][0]["codInstituicao"] == 81776.0
        assert res_0.json()["data"][2]["matriculas"][0]["dataInicioMatricula"] == "2024-11-01"
        assert res_0.json()["data"][2]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_0.json()["data"][2]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["situacaoMatricula"] == True
        assert res_0.json()["data"][2]["matriculas"][0]["serieAno"] == 58.0
        assert res_0.json()["data"][2]["matriculas"][0]["etapaEnsinoConsolidado"] == "Educação de Jovens e Adultos (EJA) - Fundamental"
        assert res_0.json()["data"][2]["matriculas"][0]["matriculaRede"] == "e2XouiaD2aNA 8"
        assert res_0.json()["data"][2]["matriculas"][0]["deletadaEm"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["inep"] == "26540720"
        assert res_0.json()["data"][2]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["dataInicioPeriodoLetivo"] == "2024-10-22"
        assert res_0.json()["data"][2]["matriculas"][0]["formaOrganizacaoTurma"] == 6.0
        assert res_0.json()["data"][2]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] == 4.0
        assert res_0.json()["data"][2]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["estudanteIntegral"] == False
        assert res_0.json()["data"][2]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["anoMatricula"] is None
        assert len(res_0.json()["data"][2]["outrasMatriculas"]) == 0
        # Skipping assertions on the remaining 123 elements. This limit of 3 elements can be increased in the configurations
        assert res_0.json()["pagination"]["total"] == 598780.0
        assert res_0.json()["pagination"]["count"] == 126.0
        assert res_0.json()["pagination"]["per_page"] == 126.0
        assert res_0.json()["pagination"]["current_page"] == 1.0
        assert res_0.json()["pagination"]["total_pages"] == 4753.0
        assert res_0.json()["pagination"]["links"]["previous"] is None
        assert res_0.json()["pagination"]["links"]["next"] == 2.0
    
    
    # Calls:
    # 1 - (422) POST:/v1/profissionais
    # 2 - (422) POST:/v1/profissionais
    # 3 - (422) POST:/v1/profissionais
    # 4 - (422) POST:/v1/profissionais
    # 5 - (200) GET:/v1/profissionais
    # Found 5 potential faults of type-code 200
    # Using 4 examples:
    #   1
    #   123456789
    #   2014
    #   Universidade Federal do Rio de Janeiro
    @timeout_decorator.timeout(60)
    def test_27(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"cpf\": \"66896484942\", " + \
            " \"nome\": \"Willian de Souza Padilha\", " + \
            " \"racaCor\": 4, " + \
            " \"sexo\": \"0\", " + \
            " \"logradouro\": \"\", " + \
            " \"numero\": \"53914\", " + \
            " \"municipio\": 3106200, " + \
            " \"uf\": 35, " + \
            " \"inep\": \"29193656\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"ZPBImXFKT4iZUc\", " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " }, " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Rio de Janeiro\", " + \
            " \"anoInicioFormacaoAcademica\": 2016, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " } " + \
            " ], " + \
            " \"dataIngresso\": \"2074-09-12\", " + \
            " \"dataFim\": \"1997-11-28\" " + \
            " } "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_0.status_code == 422
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #2 ($dataNascimento) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"nome\": \"Théo Tiago Faro Sobrinho\", " + \
            " \"racaCor\": 2, " + \
            " \"email\": \"wesley.rogerio.dias@fake.com\", " + \
            " \"telefone\": \"11949911257\", " + \
            " \"nomeSocial\": \"test\", " + \
            " \"tipoDeficiencia\": [], " + \
            " \"sexo\": \"4\", " + \
            " \"logradouro\": \"Rua Av. Karine\", " + \
            " \"cep\": \"\", " + \
            " \"municipio\": 2700409, " + \
            " \"inep\": \"29478430\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " } " + \
            " ], " + \
            " \"dataIngresso\": \"2009-08-11\", " + \
            " \"dataFim\": \"1987-08-09\" " + \
            " } "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_1.status_code == 422
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #2 ($dataNascimento) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpf\": \"37973527605\", " + \
            " \"nome\": \"Aurora Ramires\", " + \
            " \"genero\": 4, " + \
            " \"tipoDeficiencia\": [ " + \
            " 839, " + \
            " 2, " + \
            " 103, " + \
            " 3, " + \
            " 1 " + \
            " ], " + \
            " \"sexo\": \"2\", " + \
            " \"numero\": \"721\", " + \
            " \"formacoesAcademicas\": [ " + \
            " {}, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Rio de Janeiro\", " + \
            " \"anoInicioFormacaoAcademica\": 559, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\" " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"7\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 1 " + \
            " } "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_2.status_code == 422
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #2 ($dataNascimento) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"cpf\": \"18766228492\", " + \
            " \"genero\": 9, " + \
            " \"racaCor\": 42, " + \
            " \"email\": \"teo.flavio.cruz.sobrinho@fake.com\", " + \
            " \"tipoDeficiencia\": [], " + \
            " \"sexo\": \"4\", " + \
            " \"bairro\": \"hzaR4jQR5yB8qU\", " + \
            " \"numero\": \"721\", " + \
            " \"inep\": 32046103, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " }, " + \
            " {} " + \
            " ], " + \
            " \"matriculaRede\": \"123456789\", " + \
            " \"cargaHoraria\": 40 " + \
            " } "
        headers['Accept'] = "application/json"
        res_3 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_3.status_code == 422
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #1 ($nome) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?per_page=15",
                    headers=headers)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_4.json()["data"]) == 3
        assert res_4.json()["data"][0]["tipoEnsinoMedio"] == 2.0
        assert res_4.json()["data"][0]["nivelEscolaridade"] == 10.0
        assert res_4.json()["data"][0]["cpf"] == "43839402000"
        assert res_4.json()["data"][0]["nome"] == "João da Silva 2"
        assert res_4.json()["data"][0]["dataNascimento"] == "1985-06-15"
        assert res_4.json()["data"][0]["genero"] == 1.0
        assert res_4.json()["data"][0]["racaCor"] == 2.0
        assert res_4.json()["data"][0]["email"] == "joao.silva@email.com"
        assert res_4.json()["data"][0]["telefone"] is None
        assert res_4.json()["data"][0]["nomeSocial"] is None
        assert res_4.json()["data"][0]["logradouro"] == "Rua das Flores"
        assert res_4.json()["data"][0]["bairro"] == "Centro"
        assert res_4.json()["data"][0]["numero"] == "123"
        assert res_4.json()["data"][0]["cep"] == "01001000"
        assert res_4.json()["data"][0]["municipio"] == 2700409.0
        assert res_4.json()["data"][0]["uf"] == 27.0
        assert res_4.json()["data"][0]["codigoInstituicao"] == 6.0
        assert res_4.json()["data"][0]["cargaHoraria"] == 40.0
        assert res_4.json()["data"][0]["situacaoAtiva"] == True
        assert res_4.json()["data"][0]["dataIngresso"] == "2015-02-10"
        assert res_4.json()["data"][0]["dataFim"] is None
        assert res_4.json()["data"][0]["codigoFuncao"] == 2.0
        assert res_4.json()["data"][0]["matriculaRede"] == "56789"
        assert res_4.json()["data"][0]["tipoVinculo"] == 0.0
        assert res_4.json()["data"][0]["inep"] == "27014088"
        assert len(res_4.json()["data"][0]["tipoDeficiencia"]) == 3
        assert res_4.json()["data"][0]["tipoDeficiencia"][0] == 1.0
        assert res_4.json()["data"][0]["tipoDeficiencia"][1] == 2.0
        assert res_4.json()["data"][0]["tipoDeficiencia"][2] == 3.0
        assert len(res_4.json()["data"][0]["formacoesAcademicas"]) == 2
        assert res_4.json()["data"][0]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_4.json()["data"][0]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_4.json()["data"][0]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_4.json()["data"][0]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_4.json()["data"][0]["formacoesAcademicas"][0]["principal"] is None
        assert res_4.json()["data"][0]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_4.json()["data"][0]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_4.json()["data"][0]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_4.json()["data"][0]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_4.json()["data"][0]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_4.json()["data"][0]["formacoesAcademicas"][1]["principal"] is None
        assert res_4.json()["data"][0]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_4.json()["data"][1]["tipoEnsinoMedio"] == 2.0
        assert res_4.json()["data"][1]["nivelEscolaridade"] == 10.0
        assert res_4.json()["data"][1]["cpf"] == "33722248094"
        assert res_4.json()["data"][1]["nome"] == "João da Silva 2"
        assert res_4.json()["data"][1]["dataNascimento"] == "1985-06-15"
        assert res_4.json()["data"][1]["genero"] == 1.0
        assert res_4.json()["data"][1]["racaCor"] == 2.0
        assert res_4.json()["data"][1]["email"] == "joao.silva@email.com"
        assert res_4.json()["data"][1]["telefone"] is None
        assert res_4.json()["data"][1]["nomeSocial"] is None
        assert res_4.json()["data"][1]["logradouro"] == "Rua das Flores"
        assert res_4.json()["data"][1]["bairro"] == "Centro"
        assert res_4.json()["data"][1]["numero"] == "123"
        assert res_4.json()["data"][1]["cep"] == "01001000"
        assert res_4.json()["data"][1]["municipio"] == 2700409.0
        assert res_4.json()["data"][1]["uf"] == 27.0
        assert res_4.json()["data"][1]["codigoInstituicao"] == 6.0
        assert res_4.json()["data"][1]["cargaHoraria"] == 40.0
        assert res_4.json()["data"][1]["situacaoAtiva"] == True
        assert res_4.json()["data"][1]["dataIngresso"] == "2015-02-10"
        assert res_4.json()["data"][1]["dataFim"] is None
        assert res_4.json()["data"][1]["codigoFuncao"] == 2.0
        assert res_4.json()["data"][1]["matriculaRede"] == "56789"
        assert res_4.json()["data"][1]["tipoVinculo"] == 0.0
        assert res_4.json()["data"][1]["inep"] == "27014088"
        assert len(res_4.json()["data"][1]["tipoDeficiencia"]) == 3
        assert res_4.json()["data"][1]["tipoDeficiencia"][0] == 1.0
        assert res_4.json()["data"][1]["tipoDeficiencia"][1] == 2.0
        assert res_4.json()["data"][1]["tipoDeficiencia"][2] == 3.0
        assert len(res_4.json()["data"][1]["formacoesAcademicas"]) == 2
        assert res_4.json()["data"][1]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_4.json()["data"][1]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_4.json()["data"][1]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_4.json()["data"][1]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_4.json()["data"][1]["formacoesAcademicas"][0]["principal"] is None
        assert res_4.json()["data"][1]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_4.json()["data"][1]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_4.json()["data"][1]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_4.json()["data"][1]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_4.json()["data"][1]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_4.json()["data"][1]["formacoesAcademicas"][1]["principal"] is None
        assert res_4.json()["data"][1]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_4.json()["data"][2]["tipoEnsinoMedio"] == 2.0
        assert res_4.json()["data"][2]["nivelEscolaridade"] == 10.0
        assert res_4.json()["data"][2]["cpf"] == "31863200037"
        assert res_4.json()["data"][2]["nome"] == "João da Silva 2"
        assert res_4.json()["data"][2]["dataNascimento"] == "1985-06-15"
        assert res_4.json()["data"][2]["genero"] == 1.0
        assert res_4.json()["data"][2]["racaCor"] == 2.0
        assert res_4.json()["data"][2]["email"] == "joao.silva@email.com"
        assert res_4.json()["data"][2]["telefone"] is None
        assert res_4.json()["data"][2]["nomeSocial"] is None
        assert res_4.json()["data"][2]["logradouro"] == "Rua das Flores"
        assert res_4.json()["data"][2]["bairro"] == "Centro"
        assert res_4.json()["data"][2]["numero"] == "123"
        assert res_4.json()["data"][2]["cep"] == "01001000"
        assert res_4.json()["data"][2]["municipio"] == 2700409.0
        assert res_4.json()["data"][2]["uf"] == 27.0
        assert res_4.json()["data"][2]["codigoInstituicao"] == 6.0
        assert res_4.json()["data"][2]["cargaHoraria"] == 40.0
        assert res_4.json()["data"][2]["situacaoAtiva"] == True
        assert res_4.json()["data"][2]["dataIngresso"] == "2015-02-10"
        assert res_4.json()["data"][2]["dataFim"] is None
        assert res_4.json()["data"][2]["codigoFuncao"] == 2.0
        assert res_4.json()["data"][2]["matriculaRede"] == "56789"
        assert res_4.json()["data"][2]["tipoVinculo"] == 0.0
        assert res_4.json()["data"][2]["inep"] == "27014088"
        assert len(res_4.json()["data"][2]["tipoDeficiencia"]) == 3
        assert res_4.json()["data"][2]["tipoDeficiencia"][0] == 1.0
        assert res_4.json()["data"][2]["tipoDeficiencia"][1] == 2.0
        assert res_4.json()["data"][2]["tipoDeficiencia"][2] == 3.0
        assert len(res_4.json()["data"][2]["formacoesAcademicas"]) == 2
        assert res_4.json()["data"][2]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_4.json()["data"][2]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_4.json()["data"][2]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_4.json()["data"][2]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_4.json()["data"][2]["formacoesAcademicas"][0]["principal"] is None
        assert res_4.json()["data"][2]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_4.json()["data"][2]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_4.json()["data"][2]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_4.json()["data"][2]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_4.json()["data"][2]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_4.json()["data"][2]["formacoesAcademicas"][1]["principal"] is None
        assert res_4.json()["data"][2]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_4.json()["pagination"]["total"] == 3.0
        assert res_4.json()["pagination"]["count"] == 3.0
        assert res_4.json()["pagination"]["per_page"] == 15.0
        assert res_4.json()["pagination"]["current_page"] == 1.0
        assert res_4.json()["pagination"]["total_pages"] == 1.0
        assert res_4.json()["pagination"]["links"]["previous"] is None
        assert res_4.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # 1 - (422) POST:/v1/profissionais
    # 2 - (422) POST:/v1/profissionais
    # 3 - (422) POST:/v1/profissionais
    # 4 - (422) POST:/v1/profissionais
    # 5 - (422) POST:/v1/profissionais
    # 6 - (422) POST:/v1/profissionais
    # 7 - (422) POST:/v1/profissionais
    # 8 - (422) POST:/v1/profissionais
    # 9 - (200) GET:/v1/profissionais
    # Found 5 potential faults of type-code 200
    # Using 4 examples:
    #   1
    #   123456789
    #   2014
    #   44
    @timeout_decorator.timeout(60)
    def test_28(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"nome\": \"Aaron Bezerra Jr.\", " + \
            " \"dataNascimento\": \"2005-06-24\", " + \
            " \"genero\": 7, " + \
            " \"racaCor\": 1, " + \
            " \"email\": \"aaron.breno.soares@fake.com\", " + \
            " \"telefone\": \"kRJ4hsmXqH2CCk8\", " + \
            " \"nomeSocial\": \"test\", " + \
            " \"tipoDeficiencia\": [], " + \
            " \"logradouro\": \"\", " + \
            " \"numero\": \"67\", " + \
            " \"cep\": \"72451065\", " + \
            " \"inep\": 27014088, " + \
            " \"matriculaRede\": \"jvjvjv1\", " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"1945-02-26\", " + \
            " \"cargaHoraria\": 40 " + \
            " } "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_0.status_code == 422
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "O campo tipoEnsinoMedio é obrigatório quando o nivelEscolaridade é 4, 5, 6, 7, 8, 9 ou 10."
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"tipoEnsinoMedio\": 518, " + \
            " \"cpf\": \"27287459191\", " + \
            " \"dataNascimento\": \"2007-12-28\", " + \
            " \"racaCor\": 5, " + \
            " \"email\": \"aaron.avila.vale.sobrinho@fake.com\", " + \
            " \"nomeSocial\": \"wt\", " + \
            " \"sexo\": \"5\", " + \
            " \"logradouro\": \"Rua Av. Bonilha\", " + \
            " \"uf\": 35, " + \
            " \"dataIngresso\": \"1995-03-05\", " + \
            " \"cargaHoraria\": 40 " + \
            " } "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_1.status_code == 422
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #1 ($nome) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpf\": \"29072517407\", " + \
            " \"nome\": \"Jkq8tRxj\", " + \
            " \"dataNascimento\": \"2005-09-21\", " + \
            " \"genero\": 2, " + \
            " \"sexo\": \"1\", " + \
            " \"numero\": \"268\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 1 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 1, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 707, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\", " + \
            " \"anoConclusaoFormacaoAcademica\": 493 " + \
            " }, " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\", " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " } " + \
            " ], " + \
            " \"tipoVinculo\": 0, " + \
            " \"dataIngresso\": \"1973-07-01\", " + \
            " \"dataFim\": \"2087-09-20\", " + \
            " \"cargaHoraria\": 44 " + \
            " } "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_2.status_code == 422
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #10 ($tipoDeficiencia) must be of type array, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"racaCor\": 5, " + \
            " \"nomeSocial\": \"rRAEEBPUPdYf\", " + \
            " \"tipoDeficiencia\": [], " + \
            " \"logradouro\": \"Rua Avenida Arruda\", " + \
            " \"uf\": 33, " + \
            " \"inep\": 41072472, " + \
            " \"matriculaRede\": \"123456789\" " + \
            " } "
        headers['Accept'] = "application/json"
        res_3 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_3.status_code == 422
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #1 ($nome) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"nome\": \"Aaron Benites Filho\", " + \
            " \"dataNascimento\": \"2008-03-03\", " + \
            " \"email\": \"aaron.brito.aranda@fake.com\", " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"logradouro\": \"Rua Avenida Fonseca\", " + \
            " \"bairro\": \"São Lira\", " + \
            " \"cep\": \"42143311\", " + \
            " \"inep\": 26113562, " + \
            " \"matriculaRede\": \"Z0v3V\", " + \
            " \"tipoVinculo\": 317, " + \
            " \"dataIngresso\": \"1950-11-25\", " + \
            " \"cargaHoraria\": 40 " + \
            " } "
        headers['Accept'] = "application/json"
        res_4 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_4.status_code == 422
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #10 ($tipoDeficiencia) must be of type array, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"cpf\": \"59981101109\", " + \
            " \"genero\": 8, " + \
            " \"email\": \"Tay\", " + \
            " \"telefone\": \"11969630845\", " + \
            " \"nomeSocial\": \"8hbo50Mnoym\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 3, " + \
            " 192, " + \
            " 1, " + \
            " 2, " + \
            " 3 " + \
            " ], " + \
            " \"sexo\": \"4\", " + \
            " \"bairro\": \"São Romero\", " + \
            " \"numero\": \"8316\", " + \
            " \"municipio\": 80, " + \
            " \"uf\": 33, " + \
            " \"inep\": \"\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\", " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"anoInicioFormacaoAcademica\": 2016 " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"123456789\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"dataIngresso\": \"2097-12-32\" " + \
            " } "
        headers['Accept'] = "application/json"
        res_5 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_5.status_code == 422
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #1 ($nome) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"nivelEscolaridade\": 445, " + \
            " \"cpf\": \"67418207441\", " + \
            " \"nome\": \"XiOl8G5V3\", " + \
            " \"dataNascimento\": \"2008-03-03\", " + \
            " \"telefone\": \"3333333\", " + \
            " \"bairro\": \"0_\", " + \
            " \"numero\": \"281\", " + \
            " \"cep\": \"53996495\", " + \
            " \"uf\": 43, " + \
            " \"inep\": 660, " + \
            " \"matriculaRede\": \"Teste Ricardo\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"2028-00-25\", " + \
            " \"dataFim\": \"2006-13-06\", " + \
            " \"cargaHoraria\": 40 " + \
            " } "
        headers['Accept'] = "application/json"
        res_6 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_6.status_code == 422
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == False
        assert res_6.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #10 ($tipoDeficiencia) must be of type array, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"tipoEnsinoMedio\": 158, " + \
            " \"cpf\": \"31863200037\", " + \
            " \"nome\": \"Aaron Barreto\", " + \
            " \"genero\": 1, " + \
            " \"email\": \"aaron.beltrao.neto@fake.com\", " + \
            " \"telefone\": \"3333333\", " + \
            " \"nomeSocial\": \"YXWGpw\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 419 " + \
            " ], " + \
            " \"sexo\": \"4\", " + \
            " \"bairro\": \"\", " + \
            " \"numero\": \"70076\", " + \
            " \"municipio\": 1302603, " + \
            " \"inep\": 42004543, " + \
            " \"formacoesAcademicas\": [], " + \
            " \"tipoVinculo\": 0, " + \
            " \"dataIngresso\": \"2075-10-13\", " + \
            " \"dataFim\": \"2032-06-31\", " + \
            " \"cargaHoraria\": 40 " + \
            " } "
        headers['Accept'] = "application/json"
        res_7 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_7.status_code == 422
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == False
        assert res_7.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #2 ($dataNascimento) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_8 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?per_page=10",
                    headers=headers)
        
        assert res_8.status_code == 200
        assert "application/json" in res_8.headers["content-type"]
        assert res_8.json()["success"] == True
        assert res_8.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_8.json()["data"]) == 3
        assert res_8.json()["data"][0]["tipoEnsinoMedio"] == 2.0
        assert res_8.json()["data"][0]["nivelEscolaridade"] == 10.0
        assert res_8.json()["data"][0]["cpf"] == "43839402000"
        assert res_8.json()["data"][0]["nome"] == "João da Silva 2"
        assert res_8.json()["data"][0]["dataNascimento"] == "1985-06-15"
        assert res_8.json()["data"][0]["genero"] == 1.0
        assert res_8.json()["data"][0]["racaCor"] == 2.0
        assert res_8.json()["data"][0]["email"] == "joao.silva@email.com"
        assert res_8.json()["data"][0]["telefone"] is None
        assert res_8.json()["data"][0]["nomeSocial"] is None
        assert res_8.json()["data"][0]["logradouro"] == "Rua das Flores"
        assert res_8.json()["data"][0]["bairro"] == "Centro"
        assert res_8.json()["data"][0]["numero"] == "123"
        assert res_8.json()["data"][0]["cep"] == "01001000"
        assert res_8.json()["data"][0]["municipio"] == 2700409.0
        assert res_8.json()["data"][0]["uf"] == 27.0
        assert res_8.json()["data"][0]["codigoInstituicao"] == 6.0
        assert res_8.json()["data"][0]["cargaHoraria"] == 40.0
        assert res_8.json()["data"][0]["situacaoAtiva"] == True
        assert res_8.json()["data"][0]["dataIngresso"] == "2015-02-10"
        assert res_8.json()["data"][0]["dataFim"] is None
        assert res_8.json()["data"][0]["codigoFuncao"] == 2.0
        assert res_8.json()["data"][0]["matriculaRede"] == "56789"
        assert res_8.json()["data"][0]["tipoVinculo"] == 0.0
        assert res_8.json()["data"][0]["inep"] == "27014088"
        assert len(res_8.json()["data"][0]["tipoDeficiencia"]) == 3
        assert res_8.json()["data"][0]["tipoDeficiencia"][0] == 1.0
        assert res_8.json()["data"][0]["tipoDeficiencia"][1] == 2.0
        assert res_8.json()["data"][0]["tipoDeficiencia"][2] == 3.0
        assert len(res_8.json()["data"][0]["formacoesAcademicas"]) == 2
        assert res_8.json()["data"][0]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_8.json()["data"][0]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_8.json()["data"][0]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_8.json()["data"][0]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_8.json()["data"][0]["formacoesAcademicas"][0]["principal"] is None
        assert res_8.json()["data"][0]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_8.json()["data"][0]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_8.json()["data"][0]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_8.json()["data"][0]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_8.json()["data"][0]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_8.json()["data"][0]["formacoesAcademicas"][1]["principal"] is None
        assert res_8.json()["data"][0]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_8.json()["data"][1]["tipoEnsinoMedio"] == 2.0
        assert res_8.json()["data"][1]["nivelEscolaridade"] == 10.0
        assert res_8.json()["data"][1]["cpf"] == "33722248094"
        assert res_8.json()["data"][1]["nome"] == "João da Silva 2"
        assert res_8.json()["data"][1]["dataNascimento"] == "1985-06-15"
        assert res_8.json()["data"][1]["genero"] == 1.0
        assert res_8.json()["data"][1]["racaCor"] == 2.0
        assert res_8.json()["data"][1]["email"] == "joao.silva@email.com"
        assert res_8.json()["data"][1]["telefone"] is None
        assert res_8.json()["data"][1]["nomeSocial"] is None
        assert res_8.json()["data"][1]["logradouro"] == "Rua das Flores"
        assert res_8.json()["data"][1]["bairro"] == "Centro"
        assert res_8.json()["data"][1]["numero"] == "123"
        assert res_8.json()["data"][1]["cep"] == "01001000"
        assert res_8.json()["data"][1]["municipio"] == 2700409.0
        assert res_8.json()["data"][1]["uf"] == 27.0
        assert res_8.json()["data"][1]["codigoInstituicao"] == 6.0
        assert res_8.json()["data"][1]["cargaHoraria"] == 40.0
        assert res_8.json()["data"][1]["situacaoAtiva"] == True
        assert res_8.json()["data"][1]["dataIngresso"] == "2015-02-10"
        assert res_8.json()["data"][1]["dataFim"] is None
        assert res_8.json()["data"][1]["codigoFuncao"] == 2.0
        assert res_8.json()["data"][1]["matriculaRede"] == "56789"
        assert res_8.json()["data"][1]["tipoVinculo"] == 0.0
        assert res_8.json()["data"][1]["inep"] == "27014088"
        assert len(res_8.json()["data"][1]["tipoDeficiencia"]) == 3
        assert res_8.json()["data"][1]["tipoDeficiencia"][0] == 1.0
        assert res_8.json()["data"][1]["tipoDeficiencia"][1] == 2.0
        assert res_8.json()["data"][1]["tipoDeficiencia"][2] == 3.0
        assert len(res_8.json()["data"][1]["formacoesAcademicas"]) == 2
        assert res_8.json()["data"][1]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_8.json()["data"][1]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_8.json()["data"][1]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_8.json()["data"][1]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_8.json()["data"][1]["formacoesAcademicas"][0]["principal"] is None
        assert res_8.json()["data"][1]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_8.json()["data"][1]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_8.json()["data"][1]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_8.json()["data"][1]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_8.json()["data"][1]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_8.json()["data"][1]["formacoesAcademicas"][1]["principal"] is None
        assert res_8.json()["data"][1]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_8.json()["data"][2]["tipoEnsinoMedio"] == 2.0
        assert res_8.json()["data"][2]["nivelEscolaridade"] == 10.0
        assert res_8.json()["data"][2]["cpf"] == "31863200037"
        assert res_8.json()["data"][2]["nome"] == "João da Silva 2"
        assert res_8.json()["data"][2]["dataNascimento"] == "1985-06-15"
        assert res_8.json()["data"][2]["genero"] == 1.0
        assert res_8.json()["data"][2]["racaCor"] == 2.0
        assert res_8.json()["data"][2]["email"] == "joao.silva@email.com"
        assert res_8.json()["data"][2]["telefone"] is None
        assert res_8.json()["data"][2]["nomeSocial"] is None
        assert res_8.json()["data"][2]["logradouro"] == "Rua das Flores"
        assert res_8.json()["data"][2]["bairro"] == "Centro"
        assert res_8.json()["data"][2]["numero"] == "123"
        assert res_8.json()["data"][2]["cep"] == "01001000"
        assert res_8.json()["data"][2]["municipio"] == 2700409.0
        assert res_8.json()["data"][2]["uf"] == 27.0
        assert res_8.json()["data"][2]["codigoInstituicao"] == 6.0
        assert res_8.json()["data"][2]["cargaHoraria"] == 40.0
        assert res_8.json()["data"][2]["situacaoAtiva"] == True
        assert res_8.json()["data"][2]["dataIngresso"] == "2015-02-10"
        assert res_8.json()["data"][2]["dataFim"] is None
        assert res_8.json()["data"][2]["codigoFuncao"] == 2.0
        assert res_8.json()["data"][2]["matriculaRede"] == "56789"
        assert res_8.json()["data"][2]["tipoVinculo"] == 0.0
        assert res_8.json()["data"][2]["inep"] == "27014088"
        assert len(res_8.json()["data"][2]["tipoDeficiencia"]) == 3
        assert res_8.json()["data"][2]["tipoDeficiencia"][0] == 1.0
        assert res_8.json()["data"][2]["tipoDeficiencia"][1] == 2.0
        assert res_8.json()["data"][2]["tipoDeficiencia"][2] == 3.0
        assert len(res_8.json()["data"][2]["formacoesAcademicas"]) == 2
        assert res_8.json()["data"][2]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_8.json()["data"][2]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_8.json()["data"][2]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_8.json()["data"][2]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_8.json()["data"][2]["formacoesAcademicas"][0]["principal"] is None
        assert res_8.json()["data"][2]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_8.json()["data"][2]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_8.json()["data"][2]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_8.json()["data"][2]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_8.json()["data"][2]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_8.json()["data"][2]["formacoesAcademicas"][1]["principal"] is None
        assert res_8.json()["data"][2]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_8.json()["pagination"]["total"] == 3.0
        assert res_8.json()["pagination"]["count"] == 3.0
        assert res_8.json()["pagination"]["per_page"] == 10.0
        assert res_8.json()["pagination"]["current_page"] == 1.0
        assert res_8.json()["pagination"]["total_pages"] == 1.0
        assert res_8.json()["pagination"]["links"]["previous"] is None
        assert res_8.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # 1 - (201) POST:/v1/profissionais/lote
    # 2 - (200) GET:/v1/profissionais/lote/{id}
    # Found 2 potential faults of type-code 200
    # Using 1 example:
    #   1
    @timeout_decorator.timeout(60)
    def test_29(self):
        
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"email\": \"aaron.arruda@fake.com\", " + \
            " \"nomeSocial\": \"8hbo50Mnoym\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 2, " + \
            " 2, " + \
            " 2, " + \
            " 61, " + \
            " 2 " + \
            " ], " + \
            " \"logradouro\": \"Rua Av. Bonilha\", " + \
            " \"bairro\": \"São Arruda\", " + \
            " \"numero\": \"220\", " + \
            " \"municipio\": 3550308, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 1, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\", " + \
            " \"anoConclusaoFormacaoAcademica\": 537 " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"Teste Ricardo\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 54, " + \
            " \"dataIngresso\": \"2013-09-07\", " + \
            " \"dataFim\": \"1935-13-27\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        location_lote = "/v1/profissionais/lote" + "/" + str(res_0.json()['id'])
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id} -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(resolve_location(location_lote, self.baseUrlOfSut + str("/v1/profissionais/lote/c5690ab4-c38a-44a1-8369-b272054124a1?incluir_objetos_processados=true")),
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["status_processamento"] == "Enviado"
        assert res_1.json()["message"] == "Lote recuperado com sucesso. ID: 00d34a27-3f50-4fa1-b645-aa89b1f46281"
    
    
    # Calls:
    # 1 - (201) POST:/v1/estudantes/lote
    # 2 - (200) GET:/v1/estudantes/lote/{id}
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_30(self):
        
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpfResponsavel\": \"77099674935\", " + \
            " \"nomeMaeEstudante\": \"Srta. Daiane Leon Sobrinho\", " + \
            " \"dataNascimento\": \"2010-08-15\", " + \
            " \"racaCor\": 4, " + \
            " \"email\": \"aaron.beltrao.neto@fake.com\", " + \
            " \"telefone\": \"3333333\", " + \
            " \"nomeSocial\": \"test\", " + \
            " \"sexo\": \"5\", " + \
            " \"rg\": \"8046877752976710\", " + \
            " \"orgaoEmissor\": \"SSP-RN\", " + \
            " \"cnh\": \"3333333\", " + \
            " \"logradouro\": \"Rua R. Meireles\", " + \
            " \"dataInicioMatricula\": \"2093-02-02\", " + \
            " \"serieAno\": 45, " + \
            " \"matriculaRede\": \"Teste Ricardo\", " + \
            " \"instituicao\": 391, " + \
            " \"inep\": 29191840, " + \
            " \"formaOrganizacaoTurma\": 923, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 0, " + \
            " \"estudanteAnoPeriodo\": 3, " + \
            " \"estudanteIntegral\": 1 " + \
            " }, " + \
            " { " + \
            " \"cpfResponsavel\": \"JY7H\", " + \
            " \"numeroNISResponsavel\": \"72454049622\", " + \
            " \"cpf\": \"NKpDq288Zp\", " + \
            " \"nome\": \"Aaron Carmona\", " + \
            " \"genero\": 3, " + \
            " \"racaCor\": 3, " + \
            " \"telefone\": \"3333333\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1, " + \
            " 3, " + \
            " 2 " + \
            " ], " + \
            " \"sexo\": \"5\", " + \
            " \"numeroNIS\": \"76071208569\", " + \
            " \"rg\": \"9876325077762802\", " + \
            " \"cnh\": \"3333333\", " + \
            " \"bairro\": \"São Caldeira\", " + \
            " \"numero\": \"\", " + \
            " \"cep\": \"90795413\", " + \
            " \"municipio\": 3106200, " + \
            " \"uf\": 224, " + \
            " \"estudantePpl\": 1, " + \
            " \"serieAno\": 71, " + \
            " \"inep\": 984, " + \
            " \"formaOrganizacaoTurma\": 6, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 1, " + \
            " \"estudanteAnoPeriodo\": 42, " + \
            " \"estudanteIntegral\": 42, " + \
            " \"anoMatricula\": 2024 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        location_lote = "/v1/estudantes/lote" + "/" + str(res_0.json()['id'])
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(resolve_location(location_lote, self.baseUrlOfSut + str("/v1/estudantes/lote/343c2287-9960-40bd-bc1b-2cbbf526994d?per_page=537&incluir_objetos_processados=true")),
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["status_processamento"] == "Enviado"
        assert res_1.json()["message"] == "Lote recuperado com sucesso. ID: a3b86bda-ae2e-4bf5-b967-69e08fc39d4e"
    
    
    # Calls:
    # 1 - (201) POST:/v1/estudantes/lote
    # 2 - (200) GET:/v1/estudantes/lote/{id}
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_31(self):
        
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"numeroNISResponsavel\": \"01150478028\", " + \
            " \"racaCor\": 2, " + \
            " \"tipoDeficiencia\": [ " + \
            " 1, " + \
            " 990 " + \
            " ], " + \
            " \"sexo\": \"0\", " + \
            " \"certidaoNascimento\": \"08066160151905147504020458976056\", " + \
            " \"cep\": \"10964986\", " + \
            " \"municipio\": 1302603, " + \
            " \"dataInicioMatricula\": \"1977-09-09\", " + \
            " \"inep\": 29182166, " + \
            " \"dataInicioPeriodoLetivo\": \"2033-10-17\", " + \
            " \"formaOrganizacaoTurma\": 1 " + \
            " }, " + \
            " { " + \
            " \"numeroNISResponsavel\": \"44259324053\", " + \
            " \"cpf\": \"35170443692\", " + \
            " \"nome\": \"Srta. Kelly Vasques\", " + \
            " \"genero\": 42, " + \
            " \"racaCor\": 42, " + \
            " \"email\": \"vitor.artur.domingues@fake.com\", " + \
            " \"telefone\": \"3333333\", " + \
            " \"sexo\": \"3\", " + \
            " \"rg\": \"9002013143264065\", " + \
            " \"orgaoEmissor\": \"RUYE\", " + \
            " \"cnh\": \"01354673004\", " + \
            " \"municipio\": 579, " + \
            " \"estudantePpl\": 42, " + \
            " \"dataInicioMatricula\": \"2072-03-15\", " + \
            " \"instituicao\": 753, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 1 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        location_lote = "/v1/estudantes/lote" + "/" + str(res_0.json()['id'])
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(resolve_location(location_lote, self.baseUrlOfSut + str("/v1/estudantes/lote/4d228290-c79d-4b38-9ef2-f3dec914ff35?page=780&incluir_objetos_processados=true")),
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["status_processamento"] == "Enviado"
        assert res_1.json()["message"] == "Lote recuperado com sucesso. ID: 9cecc362-5581-48ed-bc72-a074e071dc4d"
    
    
    # Calls:
    # 1 - (201) POST:/v1/profissionais/lote
    # 2 - (200) GET:/v1/profissionais/lote/{id}
    # Found 2 potential faults of type-code 200
    # Using 1 example:
    #   1
    @timeout_decorator.timeout(60)
    def test_32(self):
        
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"tipoEnsinoMedio\": 1, " + \
            " \"nivelEscolaridade\": 491, " + \
            " \"genero\": 8, " + \
            " \"racaCor\": 3, " + \
            " \"email\": \"aaron.alves.sobrinho@fake.com\", " + \
            " \"nomeSocial\": \"YXWGpw\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 925 " + \
            " ], " + \
            " \"logradouro\": \"Rua Avenida Marés\", " + \
            " \"municipio\": 2611606, " + \
            " \"inep\": \"29188601\", " + \
            " \"formacoesAcademicas\": [], " + \
            " \"matriculaRede\": \"7\", " + \
            " \"codigoFuncao\": 1, " + \
            " \"dataIngresso\": \"1958-07-15\", " + \
            " \"dataFim\": \"2022-05-22\", " + \
            " \"cargaHoraria\": 40 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nome\": \"Aaron Benez Azevedo Neto\", " + \
            " \"genero\": 5, " + \
            " \"telefone\": \"11933018135\", " + \
            " \"nomeSocial\": \"YXWGpw\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1, " + \
            " 2, " + \
            " 1, " + \
            " 2 " + \
            " ], " + \
            " \"numero\": \"\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 981, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " } " + \
            " ], " + \
            " \"inep\": 41072472, " + \
            " \"matriculaRede\": \"\", " + \
            " \"dataFim\": \"2029-13-17\", " + \
            " \"cargaHoraria\": 40 " + \
            " }, " + \
            " { " + \
            " \"nome\": \"Aaron Beltrão Jr.\", " + \
            " \"telefone\": \"11969630845\", " + \
            " \"sexo\": \"2\", " + \
            " \"logradouro\": \"Hp7nilOPX\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"anoConclusaoFormacaoAcademica\": 424 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " }, " + \
            " { " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " }, " + \
            " {}, " + \
            " {} " + \
            " ], " + \
            " \"inep\": 29188458, " + \
            " \"dataFim\": \"2093-04-31\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        location_lote = "/v1/profissionais/lote" + "/" + str(res_0.json()['id'])
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id} -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(resolve_location(location_lote, self.baseUrlOfSut + str("/v1/profissionais/lote/f95f0416-e51b-48ad-9181-76fee20ceb62?page=1&per_page=10")),
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["status_processamento"] == "Enviado"
        assert res_1.json()["message"] == "Lote recuperado com sucesso. ID: 31cd3cf0-0f6b-49ed-b233-2a277095b71c"
    
    
    # Calls:
    # 1 - (201) POST:/v1/profissionais/lote
    # 2 - (200) GET:/v1/profissionais/lote/{id}
    # Found 2 potential faults of type-code 200
    # Using 3 examples:
    #   1
    #   2014
    #   44
    @timeout_decorator.timeout(60)
    def test_33(self):
        
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpf\": \"mm\", " + \
            " \"nome\": \"Wesley Rogério Dias\", " + \
            " \"genero\": 4, " + \
            " \"racaCor\": 3, " + \
            " \"email\": \"srta.dayane.pereira.ramires.jr@fake.com\", " + \
            " \"telefone\": \"11949911257\", " + \
            " \"nomeSocial\": \"YXWGpw\", " + \
            " \"tipoDeficiencia\": [], " + \
            " \"municipio\": 779, " + \
            " \"uf\": 33, " + \
            " \"inep\": 690, " + \
            " \"dataIngresso\": \"2036-00-25\", " + \
            " \"cargaHoraria\": 44 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 1, " + \
            " \"nivelEscolaridade\": 850, " + \
            " \"dataNascimento\": \"2005-07-01\", " + \
            " \"genero\": 7, " + \
            " \"telefone\": \"3333333\", " + \
            " \"nomeSocial\": \"rRAEEBPUPdYf\", " + \
            " \"bairro\": \"São Mendes\", " + \
            " \"numero\": \"57\", " + \
            " \"cep\": \"\", " + \
            " \"municipio\": 3304557, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 809, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " }, " + \
            " { " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " } " + \
            " ], " + \
            " \"inep\": 33237204, " + \
            " \"matriculaRede\": \"O\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"1965-02-04\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        location_lote = "/v1/profissionais/lote" + "/" + str(res_0.json()['id'])
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id} -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(resolve_location(location_lote, self.baseUrlOfSut + str("/v1/profissionais/lote/9e4b10bc-5e67-47c3-a533-1c56f392ea06?page=428&incluir_objetos_processados=true")),
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["status_processamento"] == "Enviado"
        assert res_1.json()["message"] == "Lote recuperado com sucesso. ID: 63bc7c59-43af-4afc-a181-aa0b3207f6f1"
    
    
    # Calls:
    # (200) GET:/v1/profissionais/lote
    # Found 12 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_34(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/0/dataEnvio'] String "2025-05-01 01:14:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1/dataEnvio'] String "2025-05-01 01:14:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2/dataEnvio'] String "2025-05-01 01:13:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/3/dataEnvio'] String "2025-05-01 01:13:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/4/dataEnvio'] String "2025-05-01 01:13:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/5/dataEnvio'] String "2025-05-01 01:13:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/6/dataEnvio'] String "2025-05-01 01:13:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/7/dataEnvio'] String "2025-05-01 01:12:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/8/dataEnvio'] String "2025-05-01 01:10:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/9/dataEnvio'] String "2025-05-01 01:09:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote?page=245",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_0.json()["data"]) == 10
        assert res_0.json()["data"][0]["dataEnvio"] == "2025-05-01 01:14:08"
        assert res_0.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_0.json()["data"][1]["dataEnvio"] == "2025-05-01 01:14:03"
        assert res_0.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_0.json()["data"][2]["dataEnvio"] == "2025-05-01 01:13:57"
        assert res_0.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_0.json()["pagination"]["total"] == 2501.0
        assert res_0.json()["pagination"]["count"] == 10.0
        assert res_0.json()["pagination"]["per_page"] == 10.0
        assert res_0.json()["pagination"]["current_page"] == 245.0
        assert res_0.json()["pagination"]["total_pages"] == 251.0
        assert res_0.json()["pagination"]["links"]["previous"] == 244.0
        assert res_0.json()["pagination"]["links"]["next"] == 246.0
    
    
    # Calls:
    # 1 - (201) POST:/v1/estudantes/lote
    # 2 - (200) GET:/v1/estudantes/lote/{id}
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_35(self):
        
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpfResponsavel\": \"96795444279\", " + \
            " \"nomeMaeEstudante\": \"Sra. Marisa Katherine Carvalho Jr.\", " + \
            " \"racaCor\": 5, " + \
            " \"nomeSocial\": \"8hbo50Mnoym\", " + \
            " \"tipoDeficiencia\": [], " + \
            " \"sexo\": \"2\", " + \
            " \"numeroNIS\": \"60635326136\", " + \
            " \"rg\": \"6139245084391530\", " + \
            " \"orgaoEmissor\": \"vC2a0H9Lv4\", " + \
            " \"certidaoNascimento\": \"\", " + \
            " \"cnh\": \"3333333\", " + \
            " \"bairro\": \"_ki4vWsICD3dAe\", " + \
            " \"municipio\": 3550308, " + \
            " \"estudantePpl\": 1, " + \
            " \"dataInicioMatricula\": \"1916-11-04\", " + \
            " \"instituicao\": 403, " + \
            " \"inep\": 41083652, " + \
            " \"formaOrganizacaoTurma\": 1, " + \
            " \"estudanteAnoPeriodo\": 42, " + \
            " \"anoMatricula\": 217 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        location_lote = "/v1/estudantes/lote" + "/" + str(res_0.json()['id'])
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(resolve_location(location_lote, self.baseUrlOfSut + str("/v1/estudantes/lote/QVYqqfOnkdN54WJo?page=974&per_page=126&incluir_objetos_processados=true")),
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["status_processamento"] == "Enviado"
        assert res_1.json()["message"] == "Lote recuperado com sucesso. ID: 479a801a-3e6b-4bec-8a7a-bddee5840a17"
    
    
    # Calls:
    # 1 - (201) POST:/v1/estudantes/lote
    # 2 - (200) GET:/v1/estudantes/lote/{id}
    # Found 1 potential fault of type-code 200
    # Using 1 example:
    #   2025
    @timeout_decorator.timeout(60)
    def test_36(self):
        
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpfResponsavel\": \"23333544709\", " + \
            " \"nomeMaeEstudante\": \"1vM\", " + \
            " \"dataNascimento\": \"1989-11-30\", " + \
            " \"genero\": 3, " + \
            " \"racaCor\": 42, " + \
            " \"email\": \"aaron.afonso.galvao.jr@fake.com\", " + \
            " \"nomeSocial\": \"rRAEEBPUPdYf\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 3 " + \
            " ], " + \
            " \"certidaoNascimento\": \"20768655781937860737881259081198\", " + \
            " \"cnh\": \"56267273661\", " + \
            " \"logradouro\": \"_Zz7ctELuQgYn\", " + \
            " \"cep\": \"84825357\", " + \
            " \"municipio\": 2408102, " + \
            " \"uf\": 26, " + \
            " \"estudantePpl\": 42, " + \
            " \"inep\": 282, " + \
            " \"dataInicioPeriodoLetivo\": \"2067-04-00\", " + \
            " \"formaOrganizacaoTurma\": 206, " + \
            " \"estudanteIntegral\": 1, " + \
            " \"anoMatricula\": 2025 " + \
            " }, " + \
            " { " + \
            " \"cpfResponsavel\": \"69740347924\", " + \
            " \"numeroNISResponsavel\": \"44259324053\", " + \
            " \"cpf\": \"75260342690\", " + \
            " \"nome\": \"Dustin Carter\", " + \
            " \"dataNascimento\": \"2007-10-22\", " + \
            " \"genero\": 6, " + \
            " \"email\": \"talita.viana@gmail.com\", " + \
            " \"nomeSocial\": \"8hbo50Mnoym\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 10, " + \
            " 5, " + \
            " 1, " + \
            " 9 " + \
            " ], " + \
            " \"rg\": \"WjzQEcskx9ivM\", " + \
            " \"logradouro\": \"Rua Largo Ornela Correia\", " + \
            " \"bairro\": \"São Gomes\", " + \
            " \"numero\": \"54390\", " + \
            " \"uf\": 35, " + \
            " \"estudantePpl\": 0, " + \
            " \"serieAno\": 25, " + \
            " \"matriculaRede\": \"56789\", " + \
            " \"instituicao\": 106336, " + \
            " \"inep\": 32083114, " + \
            " \"dataInicioPeriodoLetivo\": \"1975-12-31\", " + \
            " \"formaOrganizacaoTurma\": 1 " + \
            " }, " + \
            " { " + \
            " \"nome\": \"Agustina Mariana Pacheco\", " + \
            " \"dataNascimento\": \"2006-04-08\", " + \
            " \"racaCor\": 3, " + \
            " \"tipoDeficiencia\": [ " + \
            " 10, " + \
            " 5, " + \
            " 345, " + \
            " 1, " + \
            " 10 " + \
            " ], " + \
            " \"certidaoNascimento\": \"9nIM\", " + \
            " \"logradouro\": \"Rua Travessa Abgail Dias\", " + \
            " \"numero\": \"483\", " + \
            " \"municipio\": 4200705, " + \
            " \"uf\": 27, " + \
            " \"estudantePpl\": 1, " + \
            " \"dataInicioMatricula\": \"1973-01-12\", " + \
            " \"instituicao\": 185345, " + \
            " \"inep\": 29481732, " + \
            " \"dataInicioPeriodoLetivo\": \"2057-13-11\", " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 1, " + \
            " \"estudanteAnoPeriodo\": 42, " + \
            " \"anoMatricula\": 2025 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        location_lote = "/v1/estudantes/lote" + "/" + str(res_0.json()['id'])
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(resolve_location(location_lote, self.baseUrlOfSut + str("/v1/estudantes/lote/87d8a3fb-ce7d-4d25-9602-7815aeeef1d6?page=964&per_page=916&incluir_objetos_processados=false")),
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["status_processamento"] == "Enviado"
        assert res_1.json()["message"] == "Lote recuperado com sucesso. ID: 73448a3e-3474-45a5-acd3-c0f73207d3e4"
    
    
    # Calls:
    # 1 - (201) POST:/v1/estudantes/lote
    # 2 - (200) GET:/v1/estudantes/lote/{id}
    # Found 1 potential fault of type-code 200
    # Using 1 example:
    #   2025
    @timeout_decorator.timeout(60)
    def test_37(self):
        
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"racaCor\": 42, " + \
            " \"telefone\": \"11949911257\", " + \
            " \"nomeSocial\": \"8hbo50Mnoym\", " + \
            " \"numeroNIS\": \"28805002855\", " + \
            " \"rg\": \"8445428956149694\", " + \
            " \"certidaoNascimento\": \"28162505913038721544353465135622\", " + \
            " \"cep\": \"79285854\", " + \
            " \"serieAno\": 41, " + \
            " \"instituicao\": 185680, " + \
            " \"inep\": 26055368, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 1, " + \
            " \"estudanteIntegral\": 0 " + \
            " }, " + \
            " { " + \
            " \"cpfResponsavel\": \"95583815434\", " + \
            " \"cpf\": \"s47\", " + \
            " \"nome\": \"Tomás Antônio Saraiva\", " + \
            " \"genero\": 9, " + \
            " \"racaCor\": 3, " + \
            " \"nomeSocial\": \"Su756NuO\", " + \
            " \"orgaoEmissor\": \"SSP-RN\", " + \
            " \"certidaoNascimento\": \"30791726379989677683349436728076\", " + \
            " \"cnh\": \"02342004738\", " + \
            " \"logradouro\": \"_I8W4ZjEAg3\", " + \
            " \"bairro\": \"HK7wClF\", " + \
            " \"uf\": 24, " + \
            " \"estudantePpl\": 1, " + \
            " \"dataInicioMatricula\": \"1930-04-28\", " + \
            " \"matriculaRede\": \"jvjvjv1\", " + \
            " \"instituicao\": 992, " + \
            " \"inep\": 29188784, " + \
            " \"dataInicioPeriodoLetivo\": \"1957-01-22\", " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 4, " + \
            " \"estudanteAnoPeriodo\": 2, " + \
            " \"estudanteIntegral\": 0, " + \
            " \"anoMatricula\": 2025 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        location_lote = "/v1/estudantes/lote" + "/" + str(res_0.json()['id'])
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(resolve_location(location_lote, self.baseUrlOfSut + str("/v1/estudantes/lote/eb730a35-571b-404f-b7bc-d124c9f2e15c?page=1&per_page=126&incluir_objetos_processados=true")),
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["status_processamento"] == "Enviado"
        assert res_1.json()["message"] == "Lote recuperado com sucesso. ID: 63909e35-5330-4781-b955-212adedbc262"
    
    
    # Calls:
    # 1 - (201) POST:/v1/profissionais/lote
    # 2 - (200) GET:/v1/profissionais/lote/{id}
    # Found 2 potential faults of type-code 200
    # Using 3 examples:
    #   1
    #   2010
    #   44
    @timeout_decorator.timeout(60)
    def test_38(self):
        
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"tipoEnsinoMedio\": 983, " + \
            " \"nivelEscolaridade\": 331, " + \
            " \"cpf\": \"91850198527\", " + \
            " \"nome\": \"Aaron André Garcia Sobrinho\", " + \
            " \"dataNascimento\": \"2008-09-21\", " + \
            " \"racaCor\": 2, " + \
            " \"nomeSocial\": \"YXWGpw\", " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"bairro\": \"São da Cruz\", " + \
            " \"numero\": \"\", " + \
            " \"uf\": 43, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 62, " + \
            " \"anoInicioFormacaoAcademica\": 2016, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\", " + \
            " \"anoInicioFormacaoAcademica\": 2016 " + \
            " } " + \
            " ], " + \
            " \"inep\": 41368185, " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"1908-07-20\", " + \
            " \"cargaHoraria\": 44 " + \
            " }, " + \
            " { " + \
            " \"genero\": 4, " + \
            " \"racaCor\": 5, " + \
            " \"email\": \"aaron.balestero.salazar@fake.com\", " + \
            " \"sexo\": \"0\", " + \
            " \"logradouro\": \"Rua Largo Enzo\", " + \
            " \"numero\": \"9675\", " + \
            " \"inep\": \"csZeHftzKLEz4\", " + \
            " \"matriculaRede\": \"e2XouiaD2aNA 8\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 17, " + \
            " \"dataIngresso\": \"2094-04-27\", " + \
            " \"cargaHoraria\": 40 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 89, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"dataNascimento\": \"2006-01-09\", " + \
            " \"racaCor\": 0, " + \
            " \"tipoDeficiencia\": [ " + \
            " 1, " + \
            " 150 " + \
            " ], " + \
            " \"bairro\": \"São Rios\", " + \
            " \"numero\": \"ts\", " + \
            " \"municipio\": 2700409, " + \
            " \"inep\": 29191149, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\" " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6, " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 1, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"zaZ\", " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"anoInicioFormacaoAcademica\": 2016 " + \
            " }, " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\", " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"Ugrc\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 1, " + \
            " \"dataIngresso\": \"1992-12-04\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        location_lote = "/v1/profissionais/lote" + "/" + str(res_0.json()['id'])
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id} -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(resolve_location(location_lote, self.baseUrlOfSut + str("/v1/profissionais/lote/1f523be1-d6d7-4e45-be35-6b170af35b38?page=951&per_page=15&incluir_objetos_processados=true")),
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["status_processamento"] == "Enviado"
        assert res_1.json()["message"] == "Lote recuperado com sucesso. ID: 0431d344-68cc-4217-b112-a3079eaed082"
    
    
    # Calls:
    # 1 - (201) POST:/v1/profissionais/lote
    # 2 - (200) GET:/v1/profissionais/lote/{id}
    # Found 2 potential faults of type-code 200
    # Using 2 examples:
    #   1
    #   2014
    @timeout_decorator.timeout(60)
    def test_39(self):
        
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"racaCor\": 5, " + \
            " \"telefone\": \"11969630845\", " + \
            " \"logradouro\": \"Rua Travessa Agustina\", " + \
            " \"numero\": \"qfavYN\", " + \
            " \"uf\": 565, " + \
            " \"inep\": \"PNU_mxKZGhsqPd\", " + \
            " \"tipoVinculo\": 1 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"cpf\": \"34535377693\", " + \
            " \"racaCor\": 0, " + \
            " \"tipoDeficiencia\": [ " + \
            " 527, " + \
            " 3, " + \
            " 3, " + \
            " 1 " + \
            " ], " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"numero\": \"7938\", " + \
            " \"municipio\": 836, " + \
            " \"uf\": 31, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"kv6G7rkB\", " + \
            " \"anoInicioFormacaoAcademica\": 2016 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"anoInicioFormacaoAcademica\": 2016, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " } " + \
            " ], " + \
            " \"tipoVinculo\": 0, " + \
            " \"dataIngresso\": \"2077-13-00\", " + \
            " \"cargaHoraria\": 40 " + \
            " }, " + \
            " { " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"cpf\": \"55867120325\", " + \
            " \"nome\": \"William Oliveira Sales Jr.\", " + \
            " \"racaCor\": 2, " + \
            " \"logradouro\": \"Rua teste\", " + \
            " \"bairro\": \"UhxYWS\", " + \
            " \"numero\": \"50444\", " + \
            " \"cep\": \"91025075\", " + \
            " \"matriculaRede\": \"7\", " + \
            " \"tipoVinculo\": 1, " + \
            " \"dataIngresso\": \"1971-04-08\", " + \
            " \"dataFim\": \"1927-08-28\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        location_lote = "/v1/profissionais/lote" + "/" + str(res_0.json()['id'])
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id} -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(resolve_location(location_lote, self.baseUrlOfSut + str("/v1/profissionais/lote/cYwHAeKsxrM?page=608&per_page=10&incluir_objetos_processados=false")),
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["status_processamento"] == "Enviado"
        assert res_1.json()["message"] == "Lote recuperado com sucesso. ID: 517424bd-0548-441e-aebe-b5d9839ddfc8"
    
    
    # Calls:
    # 1 - (404) GET:/v1/profissionais/{cpf}
    # 2 - (200) GET:/v1/estudantes/validacao-cadastro
    # Found 13 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_40(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/SF9zbgm",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Nenhum profissional de educação encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/3'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/4'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/5'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/6'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/7'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/8'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/9'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/validacao-cadastro?per_page=10",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Operação realizada com sucesso"
        assert len(res_1.json()["data"]) == 10
        assert res_1.json()["data"][0]["cpf"] == "99999701094"
        assert res_1.json()["data"][0]["numeroNIS"] is None
        assert res_1.json()["data"][0]["situacaoCadastral"] == "Autenticada"
        assert res_1.json()["data"][0]["situacaoCpf"] == "CPF não encontrado na base do BCPF"
        assert res_1.json()["data"][0]["nome"] == "Bryan  Chen"
        assert res_1.json()["data"][0]["nomeValidado"] == True
        assert res_1.json()["data"][0]["dataNascimento"] == "1956-01-11"
        assert res_1.json()["data"][0]["dataNascimentoValidada"] == True
        assert res_1.json()["data"][0]["nomeMaeEstudante"] == "Mr. Daniel Johnson DVM"
        assert res_1.json()["data"][0]["nomeMaeEstudanteValidado"] == True
        assert res_1.json()["data"][0]["dataValidacaoCadastral"] == "2025-03-11 01:39:26"
        assert res_1.json()["data"][1]["cpf"] == "34535377693"
        assert res_1.json()["data"][1]["numeroNIS"] == "11979328182"
        assert res_1.json()["data"][1]["situacaoCadastral"] == "Não autenticada"
        assert res_1.json()["data"][1]["situacaoCpf"] == "Testando o serviço de validação"
        assert res_1.json()["data"][1]["nome"] == "Trevor Hester"
        assert res_1.json()["data"][1]["nomeValidado"] == True
        assert res_1.json()["data"][1]["dataNascimento"] == "1968-02-26"
        assert res_1.json()["data"][1]["dataNascimentoValidada"] == False
        assert res_1.json()["data"][1]["nomeMaeEstudante"] == "Juan Mccullough"
        assert res_1.json()["data"][1]["nomeMaeEstudanteValidado"] == True
        assert res_1.json()["data"][1]["dataValidacaoCadastral"] == "2023-06-16 00:00:00"
        assert res_1.json()["data"][2]["cpf"] == "14064786602"
        assert res_1.json()["data"][2]["numeroNIS"] == "124112231"
        assert res_1.json()["data"][2]["situacaoCadastral"] == "Não autenticada"
        assert res_1.json()["data"][2]["situacaoCpf"] == "Quando há omissão de DIRPF em um dos últimos 5 exercícios"
        assert res_1.json()["data"][2]["nome"] == "Donald Jackson"
        assert res_1.json()["data"][2]["nomeValidado"] == False
        assert res_1.json()["data"][2]["dataNascimento"] == "1954-08-23"
        assert res_1.json()["data"][2]["dataNascimentoValidada"] == False
        assert res_1.json()["data"][2]["nomeMaeEstudante"] == "Timothy Garcia"
        assert res_1.json()["data"][2]["nomeMaeEstudanteValidado"] == True
        assert res_1.json()["data"][2]["dataValidacaoCadastral"] == "2024-04-23 00:00:00"
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_1.json()["pagination"]["total"] == 54714.0
        assert res_1.json()["pagination"]["count"] == 10.0
        assert res_1.json()["pagination"]["per_page"] == 10.0
        assert res_1.json()["pagination"]["current_page"] == 1.0
        assert res_1.json()["pagination"]["total_pages"] == 5472.0
        assert res_1.json()["pagination"]["links"]["previous"] is None
        assert res_1.json()["pagination"]["links"]["next"] == 2.0
    
    
    # Calls:
    # 1 - (422) POST:/v1/profissionais/lote
    # 2 - (201) POST:/v1/profissionais/lote
    # 3 - (201) POST:/v1/profissionais/lote
    # 4 - (201) POST:/v1/profissionais/lote
    # 5 - (200) GET:/v1/profissionais/lote
    # Found 15 potential faults of type-code 200
    # Using 6 examples:
    #   1
    #   123456789
    #   2010
    #   2014
    #   44
    #   Universidade Federal do Rio de Janeiro
    @timeout_decorator.timeout(60)
    def test_41(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 422
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "JSON inválido."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpf\": \"62513269136\", " + \
            " \"dataNascimento\": \"EFuM8A2EjVpF\", " + \
            " \"racaCor\": 1, " + \
            " \"email\": \"9b08LcUGnPbQ1B\", " + \
            " \"nomeSocial\": \"test\", " + \
            " \"logradouro\": \"C88\", " + \
            " \"bairro\": \"São Serrano\", " + \
            " \"numero\": \"10070\", " + \
            " \"municipio\": 1100940, " + \
            " \"uf\": 43, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Rio de Janeiro\" " + \
            " } " + \
            " ], " + \
            " \"inep\": 29465400, " + \
            " \"tipoVinculo\": 1, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataFim\": \"2064-01-20\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 430, " + \
            " \"nivelEscolaridade\": 454, " + \
            " \"nome\": \"Aaron Benez Espinoza\", " + \
            " \"racaCor\": 1, " + \
            " \"bairro\": \"São Cervantes\", " + \
            " \"numero\": \"70\", " + \
            " \"municipio\": 2611606, " + \
            " \"inep\": \"33087725\", " + \
            " \"matriculaRede\": \"9P\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 2 " + \
            " }, " + \
            " { " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"nome\": \"Aaron Branco Queirós\", " + \
            " \"genero\": 2, " + \
            " \"racaCor\": 1, " + \
            " \"telefone\": \"3333333\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 2, " + \
            " 472, " + \
            " 3, " + \
            " 1, " + \
            " 3 " + \
            " ], " + \
            " \"sexo\": \"2\", " + \
            " \"bairro\": \"São Lutero\", " + \
            " \"numero\": \"2148\", " + \
            " \"municipio\": 4314902, " + \
            " \"uf\": 996, " + \
            " \"inep\": 41141288, " + \
            " \"formacoesAcademicas\": [], " + \
            " \"matriculaRede\": \"e2XouiaD2aNA 8\", " + \
            " \"dataIngresso\": \"2083-01-15\", " + \
            " \"dataFim\": \"1906-01-11\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 573, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"cpf\": \"66528879087\", " + \
            " \"nome\": \"Aaron Christian Ávila\", " + \
            " \"genero\": 7, " + \
            " \"racaCor\": 0, " + \
            " \"email\": \"aaron.assuncao.soares@fake.com\", " + \
            " \"nomeSocial\": \"rRAEEBPUPdYf\", " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"logradouro\": \"Rua Avenida Ferraz\", " + \
            " \"cep\": \"86024957\", " + \
            " \"uf\": 33, " + \
            " \"inep\": \"26113562\", " + \
            " \"matriculaRede\": \"6skFbRBDrxCwd\", " + \
            " \"dataIngresso\": \"1925-01-01\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nome\": \"11OeB\", " + \
            " \"dataNascimento\": \"2005-11-09\", " + \
            " \"genero\": 4, " + \
            " \"tipoDeficiencia\": [ " + \
            " 3, " + \
            " 137, " + \
            " 106, " + \
            " 3 " + \
            " ], " + \
            " \"sexo\": \"4\", " + \
            " \"bairro\": \"NDxBSr\", " + \
            " \"cep\": \"50037860\", " + \
            " \"municipio\": 3106200, " + \
            " \"uf\": 946, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"TA54jx0SSXC\", " + \
            " \"anoInicioFormacaoAcademica\": 2016, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\" " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6 " + \
            " }, " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Rio de Janeiro\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 1, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"pZ6IF7yEv1tWQYd9\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " } " + \
            " ], " + \
            " \"inep\": 29162840, " + \
            " \"matriculaRede\": \"e2XouiaD2aNA 8\", " + \
            " \"codigoFuncao\": 534, " + \
            " \"dataFim\": \"1919-03-28\", " + \
            " \"cargaHoraria\": 40 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_1.status_code == 201
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nome\": \"QP\", " + \
            " \"dataNascimento\": \"2005-01-21\", " + \
            " \"email\": \"aaron.chaves.marin.jr@fake.com\", " + \
            " \"telefone\": \"11969630845\", " + \
            " \"sexo\": \"5\", " + \
            " \"logradouro\": \"\", " + \
            " \"bairro\": \"São Rios\", " + \
            " \"uf\": 24, " + \
            " \"inep\": 265, " + \
            " \"matriculaRede\": \"Okzhv\", " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"1960-10-03\", " + \
            " \"dataFim\": \"2033-12-17\", " + \
            " \"cargaHoraria\": 40 " + \
            " }, " + \
            " { " + \
            " \"cpf\": \"45294167557\", " + \
            " \"dataNascimento\": \"zGPKLSR5qBS\", " + \
            " \"genero\": 7, " + \
            " \"racaCor\": 5, " + \
            " \"email\": \"aaron.andre.garcia.sobrinho@fake.com\", " + \
            " \"telefone\": \"11933018135\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 3, " + \
            " 1, " + \
            " 3, " + \
            " 1, " + \
            " 3 " + \
            " ], " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"bairro\": \"São Valência\", " + \
            " \"numero\": \"lQnH\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 1, " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"anoInicioFormacaoAcademica\": 2016 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\" " + \
            " }, " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoInicioFormacaoAcademica\": 2016 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6 " + \
            " } " + \
            " ], " + \
            " \"inep\": 16001761, " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 1, " + \
            " \"dataIngresso\": \"2087-05-09\", " + \
            " \"cargaHoraria\": 44 " + \
            " }, " + \
            " { " + \
            " \"nome\": \"Aaron Alexandre Benez\", " + \
            " \"dataNascimento\": \"2005-05-22\", " + \
            " \"genero\": 6, " + \
            " \"racaCor\": 2, " + \
            " \"email\": \"qcbeJwsFcC3\", " + \
            " \"telefone\": \"11949911257\", " + \
            " \"nomeSocial\": \"test\", " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"logradouro\": \"Rua Rua Nelson Santana\", " + \
            " \"bairro\": \"São Urias\", " + \
            " \"cep\": \"94503721\", " + \
            " \"uf\": 11, " + \
            " \"inep\": \"29479800\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"2088-09-28\", " + \
            " \"dataFim\": \"2000-01-17\" " + \
            " }, " + \
            " { " + \
            " \"cpf\": \"10755447000\", " + \
            " \"nome\": \"Aaron Breno Faro\", " + \
            " \"dataNascimento\": \"2009-05-08\", " + \
            " \"telefone\": \"pbaw8ORoipCsq5Mq\", " + \
            " \"bairro\": \"São Fonseca\", " + \
            " \"municipio\": 2700409, " + \
            " \"uf\": 26, " + \
            " \"inep\": 42108837, " + \
            " \"tipoVinculo\": 1, " + \
            " \"dataIngresso\": \"2016-06-27\", " + \
            " \"cargaHoraria\": 40 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nivelEscolaridade\": 260, " + \
            " \"cpf\": \"25206910694\", " + \
            " \"email\": \"aaron.beltrao.neto@fake.com\", " + \
            " \"telefone\": \"11933018135\", " + \
            " \"nomeSocial\": \"8hbo50Mnoym\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1, " + \
            " 2, " + \
            " 2 " + \
            " ], " + \
            " \"sexo\": \"2\", " + \
            " \"numero\": \"\", " + \
            " \"inep\": 35004234, " + \
            " \"matriculaRede\": \"123456789\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 168, " + \
            " \"dataFim\": \"1972-02-03\", " + \
            " \"cargaHoraria\": 40 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_2.status_code == 201
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpf\": \"42068202522\", " + \
            " \"genero\": 4, " + \
            " \"racaCor\": 0, " + \
            " \"email\": \"aaron.aragao@fake.com\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 2 " + \
            " ], " + \
            " \"logradouro\": \"Rua Largo Stephanie Salas\", " + \
            " \"bairro\": \"São Brito\", " + \
            " \"numero\": \"2423\", " + \
            " \"cep\": \"90795413\", " + \
            " \"uf\": 27, " + \
            " \"inep\": 322, " + \
            " \"matriculaRede\": \"Teste Ricardo\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 418, " + \
            " \"cargaHoraria\": 44 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nivelEscolaridade\": 62, " + \
            " \"cpf\": \"97079185432\", " + \
            " \"dataNascimento\": \"2006-07-17\", " + \
            " \"racaCor\": 0, " + \
            " \"logradouro\": \"Rua Av. Fátima\", " + \
            " \"bairro\": \"yIhAR3GFMDWQ\", " + \
            " \"uf\": 819, " + \
            " \"inep\": \"32056524\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"lR7NYTEdF093\", " + \
            " \"anoInicioFormacaoAcademica\": 806, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\" " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"jvjvjv1\", " + \
            " \"dataIngresso\": \"1900-02-23\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_3 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_3.status_code == 201
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/0/dataEnvio'] String "2025-05-04 00:38:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1/dataEnvio'] String "2025-05-04 00:38:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2/dataEnvio'] String "2025-05-04 00:38:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/3/dataEnvio'] String "2025-05-04 00:37:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/4/dataEnvio'] String "2025-05-04 00:37:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/5/dataEnvio'] String "2025-05-04 00:37:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/6/dataEnvio'] String "2025-05-04 00:37:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/7/dataEnvio'] String "2025-05-04 00:37:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/8/dataEnvio'] String "2025-05-04 00:37:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/9/dataEnvio'] String "2025-05-04 00:37:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_4.json()["data"]) == 10
        assert res_4.json()["data"][0]["dataEnvio"] == "2025-05-04 00:38:13"
        assert res_4.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_4.json()["data"][1]["dataEnvio"] == "2025-05-04 00:38:10"
        assert res_4.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_4.json()["data"][2]["dataEnvio"] == "2025-05-04 00:38:06"
        assert res_4.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_4.json()["pagination"]["total"] == 2513.0
        assert res_4.json()["pagination"]["count"] == 10.0
        assert res_4.json()["pagination"]["per_page"] == 10.0
        assert res_4.json()["pagination"]["current_page"] == 1.0
        assert res_4.json()["pagination"]["total_pages"] == 252.0
        assert res_4.json()["pagination"]["links"]["previous"] is None
        assert res_4.json()["pagination"]["links"]["next"] == 2.0
    
    
    # Calls:
    # 1 - (422) POST:/v1/profissionais/lote
    # 2 - (201) POST:/v1/profissionais/lote
    # 3 - (200) GET:/v1/profissionais/lote
    # Found 13 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_42(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 422
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "JSON inválido."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"nome\": \"pGHTXsfG\", " + \
            " \"dataNascimento\": \"2009-09-30\", " + \
            " \"genero\": 9, " + \
            " \"telefone\": \"11969630845\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 923, " + \
            " 2, " + \
            " 2 " + \
            " ], " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"logradouro\": \"Rua Av. das Neves\", " + \
            " \"cep\": \"77379452\", " + \
            " \"inep\": \"29482291\", " + \
            " \"matriculaRede\": \"e2XouiaD2aNA 8\", " + \
            " \"codigoFuncao\": 479, " + \
            " \"dataIngresso\": \"1984-00-14\", " + \
            " \"dataFim\": \"2096-02-00\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_1.status_code == 201
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/0/dataEnvio'] String "2025-05-04 00:37:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1/dataEnvio'] String "2025-05-04 00:36:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2/dataEnvio'] String "2025-05-04 00:35:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/3/dataEnvio'] String "2025-05-04 00:33:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/4/dataEnvio'] String "2025-05-04 00:33:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/5/dataEnvio'] String "2025-05-04 00:33:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/6/dataEnvio'] String "2025-05-04 00:33:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/7/dataEnvio'] String "2025-05-04 00:32:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/8/dataEnvio'] String "2025-05-04 00:32:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/9/dataEnvio'] String "2025-05-04 00:32:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote?page=1",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_2.json()["data"]) == 10
        assert res_2.json()["data"][0]["dataEnvio"] == "2025-05-04 00:37:08"
        assert res_2.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_2.json()["data"][1]["dataEnvio"] == "2025-05-04 00:36:26"
        assert res_2.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_2.json()["data"][2]["dataEnvio"] == "2025-05-04 00:35:08"
        assert res_2.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_2.json()["pagination"]["total"] == 2504.0
        assert res_2.json()["pagination"]["count"] == 10.0
        assert res_2.json()["pagination"]["per_page"] == 10.0
        assert res_2.json()["pagination"]["current_page"] == 1.0
        assert res_2.json()["pagination"]["total_pages"] == 251.0
        assert res_2.json()["pagination"]["links"]["previous"] is None
        assert res_2.json()["pagination"]["links"]["next"] == 2.0
    
    
    # Calls:
    # 1 - (201) POST:/v1/profissionais/lote
    # 2 - (422) POST:/v1/profissionais/lote
    # 3 - (201) POST:/v1/profissionais/lote
    # 4 - (201) POST:/v1/profissionais/lote
    # 5 - (201) POST:/v1/profissionais/lote
    # 6 - (422) POST:/v1/profissionais/lote
    # 7 - (201) POST:/v1/profissionais/lote
    # 8 - (200) GET:/v1/profissionais/lote
    # Found 17 potential faults of type-code 200
    # Using 6 examples:
    #   1
    #   123456789
    #   2010
    #   2014
    #   44
    #   5
    @timeout_decorator.timeout(60)
    def test_43(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nivelEscolaridade\": 5, " + \
            " \"cpf\": \"YJh\", " + \
            " \"telefone\": \"11933018135\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 3, " + \
            " 2, " + \
            " 3, " + \
            " 2 " + \
            " ], " + \
            " \"logradouro\": \"Rua Rua Joaquim\", " + \
            " \"bairro\": \"LwPO\", " + \
            " \"cep\": \"s1\", " + \
            " \"uf\": 14, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"123456789\", " + \
            " \"tipoVinculo\": 1, " + \
            " \"codigoFuncao\": 863 " + \
            " }, " + \
            " { " + \
            " \"nome\": \"ubDSieKg\", " + \
            " \"dataNascimento\": \"2010-11-18\", " + \
            " \"genero\": 42, " + \
            " \"racaCor\": 0, " + \
            " \"formacoesAcademicas\": [], " + \
            " \"inep\": 41080190, " + \
            " \"dataIngresso\": \"2041-12-29\", " + \
            " \"dataFim\": \"2086-10-13\", " + \
            " \"cargaHoraria\": 44 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_1.status_code == 422
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "JSON inválido."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"dataNascimento\": \"2008-11-26\", " + \
            " \"racaCor\": 42, " + \
            " \"email\": \"aaron.antonio.branco@fake.com\", " + \
            " \"telefone\": \"11969630845\", " + \
            " \"nomeSocial\": \"vMKxyEanO\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1, " + \
            " 1, " + \
            " 3, " + \
            " 2 " + \
            " ], " + \
            " \"sexo\": \"5\", " + \
            " \"logradouro\": \"Rua Av. Bonilha\", " + \
            " \"bairro\": \"TfggQTxi7TtS\", " + \
            " \"numero\": \"50922\", " + \
            " \"cep\": \"50384669\", " + \
            " \"inep\": 32060696, " + \
            " \"matriculaRede\": \"7\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"cpf\": \"72332513477\", " + \
            " \"racaCor\": 42, " + \
            " \"email\": \"aaron.cezar.campos@fake.com\", " + \
            " \"nomeSocial\": \"YXWGpw\", " + \
            " \"bairro\": \"São Barreto\", " + \
            " \"numero\": \"8316\", " + \
            " \"municipio\": 3304557, " + \
            " \"inep\": \"41354524\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 1, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " } " + \
            " ], " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"1960-02-22\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 604, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"genero\": 42, " + \
            " \"racaCor\": 3, " + \
            " \"email\": \"aaron.bonilha.valente@fake.com\", " + \
            " \"nomeSocial\": \"rRAEEBPUPdYf\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 3, " + \
            " 2, " + \
            " 890, " + \
            " 3 " + \
            " ], " + \
            " \"sexo\": \"5\", " + \
            " \"bairro\": \"São Alcantara\", " + \
            " \"numero\": \"32\", " + \
            " \"cep\": \"\", " + \
            " \"uf\": 427, " + \
            " \"inep\": 32056524, " + \
            " \"matriculaRede\": \"7\", " + \
            " \"dataIngresso\": \"1927-13-20\", " + \
            " \"dataFim\": \"2091-01-32\", " + \
            " \"cargaHoraria\": 40 " + \
            " }, " + \
            " { " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"nome\": \"Aaron Alves\", " + \
            " \"dataNascimento\": \"2005-06-19\", " + \
            " \"genero\": 1, " + \
            " \"tipoDeficiencia\": [ " + \
            " 1, " + \
            " 2, " + \
            " 3, " + \
            " 1 " + \
            " ], " + \
            " \"logradouro\": \"Rua Rua Benício Solano\", " + \
            " \"cep\": \"81538222\", " + \
            " \"matriculaRede\": \"56789\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataFim\": \"2006-03-19\", " + \
            " \"cargaHoraria\": 44 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nivelEscolaridade\": 428759510, " + \
            " \"cpf\": \"96757311097\", " + \
            " \"dataNascimento\": \"6Fa6VzKQ7u33c\", " + \
            " \"genero\": 3, " + \
            " \"racaCor\": 0, " + \
            " \"sexo\": \"3\", " + \
            " \"numero\": \"281\", " + \
            " \"cep\": \"25802037\", " + \
            " \"municipio\": 945, " + \
            " \"uf\": 31, " + \
            " \"inep\": 33004803, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoInicioFormacaoAcademica\": 490, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " } " + \
            " ], " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 2 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_2.status_code == 201
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"cpf\": \"92967602248\", " + \
            " \"dataNascimento\": \"2010-04-24\", " + \
            " \"email\": \"aaron.alves@fake.com\", " + \
            " \"telefone\": \"DBfv5Cos4qCi\", " + \
            " \"nomeSocial\": \"test\", " + \
            " \"logradouro\": \"Rua Travessa Giovane D\u0027ávila\", " + \
            " \"uf\": 11, " + \
            " \"inep\": \"16004124\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6 " + \
            " }, " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"xOmq9k\", " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"3xDsX_Q9\", " + \
            " \"dataIngresso\": \"2078-12-13\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_3 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_3.status_code == 201
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"nome\": \"Aaron Bonilha Jr.\", " + \
            " \"dataNascimento\": \"xDjk\", " + \
            " \"genero\": 5, " + \
            " \"racaCor\": 2, " + \
            " \"tipoDeficiencia\": [ " + \
            " 3, " + \
            " 1, " + \
            " 2, " + \
            " 2, " + \
            " 1 " + \
            " ], " + \
            " \"sexo\": \"3\", " + \
            " \"logradouro\": \"Rua R. Salgado\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 1, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 862, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 1, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"e2XouiaD2aNA 8\", " + \
            " \"tipoVinculo\": 1, " + \
            " \"dataIngresso\": \"1944-02-30\" " + \
            " }, " + \
            " { " + \
            " \"genero\": 3, " + \
            " \"racaCor\": 4, " + \
            " \"email\": \"AFTER-TWO@AFTER-TWO.com\", " + \
            " \"nomeSocial\": \"YXWGpw\", " + \
            " \"sexo\": \"0\", " + \
            " \"logradouro\": \"Rua Largo Fernando Perez\", " + \
            " \"numero\": \"76\", " + \
            " \"cep\": \"Y7D9E\", " + \
            " \"municipio\": 2408102, " + \
            " \"inep\": \"42158265\", " + \
            " \"tipoVinculo\": 792 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"dataNascimento\": \"2008-11-02\", " + \
            " \"email\": \"6t2c\", " + \
            " \"telefone\": \"11969630845\", " + \
            " \"nomeSocial\": \"8hbo50Mnoym\", " + \
            " \"bairro\": \"São Rocha\", " + \
            " \"cep\": \"UfdRG\", " + \
            " \"municipio\": 4314902, " + \
            " \"uf\": 24, " + \
            " \"inep\": 33230811, " + \
            " \"matriculaRede\": \"7\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 1 " + \
            " }, " + \
            " { " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"nome\": \"Aaron André Garcia Sobrinho\", " + \
            " \"dataNascimento\": \"2005-12-16\", " + \
            " \"racaCor\": 42, " + \
            " \"email\": \"aaron.abreu.davila@fake.com\", " + \
            " \"sexo\": \"0\", " + \
            " \"logradouro\": \"qMkW7sMVsB5a6A\", " + \
            " \"cep\": \"68457843\", " + \
            " \"uf\": 43, " + \
            " \"inep\": \"29478430\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 1 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 1, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"o7\", " + \
            " \"anoInicioFormacaoAcademica\": 532 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " } " + \
            " ], " + \
            " \"codigoFuncao\": 67, " + \
            " \"dataIngresso\": \"1922-12-16\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nome\": \"Aaron Barreto Beltrão Neto\", " + \
            " \"dataNascimento\": \"2008-07-01\", " + \
            " \"racaCor\": 1, " + \
            " \"email\": \"RTT0VngF3Deo0O@example.com\", " + \
            " \"telefone\": \"11933018135\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 2 " + \
            " ], " + \
            " \"numero\": \"72975\", " + \
            " \"cep\": \"95828353\", " + \
            " \"uf\": 33, " + \
            " \"inep\": 41069056, " + \
            " \"tipoVinculo\": 1, " + \
            " \"cargaHoraria\": 40 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_4 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_4.status_code == 201
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Operação realizada com sucesso"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_5 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_5.status_code == 422
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "JSON inválido."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"nivelEscolaridade\": 718, " + \
            " \"cpf\": \"15710401889\", " + \
            " \"nome\": \"Aaron Carvalho Colaço\", " + \
            " \"racaCor\": 0, " + \
            " \"email\": \"aaron.alcantara.neto@fake.com\", " + \
            " \"telefone\": \"11933018135\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 810, " + \
            " 211 " + \
            " ], " + \
            " \"sexo\": \"2\", " + \
            " \"logradouro\": \"Rua Largo Clara Lira\", " + \
            " \"municipio\": 540, " + \
            " \"inep\": 33088152, " + \
            " \"matriculaRede\": \"56789\", " + \
            " \"codigoFuncao\": 1, " + \
            " \"dataFim\": \"1903-04-19\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nivelEscolaridade\": 5, " + \
            " \"cpf\": \"34309536697\", " + \
            " \"nome\": \"is\", " + \
            " \"dataNascimento\": \"_r\", " + \
            " \"genero\": 3, " + \
            " \"racaCor\": 4, " + \
            " \"email\": \"aaron.brito.aranda@fake.com\", " + \
            " \"telefone\": \"OoS6Oshxx9dnoma\", " + \
            " \"bairro\": \"São Madeira\", " + \
            " \"numero\": \"97\", " + \
            " \"uf\": 809, " + \
            " \"inep\": \"41078179\", " + \
            " \"matriculaRede\": \"Teste Ricardo\", " + \
            " \"dataIngresso\": \"1987-03-26\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_6 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_6.status_code == 201
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == True
        assert res_6.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/0/dataEnvio'] String "2025-05-03 11:25:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1/dataEnvio'] String "2025-05-03 11:24:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2/dataEnvio'] String "2025-05-03 11:24:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/3/dataEnvio'] String "2025-05-03 11:22:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/4/dataEnvio'] String "2025-05-03 11:20:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/5/dataEnvio'] String "2025-05-03 11:20:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/6/dataEnvio'] String "2025-05-03 11:19:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/7/dataEnvio'] String "2025-05-03 11:16:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/8/dataEnvio'] String "2025-05-03 11:16:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/9/dataEnvio'] String "2025-05-03 11:15:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_7 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote?page=57",
                    headers=headers)
        
        assert res_7.status_code == 200
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == True
        assert res_7.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_7.json()["data"]) == 10
        assert res_7.json()["data"][0]["dataEnvio"] == "2025-05-03 11:25:59"
        assert res_7.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_7.json()["data"][1]["dataEnvio"] == "2025-05-03 11:24:53"
        assert res_7.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_7.json()["data"][2]["dataEnvio"] == "2025-05-03 11:24:50"
        assert res_7.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_7.json()["pagination"]["total"] == 2510.0
        assert res_7.json()["pagination"]["count"] == 10.0
        assert res_7.json()["pagination"]["per_page"] == 10.0
        assert res_7.json()["pagination"]["current_page"] == 57.0
        assert res_7.json()["pagination"]["total_pages"] == 251.0
        assert res_7.json()["pagination"]["links"]["previous"] == 56.0
        assert res_7.json()["pagination"]["links"]["next"] == 58.0
    
    
    # Calls:
    # (200) GET:/v1/estudantes/solicitacoes-alteracoes
    # Found 18 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_44(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/3'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/4'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/5'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/6'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/7'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/8'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/9'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/10'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/11'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/12'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/13'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/14'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/solicitacoes-alteracoes",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        assert len(res_0.json()["data"]) == 15
        assert res_0.json()["data"][0]["cpfAtual"] == "13213485179"
        assert res_0.json()["data"][0]["cpfNovo"] == "13213485179"
        assert res_0.json()["data"][0]["situacaoCpf"] is None
        assert res_0.json()["data"][0]["descricaoSituacaoCpf"] is None
        assert res_0.json()["data"][0]["tipoSituacaoCpf"] is None
        assert res_0.json()["data"][0]["nomeAtual"] == "Audrey Roob"
        assert res_0.json()["data"][0]["nomeNovo"] == "nome certo"
        assert res_0.json()["data"][0]["nomeValidado"] is None
        assert res_0.json()["data"][0]["dataNascimentoAtual"] == "2024-12-28"
        assert res_0.json()["data"][0]["dataNascimentoNovo"] == "2024-12-28"
        assert res_0.json()["data"][0]["dataNascimentoValidada"] is None
        assert res_0.json()["data"][0]["nomeMaeEstudanteAtual"] == "Teresa Harris IV"
        assert res_0.json()["data"][0]["nomeMaeEstudanteNovo"] == "Teresa Harris IV"
        assert res_0.json()["data"][0]["nomeMaeEstudanteValidado"] is None
        assert res_0.json()["data"][0]["dataValidacaoCadastral"] is None
        assert res_0.json()["data"][1]["cpfAtual"] == "49255179888"
        assert res_0.json()["data"][1]["cpfNovo"] == "02742633359"
        assert res_0.json()["data"][1]["situacaoCpf"] is None
        assert res_0.json()["data"][1]["descricaoSituacaoCpf"] is None
        assert res_0.json()["data"][1]["tipoSituacaoCpf"] is None
        assert res_0.json()["data"][1]["nomeAtual"] == "111"
        assert res_0.json()["data"][1]["nomeNovo"] == "111"
        assert res_0.json()["data"][1]["nomeValidado"] is None
        assert res_0.json()["data"][1]["dataNascimentoAtual"] == "2024-12-28"
        assert res_0.json()["data"][1]["dataNascimentoNovo"] == "2024-12-28"
        assert res_0.json()["data"][1]["dataNascimentoValidada"] is None
        assert res_0.json()["data"][1]["nomeMaeEstudanteAtual"] == "Valentina Rezende"
        assert res_0.json()["data"][1]["nomeMaeEstudanteNovo"] == "Valentina Rezende"
        assert res_0.json()["data"][1]["nomeMaeEstudanteValidado"] is None
        assert res_0.json()["data"][1]["dataValidacaoCadastral"] is None
        assert res_0.json()["data"][2]["cpfAtual"] == "49255179888"
        assert res_0.json()["data"][2]["cpfNovo"] == "02742633359"
        assert res_0.json()["data"][2]["situacaoCpf"] is None
        assert res_0.json()["data"][2]["descricaoSituacaoCpf"] is None
        assert res_0.json()["data"][2]["tipoSituacaoCpf"] is None
        assert res_0.json()["data"][2]["nomeAtual"] == "111"
        assert res_0.json()["data"][2]["nomeNovo"] == "111"
        assert res_0.json()["data"][2]["nomeValidado"] is None
        assert res_0.json()["data"][2]["dataNascimentoAtual"] == "2024-12-28"
        assert res_0.json()["data"][2]["dataNascimentoNovo"] == "2024-12-28"
        assert res_0.json()["data"][2]["dataNascimentoValidada"] is None
        assert res_0.json()["data"][2]["nomeMaeEstudanteAtual"] == "Valentina Rezende"
        assert res_0.json()["data"][2]["nomeMaeEstudanteNovo"] == "Valentina Rezende"
        assert res_0.json()["data"][2]["nomeMaeEstudanteValidado"] is None
        assert res_0.json()["data"][2]["dataValidacaoCadastral"] is None
        # Skipping assertions on the remaining 12 elements. This limit of 3 elements can be increased in the configurations
        assert res_0.json()["pagination"]["total"] == 72.0
        assert res_0.json()["pagination"]["count"] == 15.0
        assert res_0.json()["pagination"]["per_page"] == 15.0
        assert res_0.json()["pagination"]["current_page"] == 1.0
        assert res_0.json()["pagination"]["total_pages"] == 5.0
        assert res_0.json()["pagination"]["links"]["previous"] is None
        assert res_0.json()["pagination"]["links"]["next"] == 2.0
    
    
    # Calls:
    # 1 - (401) GET:/v1/estudantes/lote/{id}
    # 2 - (422) POST:/v1/profissionais
    # 3 - (201) POST:/v1/estudantes/lote
    # 4 - (200) GET:/v1/estudantes/validacao-cadastro
    # 5 - (200) GET:/v1/profissionais/inep/{inep}
    # 6 - (200) PATCH:/v1/estudantes/lote
    # 7 - (200) GET:/v1/estudantes/lote
    # Found 24 potential faults of type-code 200
    # Using 5 examples:
    #   2010
    #   2014
    #   25
    #   5
    #   Universidade Federal do Rio de Janeiro
    @timeout_decorator.timeout(60)
    def test_45(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Response status 401 not defined for path '/v1/estudantes/lote/{id}'.
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/851db492-7ab1-4c03-b1bf-63fa43a126b5?" + 
                    "page=803&" + 
                    "incluir_objetos_processados=false",
                    headers=headers)
        
        assert res_0.status_code == 401
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não autorizado"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nivelEscolaridade\": 5, " + \
            " \"cpf\": \"45107511848\", " + \
            " \"dataNascimento\": \"2010-07-06\", " + \
            " \"telefone\": \"0W\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 2, " + \
            " 3 " + \
            " ], " + \
            " \"sexo\": \"4\", " + \
            " \"bairro\": \"São Molina\", " + \
            " \"cep\": \"46735009\", " + \
            " \"municipio\": 565, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Rio de Janeiro\", " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"sWw6Oe\", " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7 " + \
            " } " + \
            " ], " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataFim\": \"1988-00-31\", " + \
            " \"cargaHoraria\": 40 " + \
            " } "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_1.status_code == 422
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #1 ($nome) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"numeroNISResponsavel\": \"23245767702\", " + \
            " \"cpf\": \"62039187847\", " + \
            " \"nome\": \"w0aFH7uGOGq\", " + \
            " \"dataNascimento\": \"2008-08-10\", " + \
            " \"telefone\": \"11949911257\", " + \
            " \"nomeSocial\": \"rRAEEBPUPdYf\", " + \
            " \"tipoDeficiencia\": [], " + \
            " \"numeroNIS\": \"67008333735\", " + \
            " \"orgaoEmissor\": \"hksBaEMt\", " + \
            " \"certidaoNascimento\": \"yfBVAf\", " + \
            " \"bairro\": \"São da Silva\", " + \
            " \"numero\": \"28\", " + \
            " \"cep\": \"\", " + \
            " \"municipio\": 1100940, " + \
            " \"estudantePpl\": 42, " + \
            " \"dataInicioMatricula\": \"2059-07-06\", " + \
            " \"serieAno\": 25, " + \
            " \"matriculaRede\": \"56789\", " + \
            " \"formaOrganizacaoTurma\": 1, " + \
            " \"anoMatricula\": 2024 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_2.status_code == 201
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/3'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/4'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/5'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/6'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/7'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/8'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/9'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/10'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/11'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/12'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/13'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/14'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/validacao-cadastro?page=975",
                    headers=headers)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Operação realizada com sucesso"
        assert len(res_3.json()["data"]) == 15
        assert res_3.json()["data"][0]["cpf"] == "45812543100"
        assert res_3.json()["data"][0]["numeroNIS"] == "19073566296"
        assert res_3.json()["data"][0]["situacaoCadastral"] == "Não autenticada"
        assert res_3.json()["data"][0]["situacaoCpf"] == "Quando não há inconsistência cadastral e não constar omissão de DIRPF"
        assert res_3.json()["data"][0]["nome"] == "Clarice Dantas"
        assert res_3.json()["data"][0]["nomeValidado"] == False
        assert res_3.json()["data"][0]["dataNascimento"] == "1960-12-30"
        assert res_3.json()["data"][0]["dataNascimentoValidada"] == False
        assert res_3.json()["data"][0]["nomeMaeEstudante"] == "Yago Guterres"
        assert res_3.json()["data"][0]["nomeMaeEstudanteValidado"] == False
        assert res_3.json()["data"][0]["dataValidacaoCadastral"] == "2023-05-25 00:00:00"
        assert res_3.json()["data"][1]["cpf"] == "39271870115"
        assert res_3.json()["data"][1]["numeroNIS"] == "41488651771"
        assert res_3.json()["data"][1]["situacaoCadastral"] == "Não autenticada"
        assert res_3.json()["data"][1]["situacaoCpf"] == "Quando não há inconsistência cadastral e não constar omissão de DIRPF"
        assert res_3.json()["data"][1]["nome"] == "Aurora Ramires"
        assert res_3.json()["data"][1]["nomeValidado"] == False
        assert res_3.json()["data"][1]["dataNascimento"] == "1983-12-26"
        assert res_3.json()["data"][1]["dataNascimentoValidada"] == False
        assert res_3.json()["data"][1]["nomeMaeEstudante"] == "Igor da Veiga"
        assert res_3.json()["data"][1]["nomeMaeEstudanteValidado"] == False
        assert res_3.json()["data"][1]["dataValidacaoCadastral"] == "2025-05-01 22:00:50"
        assert res_3.json()["data"][2]["cpf"] == "41342326601"
        assert res_3.json()["data"][2]["numeroNIS"] == "05142472288"
        assert res_3.json()["data"][2]["situacaoCadastral"] == "Inexistente"
        assert res_3.json()["data"][2]["situacaoCpf"] == "CPF não encontrado na base do BCPF"
        assert res_3.json()["data"][2]["nome"] == "Alexandre Fontes"
        assert res_3.json()["data"][2]["nomeValidado"] == False
        assert res_3.json()["data"][2]["dataNascimento"] == "1968-07-13"
        assert res_3.json()["data"][2]["dataNascimentoValidada"] == False
        assert res_3.json()["data"][2]["nomeMaeEstudante"] == "Gael da Paz"
        assert res_3.json()["data"][2]["nomeMaeEstudanteValidado"] == False
        assert res_3.json()["data"][2]["dataValidacaoCadastral"] == "2025-05-01 21:47:00"
        # Skipping assertions on the remaining 12 elements. This limit of 3 elements can be increased in the configurations
        assert res_3.json()["pagination"]["total"] == 54714.0
        assert res_3.json()["pagination"]["count"] == 15.0
        assert res_3.json()["pagination"]["per_page"] == 15.0
        assert res_3.json()["pagination"]["current_page"] == 975.0
        assert res_3.json()["pagination"]["total_pages"] == 3648.0
        assert res_3.json()["pagination"]["links"]["previous"] == 974.0
        assert res_3.json()["pagination"]["links"]["next"] == 976.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/inep/43005063",
                    headers=headers)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_4.json()["data"]) == 0
        assert res_4.json()["pagination"]["total"] == 0.0
        assert res_4.json()["pagination"]["count"] == 0.0
        assert res_4.json()["pagination"]["per_page"] == 10.0
        assert res_4.json()["pagination"]["current_page"] == 1.0
        assert res_4.json()["pagination"]["total_pages"] == 1.0
        assert res_4.json()["pagination"]["links"]["previous"] is None
        assert res_4.json()["pagination"]["links"]["next"] is None
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_31_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_32_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_33_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_5 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_5.status_code == 200
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == True
        assert res_5.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_5.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_6 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?" + 
                    "page=247&" + 
                    "per_page=1258382974",
                    headers=headers)
        
        assert res_6.status_code == 200
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == True
        assert res_6.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_6.json()["data"]) == 0
        assert res_6.json()["pagination"]["total"] == 9593.0
        assert res_6.json()["pagination"]["count"] == 0.0
        assert res_6.json()["pagination"]["per_page"] == 1.258382974E9
        assert res_6.json()["pagination"]["current_page"] == 247.0
        assert res_6.json()["pagination"]["total_pages"] == 1.0
        assert res_6.json()["pagination"]["links"]["previous"] == 246.0
        assert res_6.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # 1 - (200) GET:/v1/profissionais/inep/{inep}
    # 2 - (200) GET:/v1/estudantes/lote/{id}
    # 3 - (200) GET:/v1/profissionais
    # 4 - (400) GET:/v1/estudantes/lote/{id}/erros
    # 5 - (200) GET:/v1/estudantes/lote
    # 6 - (201) POST:/v1/profissionais/lote
    # 7 - (404) GET:/v1/profissionais/{cpf}
    # 8 - (200) GET:/v1/profissionais/lote
    # 9 - (200) GET:/v1/estudantes/validacao-cadastro
    # 10 - (400) GET:/v1/estudantes/lote/{id}/erros
    # Found 44 potential faults of type-code 200
    # Using 2 examples:
    #   1
    #   2014
    @timeout_decorator.timeout(60)
    def test_46(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/inep/41352947",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_0.json()["data"]) == 0
        assert res_0.json()["pagination"]["total"] == 0.0
        assert res_0.json()["pagination"]["count"] == 0.0
        assert res_0.json()["pagination"]["per_page"] == 10.0
        assert res_0.json()["pagination"]["current_page"] == 1.0
        assert res_0.json()["pagination"]["total_pages"] == 1.0
        assert res_0.json()["pagination"]["links"]["previous"] is None
        assert res_0.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/1277b9ad-1045-47b6-b02f-f51078b5eddb?" + 
                    "page=40&" + 
                    "per_page=916",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["status_processamento"] == "Enviado"
        assert res_1.json()["message"] == "Lote recuperado com sucesso. ID: 1277b9ad-1045-47b6-b02f-f51078b5eddb"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?per_page=10",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_2.json()["data"]) == 3
        assert res_2.json()["data"][0]["tipoEnsinoMedio"] == 2.0
        assert res_2.json()["data"][0]["nivelEscolaridade"] == 10.0
        assert res_2.json()["data"][0]["cpf"] == "43839402000"
        assert res_2.json()["data"][0]["nome"] == "João da Silva 2"
        assert res_2.json()["data"][0]["dataNascimento"] == "1985-06-15"
        assert res_2.json()["data"][0]["genero"] == 1.0
        assert res_2.json()["data"][0]["racaCor"] == 2.0
        assert res_2.json()["data"][0]["email"] == "joao.silva@email.com"
        assert res_2.json()["data"][0]["telefone"] is None
        assert res_2.json()["data"][0]["nomeSocial"] is None
        assert res_2.json()["data"][0]["logradouro"] == "Rua das Flores"
        assert res_2.json()["data"][0]["bairro"] == "Centro"
        assert res_2.json()["data"][0]["numero"] == "123"
        assert res_2.json()["data"][0]["cep"] == "01001000"
        assert res_2.json()["data"][0]["municipio"] == 2700409.0
        assert res_2.json()["data"][0]["uf"] == 27.0
        assert res_2.json()["data"][0]["codigoInstituicao"] == 6.0
        assert res_2.json()["data"][0]["cargaHoraria"] == 40.0
        assert res_2.json()["data"][0]["situacaoAtiva"] == True
        assert res_2.json()["data"][0]["dataIngresso"] == "2015-02-10"
        assert res_2.json()["data"][0]["dataFim"] is None
        assert res_2.json()["data"][0]["codigoFuncao"] == 2.0
        assert res_2.json()["data"][0]["matriculaRede"] == "56789"
        assert res_2.json()["data"][0]["tipoVinculo"] == 0.0
        assert res_2.json()["data"][0]["inep"] == "27014088"
        assert len(res_2.json()["data"][0]["tipoDeficiencia"]) == 3
        assert res_2.json()["data"][0]["tipoDeficiencia"][0] == 1.0
        assert res_2.json()["data"][0]["tipoDeficiencia"][1] == 2.0
        assert res_2.json()["data"][0]["tipoDeficiencia"][2] == 3.0
        assert len(res_2.json()["data"][0]["formacoesAcademicas"]) == 2
        assert res_2.json()["data"][0]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_2.json()["data"][0]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_2.json()["data"][0]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_2.json()["data"][0]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_2.json()["data"][0]["formacoesAcademicas"][0]["principal"] is None
        assert res_2.json()["data"][0]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_2.json()["data"][0]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_2.json()["data"][0]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_2.json()["data"][0]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_2.json()["data"][0]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_2.json()["data"][0]["formacoesAcademicas"][1]["principal"] is None
        assert res_2.json()["data"][0]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_2.json()["data"][1]["tipoEnsinoMedio"] == 2.0
        assert res_2.json()["data"][1]["nivelEscolaridade"] == 10.0
        assert res_2.json()["data"][1]["cpf"] == "33722248094"
        assert res_2.json()["data"][1]["nome"] == "João da Silva 2"
        assert res_2.json()["data"][1]["dataNascimento"] == "1985-06-15"
        assert res_2.json()["data"][1]["genero"] == 1.0
        assert res_2.json()["data"][1]["racaCor"] == 2.0
        assert res_2.json()["data"][1]["email"] == "joao.silva@email.com"
        assert res_2.json()["data"][1]["telefone"] is None
        assert res_2.json()["data"][1]["nomeSocial"] is None
        assert res_2.json()["data"][1]["logradouro"] == "Rua das Flores"
        assert res_2.json()["data"][1]["bairro"] == "Centro"
        assert res_2.json()["data"][1]["numero"] == "123"
        assert res_2.json()["data"][1]["cep"] == "01001000"
        assert res_2.json()["data"][1]["municipio"] == 2700409.0
        assert res_2.json()["data"][1]["uf"] == 27.0
        assert res_2.json()["data"][1]["codigoInstituicao"] == 6.0
        assert res_2.json()["data"][1]["cargaHoraria"] == 40.0
        assert res_2.json()["data"][1]["situacaoAtiva"] == True
        assert res_2.json()["data"][1]["dataIngresso"] == "2015-02-10"
        assert res_2.json()["data"][1]["dataFim"] is None
        assert res_2.json()["data"][1]["codigoFuncao"] == 2.0
        assert res_2.json()["data"][1]["matriculaRede"] == "56789"
        assert res_2.json()["data"][1]["tipoVinculo"] == 0.0
        assert res_2.json()["data"][1]["inep"] == "27014088"
        assert len(res_2.json()["data"][1]["tipoDeficiencia"]) == 3
        assert res_2.json()["data"][1]["tipoDeficiencia"][0] == 1.0
        assert res_2.json()["data"][1]["tipoDeficiencia"][1] == 2.0
        assert res_2.json()["data"][1]["tipoDeficiencia"][2] == 3.0
        assert len(res_2.json()["data"][1]["formacoesAcademicas"]) == 2
        assert res_2.json()["data"][1]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_2.json()["data"][1]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_2.json()["data"][1]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_2.json()["data"][1]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_2.json()["data"][1]["formacoesAcademicas"][0]["principal"] is None
        assert res_2.json()["data"][1]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_2.json()["data"][1]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_2.json()["data"][1]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_2.json()["data"][1]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_2.json()["data"][1]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_2.json()["data"][1]["formacoesAcademicas"][1]["principal"] is None
        assert res_2.json()["data"][1]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_2.json()["data"][2]["tipoEnsinoMedio"] == 2.0
        assert res_2.json()["data"][2]["nivelEscolaridade"] == 10.0
        assert res_2.json()["data"][2]["cpf"] == "31863200037"
        assert res_2.json()["data"][2]["nome"] == "João da Silva 2"
        assert res_2.json()["data"][2]["dataNascimento"] == "1985-06-15"
        assert res_2.json()["data"][2]["genero"] == 1.0
        assert res_2.json()["data"][2]["racaCor"] == 2.0
        assert res_2.json()["data"][2]["email"] == "joao.silva@email.com"
        assert res_2.json()["data"][2]["telefone"] is None
        assert res_2.json()["data"][2]["nomeSocial"] is None
        assert res_2.json()["data"][2]["logradouro"] == "Rua das Flores"
        assert res_2.json()["data"][2]["bairro"] == "Centro"
        assert res_2.json()["data"][2]["numero"] == "123"
        assert res_2.json()["data"][2]["cep"] == "01001000"
        assert res_2.json()["data"][2]["municipio"] == 2700409.0
        assert res_2.json()["data"][2]["uf"] == 27.0
        assert res_2.json()["data"][2]["codigoInstituicao"] == 6.0
        assert res_2.json()["data"][2]["cargaHoraria"] == 40.0
        assert res_2.json()["data"][2]["situacaoAtiva"] == True
        assert res_2.json()["data"][2]["dataIngresso"] == "2015-02-10"
        assert res_2.json()["data"][2]["dataFim"] is None
        assert res_2.json()["data"][2]["codigoFuncao"] == 2.0
        assert res_2.json()["data"][2]["matriculaRede"] == "56789"
        assert res_2.json()["data"][2]["tipoVinculo"] == 0.0
        assert res_2.json()["data"][2]["inep"] == "27014088"
        assert len(res_2.json()["data"][2]["tipoDeficiencia"]) == 3
        assert res_2.json()["data"][2]["tipoDeficiencia"][0] == 1.0
        assert res_2.json()["data"][2]["tipoDeficiencia"][1] == 2.0
        assert res_2.json()["data"][2]["tipoDeficiencia"][2] == 3.0
        assert len(res_2.json()["data"][2]["formacoesAcademicas"]) == 2
        assert res_2.json()["data"][2]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_2.json()["data"][2]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_2.json()["data"][2]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_2.json()["data"][2]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_2.json()["data"][2]["formacoesAcademicas"][0]["principal"] is None
        assert res_2.json()["data"][2]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_2.json()["data"][2]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_2.json()["data"][2]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_2.json()["data"][2]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_2.json()["data"][2]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_2.json()["data"][2]["formacoesAcademicas"][1]["principal"] is None
        assert res_2.json()["data"][2]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_2.json()["pagination"]["total"] == 3.0
        assert res_2.json()["pagination"]["count"] == 3.0
        assert res_2.json()["pagination"]["per_page"] == 10.0
        assert res_2.json()["pagination"]["current_page"] == 1.0
        assert res_2.json()["pagination"]["total_pages"] == 1.0
        assert res_2.json()["pagination"]["links"]["previous"] is None
        assert res_2.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/gC9IZ5A1nKc4S/erros?" + 
                    "page=161&" + 
                    "per_page=15",
                    headers=headers)
        
        assert res_3.status_code == 400
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "O ID fornecido não é um UUID válido. ID: gC9IZ5A1nKc4S"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?page=1",
                    headers=headers)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_4.json()["data"]) == 10
        assert res_4.json()["data"][0]["dataEnvio"] == "2025-05-04 00:42:02"
        assert res_4.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_4.json()["data"][1]["dataEnvio"] == "2025-05-04 00:41:44"
        assert res_4.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_4.json()["data"][2]["dataEnvio"] == "2025-05-04 00:41:25"
        assert res_4.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_4.json()["pagination"]["total"] == 9594.0
        assert res_4.json()["pagination"]["count"] == 10.0
        assert res_4.json()["pagination"]["per_page"] == 10.0
        assert res_4.json()["pagination"]["current_page"] == 1.0
        assert res_4.json()["pagination"]["total_pages"] == 960.0
        assert res_4.json()["pagination"]["links"]["previous"] is None
        assert res_4.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpf\": \"29072517407\", " + \
            " \"dataNascimento\": \"1983-12-26\", " + \
            " \"email\": \"theo.cristovao.romero@fake.com\", " + \
            " \"telefone\": \"11933018135\", " + \
            " \"sexo\": \"5\", " + \
            " \"logradouro\": \"Rua Av. Cláudio\", " + \
            " \"bairro\": \"São Santacruz\", " + \
            " \"numero\": \"GG\", " + \
            " \"cep\": \"57908156\", " + \
            " \"municipio\": 3550308, " + \
            " \"inep\": \"41354699\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 1, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\" " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 1, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoInicioFormacaoAcademica\": 512, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\" " + \
            " } " + \
            " ], " + \
            " \"dataFim\": \"2029-06-16\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"cpf\": \"83888465400\", " + \
            " \"dataNascimento\": \"Q8A7MZNeRxid\", " + \
            " \"genero\": 0, " + \
            " \"email\": \"vinicius.nelson.pacheco.sobrinho@fake.com\", " + \
            " \"nomeSocial\": \"_msJAoq_uDl2TH\", " + \
            " \"logradouro\": \"Rua Largo Diana\", " + \
            " \"numero\": \"36318\", " + \
            " \"uf\": 26, " + \
            " \"matriculaRede\": \"e2XouiaD2aNA 8\", " + \
            " \"dataIngresso\": \"1996-08-18\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_5 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_5.status_code == 201
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == True
        assert res_5.json()["message"] == "Operação realizada com sucesso"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_6 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/eTn41tOFp",
                    headers=headers)
        
        assert res_6.status_code == 404
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == False
        assert res_6.json()["message"] == "Nenhum profissional de educação encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/0/dataEnvio'] String "2025-05-04 00:43:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1/dataEnvio'] String "2025-05-04 00:42:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2/dataEnvio'] String "2025-05-04 00:42:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/3/dataEnvio'] String "2025-05-04 00:41:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/4/dataEnvio'] String "2025-05-04 00:41:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/5/dataEnvio'] String "2025-05-04 00:40:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/6/dataEnvio'] String "2025-05-04 00:38:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/7/dataEnvio'] String "2025-05-04 00:38:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/8/dataEnvio'] String "2025-05-04 00:38:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/9/dataEnvio'] String "2025-05-04 00:37:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_7 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers)
        
        assert res_7.status_code == 200
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == True
        assert res_7.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_7.json()["data"]) == 10
        assert res_7.json()["data"][0]["dataEnvio"] == "2025-05-04 00:43:10"
        assert res_7.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_7.json()["data"][1]["dataEnvio"] == "2025-05-04 00:42:41"
        assert res_7.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_7.json()["data"][2]["dataEnvio"] == "2025-05-04 00:42:26"
        assert res_7.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_7.json()["pagination"]["total"] == 2519.0
        assert res_7.json()["pagination"]["count"] == 10.0
        assert res_7.json()["pagination"]["per_page"] == 10.0
        assert res_7.json()["pagination"]["current_page"] == 1.0
        assert res_7.json()["pagination"]["total_pages"] == 252.0
        assert res_7.json()["pagination"]["links"]["previous"] is None
        assert res_7.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/3'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/4'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/5'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/6'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/7'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/8'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/9'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/10'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/11'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/12'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/13'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/14'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_8 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/validacao-cadastro",
                    headers=headers)
        
        assert res_8.status_code == 200
        assert "application/json" in res_8.headers["content-type"]
        assert res_8.json()["success"] == True
        assert res_8.json()["message"] == "Operação realizada com sucesso"
        assert len(res_8.json()["data"]) == 15
        assert res_8.json()["data"][0]["cpf"] == "99999701094"
        assert res_8.json()["data"][0]["numeroNIS"] is None
        assert res_8.json()["data"][0]["situacaoCadastral"] == "Autenticada"
        assert res_8.json()["data"][0]["situacaoCpf"] == "CPF não encontrado na base do BCPF"
        assert res_8.json()["data"][0]["nome"] == "Bryan  Chen"
        assert res_8.json()["data"][0]["nomeValidado"] == True
        assert res_8.json()["data"][0]["dataNascimento"] == "1956-01-11"
        assert res_8.json()["data"][0]["dataNascimentoValidada"] == True
        assert res_8.json()["data"][0]["nomeMaeEstudante"] == "Mr. Daniel Johnson DVM"
        assert res_8.json()["data"][0]["nomeMaeEstudanteValidado"] == True
        assert res_8.json()["data"][0]["dataValidacaoCadastral"] == "2025-03-11 01:39:26"
        assert res_8.json()["data"][1]["cpf"] == "34535377693"
        assert res_8.json()["data"][1]["numeroNIS"] == "11979328182"
        assert res_8.json()["data"][1]["situacaoCadastral"] == "Não autenticada"
        assert res_8.json()["data"][1]["situacaoCpf"] == "Testando o serviço de validação"
        assert res_8.json()["data"][1]["nome"] == "Trevor Hester"
        assert res_8.json()["data"][1]["nomeValidado"] == True
        assert res_8.json()["data"][1]["dataNascimento"] == "1968-02-26"
        assert res_8.json()["data"][1]["dataNascimentoValidada"] == False
        assert res_8.json()["data"][1]["nomeMaeEstudante"] == "Juan Mccullough"
        assert res_8.json()["data"][1]["nomeMaeEstudanteValidado"] == True
        assert res_8.json()["data"][1]["dataValidacaoCadastral"] == "2023-06-16 00:00:00"
        assert res_8.json()["data"][2]["cpf"] == "14064786602"
        assert res_8.json()["data"][2]["numeroNIS"] == "124112231"
        assert res_8.json()["data"][2]["situacaoCadastral"] == "Não autenticada"
        assert res_8.json()["data"][2]["situacaoCpf"] == "Quando há omissão de DIRPF em um dos últimos 5 exercícios"
        assert res_8.json()["data"][2]["nome"] == "Donald Jackson"
        assert res_8.json()["data"][2]["nomeValidado"] == False
        assert res_8.json()["data"][2]["dataNascimento"] == "1954-08-23"
        assert res_8.json()["data"][2]["dataNascimentoValidada"] == False
        assert res_8.json()["data"][2]["nomeMaeEstudante"] == "Timothy Garcia"
        assert res_8.json()["data"][2]["nomeMaeEstudanteValidado"] == True
        assert res_8.json()["data"][2]["dataValidacaoCadastral"] == "2024-04-23 00:00:00"
        # Skipping assertions on the remaining 12 elements. This limit of 3 elements can be increased in the configurations
        assert res_8.json()["pagination"]["total"] == 54714.0
        assert res_8.json()["pagination"]["count"] == 15.0
        assert res_8.json()["pagination"]["per_page"] == 15.0
        assert res_8.json()["pagination"]["current_page"] == 1.0
        assert res_8.json()["pagination"]["total_pages"] == 3648.0
        assert res_8.json()["pagination"]["links"]["previous"] is None
        assert res_8.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_9 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/W/erros?per_page=799",
                    headers=headers)
        
        assert res_9.status_code == 400
        assert "application/json" in res_9.headers["content-type"]
        assert res_9.json()["success"] == False
        assert res_9.json()["message"] == "O ID fornecido não é um UUID válido. ID: W"
    
    
    # Calls:
    # 1 - (422) POST:/v1/profissionais/lote
    # 2 - (201) POST:/v1/profissionais/lote
    # 3 - (201) POST:/v1/profissionais/lote
    # 4 - (201) POST:/v1/profissionais/lote
    # 5 - (201) POST:/v1/profissionais/lote
    # 6 - (201) POST:/v1/profissionais/lote
    # 7 - (422) POST:/v1/profissionais/lote
    # 8 - (200) GET:/v1/profissionais/lote
    # Found 133 potential faults of type-code 200
    # Using 7 examples:
    #   1
    #   123456789
    #   2010
    #   2014
    #   44
    #   5
    #   Universidade Federal do Rio de Janeiro
    @timeout_decorator.timeout(60)
    def test_47(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 422
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "JSON inválido."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"racaCor\": 4, " + \
            " \"email\": \"srta.kelly.vasques@fake.com\", " + \
            " \"nomeSocial\": \"rRAEEBPUPdYf\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 3, " + \
            " 772, " + \
            " 5, " + \
            " 431, " + \
            " 2 " + \
            " ], " + \
            " \"logradouro\": \"Rua Av. Karine\", " + \
            " \"bairro\": \"YK6QecZNdsvhr\", " + \
            " \"uf\": 533, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"2067-09-17\", " + \
            " \"dataFim\": \"2096-00-03\", " + \
            " \"cargaHoraria\": 580 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_1.status_code == 201
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"tipoEnsinoMedio\": 275, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"dataNascimento\": \"2010-03-11\", " + \
            " \"telefone\": \"11969630845\", " + \
            " \"nomeSocial\": \"test\", " + \
            " \"sexo\": \"2\", " + \
            " \"logradouro\": \"Rua Largo Noa\", " + \
            " \"municipio\": 4200705, " + \
            " \"uf\": 540, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 1, " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " }, " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Q45lm\", " + \
            " \"anoConclusaoFormacaoAcademica\": 64 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 738, " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"4XXKD_ROzLQ5Q6\", " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\", " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " } " + \
            " ], " + \
            " \"inep\": 41076648, " + \
            " \"matriculaRede\": \"123456789\", " + \
            " \"codigoFuncao\": 1748364379, " + \
            " \"dataIngresso\": \"2089-00-18\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 1, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"cpf\": \"18766228492\", " + \
            " \"nome\": \"Thiago Walter Montenegro\", " + \
            " \"genero\": 5, " + \
            " \"racaCor\": 3, " + \
            " \"email\": \"sr.wagner.giovane.bonilha.neto@fake.com\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 941, " + \
            " 10, " + \
            " 188, " + \
            " 12 " + \
            " ], " + \
            " \"sexo\": \"0\", " + \
            " \"numero\": \"20\", " + \
            " \"cep\": \"51556774\", " + \
            " \"municipio\": 2508505, " + \
            " \"uf\": 690, " + \
            " \"inep\": 32081618, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 545, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\", " + \
            " \"anoConclusaoFormacaoAcademica\": 612 " + \
            " }, " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"7vI5rb_\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"jvjvjv1\", " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"1977-12-32\" " + \
            " }, " + \
            " { " + \
            " \"cpf\": \"29077497650\", " + \
            " \"telefone\": \"\", " + \
            " \"nomeSocial\": \"1Qgi\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 839, " + \
            " 1, " + \
            " 5, " + \
            " 2 " + \
            " ], " + \
            " \"bairro\": \"São Gomes\", " + \
            " \"numero\": \"360\", " + \
            " \"cep\": \"68100395\", " + \
            " \"municipio\": 4200705, " + \
            " \"uf\": 42, " + \
            " \"inep\": 29478430, " + \
            " \"matriculaRede\": \"Teste Ricardo\", " + \
            " \"tipoVinculo\": 1, " + \
            " \"dataFim\": \"1952-07-10\", " + \
            " \"cargaHoraria\": 40 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nome\": \"Teobaldo Inácio Pacheco Neto\", " + \
            " \"genero\": 42, " + \
            " \"racaCor\": 0, " + \
            " \"email\": \"4mphnZDvXrC@example.com\", " + \
            " \"telefone\": \"11933018135\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 2, " + \
            " 9 " + \
            " ], " + \
            " \"sexo\": \"5\", " + \
            " \"numero\": \"315\", " + \
            " \"cep\": \"51026483\", " + \
            " \"uf\": 35, " + \
            " \"inep\": \"41080190\", " + \
            " \"matriculaRede\": \"7\", " + \
            " \"codigoFuncao\": 295, " + \
            " \"dataIngresso\": \"2096-03-14\", " + \
            " \"dataFim\": \"2086-06-01\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"dataNascimento\": \"1960-05-27\", " + \
            " \"genero\": 0, " + \
            " \"email\": \"42ZAumZ9A\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 3 " + \
            " ], " + \
            " \"logradouro\": \"Rua Travessa Abgail Dias\", " + \
            " \"inep\": 27014088, " + \
            " \"formacoesAcademicas\": [], " + \
            " \"matriculaRede\": \"jvjvjv1\", " + \
            " \"dataIngresso\": \"2052-09-23\", " + \
            " \"dataFim\": \"1937-07-00\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_2.status_code == 201
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpf\": \"02274897131\", " + \
            " \"nome\": \"Steve Velazquez\", " + \
            " \"dataNascimento\": \"2007-10-22\", " + \
            " \"racaCor\": 1, " + \
            " \"nomeSocial\": \"8hbo50Mnoym\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1, " + \
            " 9, " + \
            " 3 " + \
            " ], " + \
            " \"logradouro\": \"Rua Avenida Gabriel Quintana\", " + \
            " \"bairro\": \"São Batista\", " + \
            " \"numero\": \"53914\", " + \
            " \"dataIngresso\": \"2049-09-30\", " + \
            " \"dataFim\": \"1929-13-10\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"cpf\": \"0Ned_2onCh\", " + \
            " \"dataNascimento\": \"2007-10-22\", " + \
            " \"genero\": 42, " + \
            " \"racaCor\": 42, " + \
            " \"telefone\": \"11933018135\", " + \
            " \"logradouro\": \"Rua Travessa Jorge Marinho\", " + \
            " \"bairro\": \"São Godói\", " + \
            " \"inep\": 490, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 108, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\" " + \
            " } " + \
            " ], " + \
            " \"tipoVinculo\": 0, " + \
            " \"dataFim\": \"1932-08-18\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 227, " + \
            " \"cpf\": \"56389197918\", " + \
            " \"nome\": \"Wesley Cortês Vale\", " + \
            " \"dataNascimento\": \"1968-02-01\", " + \
            " \"racaCor\": 2, " + \
            " \"telefone\": \"3333333\", " + \
            " \"nomeSocial\": \"test\", " + \
            " \"numero\": \"8\", " + \
            " \"municipio\": 1894331307, " + \
            " \"uf\": 33, " + \
            " \"inep\": \"41078489\", " + \
            " \"formacoesAcademicas\": [], " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 2 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"dataNascimento\": \"2005-06-24\", " + \
            " \"genero\": 6, " + \
            " \"racaCor\": 42, " + \
            " \"email\": \"\", " + \
            " \"nomeSocial\": \"test\", " + \
            " \"numero\": \"35681\", " + \
            " \"uf\": 33, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 146, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " }, " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\" " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"fTfhN57Do\", " + \
            " \"anoInicioFormacaoAcademica\": 687 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"Teste Ricardo\", " + \
            " \"dataFim\": \"1970-05-01\", " + \
            " \"cargaHoraria\": 410 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 1, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"cpf\": \"65646445310\", " + \
            " \"nome\": \"Taís Bianca Guerra\", " + \
            " \"racaCor\": 3, " + \
            " \"telefone\": \"11933018135\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 10 " + \
            " ], " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"bairro\": \"z5_S\", " + \
            " \"numero\": \"70\", " + \
            " \"uf\": 35, " + \
            " \"inep\": 41134419, " + \
            " \"matriculaRede\": \"123456789\", " + \
            " \"dataIngresso\": \"1974-04-01\", " + \
            " \"cargaHoraria\": 1237812540 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_3 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_3.status_code == 201
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nivelEscolaridade\": 5, " + \
            " \"dataNascimento\": \"3QP3OB4DKrsxpY\", " + \
            " \"genero\": 4, " + \
            " \"telefone\": \"11933018135\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 3, " + \
            " 2, " + \
            " 3, " + \
            " 195 " + \
            " ], " + \
            " \"sexo\": \"5\", " + \
            " \"logradouro\": \"hXO\", " + \
            " \"numero\": \"\", " + \
            " \"cep\": \"42757096\", " + \
            " \"municipio\": 1302603, " + \
            " \"uf\": 965, " + \
            " \"codigoFuncao\": 1 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_4 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_4.status_code == 201
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpf\": \"ZS8aNItup5A\", " + \
            " \"dataNascimento\": \"Xkhok5gab7nLh\", " + \
            " \"racaCor\": 0, " + \
            " \"telefone\": \"S\", " + \
            " \"sexo\": \"3\", " + \
            " \"logradouro\": \"Rua Av. Joyce\", " + \
            " \"bairro\": \"São de Aguiar\", " + \
            " \"municipio\": 2704302, " + \
            " \"uf\": 24, " + \
            " \"inep\": 29191637, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Rio de Janeiro\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"\", " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " } " + \
            " ], " + \
            " \"tipoVinculo\": 0, " + \
            " \"dataIngresso\": \"1955-12-07\", " + \
            " \"dataFim\": \"1944-10-15\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"nome\": \"Agustina Marinho\", " + \
            " \"dataNascimento\": \"2009-07-07\", " + \
            " \"genero\": 2, " + \
            " \"racaCor\": 1, " + \
            " \"email\": \"srta.dayane.sandoval.vila.sobrinho@fake.com\", " + \
            " \"telefone\": \"11949911257\", " + \
            " \"nomeSocial\": \"8hbo50Mnoym\", " + \
            " \"logradouro\": \"Rua Av. Molina\", " + \
            " \"numero\": \"4\", " + \
            " \"inep\": 403, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 1, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 1, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 1, " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"anoInicioFormacaoAcademica\": 2016 " + \
            " } " + \
            " ], " + \
            " \"dataIngresso\": \"2004-09-00\" " + \
            " }, " + \
            " { " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"dataNascimento\": \"2008-10-29\", " + \
            " \"racaCor\": 0, " + \
            " \"email\": \"xUapAhKtyqQy\", " + \
            " \"telefone\": \"11949911257\", " + \
            " \"sexo\": \"4\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"anoInicioFormacaoAcademica\": 426, " + \
            " \"anoConclusaoFormacaoAcademica\": 715 " + \
            " }, " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Rio de Janeiro\", " + \
            " \"anoInicioFormacaoAcademica\": 425, " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6, " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " } " + \
            " ], " + \
            " \"tipoVinculo\": 0, " + \
            " \"cargaHoraria\": 44 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_5 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_5.status_code == 201
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == True
        assert res_5.json()["message"] == "Operação realizada com sucesso"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_6 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_6.status_code == 422
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == False
        assert res_6.json()["message"] == "JSON inválido."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/0/dataEnvio'] String "2025-05-04 00:44:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1/dataEnvio'] String "2025-05-04 00:44:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2/dataEnvio'] String "2025-05-04 00:44:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/3/dataEnvio'] String "2025-05-04 00:44:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/4/dataEnvio'] String "2025-05-04 00:44:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/5/dataEnvio'] String "2025-05-04 00:43:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/6/dataEnvio'] String "2025-05-04 00:43:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/7/dataEnvio'] String "2025-05-04 00:43:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/8/dataEnvio'] String "2025-05-04 00:43:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/9/dataEnvio'] String "2025-05-04 00:43:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/10/dataEnvio'] String "2025-05-04 00:43:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/11/dataEnvio'] String "2025-05-04 00:43:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/12/dataEnvio'] String "2025-05-04 00:43:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/13/dataEnvio'] String "2025-05-04 00:43:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/14/dataEnvio'] String "2025-05-04 00:42:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/15/dataEnvio'] String "2025-05-04 00:42:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/16/dataEnvio'] String "2025-05-04 00:41:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/17/dataEnvio'] String "2025-05-04 00:41:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/18/dataEnvio'] String "2025-05-04 00:40:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/19/dataEnvio'] String "2025-05-04 00:38:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/20/dataEnvio'] String "2025-05-04 00:38:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/21/dataEnvio'] String "2025-05-04 00:38:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/22/dataEnvio'] String "2025-05-04 00:37:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/23/dataEnvio'] String "2025-05-04 00:37:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/24/dataEnvio'] String "2025-05-04 00:37:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/25/dataEnvio'] String "2025-05-04 00:37:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/26/dataEnvio'] String "2025-05-04 00:37:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/27/dataEnvio'] String "2025-05-04 00:37:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/28/dataEnvio'] String "2025-05-04 00:37:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/29/dataEnvio'] String "2025-05-04 00:36:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/30/dataEnvio'] String "2025-05-04 00:35:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/31/dataEnvio'] String "2025-05-04 00:33:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/32/dataEnvio'] String "2025-05-04 00:33:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/33/dataEnvio'] String "2025-05-04 00:33:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/34/dataEnvio'] String "2025-05-04 00:33:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/35/dataEnvio'] String "2025-05-04 00:32:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/36/dataEnvio'] String "2025-05-04 00:32:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/37/dataEnvio'] String "2025-05-04 00:32:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/38/dataEnvio'] String "2025-05-04 00:32:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/39/dataEnvio'] String "2025-05-04 00:32:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/40/dataEnvio'] String "2025-05-04 00:32:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/41/dataEnvio'] String "2025-05-04 00:32:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/42/dataEnvio'] String "2025-05-04 00:31:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/43/dataEnvio'] String "2025-05-04 00:31:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/44/dataEnvio'] String "2025-05-04 00:31:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/45/dataEnvio'] String "2025-05-04 00:31:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/46/dataEnvio'] String "2025-05-04 00:31:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/47/dataEnvio'] String "2025-05-04 00:31:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/48/dataEnvio'] String "2025-05-04 00:30:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/49/dataEnvio'] String "2025-05-04 00:30:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/50/dataEnvio'] String "2025-05-04 00:30:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/51/dataEnvio'] String "2025-05-04 00:30:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/52/dataEnvio'] String "2025-05-04 00:30:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/53/dataEnvio'] String "2025-05-04 00:30:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/54/dataEnvio'] String "2025-05-04 00:30:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/55/dataEnvio'] String "2025-05-04 00:30:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/56/dataEnvio'] String "2025-05-04 00:30:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/57/dataEnvio'] String "2025-05-04 00:29:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/58/dataEnvio'] String "2025-05-04 00:28:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/59/dataEnvio'] String "2025-05-04 00:28:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/60/dataEnvio'] String "2025-05-04 00:28:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/61/dataEnvio'] String "2025-05-04 00:27:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/62/dataEnvio'] String "2025-05-04 00:27:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/63/dataEnvio'] String "2025-05-04 00:26:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/64/dataEnvio'] String "2025-05-04 00:26:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/65/dataEnvio'] String "2025-05-04 00:26:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/66/dataEnvio'] String "2025-05-04 00:26:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/67/dataEnvio'] String "2025-05-04 00:26:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/68/dataEnvio'] String "2025-05-04 00:26:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/69/dataEnvio'] String "2025-05-04 00:26:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/70/dataEnvio'] String "2025-05-04 00:26:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/71/dataEnvio'] String "2025-05-04 00:26:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/72/dataEnvio'] String "2025-05-04 00:25:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/73/dataEnvio'] String "2025-05-04 00:25:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/74/dataEnvio'] String "2025-05-04 00:25:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/75/dataEnvio'] String "2025-05-04 00:25:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/76/dataEnvio'] String "2025-05-04 00:24:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/77/dataEnvio'] String "2025-05-04 00:24:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/78/dataEnvio'] String "2025-05-04 00:24:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/79/dataEnvio'] String "2025-05-04 00:24:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/80/dataEnvio'] String "2025-05-04 00:24:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/81/dataEnvio'] String "2025-05-04 00:24:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/82/dataEnvio'] String "2025-05-04 00:23:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/83/dataEnvio'] String "2025-05-04 00:23:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/84/dataEnvio'] String "2025-05-04 00:23:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/85/dataEnvio'] String "2025-05-04 00:23:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/86/dataEnvio'] String "2025-05-04 00:23:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/87/dataEnvio'] String "2025-05-04 00:23:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/88/dataEnvio'] String "2025-05-04 00:23:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/89/dataEnvio'] String "2025-05-04 00:23:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/90/dataEnvio'] String "2025-05-04 00:23:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/91/dataEnvio'] String "2025-05-04 00:23:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/92/dataEnvio'] String "2025-05-04 00:21:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/93/dataEnvio'] String "2025-05-04 00:21:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/94/dataEnvio'] String "2025-05-04 00:21:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/95/dataEnvio'] String "2025-05-04 00:21:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/96/dataEnvio'] String "2025-05-04 00:18:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/97/dataEnvio'] String "2025-05-04 00:18:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/98/dataEnvio'] String "2025-05-04 00:17:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/99/dataEnvio'] String "2025-05-04 00:17:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/100/dataEnvio'] String "2025-05-04 00:17:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/101/dataEnvio'] String "2025-05-04 00:17:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/102/dataEnvio'] String "2025-05-04 00:15:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/103/dataEnvio'] String "2025-05-04 00:12:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/104/dataEnvio'] String "2025-05-04 00:12:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/105/dataEnvio'] String "2025-05-04 00:12:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/106/dataEnvio'] String "2025-05-04 00:12:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/107/dataEnvio'] String "2025-05-04 00:12:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/108/dataEnvio'] String "2025-05-04 00:11:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/109/dataEnvio'] String "2025-05-04 00:11:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/110/dataEnvio'] String "2025-05-04 00:11:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/111/dataEnvio'] String "2025-05-04 00:11:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/112/dataEnvio'] String "2025-05-04 00:09:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/113/dataEnvio'] String "2025-05-04 00:09:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/114/dataEnvio'] String "2025-05-04 00:08:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/115/dataEnvio'] String "2025-05-04 00:08:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/116/dataEnvio'] String "2025-05-04 00:07:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/117/dataEnvio'] String "2025-05-04 00:07:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/118/dataEnvio'] String "2025-05-04 00:07:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/119/dataEnvio'] String "2025-05-04 00:07:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/120/dataEnvio'] String "2025-05-04 00:07:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/121/dataEnvio'] String "2025-05-04 00:07:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/122/dataEnvio'] String "2025-05-04 00:07:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/123/dataEnvio'] String "2025-05-04 00:07:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/124/dataEnvio'] String "2025-05-04 00:06:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/125/dataEnvio'] String "2025-05-04 00:06:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_7 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote?per_page=126",
                    headers=headers)
        
        assert res_7.status_code == 200
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == True
        assert res_7.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_7.json()["data"]) == 126
        assert res_7.json()["data"][0]["dataEnvio"] == "2025-05-04 00:44:20"
        assert res_7.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_7.json()["data"][1]["dataEnvio"] == "2025-05-04 00:44:17"
        assert res_7.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_7.json()["data"][2]["dataEnvio"] == "2025-05-04 00:44:14"
        assert res_7.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 123 elements. This limit of 3 elements can be increased in the configurations
        assert res_7.json()["pagination"]["total"] == 2532.0
        assert res_7.json()["pagination"]["count"] == 126.0
        assert res_7.json()["pagination"]["per_page"] == 126.0
        assert res_7.json()["pagination"]["current_page"] == 1.0
        assert res_7.json()["pagination"]["total_pages"] == 21.0
        assert res_7.json()["pagination"]["links"]["previous"] is None
        assert res_7.json()["pagination"]["links"]["next"] == 2.0
    
    
    # Calls:
    # 1 - (422) POST:/v1/profissionais/lote
    # 2 - (201) POST:/v1/profissionais/lote
    # 3 - (201) POST:/v1/profissionais/lote
    # 4 - (201) POST:/v1/profissionais/lote
    # 5 - (201) POST:/v1/profissionais/lote
    # 6 - (201) POST:/v1/profissionais/lote
    # 7 - (201) POST:/v1/profissionais/lote
    # 8 - (201) POST:/v1/profissionais/lote
    # 9 - (201) POST:/v1/profissionais/lote
    # 10 - (200) GET:/v1/profissionais/lote
    # Found 2537 potential faults of type-code 200
    # Using 5 examples:
    #   1
    #   123456789
    #   2010
    #   44
    #   Universidade Federal do Rio de Janeiro
    @timeout_decorator.timeout(60)
    def test_48(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 422
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "JSON inválido."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"nome\": \"Thales Cortês\", " + \
            " \"dataNascimento\": \"2004-04-18\", " + \
            " \"racaCor\": 5, " + \
            " \"email\": \"wesley.rogerio.dias@fake.com\", " + \
            " \"telefone\": \"11933018135\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 10, " + \
            " 3 " + \
            " ], " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"logradouro\": \"4cPpEFkhSm\", " + \
            " \"bairro\": \"São Prado\", " + \
            " \"numero\": \"87694\", " + \
            " \"cep\": \"38922048\", " + \
            " \"municipio\": 427, " + \
            " \"inep\": 41072472, " + \
            " \"matriculaRede\": \"e2XouiaD2aNA 8\", " + \
            " \"tipoVinculo\": 1, " + \
            " \"dataIngresso\": \"1928-07-12\", " + \
            " \"cargaHoraria\": 44 " + \
            " }, " + \
            " { " + \
            " \"nivelEscolaridade\": 422, " + \
            " \"cpf\": \"96366194416\", " + \
            " \"dataNascimento\": \"crkBma6c5gtFglC\", " + \
            " \"genero\": 2, " + \
            " \"racaCor\": 42, " + \
            " \"cep\": \"V59mc1\", " + \
            " \"municipio\": 2704302, " + \
            " \"uf\": 35, " + \
            " \"inep\": \"32083114\", " + \
            " \"tipoVinculo\": 498, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataFim\": \"1926-07-08\" " + \
            " }, " + \
            " { " + \
            " \"cpf\": \"S\", " + \
            " \"nome\": \"Vinícius Nelson Pacheco Sobrinho\", " + \
            " \"dataNascimento\": \"2005-05-13\", " + \
            " \"genero\": 4, " + \
            " \"racaCor\": 4, " + \
            " \"email\": \"srta.daniella.pamela.serrano.jr@fake.com\", " + \
            " \"nomeSocial\": \"YXWGpw\", " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"numero\": \"40208\", " + \
            " \"matriculaRede\": \"123456789\", " + \
            " \"dataIngresso\": \"1971-03-23\", " + \
            " \"dataFim\": \"2099-12-01\", " + \
            " \"cargaHoraria\": 40 " + \
            " }, " + \
            " { " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"nome\": \"Veronica Salinas\", " + \
            " \"genero\": 7, " + \
            " \"email\": \"walter.camacho@fake.com\", " + \
            " \"telefone\": \"3333333\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 411, " + \
            " 5, " + \
            " 2 " + \
            " ], " + \
            " \"sexo\": \"4\", " + \
            " \"logradouro\": \"Rua Largo Flor Prado\", " + \
            " \"bairro\": \"São Amaral\", " + \
            " \"numero\": \"387\", " + \
            " \"cep\": \"\", " + \
            " \"municipio\": 17, " + \
            " \"uf\": 11, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"anoInicioFormacaoAcademica\": 2016 " + \
            " }, " + \
            " {} " + \
            " ], " + \
            " \"matriculaRede\": \"e2XouiaD2aNA 8\", " + \
            " \"codigoFuncao\": 2, " + \
            " \"cargaHoraria\": 1 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 105, " + \
            " \"nivelEscolaridade\": 502, " + \
            " \"cpf\": \"F96sjL_1Vx7\", " + \
            " \"racaCor\": 5, " + \
            " \"nomeSocial\": \"test\", " + \
            " \"bairro\": \"São das Neves\", " + \
            " \"cep\": \"33457992\", " + \
            " \"municipio\": 1302603, " + \
            " \"inep\": \"41080807\", " + \
            " \"matriculaRede\": \"e2XouiaD2aNA 8\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataFim\": \"2094-01-13\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_1.status_code == 201
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"cpf\": \"19381453217\", " + \
            " \"nome\": \"Dustin Carter\", " + \
            " \"dataNascimento\": \"2009-05-17\", " + \
            " \"genero\": 6, " + \
            " \"racaCor\": 4, " + \
            " \"email\": \"srta.paula.montenegro.torres@fake.com\", " + \
            " \"nomeSocial\": \"8hbo50Mnoym\", " + \
            " \"sexo\": \"4\", " + \
            " \"bairro\": \"São Sanches\", " + \
            " \"cep\": \"23121277\", " + \
            " \"municipio\": 3304557, " + \
            " \"inep\": \"32046103\", " + \
            " \"dataFim\": \"1931-05-05\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_2.status_code == 201
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"nome\": \"Thaís Sônia Estrada Jr.\", " + \
            " \"telefone\": \"aU\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 9, " + \
            " 5, " + \
            " 2 " + \
            " ], " + \
            " \"municipio\": 1100940, " + \
            " \"inep\": 29481732, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 889, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Rio de Janeiro\", " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"e2XouiaD2aNA 8\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 1, " + \
            " \"dataFim\": \"2077-05-03\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 1, " + \
            " \"nome\": \"Sr. Walter Prado\", " + \
            " \"dataNascimento\": \"2006-09-05\", " + \
            " \"genero\": 9, " + \
            " \"racaCor\": 1, " + \
            " \"telefone\": \"3333333\", " + \
            " \"nomeSocial\": \"rRAEEBPUPdYf\", " + \
            " \"tipoDeficiencia\": [], " + \
            " \"numero\": \"F\", " + \
            " \"municipio\": 813, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 952, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\" " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 1, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\", " + \
            " \"anoInicioFormacaoAcademica\": 425, " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"123456789\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"dataIngresso\": \"1947-02-14\", " + \
            " \"cargaHoraria\": 40 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nivelEscolaridade\": 613, " + \
            " \"dataNascimento\": \"1965-12-26\", " + \
            " \"genero\": 3, " + \
            " \"email\": \"willian.jefferson.delvalle@fake.com\", " + \
            " \"telefone\": \"11933018135\", " + \
            " \"sexo\": \"2\", " + \
            " \"inep\": 41076648, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Rio de Janeiro\", " + \
            " \"anoInicioFormacaoAcademica\": 2016, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 936, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " }, " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\" " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoConclusaoFormacaoAcademica\": 99 " + \
            " } " + \
            " ], " + \
            " \"dataIngresso\": \"1969-02-32\", " + \
            " \"cargaHoraria\": 603 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 1, " + \
            " \"cpf\": \"35170443692\", " + \
            " \"genero\": 42, " + \
            " \"telefone\": \"11969630845\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 5, " + \
            " 10 " + \
            " ], " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"bairro\": \"São de Aguiar\", " + \
            " \"numero\": \"Z9\", " + \
            " \"cep\": \"45222188\", " + \
            " \"inep\": \"29480841\", " + \
            " \"dataFim\": \"2066-08-00\", " + \
            " \"cargaHoraria\": 272 " + \
            " }, " + \
            " { " + \
            " \"cpf\": \"53586421370\", " + \
            " \"dataNascimento\": \"1985-12-24\", " + \
            " \"racaCor\": 3, " + \
            " \"telefone\": \"3333333\", " + \
            " \"sexo\": \"5\", " + \
            " \"logradouro\": \"Rua Travessa Luciano\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 1, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Rio de Janeiro\", " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " } " + \
            " ], " + \
            " \"inep\": 32070950, " + \
            " \"matriculaRede\": \"123456789\", " + \
            " \"tipoVinculo\": 1, " + \
            " \"cargaHoraria\": 456 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_3 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_3.status_code == 201
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"cpf\": \"13933724813\", " + \
            " \"nome\": \"lS\", " + \
            " \"dataNascimento\": \"2010-01-20\", " + \
            " \"racaCor\": 0, " + \
            " \"email\": \"srta.andressa.de.freitas@fake.com\", " + \
            " \"telefone\": \"dh\", " + \
            " \"nomeSocial\": \"YXWGpw\", " + \
            " \"tipoDeficiencia\": [], " + \
            " \"logradouro\": \"C2stNpVAf1\", " + \
            " \"bairro\": \"Santa Lucia\", " + \
            " \"uf\": 35, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"2006-11-12\", " + \
            " \"dataFim\": \"1972-00-31\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nivelEscolaridade\": 737, " + \
            " \"genero\": 8, " + \
            " \"racaCor\": 3, " + \
            " \"tipoDeficiencia\": [ " + \
            " 9, " + \
            " 467, " + \
            " 1 " + \
            " ], " + \
            " \"bairro\": \"faUu2HMScBQuwe\", " + \
            " \"municipio\": 4314902, " + \
            " \"uf\": 43, " + \
            " \"inep\": 29192129, " + \
            " \"matriculaRede\": \"Teste Ricardo\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"dataIngresso\": \"1940-03-31\", " + \
            " \"cargaHoraria\": 650 " + \
            " }, " + \
            " { " + \
            " \"nome\": \"Aaron Afonso Gonçalves\", " + \
            " \"dataNascimento\": \"1991-06-14\", " + \
            " \"genero\": 1, " + \
            " \"racaCor\": 42, " + \
            " \"nomeSocial\": \"8hbo50Mnoym\", " + \
            " \"tipoDeficiencia\": [], " + \
            " \"logradouro\": \"Ys\", " + \
            " \"numero\": \"93882\", " + \
            " \"cep\": \"\", " + \
            " \"municipio\": 4200705, " + \
            " \"inep\": 32043686, " + \
            " \"dataFim\": \"1909-07-06\", " + \
            " \"cargaHoraria\": 40 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_4 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_4.status_code == 201
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nome\": \"Nicholas Davis\", " + \
            " \"email\": \"aaron.afonso.galvao.jr@fake.com\", " + \
            " \"telefone\": \"KP6vaqcss_eHL\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1, " + \
            " 963, " + \
            " 235, " + \
            " 1, " + \
            " 1 " + \
            " ], " + \
            " \"logradouro\": \"Rua teste\", " + \
            " \"cep\": \"83807862\", " + \
            " \"municipio\": 3550308, " + \
            " \"uf\": 93, " + \
            " \"inep\": 16004124, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 1, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\" " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"e2XouiaD2aNA 8\", " + \
            " \"tipoVinculo\": 1, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"1916-12-29\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 1, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"cpf\": \"45812543100\", " + \
            " \"nome\": \"Veronica Salinas\", " + \
            " \"genero\": 4, " + \
            " \"racaCor\": 3, " + \
            " \"telefone\": \"11933018135\", " + \
            " \"nomeSocial\": \"rRAEEBPUPdYf\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 9, " + \
            " 539, " + \
            " 808 " + \
            " ], " + \
            " \"cep\": \"BOdyjx\", " + \
            " \"municipio\": 398, " + \
            " \"inep\": \"ln9M4Ysg5LlWqlH\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 2 " + \
            " }, " + \
            " { " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"cpf\": \"69649482105\", " + \
            " \"nome\": \"Walter José Sepúlveda Jr.\", " + \
            " \"dataNascimento\": \"\", " + \
            " \"racaCor\": 5, " + \
            " \"telefone\": \"11949911257\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 5, " + \
            " 781, " + \
            " 2, " + \
            " 9 " + \
            " ], " + \
            " \"logradouro\": \"Rua Av. Igor Cortês\", " + \
            " \"bairro\": \"São Lourenço\", " + \
            " \"numero\": \"35681\", " + \
            " \"municipio\": 4200705, " + \
            " \"uf\": 43, " + \
            " \"inep\": 41066510, " + \
            " \"tipoVinculo\": 1, " + \
            " \"dataFim\": \"1931-02-10\" " + \
            " }, " + \
            " { " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"genero\": 6, " + \
            " \"racaCor\": 5, " + \
            " \"email\": \"q4\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 2 " + \
            " ], " + \
            " \"sexo\": \"3\", " + \
            " \"cep\": \"\", " + \
            " \"municipio\": 2700409, " + \
            " \"uf\": 26, " + \
            " \"matriculaRede\": \"123456789\", " + \
            " \"dataFim\": \"1966-08-27\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_5 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_5.status_code == 201
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == True
        assert res_5.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"tipoEnsinoMedio\": 1, " + \
            " \"nome\": \"6cc97vMeCP9KgSI\", " + \
            " \"genero\": 1, " + \
            " \"telefone\": \"11949911257\", " + \
            " \"sexo\": \"5\", " + \
            " \"bairro\": \"São Pena\", " + \
            " \"numero\": \"7032\", " + \
            " \"cep\": \"17469109\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"123456789\", " + \
            " \"tipoVinculo\": 403, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"1942-11-09\", " + \
            " \"dataFim\": \"2091-02-12\", " + \
            " \"cargaHoraria\": 44 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"racaCor\": 2, " + \
            " \"telefone\": \"3333333\", " + \
            " \"logradouro\": \"3CU\", " + \
            " \"bairro\": \"São Vasques\", " + \
            " \"municipio\": 2611606, " + \
            " \"matriculaRede\": \"56789\", " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"2029-07-23\", " + \
            " \"dataFim\": \"2008-03-27\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_6 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_6.status_code == 201
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == True
        assert res_6.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"genero\": 3, " + \
            " \"racaCor\": 1, " + \
            " \"cep\": \"6cqn\", " + \
            " \"inep\": \"32102011\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"cargaHoraria\": 44 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nome\": \"Tiago Feliciano Marés Filho\", " + \
            " \"dataNascimento\": \"1942-01-27\", " + \
            " \"genero\": 0, " + \
            " \"racaCor\": 42, " + \
            " \"nomeSocial\": \"voGMvf5zVLAJ\", " + \
            " \"tipoDeficiencia\": [], " + \
            " \"sexo\": \"1\", " + \
            " \"bairro\": \"São Ferraz\", " + \
            " \"numero\": \"1014\", " + \
            " \"dataFim\": \"1949-08-16\", " + \
            " \"cargaHoraria\": 40 " + \
            " }, " + \
            " { " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"cpf\": \"74LX5fHIcO\", " + \
            " \"nome\": \"Luna Marques\", " + \
            " \"genero\": 42, " + \
            " \"email\": \"srta.daiane.ortiz.neves.sobrinho@fake.com\", " + \
            " \"nomeSocial\": \"rRAEEBPUPdYf\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 270, " + \
            " 1 " + \
            " ], " + \
            " \"logradouro\": \"Rua Rua de Aguiar\", " + \
            " \"cep\": \"HNWKLZiL\", " + \
            " \"municipio\": 909, " + \
            " \"inep\": \"29191637\", " + \
            " \"matriculaRede\": \"123456789\", " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"2072-13-23\", " + \
            " \"dataFim\": \"1909-01-11\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_7 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_7.status_code == 201
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == True
        assert res_7.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"nivelEscolaridade\": 779, " + \
            " \"cpf\": \"03079424301\", " + \
            " \"nome\": \"MP2gY\", " + \
            " \"dataNascimento\": \"1954-08-23\", " + \
            " \"genero\": 2, " + \
            " \"racaCor\": 3, " + \
            " \"nomeSocial\": \"rRAEEBPUPdYf\", " + \
            " \"tipoDeficiencia\": [], " + \
            " \"sexo\": \"5\", " + \
            " \"logradouro\": \"MZCal\", " + \
            " \"bairro\": \"São da Rosa\", " + \
            " \"cep\": \"83807862\", " + \
            " \"municipio\": 3106200, " + \
            " \"inep\": 616, " + \
            " \"formacoesAcademicas\": [], " + \
            " \"matriculaRede\": \"56789\", " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataFim\": \"1971-06-24\" " + \
            " }, " + \
            " { " + \
            " \"nome\": \"Agustina Marin Gomes\", " + \
            " \"genero\": 4, " + \
            " \"email\": \"xJcbvY\", " + \
            " \"nomeSocial\": \"rRAEEBPUPdYf\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 3, " + \
            " 1 " + \
            " ], " + \
            " \"sexo\": \"2\", " + \
            " \"logradouro\": \"Rua Largo Noa\", " + \
            " \"bairro\": \"D8dtoVRK8KTw\", " + \
            " \"numero\": \"441\", " + \
            " \"uf\": 35, " + \
            " \"matriculaRede\": \"7\", " + \
            " \"tipoVinculo\": 1, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"2098-13-00\", " + \
            " \"dataFim\": \"2094-12-10\" " + \
            " }, " + \
            " { " + \
            " \"cpf\": \"00809647532\", " + \
            " \"nome\": \"Agustina Marin Gomes\", " + \
            " \"dataNascimento\": \"1960-12-30\", " + \
            " \"racaCor\": 3, " + \
            " \"telefone\": \"11969630845\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 10, " + \
            " 10, " + \
            " 2, " + \
            " 5, " + \
            " 9 " + \
            " ], " + \
            " \"numero\": \"215\", " + \
            " \"cep\": \"30848096\", " + \
            " \"uf\": 42, " + \
            " \"inep\": 29188784, " + \
            " \"formacoesAcademicas\": [], " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 1 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nome\": \"Thales Nicolas Paz Filho\", " + \
            " \"dataNascimento\": \"2006-03-20\", " + \
            " \"genero\": 5, " + \
            " \"racaCor\": 5, " + \
            " \"telefone\": \"11933018135\", " + \
            " \"logradouro\": \"Rua Travessa Abgail Dias\", " + \
            " \"bairro\": \"PAJW\", " + \
            " \"municipio\": 3106200, " + \
            " \"uf\": 24, " + \
            " \"tipoVinculo\": 0, " + \
            " \"dataIngresso\": \"2037-11-29\", " + \
            " \"cargaHoraria\": 458 " + \
            " }, " + \
            " { " + \
            " \"genero\": 3, " + \
            " \"email\": \"srta.camila.burgos.prado.filho@fake.com\", " + \
            " \"telefone\": \"3333333\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 5, " + \
            " 10 " + \
            " ], " + \
            " \"sexo\": \"0\", " + \
            " \"logradouro\": \"Rua Rua Maldonado\", " + \
            " \"numero\": \"66\", " + \
            " \"cep\": \"\", " + \
            " \"uf\": 42, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"RAlN1aYjzzqf\", " + \
            " \"anoInicioFormacaoAcademica\": 2016 " + \
            " } " + \
            " ], " + \
            " \"codigoFuncao\": 1, " + \
            " \"dataIngresso\": \"2041-11-07\", " + \
            " \"cargaHoraria\": 640 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_8 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_8.status_code == 201
        assert "application/json" in res_8.headers["content-type"]
        assert res_8.json()["success"] == True
        assert res_8.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/0/dataEnvio'] String "2025-05-04 00:43:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1/dataEnvio'] String "2025-05-04 00:43:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2/dataEnvio'] String "2025-05-04 00:43:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/3/dataEnvio'] String "2025-05-04 00:43:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/4/dataEnvio'] String "2025-05-04 00:43:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/5/dataEnvio'] String "2025-05-04 00:43:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/6/dataEnvio'] String "2025-05-04 00:43:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/7/dataEnvio'] String "2025-05-04 00:43:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/8/dataEnvio'] String "2025-05-04 00:43:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/9/dataEnvio'] String "2025-05-04 00:42:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/10/dataEnvio'] String "2025-05-04 00:42:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/11/dataEnvio'] String "2025-05-04 00:41:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/12/dataEnvio'] String "2025-05-04 00:41:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/13/dataEnvio'] String "2025-05-04 00:40:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/14/dataEnvio'] String "2025-05-04 00:38:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/15/dataEnvio'] String "2025-05-04 00:38:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/16/dataEnvio'] String "2025-05-04 00:38:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/17/dataEnvio'] String "2025-05-04 00:37:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/18/dataEnvio'] String "2025-05-04 00:37:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/19/dataEnvio'] String "2025-05-04 00:37:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/20/dataEnvio'] String "2025-05-04 00:37:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/21/dataEnvio'] String "2025-05-04 00:37:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/22/dataEnvio'] String "2025-05-04 00:37:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/23/dataEnvio'] String "2025-05-04 00:37:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/24/dataEnvio'] String "2025-05-04 00:36:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/25/dataEnvio'] String "2025-05-04 00:35:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/26/dataEnvio'] String "2025-05-04 00:33:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/27/dataEnvio'] String "2025-05-04 00:33:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/28/dataEnvio'] String "2025-05-04 00:33:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/29/dataEnvio'] String "2025-05-04 00:33:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/30/dataEnvio'] String "2025-05-04 00:32:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/31/dataEnvio'] String "2025-05-04 00:32:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/32/dataEnvio'] String "2025-05-04 00:32:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/33/dataEnvio'] String "2025-05-04 00:32:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/34/dataEnvio'] String "2025-05-04 00:32:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/35/dataEnvio'] String "2025-05-04 00:32:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/36/dataEnvio'] String "2025-05-04 00:32:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/37/dataEnvio'] String "2025-05-04 00:31:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/38/dataEnvio'] String "2025-05-04 00:31:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/39/dataEnvio'] String "2025-05-04 00:31:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/40/dataEnvio'] String "2025-05-04 00:31:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/41/dataEnvio'] String "2025-05-04 00:31:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/42/dataEnvio'] String "2025-05-04 00:31:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/43/dataEnvio'] String "2025-05-04 00:30:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/44/dataEnvio'] String "2025-05-04 00:30:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/45/dataEnvio'] String "2025-05-04 00:30:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/46/dataEnvio'] String "2025-05-04 00:30:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/47/dataEnvio'] String "2025-05-04 00:30:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/48/dataEnvio'] String "2025-05-04 00:30:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/49/dataEnvio'] String "2025-05-04 00:30:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/50/dataEnvio'] String "2025-05-04 00:30:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/51/dataEnvio'] String "2025-05-04 00:30:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/52/dataEnvio'] String "2025-05-04 00:29:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/53/dataEnvio'] String "2025-05-04 00:28:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/54/dataEnvio'] String "2025-05-04 00:28:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/55/dataEnvio'] String "2025-05-04 00:28:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/56/dataEnvio'] String "2025-05-04 00:27:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/57/dataEnvio'] String "2025-05-04 00:27:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/58/dataEnvio'] String "2025-05-04 00:26:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/59/dataEnvio'] String "2025-05-04 00:26:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/60/dataEnvio'] String "2025-05-04 00:26:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/61/dataEnvio'] String "2025-05-04 00:26:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/62/dataEnvio'] String "2025-05-04 00:26:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/63/dataEnvio'] String "2025-05-04 00:26:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/64/dataEnvio'] String "2025-05-04 00:26:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/65/dataEnvio'] String "2025-05-04 00:26:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/66/dataEnvio'] String "2025-05-04 00:26:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/67/dataEnvio'] String "2025-05-04 00:25:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/68/dataEnvio'] String "2025-05-04 00:25:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/69/dataEnvio'] String "2025-05-04 00:25:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/70/dataEnvio'] String "2025-05-04 00:25:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/71/dataEnvio'] String "2025-05-04 00:24:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/72/dataEnvio'] String "2025-05-04 00:24:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/73/dataEnvio'] String "2025-05-04 00:24:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/74/dataEnvio'] String "2025-05-04 00:24:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/75/dataEnvio'] String "2025-05-04 00:24:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/76/dataEnvio'] String "2025-05-04 00:24:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/77/dataEnvio'] String "2025-05-04 00:23:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/78/dataEnvio'] String "2025-05-04 00:23:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/79/dataEnvio'] String "2025-05-04 00:23:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/80/dataEnvio'] String "2025-05-04 00:23:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/81/dataEnvio'] String "2025-05-04 00:23:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/82/dataEnvio'] String "2025-05-04 00:23:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/83/dataEnvio'] String "2025-05-04 00:23:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/84/dataEnvio'] String "2025-05-04 00:23:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/85/dataEnvio'] String "2025-05-04 00:23:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/86/dataEnvio'] String "2025-05-04 00:23:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/87/dataEnvio'] String "2025-05-04 00:21:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/88/dataEnvio'] String "2025-05-04 00:21:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/89/dataEnvio'] String "2025-05-04 00:21:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/90/dataEnvio'] String "2025-05-04 00:21:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/91/dataEnvio'] String "2025-05-04 00:18:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/92/dataEnvio'] String "2025-05-04 00:18:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/93/dataEnvio'] String "2025-05-04 00:17:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/94/dataEnvio'] String "2025-05-04 00:17:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/95/dataEnvio'] String "2025-05-04 00:17:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/96/dataEnvio'] String "2025-05-04 00:17:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/97/dataEnvio'] String "2025-05-04 00:15:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/98/dataEnvio'] String "2025-05-04 00:12:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/99/dataEnvio'] String "2025-05-04 00:12:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/100/dataEnvio'] String "2025-05-04 00:12:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/101/dataEnvio'] String "2025-05-04 00:12:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/102/dataEnvio'] String "2025-05-04 00:12:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/103/dataEnvio'] String "2025-05-04 00:11:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/104/dataEnvio'] String "2025-05-04 00:11:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/105/dataEnvio'] String "2025-05-04 00:11:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/106/dataEnvio'] String "2025-05-04 00:11:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/107/dataEnvio'] String "2025-05-04 00:09:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/108/dataEnvio'] String "2025-05-04 00:09:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/109/dataEnvio'] String "2025-05-04 00:08:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/110/dataEnvio'] String "2025-05-04 00:08:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/111/dataEnvio'] String "2025-05-04 00:07:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/112/dataEnvio'] String "2025-05-04 00:07:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/113/dataEnvio'] String "2025-05-04 00:07:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/114/dataEnvio'] String "2025-05-04 00:07:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/115/dataEnvio'] String "2025-05-04 00:07:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/116/dataEnvio'] String "2025-05-04 00:07:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/117/dataEnvio'] String "2025-05-04 00:07:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/118/dataEnvio'] String "2025-05-04 00:07:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/119/dataEnvio'] String "2025-05-04 00:06:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/120/dataEnvio'] String "2025-05-04 00:06:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/121/dataEnvio'] String "2025-05-04 00:06:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/122/dataEnvio'] String "2025-05-04 00:06:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/123/dataEnvio'] String "2025-05-04 00:06:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/124/dataEnvio'] String "2025-05-04 00:06:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/125/dataEnvio'] String "2025-05-04 00:06:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/126/dataEnvio'] String "2025-05-04 00:06:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/127/dataEnvio'] String "2025-05-04 00:06:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/128/dataEnvio'] String "2025-05-04 00:05:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/129/dataEnvio'] String "2025-05-04 00:05:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/130/dataEnvio'] String "2025-05-04 00:04:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/131/dataEnvio'] String "2025-05-04 00:02:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/132/dataEnvio'] String "2025-05-04 00:02:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/133/dataEnvio'] String "2025-05-03 23:59:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/134/dataEnvio'] String "2025-05-03 23:58:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/135/dataEnvio'] String "2025-05-03 23:56:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/136/dataEnvio'] String "2025-05-03 23:56:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/137/dataEnvio'] String "2025-05-03 23:56:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/138/dataEnvio'] String "2025-05-03 23:45:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/139/dataEnvio'] String "2025-05-03 23:45:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/140/dataEnvio'] String "2025-05-03 23:44:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/141/dataEnvio'] String "2025-05-03 23:40:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/142/dataEnvio'] String "2025-05-03 23:39:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/143/dataEnvio'] String "2025-05-03 23:38:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/144/dataEnvio'] String "2025-05-03 23:36:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/145/dataEnvio'] String "2025-05-03 23:35:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/146/dataEnvio'] String "2025-05-03 23:33:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/147/dataEnvio'] String "2025-05-03 23:28:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/148/dataEnvio'] String "2025-05-03 23:28:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/149/dataEnvio'] String "2025-05-03 23:25:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/150/dataEnvio'] String "2025-05-03 23:23:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/151/dataEnvio'] String "2025-05-03 23:22:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/152/dataEnvio'] String "2025-05-03 23:21:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/153/dataEnvio'] String "2025-05-03 23:19:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/154/dataEnvio'] String "2025-05-03 23:19:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/155/dataEnvio'] String "2025-05-03 23:19:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/156/dataEnvio'] String "2025-05-03 23:18:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/157/dataEnvio'] String "2025-05-03 23:18:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/158/dataEnvio'] String "2025-05-03 23:11:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/159/dataEnvio'] String "2025-05-03 23:11:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/160/dataEnvio'] String "2025-05-03 23:11:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/161/dataEnvio'] String "2025-05-03 23:10:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/162/dataEnvio'] String "2025-05-03 23:05:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/163/dataEnvio'] String "2025-05-03 23:04:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/164/dataEnvio'] String "2025-05-03 23:03:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/165/dataEnvio'] String "2025-05-03 23:03:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/166/dataEnvio'] String "2025-05-03 23:01:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/167/dataEnvio'] String "2025-05-03 23:01:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/168/dataEnvio'] String "2025-05-03 22:59:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/169/dataEnvio'] String "2025-05-03 22:57:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/170/dataEnvio'] String "2025-05-03 22:53:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/171/dataEnvio'] String "2025-05-03 22:51:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/172/dataEnvio'] String "2025-05-03 22:50:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/173/dataEnvio'] String "2025-05-03 22:50:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/174/dataEnvio'] String "2025-05-03 22:49:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/175/dataEnvio'] String "2025-05-03 22:49:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/176/dataEnvio'] String "2025-05-03 22:48:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/177/dataEnvio'] String "2025-05-03 22:48:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/178/dataEnvio'] String "2025-05-03 22:47:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/179/dataEnvio'] String "2025-05-03 22:44:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/180/dataEnvio'] String "2025-05-03 22:42:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/181/dataEnvio'] String "2025-05-03 22:40:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/182/dataEnvio'] String "2025-05-03 22:38:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/183/dataEnvio'] String "2025-05-03 22:37:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/184/dataEnvio'] String "2025-05-03 22:36:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/185/dataEnvio'] String "2025-05-03 22:35:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/186/dataEnvio'] String "2025-05-03 22:34:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/187/dataEnvio'] String "2025-05-03 22:34:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/188/dataEnvio'] String "2025-05-03 22:33:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/189/dataEnvio'] String "2025-05-03 22:31:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/190/dataEnvio'] String "2025-05-03 22:30:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/191/dataEnvio'] String "2025-05-03 22:29:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/192/dataEnvio'] String "2025-05-03 22:28:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/193/dataEnvio'] String "2025-05-03 22:25:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/194/dataEnvio'] String "2025-05-03 22:24:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/195/dataEnvio'] String "2025-05-03 22:23:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/196/dataEnvio'] String "2025-05-03 22:23:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/197/dataEnvio'] String "2025-05-03 22:23:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/198/dataEnvio'] String "2025-05-03 22:23:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/199/dataEnvio'] String "2025-05-03 22:23:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/200/dataEnvio'] String "2025-05-03 22:23:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/201/dataEnvio'] String "2025-05-03 22:23:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/202/dataEnvio'] String "2025-05-03 22:23:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/203/dataEnvio'] String "2025-05-03 22:23:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/204/dataEnvio'] String "2025-05-03 22:22:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/205/dataEnvio'] String "2025-05-03 22:21:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/206/dataEnvio'] String "2025-05-03 22:21:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/207/dataEnvio'] String "2025-05-03 22:21:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/208/dataEnvio'] String "2025-05-03 22:21:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/209/dataEnvio'] String "2025-05-03 22:21:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/210/dataEnvio'] String "2025-05-03 22:20:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/211/dataEnvio'] String "2025-05-03 22:20:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/212/dataEnvio'] String "2025-05-03 22:20:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/213/dataEnvio'] String "2025-05-03 22:20:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/214/dataEnvio'] String "2025-05-03 22:20:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/215/dataEnvio'] String "2025-05-03 22:20:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/216/dataEnvio'] String "2025-05-03 22:20:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/217/dataEnvio'] String "2025-05-03 22:19:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/218/dataEnvio'] String "2025-05-03 22:19:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/219/dataEnvio'] String "2025-05-03 22:19:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/220/dataEnvio'] String "2025-05-03 22:19:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/221/dataEnvio'] String "2025-05-03 22:19:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/222/dataEnvio'] String "2025-05-03 22:19:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/223/dataEnvio'] String "2025-05-03 22:18:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/224/dataEnvio'] String "2025-05-03 22:18:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/225/dataEnvio'] String "2025-05-03 22:15:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/226/dataEnvio'] String "2025-05-03 22:15:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/227/dataEnvio'] String "2025-05-03 22:13:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/228/dataEnvio'] String "2025-05-03 22:12:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/229/dataEnvio'] String "2025-05-03 22:12:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/230/dataEnvio'] String "2025-05-03 22:11:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/231/dataEnvio'] String "2025-05-03 22:11:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/232/dataEnvio'] String "2025-05-03 22:11:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/233/dataEnvio'] String "2025-05-03 22:11:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/234/dataEnvio'] String "2025-05-03 22:11:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/235/dataEnvio'] String "2025-05-03 22:10:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/236/dataEnvio'] String "2025-05-03 22:10:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/237/dataEnvio'] String "2025-05-03 22:10:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/238/dataEnvio'] String "2025-05-03 22:09:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/239/dataEnvio'] String "2025-05-03 22:09:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/240/dataEnvio'] String "2025-05-03 22:06:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/241/dataEnvio'] String "2025-05-03 22:05:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/242/dataEnvio'] String "2025-05-03 22:04:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/243/dataEnvio'] String "2025-05-03 22:04:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/244/dataEnvio'] String "2025-05-03 22:04:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/245/dataEnvio'] String "2025-05-03 22:04:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/246/dataEnvio'] String "2025-05-03 22:04:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/247/dataEnvio'] String "2025-05-03 22:04:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/248/dataEnvio'] String "2025-05-03 22:04:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/249/dataEnvio'] String "2025-05-03 22:03:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/250/dataEnvio'] String "2025-05-03 22:03:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/251/dataEnvio'] String "2025-05-03 22:03:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/252/dataEnvio'] String "2025-05-03 22:02:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/253/dataEnvio'] String "2025-05-03 22:01:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/254/dataEnvio'] String "2025-05-03 22:00:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/255/dataEnvio'] String "2025-05-03 21:59:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/256/dataEnvio'] String "2025-05-03 21:59:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/257/dataEnvio'] String "2025-05-03 21:59:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/258/dataEnvio'] String "2025-05-03 21:58:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/259/dataEnvio'] String "2025-05-03 21:57:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/260/dataEnvio'] String "2025-05-03 21:57:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/261/dataEnvio'] String "2025-05-03 21:56:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/262/dataEnvio'] String "2025-05-03 21:56:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/263/dataEnvio'] String "2025-05-03 21:56:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/264/dataEnvio'] String "2025-05-03 21:56:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/265/dataEnvio'] String "2025-05-03 21:56:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/266/dataEnvio'] String "2025-05-03 21:55:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/267/dataEnvio'] String "2025-05-03 21:55:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/268/dataEnvio'] String "2025-05-03 21:55:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/269/dataEnvio'] String "2025-05-03 21:55:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/270/dataEnvio'] String "2025-05-03 21:55:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/271/dataEnvio'] String "2025-05-03 21:55:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/272/dataEnvio'] String "2025-05-03 21:55:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/273/dataEnvio'] String "2025-05-03 21:55:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/274/dataEnvio'] String "2025-05-03 21:55:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/275/dataEnvio'] String "2025-05-03 21:55:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/276/dataEnvio'] String "2025-05-03 21:54:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/277/dataEnvio'] String "2025-05-03 21:54:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/278/dataEnvio'] String "2025-05-03 21:54:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/279/dataEnvio'] String "2025-05-03 21:54:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/280/dataEnvio'] String "2025-05-03 21:54:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/281/dataEnvio'] String "2025-05-03 21:54:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/282/dataEnvio'] String "2025-05-03 21:53:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/283/dataEnvio'] String "2025-05-03 21:53:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/284/dataEnvio'] String "2025-05-03 21:53:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/285/dataEnvio'] String "2025-05-03 21:53:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/286/dataEnvio'] String "2025-05-03 21:53:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/287/dataEnvio'] String "2025-05-03 21:52:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/288/dataEnvio'] String "2025-05-03 21:52:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/289/dataEnvio'] String "2025-05-03 21:51:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/290/dataEnvio'] String "2025-05-03 21:51:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/291/dataEnvio'] String "2025-05-03 21:51:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/292/dataEnvio'] String "2025-05-03 21:51:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/293/dataEnvio'] String "2025-05-03 21:51:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/294/dataEnvio'] String "2025-05-03 21:50:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/295/dataEnvio'] String "2025-05-03 21:49:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/296/dataEnvio'] String "2025-05-03 21:49:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/297/dataEnvio'] String "2025-05-03 21:49:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/298/dataEnvio'] String "2025-05-03 21:48:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/299/dataEnvio'] String "2025-05-03 21:46:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/300/dataEnvio'] String "2025-05-03 21:44:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/301/dataEnvio'] String "2025-05-03 21:43:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/302/dataEnvio'] String "2025-05-03 21:43:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/303/dataEnvio'] String "2025-05-03 21:42:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/304/dataEnvio'] String "2025-05-03 21:41:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/305/dataEnvio'] String "2025-05-03 21:40:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/306/dataEnvio'] String "2025-05-03 21:38:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/307/dataEnvio'] String "2025-05-03 21:38:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/308/dataEnvio'] String "2025-05-03 21:37:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/309/dataEnvio'] String "2025-05-03 21:37:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/310/dataEnvio'] String "2025-05-03 21:34:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/311/dataEnvio'] String "2025-05-03 21:28:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/312/dataEnvio'] String "2025-05-03 21:28:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/313/dataEnvio'] String "2025-05-03 21:25:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/314/dataEnvio'] String "2025-05-03 21:24:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/315/dataEnvio'] String "2025-05-03 21:24:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/316/dataEnvio'] String "2025-05-03 21:23:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/317/dataEnvio'] String "2025-05-03 21:23:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/318/dataEnvio'] String "2025-05-03 21:21:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/319/dataEnvio'] String "2025-05-03 21:20:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/320/dataEnvio'] String "2025-05-03 21:16:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/321/dataEnvio'] String "2025-05-03 21:16:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/322/dataEnvio'] String "2025-05-03 21:11:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/323/dataEnvio'] String "2025-05-03 21:11:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/324/dataEnvio'] String "2025-05-03 21:09:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/325/dataEnvio'] String "2025-05-03 21:09:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/326/dataEnvio'] String "2025-05-03 21:09:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/327/dataEnvio'] String "2025-05-03 21:06:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/328/dataEnvio'] String "2025-05-03 21:05:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/329/dataEnvio'] String "2025-05-03 21:05:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/330/dataEnvio'] String "2025-05-03 21:03:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/331/dataEnvio'] String "2025-05-03 21:03:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/332/dataEnvio'] String "2025-05-03 21:01:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/333/dataEnvio'] String "2025-05-03 20:59:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/334/dataEnvio'] String "2025-05-03 20:56:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/335/dataEnvio'] String "2025-05-03 20:55:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/336/dataEnvio'] String "2025-05-03 20:54:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/337/dataEnvio'] String "2025-05-03 20:54:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/338/dataEnvio'] String "2025-05-03 20:54:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/339/dataEnvio'] String "2025-05-03 20:52:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/340/dataEnvio'] String "2025-05-03 20:52:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/341/dataEnvio'] String "2025-05-03 20:51:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/342/dataEnvio'] String "2025-05-03 20:50:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/343/dataEnvio'] String "2025-05-03 20:50:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/344/dataEnvio'] String "2025-05-03 20:49:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/345/dataEnvio'] String "2025-05-03 20:47:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/346/dataEnvio'] String "2025-05-03 20:45:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/347/dataEnvio'] String "2025-05-03 20:42:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/348/dataEnvio'] String "2025-05-03 20:42:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/349/dataEnvio'] String "2025-05-03 20:41:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/350/dataEnvio'] String "2025-05-03 20:41:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/351/dataEnvio'] String "2025-05-03 20:40:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/352/dataEnvio'] String "2025-05-03 20:40:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/353/dataEnvio'] String "2025-05-03 20:38:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/354/dataEnvio'] String "2025-05-03 20:35:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/355/dataEnvio'] String "2025-05-03 20:30:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/356/dataEnvio'] String "2025-05-03 20:28:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/357/dataEnvio'] String "2025-05-03 20:25:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/358/dataEnvio'] String "2025-05-03 20:24:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/359/dataEnvio'] String "2025-05-03 20:24:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/360/dataEnvio'] String "2025-05-03 20:23:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/361/dataEnvio'] String "2025-05-03 20:21:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/362/dataEnvio'] String "2025-05-03 20:21:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/363/dataEnvio'] String "2025-05-03 20:16:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/364/dataEnvio'] String "2025-05-03 20:15:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/365/dataEnvio'] String "2025-05-03 20:14:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/366/dataEnvio'] String "2025-05-03 20:14:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/367/dataEnvio'] String "2025-05-03 20:13:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/368/dataEnvio'] String "2025-05-03 20:13:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/369/dataEnvio'] String "2025-05-03 20:11:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/370/dataEnvio'] String "2025-05-03 20:10:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/371/dataEnvio'] String "2025-05-03 20:10:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/372/dataEnvio'] String "2025-05-03 20:08:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/373/dataEnvio'] String "2025-05-03 20:08:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/374/dataEnvio'] String "2025-05-03 20:07:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/375/dataEnvio'] String "2025-05-03 20:05:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/376/dataEnvio'] String "2025-05-03 20:00:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/377/dataEnvio'] String "2025-05-03 19:59:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/378/dataEnvio'] String "2025-05-03 19:59:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/379/dataEnvio'] String "2025-05-03 19:59:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/380/dataEnvio'] String "2025-05-03 19:59:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/381/dataEnvio'] String "2025-05-03 19:59:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/382/dataEnvio'] String "2025-05-03 19:59:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/383/dataEnvio'] String "2025-05-03 19:59:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/384/dataEnvio'] String "2025-05-03 19:59:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/385/dataEnvio'] String "2025-05-03 19:59:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/386/dataEnvio'] String "2025-05-03 19:58:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/387/dataEnvio'] String "2025-05-03 19:58:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/388/dataEnvio'] String "2025-05-03 19:58:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/389/dataEnvio'] String "2025-05-03 19:58:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/390/dataEnvio'] String "2025-05-03 19:58:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/391/dataEnvio'] String "2025-05-03 19:58:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/392/dataEnvio'] String "2025-05-03 19:57:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/393/dataEnvio'] String "2025-05-03 19:57:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/394/dataEnvio'] String "2025-05-03 19:56:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/395/dataEnvio'] String "2025-05-03 19:56:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/396/dataEnvio'] String "2025-05-03 19:56:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/397/dataEnvio'] String "2025-05-03 19:56:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/398/dataEnvio'] String "2025-05-03 19:56:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/399/dataEnvio'] String "2025-05-03 19:56:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/400/dataEnvio'] String "2025-05-03 19:56:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/401/dataEnvio'] String "2025-05-03 19:56:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/402/dataEnvio'] String "2025-05-03 19:56:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/403/dataEnvio'] String "2025-05-03 19:55:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/404/dataEnvio'] String "2025-05-03 19:55:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/405/dataEnvio'] String "2025-05-03 19:55:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/406/dataEnvio'] String "2025-05-03 19:55:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/407/dataEnvio'] String "2025-05-03 19:55:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/408/dataEnvio'] String "2025-05-03 19:55:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/409/dataEnvio'] String "2025-05-03 19:55:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/410/dataEnvio'] String "2025-05-03 19:55:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/411/dataEnvio'] String "2025-05-03 19:55:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/412/dataEnvio'] String "2025-05-03 19:55:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/413/dataEnvio'] String "2025-05-03 19:54:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/414/dataEnvio'] String "2025-05-03 19:54:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/415/dataEnvio'] String "2025-05-03 19:54:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/416/dataEnvio'] String "2025-05-03 19:54:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/417/dataEnvio'] String "2025-05-03 19:54:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/418/dataEnvio'] String "2025-05-03 19:51:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/419/dataEnvio'] String "2025-05-03 19:51:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/420/dataEnvio'] String "2025-05-03 19:51:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/421/dataEnvio'] String "2025-05-03 19:51:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/422/dataEnvio'] String "2025-05-03 19:49:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/423/dataEnvio'] String "2025-05-03 19:49:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/424/dataEnvio'] String "2025-05-03 19:49:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/425/dataEnvio'] String "2025-05-03 19:48:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/426/dataEnvio'] String "2025-05-03 19:47:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/427/dataEnvio'] String "2025-05-03 19:47:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/428/dataEnvio'] String "2025-05-03 19:47:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/429/dataEnvio'] String "2025-05-03 19:47:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/430/dataEnvio'] String "2025-05-03 19:47:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/431/dataEnvio'] String "2025-05-03 19:46:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/432/dataEnvio'] String "2025-05-03 19:46:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/433/dataEnvio'] String "2025-05-03 19:46:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/434/dataEnvio'] String "2025-05-03 19:45:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/435/dataEnvio'] String "2025-05-03 19:45:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/436/dataEnvio'] String "2025-05-03 19:45:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/437/dataEnvio'] String "2025-05-03 19:44:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/438/dataEnvio'] String "2025-05-03 19:44:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/439/dataEnvio'] String "2025-05-03 19:44:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/440/dataEnvio'] String "2025-05-03 19:44:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/441/dataEnvio'] String "2025-05-03 19:44:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/442/dataEnvio'] String "2025-05-03 19:44:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/443/dataEnvio'] String "2025-05-03 19:44:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/444/dataEnvio'] String "2025-05-03 19:44:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/445/dataEnvio'] String "2025-05-03 19:44:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/446/dataEnvio'] String "2025-05-03 19:43:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/447/dataEnvio'] String "2025-05-03 19:42:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/448/dataEnvio'] String "2025-05-03 19:42:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/449/dataEnvio'] String "2025-05-03 19:41:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/450/dataEnvio'] String "2025-05-03 19:41:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/451/dataEnvio'] String "2025-05-03 19:41:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/452/dataEnvio'] String "2025-05-03 19:41:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/453/dataEnvio'] String "2025-05-03 19:41:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/454/dataEnvio'] String "2025-05-03 19:41:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/455/dataEnvio'] String "2025-05-03 19:41:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/456/dataEnvio'] String "2025-05-03 19:41:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/457/dataEnvio'] String "2025-05-03 19:41:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/458/dataEnvio'] String "2025-05-03 19:40:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/459/dataEnvio'] String "2025-05-03 19:40:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/460/dataEnvio'] String "2025-05-03 19:40:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/461/dataEnvio'] String "2025-05-03 19:40:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/462/dataEnvio'] String "2025-05-03 19:40:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/463/dataEnvio'] String "2025-05-03 19:40:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/464/dataEnvio'] String "2025-05-03 19:40:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/465/dataEnvio'] String "2025-05-03 19:39:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/466/dataEnvio'] String "2025-05-03 19:39:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/467/dataEnvio'] String "2025-05-03 19:39:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/468/dataEnvio'] String "2025-05-03 19:38:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/469/dataEnvio'] String "2025-05-03 19:38:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/470/dataEnvio'] String "2025-05-03 19:38:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/471/dataEnvio'] String "2025-05-03 19:36:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/472/dataEnvio'] String "2025-05-03 19:36:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/473/dataEnvio'] String "2025-05-03 19:35:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/474/dataEnvio'] String "2025-05-03 19:35:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/475/dataEnvio'] String "2025-05-03 19:35:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/476/dataEnvio'] String "2025-05-03 19:35:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/477/dataEnvio'] String "2025-05-03 19:35:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/478/dataEnvio'] String "2025-05-03 19:35:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/479/dataEnvio'] String "2025-05-03 19:35:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/480/dataEnvio'] String "2025-05-03 19:35:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/481/dataEnvio'] String "2025-05-03 19:35:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/482/dataEnvio'] String "2025-05-03 19:34:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/483/dataEnvio'] String "2025-05-03 19:34:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/484/dataEnvio'] String "2025-05-03 19:34:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/485/dataEnvio'] String "2025-05-03 19:33:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/486/dataEnvio'] String "2025-05-03 19:33:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/487/dataEnvio'] String "2025-05-03 19:33:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/488/dataEnvio'] String "2025-05-03 19:32:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/489/dataEnvio'] String "2025-05-03 19:31:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/490/dataEnvio'] String "2025-05-03 19:31:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/491/dataEnvio'] String "2025-05-03 19:31:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/492/dataEnvio'] String "2025-05-03 19:31:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/493/dataEnvio'] String "2025-05-03 19:31:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/494/dataEnvio'] String "2025-05-03 19:31:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/495/dataEnvio'] String "2025-05-03 19:30:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/496/dataEnvio'] String "2025-05-03 19:30:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/497/dataEnvio'] String "2025-05-03 19:30:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/498/dataEnvio'] String "2025-05-03 19:30:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/499/dataEnvio'] String "2025-05-03 19:29:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/500/dataEnvio'] String "2025-05-03 19:29:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/501/dataEnvio'] String "2025-05-03 19:29:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/502/dataEnvio'] String "2025-05-03 19:28:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/503/dataEnvio'] String "2025-05-03 19:27:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/504/dataEnvio'] String "2025-05-03 19:27:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/505/dataEnvio'] String "2025-05-03 19:27:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/506/dataEnvio'] String "2025-05-03 19:27:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/507/dataEnvio'] String "2025-05-03 19:27:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/508/dataEnvio'] String "2025-05-03 19:27:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/509/dataEnvio'] String "2025-05-03 19:27:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/510/dataEnvio'] String "2025-05-03 19:27:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/511/dataEnvio'] String "2025-05-03 19:26:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/512/dataEnvio'] String "2025-05-03 19:26:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/513/dataEnvio'] String "2025-05-03 19:25:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/514/dataEnvio'] String "2025-05-03 19:25:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/515/dataEnvio'] String "2025-05-03 19:25:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/516/dataEnvio'] String "2025-05-03 19:25:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/517/dataEnvio'] String "2025-05-03 19:25:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/518/dataEnvio'] String "2025-05-03 19:25:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/519/dataEnvio'] String "2025-05-03 19:24:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/520/dataEnvio'] String "2025-05-03 19:24:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/521/dataEnvio'] String "2025-05-03 19:23:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/522/dataEnvio'] String "2025-05-03 19:23:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/523/dataEnvio'] String "2025-05-03 19:23:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/524/dataEnvio'] String "2025-05-03 19:23:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/525/dataEnvio'] String "2025-05-03 19:23:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/526/dataEnvio'] String "2025-05-03 19:23:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/527/dataEnvio'] String "2025-05-03 19:21:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/528/dataEnvio'] String "2025-05-03 19:20:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/529/dataEnvio'] String "2025-05-03 19:18:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/530/dataEnvio'] String "2025-05-03 19:17:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/531/dataEnvio'] String "2025-05-03 19:16:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/532/dataEnvio'] String "2025-05-03 19:11:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/533/dataEnvio'] String "2025-05-03 19:10:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/534/dataEnvio'] String "2025-05-03 19:08:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/535/dataEnvio'] String "2025-05-03 19:07:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/536/dataEnvio'] String "2025-05-03 19:05:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/537/dataEnvio'] String "2025-05-03 19:03:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/538/dataEnvio'] String "2025-05-03 19:01:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/539/dataEnvio'] String "2025-05-03 19:00:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/540/dataEnvio'] String "2025-05-03 19:00:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/541/dataEnvio'] String "2025-05-03 18:59:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/542/dataEnvio'] String "2025-05-03 18:58:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/543/dataEnvio'] String "2025-05-03 18:57:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/544/dataEnvio'] String "2025-05-03 18:56:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/545/dataEnvio'] String "2025-05-03 18:54:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/546/dataEnvio'] String "2025-05-03 18:51:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/547/dataEnvio'] String "2025-05-03 18:50:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/548/dataEnvio'] String "2025-05-03 18:47:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/549/dataEnvio'] String "2025-05-03 18:46:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/550/dataEnvio'] String "2025-05-03 18:45:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/551/dataEnvio'] String "2025-05-03 18:44:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/552/dataEnvio'] String "2025-05-03 18:43:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/553/dataEnvio'] String "2025-05-03 18:41:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/554/dataEnvio'] String "2025-05-03 18:41:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/555/dataEnvio'] String "2025-05-03 18:40:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/556/dataEnvio'] String "2025-05-03 18:35:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/557/dataEnvio'] String "2025-05-03 18:35:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/558/dataEnvio'] String "2025-05-03 18:34:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/559/dataEnvio'] String "2025-05-03 18:32:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/560/dataEnvio'] String "2025-05-03 18:31:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/561/dataEnvio'] String "2025-05-03 18:31:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/562/dataEnvio'] String "2025-05-03 18:29:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/563/dataEnvio'] String "2025-05-03 18:29:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/564/dataEnvio'] String "2025-05-03 18:27:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/565/dataEnvio'] String "2025-05-03 11:35:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/566/dataEnvio'] String "2025-05-03 11:34:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/567/dataEnvio'] String "2025-05-03 11:33:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/568/dataEnvio'] String "2025-05-03 11:33:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/569/dataEnvio'] String "2025-05-03 11:32:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/570/dataEnvio'] String "2025-05-03 11:31:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/571/dataEnvio'] String "2025-05-03 11:30:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/572/dataEnvio'] String "2025-05-03 11:28:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/573/dataEnvio'] String "2025-05-03 11:27:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/574/dataEnvio'] String "2025-05-03 11:27:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/575/dataEnvio'] String "2025-05-03 11:26:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/576/dataEnvio'] String "2025-05-03 11:26:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/577/dataEnvio'] String "2025-05-03 11:25:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/578/dataEnvio'] String "2025-05-03 11:24:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/579/dataEnvio'] String "2025-05-03 11:24:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/580/dataEnvio'] String "2025-05-03 11:22:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/581/dataEnvio'] String "2025-05-03 11:20:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/582/dataEnvio'] String "2025-05-03 11:20:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/583/dataEnvio'] String "2025-05-03 11:19:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/584/dataEnvio'] String "2025-05-03 11:16:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/585/dataEnvio'] String "2025-05-03 11:16:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/586/dataEnvio'] String "2025-05-03 11:15:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/587/dataEnvio'] String "2025-05-03 11:15:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/588/dataEnvio'] String "2025-05-03 11:14:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/589/dataEnvio'] String "2025-05-03 11:14:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/590/dataEnvio'] String "2025-05-03 11:14:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/591/dataEnvio'] String "2025-05-03 11:13:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/592/dataEnvio'] String "2025-05-03 11:13:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/593/dataEnvio'] String "2025-05-03 11:12:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/594/dataEnvio'] String "2025-05-03 11:10:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/595/dataEnvio'] String "2025-05-03 11:10:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/596/dataEnvio'] String "2025-05-03 11:10:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/597/dataEnvio'] String "2025-05-03 11:09:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/598/dataEnvio'] String "2025-05-03 11:09:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/599/dataEnvio'] String "2025-05-03 11:09:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/600/dataEnvio'] String "2025-05-03 11:09:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/601/dataEnvio'] String "2025-05-03 11:09:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/602/dataEnvio'] String "2025-05-03 11:09:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/603/dataEnvio'] String "2025-05-03 11:08:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/604/dataEnvio'] String "2025-05-03 11:08:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/605/dataEnvio'] String "2025-05-03 11:07:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/606/dataEnvio'] String "2025-05-03 11:07:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/607/dataEnvio'] String "2025-05-03 11:07:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/608/dataEnvio'] String "2025-05-03 11:07:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/609/dataEnvio'] String "2025-05-03 11:07:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/610/dataEnvio'] String "2025-05-03 11:07:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/611/dataEnvio'] String "2025-05-03 11:07:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/612/dataEnvio'] String "2025-05-03 11:07:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/613/dataEnvio'] String "2025-05-03 11:07:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/614/dataEnvio'] String "2025-05-03 11:07:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/615/dataEnvio'] String "2025-05-03 11:07:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/616/dataEnvio'] String "2025-05-03 11:07:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/617/dataEnvio'] String "2025-05-03 11:06:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/618/dataEnvio'] String "2025-05-03 11:06:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/619/dataEnvio'] String "2025-05-03 11:06:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/620/dataEnvio'] String "2025-05-03 11:05:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/621/dataEnvio'] String "2025-05-03 11:04:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/622/dataEnvio'] String "2025-05-03 11:02:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/623/dataEnvio'] String "2025-05-03 11:01:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/624/dataEnvio'] String "2025-05-03 11:01:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/625/dataEnvio'] String "2025-05-03 11:00:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/626/dataEnvio'] String "2025-05-03 11:00:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/627/dataEnvio'] String "2025-05-03 10:59:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/628/dataEnvio'] String "2025-05-03 10:59:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/629/dataEnvio'] String "2025-05-03 10:59:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/630/dataEnvio'] String "2025-05-03 10:59:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/631/dataEnvio'] String "2025-05-03 10:58:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/632/dataEnvio'] String "2025-05-03 10:58:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/633/dataEnvio'] String "2025-05-03 10:58:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/634/dataEnvio'] String "2025-05-03 10:57:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/635/dataEnvio'] String "2025-05-03 10:57:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/636/dataEnvio'] String "2025-05-03 10:57:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/637/dataEnvio'] String "2025-05-03 10:57:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/638/dataEnvio'] String "2025-05-03 10:57:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/639/dataEnvio'] String "2025-05-03 10:57:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/640/dataEnvio'] String "2025-05-03 10:57:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/641/dataEnvio'] String "2025-05-03 10:56:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/642/dataEnvio'] String "2025-05-03 10:55:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/643/dataEnvio'] String "2025-05-03 10:55:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/644/dataEnvio'] String "2025-05-03 10:55:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/645/dataEnvio'] String "2025-05-03 10:54:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/646/dataEnvio'] String "2025-05-03 10:53:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/647/dataEnvio'] String "2025-05-03 10:53:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/648/dataEnvio'] String "2025-05-03 10:53:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/649/dataEnvio'] String "2025-05-03 10:53:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/650/dataEnvio'] String "2025-05-03 10:53:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/651/dataEnvio'] String "2025-05-03 10:53:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/652/dataEnvio'] String "2025-05-03 10:53:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/653/dataEnvio'] String "2025-05-03 10:52:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/654/dataEnvio'] String "2025-05-03 10:52:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/655/dataEnvio'] String "2025-05-03 10:52:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/656/dataEnvio'] String "2025-05-03 10:52:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/657/dataEnvio'] String "2025-05-03 10:52:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/658/dataEnvio'] String "2025-05-03 10:52:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/659/dataEnvio'] String "2025-05-03 10:52:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/660/dataEnvio'] String "2025-05-03 10:52:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/661/dataEnvio'] String "2025-05-03 10:50:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/662/dataEnvio'] String "2025-05-03 10:48:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/663/dataEnvio'] String "2025-05-03 10:47:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/664/dataEnvio'] String "2025-05-03 10:47:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/665/dataEnvio'] String "2025-05-03 10:46:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/666/dataEnvio'] String "2025-05-03 10:45:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/667/dataEnvio'] String "2025-05-03 10:43:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/668/dataEnvio'] String "2025-05-03 10:41:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/669/dataEnvio'] String "2025-05-03 10:40:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/670/dataEnvio'] String "2025-05-03 10:38:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/671/dataEnvio'] String "2025-05-03 10:35:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/672/dataEnvio'] String "2025-05-03 10:34:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/673/dataEnvio'] String "2025-05-03 10:32:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/674/dataEnvio'] String "2025-05-03 10:29:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/675/dataEnvio'] String "2025-05-03 10:27:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/676/dataEnvio'] String "2025-05-03 10:25:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/677/dataEnvio'] String "2025-05-03 10:24:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/678/dataEnvio'] String "2025-05-03 10:21:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/679/dataEnvio'] String "2025-05-03 10:20:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/680/dataEnvio'] String "2025-05-03 10:19:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/681/dataEnvio'] String "2025-05-03 10:17:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/682/dataEnvio'] String "2025-05-03 10:15:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/683/dataEnvio'] String "2025-05-03 10:14:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/684/dataEnvio'] String "2025-05-03 10:13:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/685/dataEnvio'] String "2025-05-03 10:12:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/686/dataEnvio'] String "2025-05-03 10:10:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/687/dataEnvio'] String "2025-05-03 10:08:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/688/dataEnvio'] String "2025-05-03 10:05:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/689/dataEnvio'] String "2025-05-03 10:02:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/690/dataEnvio'] String "2025-05-03 10:01:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/691/dataEnvio'] String "2025-05-03 09:59:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/692/dataEnvio'] String "2025-05-03 09:59:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/693/dataEnvio'] String "2025-05-03 09:55:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/694/dataEnvio'] String "2025-05-03 09:52:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/695/dataEnvio'] String "2025-05-03 09:52:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/696/dataEnvio'] String "2025-05-03 09:49:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/697/dataEnvio'] String "2025-05-03 09:49:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/698/dataEnvio'] String "2025-05-03 09:49:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/699/dataEnvio'] String "2025-05-03 09:49:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/700/dataEnvio'] String "2025-05-03 09:49:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/701/dataEnvio'] String "2025-05-03 09:49:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/702/dataEnvio'] String "2025-05-03 09:48:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/703/dataEnvio'] String "2025-05-03 09:48:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/704/dataEnvio'] String "2025-05-03 09:48:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/705/dataEnvio'] String "2025-05-03 09:46:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/706/dataEnvio'] String "2025-05-03 09:46:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/707/dataEnvio'] String "2025-05-03 09:46:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/708/dataEnvio'] String "2025-05-03 09:46:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/709/dataEnvio'] String "2025-05-03 09:46:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/710/dataEnvio'] String "2025-05-03 09:46:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/711/dataEnvio'] String "2025-05-03 09:46:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/712/dataEnvio'] String "2025-05-03 09:46:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/713/dataEnvio'] String "2025-05-03 09:43:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/714/dataEnvio'] String "2025-05-03 09:43:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/715/dataEnvio'] String "2025-05-03 09:43:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/716/dataEnvio'] String "2025-05-03 09:41:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/717/dataEnvio'] String "2025-05-03 09:41:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/718/dataEnvio'] String "2025-05-03 09:39:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/719/dataEnvio'] String "2025-05-03 09:39:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/720/dataEnvio'] String "2025-05-03 09:39:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/721/dataEnvio'] String "2025-05-03 09:39:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/722/dataEnvio'] String "2025-05-03 09:39:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/723/dataEnvio'] String "2025-05-03 09:38:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/724/dataEnvio'] String "2025-05-03 09:37:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/725/dataEnvio'] String "2025-05-03 09:37:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/726/dataEnvio'] String "2025-05-03 09:37:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/727/dataEnvio'] String "2025-05-03 09:37:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/728/dataEnvio'] String "2025-05-03 09:37:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/729/dataEnvio'] String "2025-05-03 09:37:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/730/dataEnvio'] String "2025-05-03 09:37:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/731/dataEnvio'] String "2025-05-03 09:36:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/732/dataEnvio'] String "2025-05-03 09:35:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/733/dataEnvio'] String "2025-05-03 09:35:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/734/dataEnvio'] String "2025-05-03 09:34:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/735/dataEnvio'] String "2025-05-03 09:33:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/736/dataEnvio'] String "2025-05-03 09:33:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/737/dataEnvio'] String "2025-05-03 09:31:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/738/dataEnvio'] String "2025-05-03 09:30:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/739/dataEnvio'] String "2025-05-03 09:30:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/740/dataEnvio'] String "2025-05-03 09:30:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/741/dataEnvio'] String "2025-05-03 09:28:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/742/dataEnvio'] String "2025-05-03 09:27:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/743/dataEnvio'] String "2025-05-03 09:27:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/744/dataEnvio'] String "2025-05-03 09:26:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/745/dataEnvio'] String "2025-05-03 09:26:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/746/dataEnvio'] String "2025-05-03 09:26:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/747/dataEnvio'] String "2025-05-03 09:24:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/748/dataEnvio'] String "2025-05-03 09:23:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/749/dataEnvio'] String "2025-05-03 09:22:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/750/dataEnvio'] String "2025-05-03 09:22:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/751/dataEnvio'] String "2025-05-03 09:18:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/752/dataEnvio'] String "2025-05-03 09:17:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/753/dataEnvio'] String "2025-05-03 09:15:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/754/dataEnvio'] String "2025-05-03 09:14:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/755/dataEnvio'] String "2025-05-03 09:14:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/756/dataEnvio'] String "2025-05-03 09:13:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/757/dataEnvio'] String "2025-05-03 09:12:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/758/dataEnvio'] String "2025-05-03 09:12:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/759/dataEnvio'] String "2025-05-03 09:11:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/760/dataEnvio'] String "2025-05-03 09:10:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/761/dataEnvio'] String "2025-05-03 09:10:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/762/dataEnvio'] String "2025-05-03 09:08:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/763/dataEnvio'] String "2025-05-03 09:06:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/764/dataEnvio'] String "2025-05-03 09:04:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/765/dataEnvio'] String "2025-05-03 09:04:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/766/dataEnvio'] String "2025-05-03 09:01:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/767/dataEnvio'] String "2025-05-03 09:00:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/768/dataEnvio'] String "2025-05-03 09:00:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/769/dataEnvio'] String "2025-05-03 08:59:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/770/dataEnvio'] String "2025-05-03 08:59:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/771/dataEnvio'] String "2025-05-03 08:57:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/772/dataEnvio'] String "2025-05-03 08:57:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/773/dataEnvio'] String "2025-05-03 08:57:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/774/dataEnvio'] String "2025-05-03 08:53:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/775/dataEnvio'] String "2025-05-03 08:52:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/776/dataEnvio'] String "2025-05-03 08:51:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/777/dataEnvio'] String "2025-05-03 08:50:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/778/dataEnvio'] String "2025-05-03 08:43:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/779/dataEnvio'] String "2025-05-03 08:43:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/780/dataEnvio'] String "2025-05-03 08:42:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/781/dataEnvio'] String "2025-05-03 08:42:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/782/dataEnvio'] String "2025-05-03 08:42:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/783/dataEnvio'] String "2025-05-03 08:41:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/784/dataEnvio'] String "2025-05-03 08:41:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/785/dataEnvio'] String "2025-05-03 08:40:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/786/dataEnvio'] String "2025-05-03 08:39:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/787/dataEnvio'] String "2025-05-03 08:39:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/788/dataEnvio'] String "2025-05-03 08:37:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/789/dataEnvio'] String "2025-05-03 08:37:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/790/dataEnvio'] String "2025-05-03 08:36:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/791/dataEnvio'] String "2025-05-03 08:34:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/792/dataEnvio'] String "2025-05-03 08:31:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/793/dataEnvio'] String "2025-05-03 08:31:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/794/dataEnvio'] String "2025-05-03 08:31:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/795/dataEnvio'] String "2025-05-03 08:31:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/796/dataEnvio'] String "2025-05-03 08:31:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/797/dataEnvio'] String "2025-05-03 08:31:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/798/dataEnvio'] String "2025-05-03 08:30:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/799/dataEnvio'] String "2025-05-03 08:30:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/800/dataEnvio'] String "2025-05-03 08:29:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/801/dataEnvio'] String "2025-05-03 08:29:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/802/dataEnvio'] String "2025-05-03 08:29:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/803/dataEnvio'] String "2025-05-03 08:29:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/804/dataEnvio'] String "2025-05-03 08:29:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/805/dataEnvio'] String "2025-05-03 08:29:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/806/dataEnvio'] String "2025-05-03 08:29:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/807/dataEnvio'] String "2025-05-03 08:29:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/808/dataEnvio'] String "2025-05-03 08:29:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/809/dataEnvio'] String "2025-05-03 08:29:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/810/dataEnvio'] String "2025-05-03 08:28:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/811/dataEnvio'] String "2025-05-03 08:27:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/812/dataEnvio'] String "2025-05-03 08:27:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/813/dataEnvio'] String "2025-05-03 08:25:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/814/dataEnvio'] String "2025-05-03 08:25:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/815/dataEnvio'] String "2025-05-03 08:25:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/816/dataEnvio'] String "2025-05-03 08:25:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/817/dataEnvio'] String "2025-05-03 08:25:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/818/dataEnvio'] String "2025-05-03 08:25:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/819/dataEnvio'] String "2025-05-03 08:24:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/820/dataEnvio'] String "2025-05-03 08:24:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/821/dataEnvio'] String "2025-05-03 08:23:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/822/dataEnvio'] String "2025-05-03 08:23:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/823/dataEnvio'] String "2025-05-03 08:22:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/824/dataEnvio'] String "2025-05-03 08:22:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/825/dataEnvio'] String "2025-05-03 08:22:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/826/dataEnvio'] String "2025-05-03 08:22:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/827/dataEnvio'] String "2025-05-03 08:22:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/828/dataEnvio'] String "2025-05-03 08:21:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/829/dataEnvio'] String "2025-05-03 08:21:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/830/dataEnvio'] String "2025-05-03 08:21:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/831/dataEnvio'] String "2025-05-03 08:21:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/832/dataEnvio'] String "2025-05-03 08:20:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/833/dataEnvio'] String "2025-05-03 08:20:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/834/dataEnvio'] String "2025-05-03 08:20:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/835/dataEnvio'] String "2025-05-03 08:20:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/836/dataEnvio'] String "2025-05-03 08:20:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/837/dataEnvio'] String "2025-05-03 08:19:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/838/dataEnvio'] String "2025-05-03 08:19:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/839/dataEnvio'] String "2025-05-03 08:19:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/840/dataEnvio'] String "2025-05-03 08:19:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/841/dataEnvio'] String "2025-05-03 08:19:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/842/dataEnvio'] String "2025-05-03 08:18:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/843/dataEnvio'] String "2025-05-03 08:17:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/844/dataEnvio'] String "2025-05-03 08:17:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/845/dataEnvio'] String "2025-05-03 08:17:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/846/dataEnvio'] String "2025-05-03 08:16:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/847/dataEnvio'] String "2025-05-03 08:16:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/848/dataEnvio'] String "2025-05-03 08:15:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/849/dataEnvio'] String "2025-05-03 08:14:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/850/dataEnvio'] String "2025-05-03 08:14:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/851/dataEnvio'] String "2025-05-03 08:14:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/852/dataEnvio'] String "2025-05-03 08:14:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/853/dataEnvio'] String "2025-05-03 08:14:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/854/dataEnvio'] String "2025-05-03 08:14:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/855/dataEnvio'] String "2025-05-03 08:13:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/856/dataEnvio'] String "2025-05-03 08:13:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/857/dataEnvio'] String "2025-05-03 08:12:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/858/dataEnvio'] String "2025-05-03 08:12:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/859/dataEnvio'] String "2025-05-03 08:11:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/860/dataEnvio'] String "2025-05-03 08:11:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/861/dataEnvio'] String "2025-05-03 08:11:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/862/dataEnvio'] String "2025-05-03 08:10:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/863/dataEnvio'] String "2025-05-03 08:05:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/864/dataEnvio'] String "2025-05-03 08:05:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/865/dataEnvio'] String "2025-05-03 08:05:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/866/dataEnvio'] String "2025-05-03 08:05:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/867/dataEnvio'] String "2025-05-03 08:03:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/868/dataEnvio'] String "2025-05-03 08:01:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/869/dataEnvio'] String "2025-05-03 08:00:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/870/dataEnvio'] String "2025-05-03 07:54:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/871/dataEnvio'] String "2025-05-03 07:53:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/872/dataEnvio'] String "2025-05-03 07:50:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/873/dataEnvio'] String "2025-05-03 07:48:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/874/dataEnvio'] String "2025-05-03 07:48:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/875/dataEnvio'] String "2025-05-03 07:45:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/876/dataEnvio'] String "2025-05-03 07:44:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/877/dataEnvio'] String "2025-05-03 07:44:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/878/dataEnvio'] String "2025-05-03 07:42:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/879/dataEnvio'] String "2025-05-03 07:40:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/880/dataEnvio'] String "2025-05-03 07:39:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/881/dataEnvio'] String "2025-05-03 07:38:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/882/dataEnvio'] String "2025-05-03 07:38:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/883/dataEnvio'] String "2025-05-03 07:38:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/884/dataEnvio'] String "2025-05-03 07:36:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/885/dataEnvio'] String "2025-05-03 07:35:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/886/dataEnvio'] String "2025-05-03 07:35:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/887/dataEnvio'] String "2025-05-03 07:34:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/888/dataEnvio'] String "2025-05-03 07:34:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/889/dataEnvio'] String "2025-05-03 07:34:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/890/dataEnvio'] String "2025-05-03 07:34:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/891/dataEnvio'] String "2025-05-03 07:33:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/892/dataEnvio'] String "2025-05-03 07:33:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/893/dataEnvio'] String "2025-05-03 07:32:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/894/dataEnvio'] String "2025-05-03 07:30:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/895/dataEnvio'] String "2025-05-03 07:29:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/896/dataEnvio'] String "2025-05-03 07:25:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/897/dataEnvio'] String "2025-05-03 07:25:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/898/dataEnvio'] String "2025-05-03 07:24:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/899/dataEnvio'] String "2025-05-03 07:24:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/900/dataEnvio'] String "2025-05-03 07:23:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/901/dataEnvio'] String "2025-05-03 07:23:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/902/dataEnvio'] String "2025-05-03 07:22:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/903/dataEnvio'] String "2025-05-03 07:22:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/904/dataEnvio'] String "2025-05-03 07:21:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/905/dataEnvio'] String "2025-05-03 07:20:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/906/dataEnvio'] String "2025-05-03 07:17:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/907/dataEnvio'] String "2025-05-03 07:17:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/908/dataEnvio'] String "2025-05-03 07:17:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/909/dataEnvio'] String "2025-05-03 07:16:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/910/dataEnvio'] String "2025-05-03 07:16:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/911/dataEnvio'] String "2025-05-03 07:15:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/912/dataEnvio'] String "2025-05-03 07:14:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/913/dataEnvio'] String "2025-05-03 07:14:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/914/dataEnvio'] String "2025-05-03 07:13:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/915/dataEnvio'] String "2025-05-03 07:11:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/916/dataEnvio'] String "2025-05-03 07:11:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/917/dataEnvio'] String "2025-05-03 07:11:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/918/dataEnvio'] String "2025-05-03 07:10:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/919/dataEnvio'] String "2025-05-03 07:09:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/920/dataEnvio'] String "2025-05-03 07:09:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/921/dataEnvio'] String "2025-05-03 07:09:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/922/dataEnvio'] String "2025-05-03 07:09:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/923/dataEnvio'] String "2025-05-03 07:09:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/924/dataEnvio'] String "2025-05-03 07:08:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/925/dataEnvio'] String "2025-05-03 07:08:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/926/dataEnvio'] String "2025-05-03 07:08:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/927/dataEnvio'] String "2025-05-03 07:08:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/928/dataEnvio'] String "2025-05-03 07:07:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/929/dataEnvio'] String "2025-05-03 07:07:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/930/dataEnvio'] String "2025-05-03 07:07:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/931/dataEnvio'] String "2025-05-03 07:07:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/932/dataEnvio'] String "2025-05-03 07:07:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/933/dataEnvio'] String "2025-05-03 07:07:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/934/dataEnvio'] String "2025-05-03 07:07:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/935/dataEnvio'] String "2025-05-03 07:07:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/936/dataEnvio'] String "2025-05-03 07:07:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/937/dataEnvio'] String "2025-05-03 07:04:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/938/dataEnvio'] String "2025-05-03 07:04:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/939/dataEnvio'] String "2025-05-03 07:04:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/940/dataEnvio'] String "2025-05-03 07:03:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/941/dataEnvio'] String "2025-05-03 07:03:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/942/dataEnvio'] String "2025-05-03 07:01:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/943/dataEnvio'] String "2025-05-03 07:00:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/944/dataEnvio'] String "2025-05-03 07:00:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/945/dataEnvio'] String "2025-05-03 07:00:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/946/dataEnvio'] String "2025-05-03 06:59:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/947/dataEnvio'] String "2025-05-03 06:58:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/948/dataEnvio'] String "2025-05-03 06:57:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/949/dataEnvio'] String "2025-05-03 06:56:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/950/dataEnvio'] String "2025-05-03 06:56:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/951/dataEnvio'] String "2025-05-03 06:56:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/952/dataEnvio'] String "2025-05-03 06:56:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/953/dataEnvio'] String "2025-05-03 06:56:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/954/dataEnvio'] String "2025-05-03 06:56:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/955/dataEnvio'] String "2025-05-03 06:56:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/956/dataEnvio'] String "2025-05-03 06:55:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/957/dataEnvio'] String "2025-05-03 06:55:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/958/dataEnvio'] String "2025-05-03 06:55:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/959/dataEnvio'] String "2025-05-03 06:55:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/960/dataEnvio'] String "2025-05-03 06:55:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/961/dataEnvio'] String "2025-05-03 06:55:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/962/dataEnvio'] String "2025-05-03 06:55:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/963/dataEnvio'] String "2025-05-03 06:55:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/964/dataEnvio'] String "2025-05-03 06:55:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/965/dataEnvio'] String "2025-05-03 06:54:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/966/dataEnvio'] String "2025-05-03 06:54:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/967/dataEnvio'] String "2025-05-03 06:54:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/968/dataEnvio'] String "2025-05-03 06:53:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/969/dataEnvio'] String "2025-05-03 06:53:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/970/dataEnvio'] String "2025-05-03 06:53:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/971/dataEnvio'] String "2025-05-03 06:52:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/972/dataEnvio'] String "2025-05-03 06:52:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/973/dataEnvio'] String "2025-05-03 06:52:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/974/dataEnvio'] String "2025-05-03 06:52:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/975/dataEnvio'] String "2025-05-03 06:52:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/976/dataEnvio'] String "2025-05-03 06:52:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/977/dataEnvio'] String "2025-05-03 06:51:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/978/dataEnvio'] String "2025-05-03 06:51:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/979/dataEnvio'] String "2025-05-03 06:51:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/980/dataEnvio'] String "2025-05-03 06:51:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/981/dataEnvio'] String "2025-05-03 06:51:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/982/dataEnvio'] String "2025-05-03 06:51:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/983/dataEnvio'] String "2025-05-03 06:49:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/984/dataEnvio'] String "2025-05-03 06:49:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/985/dataEnvio'] String "2025-05-03 06:48:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/986/dataEnvio'] String "2025-05-03 06:48:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/987/dataEnvio'] String "2025-05-03 06:48:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/988/dataEnvio'] String "2025-05-03 06:48:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/989/dataEnvio'] String "2025-05-03 06:48:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/990/dataEnvio'] String "2025-05-03 06:47:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/991/dataEnvio'] String "2025-05-03 06:47:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/992/dataEnvio'] String "2025-05-03 06:45:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/993/dataEnvio'] String "2025-05-03 06:44:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/994/dataEnvio'] String "2025-05-03 06:44:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/995/dataEnvio'] String "2025-05-03 06:43:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/996/dataEnvio'] String "2025-05-03 06:43:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/997/dataEnvio'] String "2025-05-03 06:41:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/998/dataEnvio'] String "2025-05-03 06:41:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/999/dataEnvio'] String "2025-05-03 06:37:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1000/dataEnvio'] String "2025-05-03 06:36:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1001/dataEnvio'] String "2025-05-03 06:36:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1002/dataEnvio'] String "2025-05-03 06:35:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1003/dataEnvio'] String "2025-05-03 06:34:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1004/dataEnvio'] String "2025-05-03 06:34:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1005/dataEnvio'] String "2025-05-03 06:34:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1006/dataEnvio'] String "2025-05-03 06:34:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1007/dataEnvio'] String "2025-05-03 06:33:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1008/dataEnvio'] String "2025-05-03 06:32:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1009/dataEnvio'] String "2025-05-03 06:32:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1010/dataEnvio'] String "2025-05-03 06:31:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1011/dataEnvio'] String "2025-05-03 06:30:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1012/dataEnvio'] String "2025-05-03 06:30:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1013/dataEnvio'] String "2025-05-03 06:30:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1014/dataEnvio'] String "2025-05-03 06:28:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1015/dataEnvio'] String "2025-05-03 06:28:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1016/dataEnvio'] String "2025-05-03 06:27:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1017/dataEnvio'] String "2025-05-03 06:27:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1018/dataEnvio'] String "2025-05-03 06:26:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1019/dataEnvio'] String "2025-05-03 06:25:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1020/dataEnvio'] String "2025-05-03 06:24:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1021/dataEnvio'] String "2025-05-03 06:20:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1022/dataEnvio'] String "2025-05-03 06:19:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1023/dataEnvio'] String "2025-05-03 06:19:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1024/dataEnvio'] String "2025-05-03 06:18:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1025/dataEnvio'] String "2025-05-03 06:15:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1026/dataEnvio'] String "2025-05-03 06:15:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1027/dataEnvio'] String "2025-05-03 06:12:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1028/dataEnvio'] String "2025-05-03 06:09:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1029/dataEnvio'] String "2025-05-03 06:07:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1030/dataEnvio'] String "2025-05-03 06:05:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1031/dataEnvio'] String "2025-05-03 06:05:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1032/dataEnvio'] String "2025-05-03 06:03:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1033/dataEnvio'] String "2025-05-03 06:01:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1034/dataEnvio'] String "2025-05-03 05:57:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1035/dataEnvio'] String "2025-05-03 05:56:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1036/dataEnvio'] String "2025-05-03 05:55:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1037/dataEnvio'] String "2025-05-03 05:53:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1038/dataEnvio'] String "2025-05-03 05:53:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1039/dataEnvio'] String "2025-05-03 05:53:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1040/dataEnvio'] String "2025-05-03 05:52:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1041/dataEnvio'] String "2025-05-03 05:50:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1042/dataEnvio'] String "2025-05-03 05:50:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1043/dataEnvio'] String "2025-05-03 05:49:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1044/dataEnvio'] String "2025-05-03 05:49:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1045/dataEnvio'] String "2025-05-03 05:49:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1046/dataEnvio'] String "2025-05-03 05:49:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1047/dataEnvio'] String "2025-05-03 05:49:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1048/dataEnvio'] String "2025-05-03 05:49:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1049/dataEnvio'] String "2025-05-03 05:46:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1050/dataEnvio'] String "2025-05-03 05:46:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1051/dataEnvio'] String "2025-05-03 05:45:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1052/dataEnvio'] String "2025-05-03 05:45:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1053/dataEnvio'] String "2025-05-03 05:45:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1054/dataEnvio'] String "2025-05-03 05:45:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1055/dataEnvio'] String "2025-05-03 05:45:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1056/dataEnvio'] String "2025-05-03 05:45:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1057/dataEnvio'] String "2025-05-03 05:44:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1058/dataEnvio'] String "2025-05-03 05:44:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1059/dataEnvio'] String "2025-05-03 05:44:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1060/dataEnvio'] String "2025-05-03 05:44:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1061/dataEnvio'] String "2025-05-03 05:44:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1062/dataEnvio'] String "2025-05-03 05:43:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1063/dataEnvio'] String "2025-05-03 05:40:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1064/dataEnvio'] String "2025-05-03 05:39:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1065/dataEnvio'] String "2025-05-03 05:38:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1066/dataEnvio'] String "2025-05-03 05:37:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1067/dataEnvio'] String "2025-05-03 05:37:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1068/dataEnvio'] String "2025-05-03 05:35:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1069/dataEnvio'] String "2025-05-03 05:35:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1070/dataEnvio'] String "2025-05-03 05:35:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1071/dataEnvio'] String "2025-05-03 05:35:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1072/dataEnvio'] String "2025-05-03 05:35:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1073/dataEnvio'] String "2025-05-03 05:34:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1074/dataEnvio'] String "2025-05-03 05:34:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1075/dataEnvio'] String "2025-05-03 05:34:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1076/dataEnvio'] String "2025-05-03 05:34:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1077/dataEnvio'] String "2025-05-03 05:34:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1078/dataEnvio'] String "2025-05-03 05:34:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1079/dataEnvio'] String "2025-05-03 05:34:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1080/dataEnvio'] String "2025-05-03 05:34:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1081/dataEnvio'] String "2025-05-03 05:32:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1082/dataEnvio'] String "2025-05-03 05:32:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1083/dataEnvio'] String "2025-05-03 05:32:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1084/dataEnvio'] String "2025-05-03 05:32:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1085/dataEnvio'] String "2025-05-03 05:32:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1086/dataEnvio'] String "2025-05-03 05:32:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1087/dataEnvio'] String "2025-05-03 05:31:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1088/dataEnvio'] String "2025-05-03 05:29:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1089/dataEnvio'] String "2025-05-03 05:29:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1090/dataEnvio'] String "2025-05-03 05:23:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1091/dataEnvio'] String "2025-05-03 05:23:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1092/dataEnvio'] String "2025-05-03 05:23:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1093/dataEnvio'] String "2025-05-03 05:22:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1094/dataEnvio'] String "2025-05-03 05:20:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1095/dataEnvio'] String "2025-05-03 05:20:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1096/dataEnvio'] String "2025-05-03 05:19:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1097/dataEnvio'] String "2025-05-03 05:19:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1098/dataEnvio'] String "2025-05-03 05:17:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1099/dataEnvio'] String "2025-05-03 05:15:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1100/dataEnvio'] String "2025-05-03 05:14:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1101/dataEnvio'] String "2025-05-03 05:13:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1102/dataEnvio'] String "2025-05-03 05:13:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1103/dataEnvio'] String "2025-05-03 05:12:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1104/dataEnvio'] String "2025-05-03 05:12:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1105/dataEnvio'] String "2025-05-03 05:09:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1106/dataEnvio'] String "2025-05-03 05:08:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1107/dataEnvio'] String "2025-05-03 05:07:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1108/dataEnvio'] String "2025-05-03 05:07:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1109/dataEnvio'] String "2025-05-03 05:06:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1110/dataEnvio'] String "2025-05-03 05:05:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1111/dataEnvio'] String "2025-05-03 05:04:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1112/dataEnvio'] String "2025-05-03 05:02:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1113/dataEnvio'] String "2025-05-03 05:01:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1114/dataEnvio'] String "2025-05-03 05:01:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1115/dataEnvio'] String "2025-05-03 05:01:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1116/dataEnvio'] String "2025-05-03 04:58:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1117/dataEnvio'] String "2025-05-03 04:57:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1118/dataEnvio'] String "2025-05-03 04:56:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1119/dataEnvio'] String "2025-05-03 04:48:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1120/dataEnvio'] String "2025-05-03 04:47:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1121/dataEnvio'] String "2025-05-03 04:46:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1122/dataEnvio'] String "2025-05-03 04:46:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1123/dataEnvio'] String "2025-05-03 04:46:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1124/dataEnvio'] String "2025-05-03 04:44:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1125/dataEnvio'] String "2025-05-03 04:44:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1126/dataEnvio'] String "2025-05-03 04:33:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1127/dataEnvio'] String "2025-05-03 04:33:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1128/dataEnvio'] String "2025-05-03 04:33:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1129/dataEnvio'] String "2025-05-03 04:33:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1130/dataEnvio'] String "2025-05-03 04:33:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1131/dataEnvio'] String "2025-05-03 04:33:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1132/dataEnvio'] String "2025-05-03 04:32:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1133/dataEnvio'] String "2025-05-03 04:31:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1134/dataEnvio'] String "2025-05-03 04:31:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1135/dataEnvio'] String "2025-05-03 04:31:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1136/dataEnvio'] String "2025-05-03 04:31:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1137/dataEnvio'] String "2025-05-03 04:31:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1138/dataEnvio'] String "2025-05-03 04:31:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1139/dataEnvio'] String "2025-05-03 04:31:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1140/dataEnvio'] String "2025-05-03 04:31:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1141/dataEnvio'] String "2025-05-03 04:31:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1142/dataEnvio'] String "2025-05-03 04:31:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1143/dataEnvio'] String "2025-05-03 04:31:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1144/dataEnvio'] String "2025-05-03 04:31:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1145/dataEnvio'] String "2025-05-03 04:31:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1146/dataEnvio'] String "2025-05-03 04:31:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1147/dataEnvio'] String "2025-05-03 04:30:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1148/dataEnvio'] String "2025-05-03 04:30:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1149/dataEnvio'] String "2025-05-03 04:30:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1150/dataEnvio'] String "2025-05-03 04:30:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1151/dataEnvio'] String "2025-05-03 04:30:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1152/dataEnvio'] String "2025-05-03 04:29:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1153/dataEnvio'] String "2025-05-03 04:27:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1154/dataEnvio'] String "2025-05-03 04:26:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1155/dataEnvio'] String "2025-05-03 04:26:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1156/dataEnvio'] String "2025-05-03 04:26:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1157/dataEnvio'] String "2025-05-03 04:24:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1158/dataEnvio'] String "2025-05-03 04:24:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1159/dataEnvio'] String "2025-05-03 04:24:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1160/dataEnvio'] String "2025-05-03 04:24:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1161/dataEnvio'] String "2025-05-03 04:24:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1162/dataEnvio'] String "2025-05-03 04:23:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1163/dataEnvio'] String "2025-05-03 04:23:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1164/dataEnvio'] String "2025-05-03 04:23:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1165/dataEnvio'] String "2025-05-03 04:23:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1166/dataEnvio'] String "2025-05-03 04:23:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1167/dataEnvio'] String "2025-05-03 04:21:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1168/dataEnvio'] String "2025-05-03 04:21:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1169/dataEnvio'] String "2025-05-03 04:21:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1170/dataEnvio'] String "2025-05-03 04:20:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1171/dataEnvio'] String "2025-05-03 04:20:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1172/dataEnvio'] String "2025-05-03 04:19:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1173/dataEnvio'] String "2025-05-03 04:19:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1174/dataEnvio'] String "2025-05-03 04:19:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1175/dataEnvio'] String "2025-05-03 04:19:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1176/dataEnvio'] String "2025-05-03 04:19:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1177/dataEnvio'] String "2025-05-03 04:18:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1178/dataEnvio'] String "2025-05-03 04:18:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1179/dataEnvio'] String "2025-05-03 04:18:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1180/dataEnvio'] String "2025-05-03 04:18:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1181/dataEnvio'] String "2025-05-03 04:17:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1182/dataEnvio'] String "2025-05-03 04:16:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1183/dataEnvio'] String "2025-05-03 04:15:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1184/dataEnvio'] String "2025-05-03 04:15:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1185/dataEnvio'] String "2025-05-03 04:15:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1186/dataEnvio'] String "2025-05-03 04:15:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1187/dataEnvio'] String "2025-05-03 04:15:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1188/dataEnvio'] String "2025-05-03 04:15:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1189/dataEnvio'] String "2025-05-03 04:15:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1190/dataEnvio'] String "2025-05-03 04:15:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1191/dataEnvio'] String "2025-05-03 04:15:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1192/dataEnvio'] String "2025-05-03 04:15:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1193/dataEnvio'] String "2025-05-03 04:15:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1194/dataEnvio'] String "2025-05-03 04:14:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1195/dataEnvio'] String "2025-05-03 04:14:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1196/dataEnvio'] String "2025-05-03 04:14:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1197/dataEnvio'] String "2025-05-03 04:14:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1198/dataEnvio'] String "2025-05-03 04:14:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1199/dataEnvio'] String "2025-05-03 04:12:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1200/dataEnvio'] String "2025-05-03 04:12:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1201/dataEnvio'] String "2025-05-03 04:11:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1202/dataEnvio'] String "2025-05-03 04:10:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1203/dataEnvio'] String "2025-05-03 04:10:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1204/dataEnvio'] String "2025-05-03 04:10:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1205/dataEnvio'] String "2025-05-03 04:08:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1206/dataEnvio'] String "2025-05-03 04:04:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1207/dataEnvio'] String "2025-05-03 04:02:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1208/dataEnvio'] String "2025-05-03 04:02:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1209/dataEnvio'] String "2025-05-03 03:59:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1210/dataEnvio'] String "2025-05-03 03:56:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1211/dataEnvio'] String "2025-05-03 03:56:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1212/dataEnvio'] String "2025-05-03 03:56:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1213/dataEnvio'] String "2025-05-03 03:56:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1214/dataEnvio'] String "2025-05-03 03:51:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1215/dataEnvio'] String "2025-05-03 03:49:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1216/dataEnvio'] String "2025-05-03 03:49:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1217/dataEnvio'] String "2025-05-03 03:46:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1218/dataEnvio'] String "2025-05-03 03:45:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1219/dataEnvio'] String "2025-05-03 03:38:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1220/dataEnvio'] String "2025-05-03 03:36:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1221/dataEnvio'] String "2025-05-03 03:34:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1222/dataEnvio'] String "2025-05-03 03:34:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1223/dataEnvio'] String "2025-05-03 03:33:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1224/dataEnvio'] String "2025-05-03 03:32:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1225/dataEnvio'] String "2025-05-03 03:32:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1226/dataEnvio'] String "2025-05-03 03:30:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1227/dataEnvio'] String "2025-05-03 03:29:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1228/dataEnvio'] String "2025-05-03 03:24:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1229/dataEnvio'] String "2025-05-03 03:22:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1230/dataEnvio'] String "2025-05-03 03:21:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1231/dataEnvio'] String "2025-05-03 03:21:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1232/dataEnvio'] String "2025-05-03 03:18:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1233/dataEnvio'] String "2025-05-03 03:16:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1234/dataEnvio'] String "2025-05-03 03:16:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1235/dataEnvio'] String "2025-05-03 03:16:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1236/dataEnvio'] String "2025-05-03 03:14:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1237/dataEnvio'] String "2025-05-03 03:14:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1238/dataEnvio'] String "2025-05-03 03:14:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1239/dataEnvio'] String "2025-05-03 03:14:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1240/dataEnvio'] String "2025-05-03 03:14:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1241/dataEnvio'] String "2025-05-03 03:10:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1242/dataEnvio'] String "2025-05-03 03:09:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1243/dataEnvio'] String "2025-05-03 03:09:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1244/dataEnvio'] String "2025-05-03 03:09:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1245/dataEnvio'] String "2025-05-03 03:09:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1246/dataEnvio'] String "2025-05-03 03:08:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1247/dataEnvio'] String "2025-05-03 03:07:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1248/dataEnvio'] String "2025-05-03 03:06:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1249/dataEnvio'] String "2025-05-03 03:06:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1250/dataEnvio'] String "2025-05-03 03:06:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1251/dataEnvio'] String "2025-05-03 03:06:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1252/dataEnvio'] String "2025-05-03 03:06:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1253/dataEnvio'] String "2025-05-03 03:06:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1254/dataEnvio'] String "2025-05-03 03:06:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1255/dataEnvio'] String "2025-05-03 03:06:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1256/dataEnvio'] String "2025-05-03 03:06:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1257/dataEnvio'] String "2025-05-03 03:06:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1258/dataEnvio'] String "2025-05-03 03:05:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1259/dataEnvio'] String "2025-05-03 03:05:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1260/dataEnvio'] String "2025-05-03 03:05:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1261/dataEnvio'] String "2025-05-03 03:05:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1262/dataEnvio'] String "2025-05-03 03:04:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1263/dataEnvio'] String "2025-05-03 03:04:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1264/dataEnvio'] String "2025-05-03 03:04:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1265/dataEnvio'] String "2025-05-03 03:04:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1266/dataEnvio'] String "2025-05-03 03:04:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1267/dataEnvio'] String "2025-05-03 03:04:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1268/dataEnvio'] String "2025-05-03 03:03:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1269/dataEnvio'] String "2025-05-03 03:01:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1270/dataEnvio'] String "2025-05-03 03:01:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1271/dataEnvio'] String "2025-05-03 03:01:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1272/dataEnvio'] String "2025-05-03 03:01:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1273/dataEnvio'] String "2025-05-03 03:01:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1274/dataEnvio'] String "2025-05-03 02:59:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1275/dataEnvio'] String "2025-05-03 02:58:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1276/dataEnvio'] String "2025-05-03 02:55:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1277/dataEnvio'] String "2025-05-03 02:53:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1278/dataEnvio'] String "2025-05-03 02:50:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1279/dataEnvio'] String "2025-05-03 02:48:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1280/dataEnvio'] String "2025-05-03 02:48:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1281/dataEnvio'] String "2025-05-03 02:46:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1282/dataEnvio'] String "2025-05-03 02:44:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1283/dataEnvio'] String "2025-05-03 02:43:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1284/dataEnvio'] String "2025-05-03 02:41:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1285/dataEnvio'] String "2025-05-03 02:40:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1286/dataEnvio'] String "2025-05-03 02:37:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1287/dataEnvio'] String "2025-05-03 02:36:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1288/dataEnvio'] String "2025-05-03 02:36:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1289/dataEnvio'] String "2025-05-03 02:36:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1290/dataEnvio'] String "2025-05-03 02:31:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1291/dataEnvio'] String "2025-05-03 02:29:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1292/dataEnvio'] String "2025-05-03 02:29:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1293/dataEnvio'] String "2025-05-03 02:28:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1294/dataEnvio'] String "2025-05-03 02:28:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1295/dataEnvio'] String "2025-05-03 02:26:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1296/dataEnvio'] String "2025-05-03 02:24:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1297/dataEnvio'] String "2025-05-03 02:24:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1298/dataEnvio'] String "2025-05-03 02:23:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1299/dataEnvio'] String "2025-05-03 02:22:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1300/dataEnvio'] String "2025-05-03 02:20:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1301/dataEnvio'] String "2025-05-03 02:19:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1302/dataEnvio'] String "2025-05-03 02:19:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1303/dataEnvio'] String "2025-05-03 02:18:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1304/dataEnvio'] String "2025-05-03 02:15:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1305/dataEnvio'] String "2025-05-03 02:15:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1306/dataEnvio'] String "2025-05-03 02:12:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1307/dataEnvio'] String "2025-05-03 02:12:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1308/dataEnvio'] String "2025-05-03 02:11:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1309/dataEnvio'] String "2025-05-03 02:10:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1310/dataEnvio'] String "2025-05-03 02:08:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1311/dataEnvio'] String "2025-05-03 02:08:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1312/dataEnvio'] String "2025-05-03 02:07:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1313/dataEnvio'] String "2025-05-03 02:05:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1314/dataEnvio'] String "2025-05-03 02:03:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1315/dataEnvio'] String "2025-05-03 02:01:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1316/dataEnvio'] String "2025-05-03 02:00:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1317/dataEnvio'] String "2025-05-03 01:59:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1318/dataEnvio'] String "2025-05-03 01:59:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1319/dataEnvio'] String "2025-05-03 01:59:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1320/dataEnvio'] String "2025-05-03 01:59:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1321/dataEnvio'] String "2025-05-03 01:59:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1322/dataEnvio'] String "2025-05-03 01:59:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1323/dataEnvio'] String "2025-05-03 01:59:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1324/dataEnvio'] String "2025-05-03 01:59:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1325/dataEnvio'] String "2025-05-03 01:59:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1326/dataEnvio'] String "2025-05-03 01:59:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1327/dataEnvio'] String "2025-05-03 01:57:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1328/dataEnvio'] String "2025-05-03 01:57:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1329/dataEnvio'] String "2025-05-03 01:57:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1330/dataEnvio'] String "2025-05-03 01:57:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1331/dataEnvio'] String "2025-05-03 01:56:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1332/dataEnvio'] String "2025-05-03 01:56:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1333/dataEnvio'] String "2025-05-03 01:56:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1334/dataEnvio'] String "2025-05-03 01:56:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1335/dataEnvio'] String "2025-05-03 01:56:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1336/dataEnvio'] String "2025-05-03 01:56:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1337/dataEnvio'] String "2025-05-03 01:56:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1338/dataEnvio'] String "2025-05-03 01:56:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1339/dataEnvio'] String "2025-05-03 01:56:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1340/dataEnvio'] String "2025-05-03 01:55:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1341/dataEnvio'] String "2025-05-03 01:55:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1342/dataEnvio'] String "2025-05-03 01:55:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1343/dataEnvio'] String "2025-05-03 01:52:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1344/dataEnvio'] String "2025-05-03 01:52:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1345/dataEnvio'] String "2025-05-03 01:51:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1346/dataEnvio'] String "2025-05-03 01:51:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1347/dataEnvio'] String "2025-05-03 01:51:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1348/dataEnvio'] String "2025-05-03 01:50:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1349/dataEnvio'] String "2025-05-03 01:50:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1350/dataEnvio'] String "2025-05-03 01:50:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1351/dataEnvio'] String "2025-05-03 01:50:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1352/dataEnvio'] String "2025-05-03 01:50:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1353/dataEnvio'] String "2025-05-03 01:50:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1354/dataEnvio'] String "2025-05-03 01:50:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1355/dataEnvio'] String "2025-05-03 01:50:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1356/dataEnvio'] String "2025-05-03 01:50:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1357/dataEnvio'] String "2025-05-03 01:50:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1358/dataEnvio'] String "2025-05-03 01:50:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1359/dataEnvio'] String "2025-05-03 01:49:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1360/dataEnvio'] String "2025-05-03 01:49:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1361/dataEnvio'] String "2025-05-03 01:49:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1362/dataEnvio'] String "2025-05-03 01:48:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1363/dataEnvio'] String "2025-05-03 01:48:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1364/dataEnvio'] String "2025-05-03 01:48:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1365/dataEnvio'] String "2025-05-03 01:48:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1366/dataEnvio'] String "2025-05-03 01:48:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1367/dataEnvio'] String "2025-05-03 01:48:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1368/dataEnvio'] String "2025-05-03 01:48:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1369/dataEnvio'] String "2025-05-03 01:45:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1370/dataEnvio'] String "2025-05-03 01:44:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1371/dataEnvio'] String "2025-05-03 01:44:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1372/dataEnvio'] String "2025-05-03 01:44:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1373/dataEnvio'] String "2025-05-03 01:44:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1374/dataEnvio'] String "2025-05-03 01:44:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1375/dataEnvio'] String "2025-05-03 01:43:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1376/dataEnvio'] String "2025-05-03 01:43:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1377/dataEnvio'] String "2025-05-03 01:43:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1378/dataEnvio'] String "2025-05-03 01:43:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1379/dataEnvio'] String "2025-05-03 01:41:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1380/dataEnvio'] String "2025-05-03 01:41:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1381/dataEnvio'] String "2025-05-03 01:41:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1382/dataEnvio'] String "2025-05-03 01:41:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1383/dataEnvio'] String "2025-05-03 01:41:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1384/dataEnvio'] String "2025-05-03 01:41:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1385/dataEnvio'] String "2025-05-03 01:40:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1386/dataEnvio'] String "2025-05-03 01:40:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1387/dataEnvio'] String "2025-05-03 01:40:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1388/dataEnvio'] String "2025-05-03 01:40:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1389/dataEnvio'] String "2025-05-03 01:40:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1390/dataEnvio'] String "2025-05-03 01:38:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1391/dataEnvio'] String "2025-05-03 01:36:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1392/dataEnvio'] String "2025-05-03 01:35:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1393/dataEnvio'] String "2025-05-03 01:30:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1394/dataEnvio'] String "2025-05-03 01:27:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1395/dataEnvio'] String "2025-05-03 01:25:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1396/dataEnvio'] String "2025-05-03 01:25:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1397/dataEnvio'] String "2025-05-03 01:24:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1398/dataEnvio'] String "2025-05-03 01:23:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1399/dataEnvio'] String "2025-05-03 01:18:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1400/dataEnvio'] String "2025-05-03 01:17:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1401/dataEnvio'] String "2025-05-03 01:15:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1402/dataEnvio'] String "2025-05-03 01:15:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1403/dataEnvio'] String "2025-05-03 01:14:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1404/dataEnvio'] String "2025-05-03 01:10:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1405/dataEnvio'] String "2025-05-03 01:08:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1406/dataEnvio'] String "2025-05-03 01:07:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1407/dataEnvio'] String "2025-05-03 01:05:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1408/dataEnvio'] String "2025-05-03 01:04:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1409/dataEnvio'] String "2025-05-03 01:02:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1410/dataEnvio'] String "2025-05-03 01:02:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1411/dataEnvio'] String "2025-05-03 00:58:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1412/dataEnvio'] String "2025-05-03 00:58:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1413/dataEnvio'] String "2025-05-03 00:53:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1414/dataEnvio'] String "2025-05-03 00:52:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1415/dataEnvio'] String "2025-05-03 00:50:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1416/dataEnvio'] String "2025-05-03 00:48:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1417/dataEnvio'] String "2025-05-03 00:47:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1418/dataEnvio'] String "2025-05-03 00:47:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1419/dataEnvio'] String "2025-05-03 00:47:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1420/dataEnvio'] String "2025-05-03 00:46:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1421/dataEnvio'] String "2025-05-03 00:46:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1422/dataEnvio'] String "2025-05-03 00:43:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1423/dataEnvio'] String "2025-05-03 00:39:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1424/dataEnvio'] String "2025-05-03 00:39:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1425/dataEnvio'] String "2025-05-03 00:39:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1426/dataEnvio'] String "2025-05-03 00:39:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1427/dataEnvio'] String "2025-05-03 00:39:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1428/dataEnvio'] String "2025-05-03 00:39:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1429/dataEnvio'] String "2025-05-03 00:39:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1430/dataEnvio'] String "2025-05-03 00:39:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1431/dataEnvio'] String "2025-05-03 00:38:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1432/dataEnvio'] String "2025-05-03 00:38:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1433/dataEnvio'] String "2025-05-03 00:38:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1434/dataEnvio'] String "2025-05-03 00:38:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1435/dataEnvio'] String "2025-05-03 00:38:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1436/dataEnvio'] String "2025-05-03 00:38:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1437/dataEnvio'] String "2025-05-03 00:38:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1438/dataEnvio'] String "2025-05-03 00:37:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1439/dataEnvio'] String "2025-05-03 00:37:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1440/dataEnvio'] String "2025-05-03 00:37:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1441/dataEnvio'] String "2025-05-03 00:37:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1442/dataEnvio'] String "2025-05-03 00:37:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1443/dataEnvio'] String "2025-05-03 00:37:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1444/dataEnvio'] String "2025-05-03 00:36:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1445/dataEnvio'] String "2025-05-03 00:36:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1446/dataEnvio'] String "2025-05-03 00:36:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1447/dataEnvio'] String "2025-05-03 00:36:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1448/dataEnvio'] String "2025-05-03 00:36:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1449/dataEnvio'] String "2025-05-03 00:36:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1450/dataEnvio'] String "2025-05-03 00:33:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1451/dataEnvio'] String "2025-05-03 00:32:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1452/dataEnvio'] String "2025-05-03 00:31:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1453/dataEnvio'] String "2025-05-03 00:31:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1454/dataEnvio'] String "2025-05-03 00:31:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1455/dataEnvio'] String "2025-05-03 00:31:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1456/dataEnvio'] String "2025-05-03 00:31:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1457/dataEnvio'] String "2025-05-03 00:30:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1458/dataEnvio'] String "2025-05-03 00:30:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1459/dataEnvio'] String "2025-05-03 00:30:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1460/dataEnvio'] String "2025-05-03 00:30:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1461/dataEnvio'] String "2025-05-03 00:30:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1462/dataEnvio'] String "2025-05-03 00:30:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1463/dataEnvio'] String "2025-05-03 00:29:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1464/dataEnvio'] String "2025-05-03 00:29:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1465/dataEnvio'] String "2025-05-03 00:29:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1466/dataEnvio'] String "2025-05-03 00:29:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1467/dataEnvio'] String "2025-05-03 00:28:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1468/dataEnvio'] String "2025-05-03 00:28:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1469/dataEnvio'] String "2025-05-03 00:28:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1470/dataEnvio'] String "2025-05-03 00:28:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1471/dataEnvio'] String "2025-05-03 00:28:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1472/dataEnvio'] String "2025-05-03 00:27:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1473/dataEnvio'] String "2025-05-03 00:27:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1474/dataEnvio'] String "2025-05-03 00:27:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1475/dataEnvio'] String "2025-05-03 00:27:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1476/dataEnvio'] String "2025-05-03 00:25:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1477/dataEnvio'] String "2025-05-03 00:25:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1478/dataEnvio'] String "2025-05-03 00:25:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1479/dataEnvio'] String "2025-05-03 00:25:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1480/dataEnvio'] String "2025-05-03 00:25:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1481/dataEnvio'] String "2025-05-03 00:25:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1482/dataEnvio'] String "2025-05-03 00:25:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1483/dataEnvio'] String "2025-05-03 00:24:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1484/dataEnvio'] String "2025-05-03 00:24:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1485/dataEnvio'] String "2025-05-03 00:23:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1486/dataEnvio'] String "2025-05-03 00:22:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1487/dataEnvio'] String "2025-05-03 00:22:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1488/dataEnvio'] String "2025-05-03 00:22:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1489/dataEnvio'] String "2025-05-03 00:22:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1490/dataEnvio'] String "2025-05-03 00:22:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1491/dataEnvio'] String "2025-05-03 00:22:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1492/dataEnvio'] String "2025-05-03 00:20:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1493/dataEnvio'] String "2025-05-03 00:20:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1494/dataEnvio'] String "2025-05-03 00:19:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1495/dataEnvio'] String "2025-05-03 00:19:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1496/dataEnvio'] String "2025-05-03 00:19:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1497/dataEnvio'] String "2025-05-03 00:19:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1498/dataEnvio'] String "2025-05-03 00:18:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1499/dataEnvio'] String "2025-05-03 00:18:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1500/dataEnvio'] String "2025-05-03 00:17:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1501/dataEnvio'] String "2025-05-03 00:16:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1502/dataEnvio'] String "2025-05-03 00:14:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1503/dataEnvio'] String "2025-05-03 00:13:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1504/dataEnvio'] String "2025-05-03 00:13:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1505/dataEnvio'] String "2025-05-03 00:11:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1506/dataEnvio'] String "2025-05-03 00:11:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1507/dataEnvio'] String "2025-05-03 00:06:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1508/dataEnvio'] String "2025-05-03 00:05:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1509/dataEnvio'] String "2025-05-03 00:04:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1510/dataEnvio'] String "2025-05-03 00:03:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1511/dataEnvio'] String "2025-05-03 00:01:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1512/dataEnvio'] String "2025-05-03 00:01:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1513/dataEnvio'] String "2025-05-02 23:59:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1514/dataEnvio'] String "2025-05-02 23:58:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1515/dataEnvio'] String "2025-05-02 23:56:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1516/dataEnvio'] String "2025-05-02 23:53:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1517/dataEnvio'] String "2025-05-02 23:53:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1518/dataEnvio'] String "2025-05-02 23:52:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1519/dataEnvio'] String "2025-05-02 23:49:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1520/dataEnvio'] String "2025-05-02 23:48:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1521/dataEnvio'] String "2025-05-02 23:48:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1522/dataEnvio'] String "2025-05-02 23:48:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1523/dataEnvio'] String "2025-05-02 23:46:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1524/dataEnvio'] String "2025-05-02 23:44:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1525/dataEnvio'] String "2025-05-02 23:42:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1526/dataEnvio'] String "2025-05-02 23:40:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1527/dataEnvio'] String "2025-05-02 23:36:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1528/dataEnvio'] String "2025-05-02 23:35:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1529/dataEnvio'] String "2025-05-02 23:35:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1530/dataEnvio'] String "2025-05-02 23:33:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1531/dataEnvio'] String "2025-05-02 23:31:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1532/dataEnvio'] String "2025-05-02 23:30:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1533/dataEnvio'] String "2025-05-02 23:30:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1534/dataEnvio'] String "2025-05-02 23:29:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1535/dataEnvio'] String "2025-05-02 23:28:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1536/dataEnvio'] String "2025-05-02 23:28:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1537/dataEnvio'] String "2025-05-02 23:27:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1538/dataEnvio'] String "2025-05-02 23:26:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1539/dataEnvio'] String "2025-05-02 23:20:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1540/dataEnvio'] String "2025-05-02 23:19:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1541/dataEnvio'] String "2025-05-02 23:19:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1542/dataEnvio'] String "2025-05-02 23:18:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1543/dataEnvio'] String "2025-05-02 23:18:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1544/dataEnvio'] String "2025-05-02 23:18:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1545/dataEnvio'] String "2025-05-02 23:18:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1546/dataEnvio'] String "2025-05-02 23:17:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1547/dataEnvio'] String "2025-05-02 23:17:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1548/dataEnvio'] String "2025-05-02 23:17:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1549/dataEnvio'] String "2025-05-02 23:17:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1550/dataEnvio'] String "2025-05-02 23:17:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1551/dataEnvio'] String "2025-05-02 23:17:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1552/dataEnvio'] String "2025-05-02 23:17:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1553/dataEnvio'] String "2025-05-02 23:17:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1554/dataEnvio'] String "2025-05-02 23:16:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1555/dataEnvio'] String "2025-05-02 23:16:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1556/dataEnvio'] String "2025-05-02 23:16:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1557/dataEnvio'] String "2025-05-02 23:15:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1558/dataEnvio'] String "2025-05-02 23:14:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1559/dataEnvio'] String "2025-05-02 23:13:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1560/dataEnvio'] String "2025-05-02 23:13:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1561/dataEnvio'] String "2025-05-02 23:12:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1562/dataEnvio'] String "2025-05-02 23:12:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1563/dataEnvio'] String "2025-05-02 23:12:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1564/dataEnvio'] String "2025-05-02 23:11:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1565/dataEnvio'] String "2025-05-02 23:10:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1566/dataEnvio'] String "2025-05-02 23:10:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1567/dataEnvio'] String "2025-05-02 23:10:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1568/dataEnvio'] String "2025-05-02 23:09:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1569/dataEnvio'] String "2025-05-02 23:08:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1570/dataEnvio'] String "2025-05-02 23:08:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1571/dataEnvio'] String "2025-05-02 23:08:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1572/dataEnvio'] String "2025-05-02 23:07:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1573/dataEnvio'] String "2025-05-02 23:06:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1574/dataEnvio'] String "2025-05-02 23:05:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1575/dataEnvio'] String "2025-05-02 23:05:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1576/dataEnvio'] String "2025-05-02 23:05:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1577/dataEnvio'] String "2025-05-02 23:05:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1578/dataEnvio'] String "2025-05-02 23:05:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1579/dataEnvio'] String "2025-05-02 23:05:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1580/dataEnvio'] String "2025-05-02 23:05:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1581/dataEnvio'] String "2025-05-02 23:04:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1582/dataEnvio'] String "2025-05-02 23:04:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1583/dataEnvio'] String "2025-05-02 23:03:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1584/dataEnvio'] String "2025-05-02 23:02:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1585/dataEnvio'] String "2025-05-02 23:02:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1586/dataEnvio'] String "2025-05-02 23:01:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1587/dataEnvio'] String "2025-05-02 23:01:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1588/dataEnvio'] String "2025-05-02 23:01:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1589/dataEnvio'] String "2025-05-02 23:00:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1590/dataEnvio'] String "2025-05-02 22:58:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1591/dataEnvio'] String "2025-05-02 22:57:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1592/dataEnvio'] String "2025-05-02 22:56:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1593/dataEnvio'] String "2025-05-02 22:55:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1594/dataEnvio'] String "2025-05-02 22:54:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1595/dataEnvio'] String "2025-05-02 22:52:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1596/dataEnvio'] String "2025-05-02 22:52:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1597/dataEnvio'] String "2025-05-02 22:50:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1598/dataEnvio'] String "2025-05-02 22:49:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1599/dataEnvio'] String "2025-05-02 22:49:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1600/dataEnvio'] String "2025-05-02 22:48:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1601/dataEnvio'] String "2025-05-02 22:48:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1602/dataEnvio'] String "2025-05-02 22:47:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1603/dataEnvio'] String "2025-05-02 22:46:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1604/dataEnvio'] String "2025-05-02 22:46:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1605/dataEnvio'] String "2025-05-02 22:45:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1606/dataEnvio'] String "2025-05-02 22:43:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1607/dataEnvio'] String "2025-05-02 22:43:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1608/dataEnvio'] String "2025-05-02 22:43:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1609/dataEnvio'] String "2025-05-02 22:42:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1610/dataEnvio'] String "2025-05-02 22:40:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1611/dataEnvio'] String "2025-05-02 22:39:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1612/dataEnvio'] String "2025-05-02 22:38:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1613/dataEnvio'] String "2025-05-02 22:37:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1614/dataEnvio'] String "2025-05-02 22:36:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1615/dataEnvio'] String "2025-05-02 22:35:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1616/dataEnvio'] String "2025-05-02 22:34:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1617/dataEnvio'] String "2025-05-02 22:34:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1618/dataEnvio'] String "2025-05-02 22:34:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1619/dataEnvio'] String "2025-05-02 22:31:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1620/dataEnvio'] String "2025-05-02 22:31:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1621/dataEnvio'] String "2025-05-02 22:31:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1622/dataEnvio'] String "2025-05-02 22:31:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1623/dataEnvio'] String "2025-05-02 22:31:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1624/dataEnvio'] String "2025-05-02 22:30:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1625/dataEnvio'] String "2025-05-02 21:11:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1626/dataEnvio'] String "2025-05-02 21:10:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1627/dataEnvio'] String "2025-05-02 21:10:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1628/dataEnvio'] String "2025-05-02 21:08:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1629/dataEnvio'] String "2025-05-02 21:07:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1630/dataEnvio'] String "2025-05-02 21:07:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1631/dataEnvio'] String "2025-05-02 21:06:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1632/dataEnvio'] String "2025-05-02 21:06:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1633/dataEnvio'] String "2025-05-02 21:05:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1634/dataEnvio'] String "2025-05-02 21:05:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1635/dataEnvio'] String "2025-05-02 21:04:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1636/dataEnvio'] String "2025-05-02 21:04:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1637/dataEnvio'] String "2025-05-02 21:02:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1638/dataEnvio'] String "2025-05-02 21:02:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1639/dataEnvio'] String "2025-05-02 21:01:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1640/dataEnvio'] String "2025-05-02 21:00:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1641/dataEnvio'] String "2025-05-02 21:00:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1642/dataEnvio'] String "2025-05-02 20:59:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1643/dataEnvio'] String "2025-05-02 20:56:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1644/dataEnvio'] String "2025-05-02 20:54:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1645/dataEnvio'] String "2025-05-02 20:54:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1646/dataEnvio'] String "2025-05-02 20:53:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1647/dataEnvio'] String "2025-05-02 20:53:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1648/dataEnvio'] String "2025-05-02 20:52:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1649/dataEnvio'] String "2025-05-02 20:52:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1650/dataEnvio'] String "2025-05-02 20:51:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1651/dataEnvio'] String "2025-05-02 20:51:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1652/dataEnvio'] String "2025-05-02 20:51:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1653/dataEnvio'] String "2025-05-02 20:50:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1654/dataEnvio'] String "2025-05-02 20:49:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1655/dataEnvio'] String "2025-05-02 20:48:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1656/dataEnvio'] String "2025-05-02 20:48:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1657/dataEnvio'] String "2025-05-02 20:48:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1658/dataEnvio'] String "2025-05-02 20:43:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1659/dataEnvio'] String "2025-05-02 20:42:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1660/dataEnvio'] String "2025-05-02 20:39:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1661/dataEnvio'] String "2025-05-02 20:36:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1662/dataEnvio'] String "2025-05-02 20:35:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1663/dataEnvio'] String "2025-05-02 20:27:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1664/dataEnvio'] String "2025-05-02 20:26:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1665/dataEnvio'] String "2025-05-02 20:25:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1666/dataEnvio'] String "2025-05-02 20:24:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1667/dataEnvio'] String "2025-05-02 20:21:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1668/dataEnvio'] String "2025-05-02 20:20:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1669/dataEnvio'] String "2025-05-02 20:18:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1670/dataEnvio'] String "2025-05-02 20:18:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1671/dataEnvio'] String "2025-05-02 20:18:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1672/dataEnvio'] String "2025-05-02 20:18:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1673/dataEnvio'] String "2025-05-02 20:18:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1674/dataEnvio'] String "2025-05-02 20:18:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1675/dataEnvio'] String "2025-05-02 20:16:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1676/dataEnvio'] String "2025-05-02 20:16:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1677/dataEnvio'] String "2025-05-02 20:16:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1678/dataEnvio'] String "2025-05-02 20:15:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1679/dataEnvio'] String "2025-05-02 20:15:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1680/dataEnvio'] String "2025-05-02 20:15:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1681/dataEnvio'] String "2025-05-02 20:15:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1682/dataEnvio'] String "2025-05-02 20:15:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1683/dataEnvio'] String "2025-05-02 20:15:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1684/dataEnvio'] String "2025-05-02 20:14:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1685/dataEnvio'] String "2025-05-02 20:13:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1686/dataEnvio'] String "2025-05-02 20:12:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1687/dataEnvio'] String "2025-05-02 20:12:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1688/dataEnvio'] String "2025-05-02 20:10:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1689/dataEnvio'] String "2025-05-02 20:09:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1690/dataEnvio'] String "2025-05-02 20:09:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1691/dataEnvio'] String "2025-05-02 20:09:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1692/dataEnvio'] String "2025-05-02 20:09:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1693/dataEnvio'] String "2025-05-02 20:09:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1694/dataEnvio'] String "2025-05-02 20:09:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1695/dataEnvio'] String "2025-05-02 20:08:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1696/dataEnvio'] String "2025-05-02 20:08:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1697/dataEnvio'] String "2025-05-02 20:08:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1698/dataEnvio'] String "2025-05-02 20:08:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1699/dataEnvio'] String "2025-05-02 20:08:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1700/dataEnvio'] String "2025-05-02 20:08:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1701/dataEnvio'] String "2025-05-02 20:08:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1702/dataEnvio'] String "2025-05-02 20:08:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1703/dataEnvio'] String "2025-05-02 20:07:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1704/dataEnvio'] String "2025-05-02 20:07:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1705/dataEnvio'] String "2025-05-02 20:07:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1706/dataEnvio'] String "2025-05-02 20:07:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1707/dataEnvio'] String "2025-05-02 20:07:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1708/dataEnvio'] String "2025-05-02 20:07:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1709/dataEnvio'] String "2025-05-02 20:07:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1710/dataEnvio'] String "2025-05-02 20:07:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1711/dataEnvio'] String "2025-05-02 20:07:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1712/dataEnvio'] String "2025-05-02 20:07:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1713/dataEnvio'] String "2025-05-02 20:06:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1714/dataEnvio'] String "2025-05-02 20:06:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1715/dataEnvio'] String "2025-05-02 20:06:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1716/dataEnvio'] String "2025-05-02 20:06:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1717/dataEnvio'] String "2025-05-02 20:06:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1718/dataEnvio'] String "2025-05-02 20:06:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1719/dataEnvio'] String "2025-05-02 20:06:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1720/dataEnvio'] String "2025-05-02 20:06:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1721/dataEnvio'] String "2025-05-02 20:06:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1722/dataEnvio'] String "2025-05-02 20:06:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1723/dataEnvio'] String "2025-05-02 20:06:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1724/dataEnvio'] String "2025-05-02 20:06:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1725/dataEnvio'] String "2025-05-02 20:05:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1726/dataEnvio'] String "2025-05-02 20:05:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1727/dataEnvio'] String "2025-05-02 20:05:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1728/dataEnvio'] String "2025-05-02 20:05:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1729/dataEnvio'] String "2025-05-02 20:05:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1730/dataEnvio'] String "2025-05-02 20:05:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1731/dataEnvio'] String "2025-05-02 20:05:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1732/dataEnvio'] String "2025-05-02 20:04:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1733/dataEnvio'] String "2025-05-02 20:04:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1734/dataEnvio'] String "2025-05-02 20:04:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1735/dataEnvio'] String "2025-05-02 20:04:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1736/dataEnvio'] String "2025-05-02 20:03:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1737/dataEnvio'] String "2025-05-02 20:03:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1738/dataEnvio'] String "2025-05-02 20:03:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1739/dataEnvio'] String "2025-05-02 20:03:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1740/dataEnvio'] String "2025-05-02 20:03:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1741/dataEnvio'] String "2025-05-02 20:03:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1742/dataEnvio'] String "2025-05-02 20:03:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1743/dataEnvio'] String "2025-05-02 20:03:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1744/dataEnvio'] String "2025-05-02 20:02:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1745/dataEnvio'] String "2025-05-02 20:01:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1746/dataEnvio'] String "2025-05-02 20:00:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1747/dataEnvio'] String "2025-05-02 20:00:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1748/dataEnvio'] String "2025-05-02 19:59:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1749/dataEnvio'] String "2025-05-02 19:59:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1750/dataEnvio'] String "2025-05-02 19:59:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1751/dataEnvio'] String "2025-05-02 19:59:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1752/dataEnvio'] String "2025-05-02 19:59:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1753/dataEnvio'] String "2025-05-02 19:59:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1754/dataEnvio'] String "2025-05-02 19:59:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1755/dataEnvio'] String "2025-05-02 19:57:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1756/dataEnvio'] String "2025-05-02 19:57:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1757/dataEnvio'] String "2025-05-02 19:56:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1758/dataEnvio'] String "2025-05-02 19:54:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1759/dataEnvio'] String "2025-05-02 19:54:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1760/dataEnvio'] String "2025-05-02 19:52:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1761/dataEnvio'] String "2025-05-02 19:51:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1762/dataEnvio'] String "2025-05-02 19:49:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1763/dataEnvio'] String "2025-05-02 19:48:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1764/dataEnvio'] String "2025-05-02 19:48:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1765/dataEnvio'] String "2025-05-02 19:46:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1766/dataEnvio'] String "2025-05-02 19:45:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1767/dataEnvio'] String "2025-05-02 19:44:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1768/dataEnvio'] String "2025-05-02 19:42:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1769/dataEnvio'] String "2025-05-02 19:41:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1770/dataEnvio'] String "2025-05-02 19:40:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1771/dataEnvio'] String "2025-05-02 19:39:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1772/dataEnvio'] String "2025-05-02 19:37:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1773/dataEnvio'] String "2025-05-02 19:36:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1774/dataEnvio'] String "2025-05-02 19:36:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1775/dataEnvio'] String "2025-05-02 19:35:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1776/dataEnvio'] String "2025-05-02 19:35:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1777/dataEnvio'] String "2025-05-02 19:33:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1778/dataEnvio'] String "2025-05-02 19:30:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1779/dataEnvio'] String "2025-05-02 19:28:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1780/dataEnvio'] String "2025-05-02 19:23:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1781/dataEnvio'] String "2025-05-02 19:20:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1782/dataEnvio'] String "2025-05-02 19:18:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1783/dataEnvio'] String "2025-05-02 19:18:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1784/dataEnvio'] String "2025-05-02 19:17:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1785/dataEnvio'] String "2025-05-02 19:16:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1786/dataEnvio'] String "2025-05-02 19:12:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1787/dataEnvio'] String "2025-05-02 19:10:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1788/dataEnvio'] String "2025-05-02 19:06:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1789/dataEnvio'] String "2025-05-02 19:03:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1790/dataEnvio'] String "2025-05-02 19:03:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1791/dataEnvio'] String "2025-05-02 19:02:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1792/dataEnvio'] String "2025-05-02 19:02:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1793/dataEnvio'] String "2025-05-02 19:00:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1794/dataEnvio'] String "2025-05-02 19:00:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1795/dataEnvio'] String "2025-05-02 19:00:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1796/dataEnvio'] String "2025-05-02 18:59:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1797/dataEnvio'] String "2025-05-02 18:58:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1798/dataEnvio'] String "2025-05-02 18:57:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1799/dataEnvio'] String "2025-05-02 18:57:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1800/dataEnvio'] String "2025-05-02 18:57:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1801/dataEnvio'] String "2025-05-02 18:56:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1802/dataEnvio'] String "2025-05-02 18:54:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1803/dataEnvio'] String "2025-05-02 18:54:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1804/dataEnvio'] String "2025-05-02 18:54:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1805/dataEnvio'] String "2025-05-02 18:53:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1806/dataEnvio'] String "2025-05-02 18:53:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1807/dataEnvio'] String "2025-05-02 18:52:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1808/dataEnvio'] String "2025-05-02 18:52:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1809/dataEnvio'] String "2025-05-02 18:52:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1810/dataEnvio'] String "2025-05-02 18:52:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1811/dataEnvio'] String "2025-05-02 18:52:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1812/dataEnvio'] String "2025-05-02 18:52:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1813/dataEnvio'] String "2025-05-02 18:52:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1814/dataEnvio'] String "2025-05-02 18:51:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1815/dataEnvio'] String "2025-05-02 18:51:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1816/dataEnvio'] String "2025-05-02 18:51:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1817/dataEnvio'] String "2025-05-02 18:51:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1818/dataEnvio'] String "2025-05-02 18:50:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1819/dataEnvio'] String "2025-05-02 18:50:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1820/dataEnvio'] String "2025-05-02 18:50:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1821/dataEnvio'] String "2025-05-02 18:49:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1822/dataEnvio'] String "2025-05-02 18:49:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1823/dataEnvio'] String "2025-05-02 18:49:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1824/dataEnvio'] String "2025-05-02 18:47:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1825/dataEnvio'] String "2025-05-02 18:46:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1826/dataEnvio'] String "2025-05-02 18:46:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1827/dataEnvio'] String "2025-05-02 18:46:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1828/dataEnvio'] String "2025-05-02 18:46:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1829/dataEnvio'] String "2025-05-02 18:46:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1830/dataEnvio'] String "2025-05-02 18:46:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1831/dataEnvio'] String "2025-05-02 18:45:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1832/dataEnvio'] String "2025-05-02 18:45:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1833/dataEnvio'] String "2025-05-02 18:45:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1834/dataEnvio'] String "2025-05-02 18:43:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1835/dataEnvio'] String "2025-05-02 18:43:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1836/dataEnvio'] String "2025-05-02 18:40:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1837/dataEnvio'] String "2025-05-02 18:40:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1838/dataEnvio'] String "2025-05-02 18:40:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1839/dataEnvio'] String "2025-05-02 18:40:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1840/dataEnvio'] String "2025-05-02 18:40:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1841/dataEnvio'] String "2025-05-02 18:40:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1842/dataEnvio'] String "2025-05-02 18:39:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1843/dataEnvio'] String "2025-05-02 18:37:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1844/dataEnvio'] String "2025-05-02 18:35:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1845/dataEnvio'] String "2025-05-02 18:34:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1846/dataEnvio'] String "2025-05-02 18:32:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1847/dataEnvio'] String "2025-05-02 18:32:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1848/dataEnvio'] String "2025-05-02 18:31:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1849/dataEnvio'] String "2025-05-02 18:30:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1850/dataEnvio'] String "2025-05-02 18:30:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1851/dataEnvio'] String "2025-05-02 18:30:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1852/dataEnvio'] String "2025-05-02 18:26:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1853/dataEnvio'] String "2025-05-02 18:22:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1854/dataEnvio'] String "2025-05-02 18:21:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1855/dataEnvio'] String "2025-05-02 18:20:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1856/dataEnvio'] String "2025-05-02 18:19:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1857/dataEnvio'] String "2025-05-02 18:17:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1858/dataEnvio'] String "2025-05-02 18:15:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1859/dataEnvio'] String "2025-05-02 18:13:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1860/dataEnvio'] String "2025-05-02 18:12:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1861/dataEnvio'] String "2025-05-02 18:10:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1862/dataEnvio'] String "2025-05-02 18:09:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1863/dataEnvio'] String "2025-05-02 18:08:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1864/dataEnvio'] String "2025-05-02 18:08:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1865/dataEnvio'] String "2025-05-02 18:08:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1866/dataEnvio'] String "2025-05-02 18:05:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1867/dataEnvio'] String "2025-05-02 18:05:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1868/dataEnvio'] String "2025-05-02 18:04:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1869/dataEnvio'] String "2025-05-02 18:04:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1870/dataEnvio'] String "2025-05-02 18:04:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1871/dataEnvio'] String "2025-05-02 18:03:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1872/dataEnvio'] String "2025-05-02 17:59:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1873/dataEnvio'] String "2025-05-02 17:57:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1874/dataEnvio'] String "2025-05-02 17:57:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1875/dataEnvio'] String "2025-05-02 17:56:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1876/dataEnvio'] String "2025-05-02 17:56:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1877/dataEnvio'] String "2025-05-02 17:55:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1878/dataEnvio'] String "2025-05-02 17:54:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1879/dataEnvio'] String "2025-05-02 17:53:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1880/dataEnvio'] String "2025-05-02 17:52:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1881/dataEnvio'] String "2025-05-02 17:50:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1882/dataEnvio'] String "2025-05-02 17:49:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1883/dataEnvio'] String "2025-05-02 17:46:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1884/dataEnvio'] String "2025-05-02 17:46:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1885/dataEnvio'] String "2025-05-02 17:28:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1886/dataEnvio'] String "2025-05-02 17:27:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1887/dataEnvio'] String "2025-05-02 17:25:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1888/dataEnvio'] String "2025-05-02 17:25:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1889/dataEnvio'] String "2025-05-02 17:25:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1890/dataEnvio'] String "2025-05-02 17:24:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1891/dataEnvio'] String "2025-05-02 17:24:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1892/dataEnvio'] String "2025-05-02 17:23:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1893/dataEnvio'] String "2025-05-02 17:21:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1894/dataEnvio'] String "2025-05-02 17:12:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1895/dataEnvio'] String "2025-05-02 17:06:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1896/dataEnvio'] String "2025-05-02 17:06:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1897/dataEnvio'] String "2025-05-02 17:01:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1898/dataEnvio'] String "2025-05-02 17:01:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1899/dataEnvio'] String "2025-05-01 08:06:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1900/dataEnvio'] String "2025-05-01 08:03:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1901/dataEnvio'] String "2025-05-01 08:02:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1902/dataEnvio'] String "2025-05-01 08:02:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1903/dataEnvio'] String "2025-05-01 08:01:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1904/dataEnvio'] String "2025-05-01 08:00:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1905/dataEnvio'] String "2025-05-01 08:00:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1906/dataEnvio'] String "2025-05-01 07:59:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1907/dataEnvio'] String "2025-05-01 07:58:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1908/dataEnvio'] String "2025-05-01 07:57:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1909/dataEnvio'] String "2025-05-01 07:56:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1910/dataEnvio'] String "2025-05-01 07:56:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1911/dataEnvio'] String "2025-05-01 07:56:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1912/dataEnvio'] String "2025-05-01 07:55:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1913/dataEnvio'] String "2025-05-01 07:54:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1914/dataEnvio'] String "2025-05-01 07:53:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1915/dataEnvio'] String "2025-05-01 07:53:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1916/dataEnvio'] String "2025-05-01 07:52:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1917/dataEnvio'] String "2025-05-01 07:51:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1918/dataEnvio'] String "2025-05-01 07:48:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1919/dataEnvio'] String "2025-05-01 07:48:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1920/dataEnvio'] String "2025-05-01 07:47:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1921/dataEnvio'] String "2025-05-01 07:47:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1922/dataEnvio'] String "2025-05-01 07:45:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1923/dataEnvio'] String "2025-05-01 07:38:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1924/dataEnvio'] String "2025-05-01 07:34:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1925/dataEnvio'] String "2025-05-01 07:33:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1926/dataEnvio'] String "2025-05-01 07:31:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1927/dataEnvio'] String "2025-05-01 07:28:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1928/dataEnvio'] String "2025-05-01 07:28:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1929/dataEnvio'] String "2025-05-01 07:26:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1930/dataEnvio'] String "2025-05-01 07:25:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1931/dataEnvio'] String "2025-05-01 07:23:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1932/dataEnvio'] String "2025-05-01 07:23:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1933/dataEnvio'] String "2025-05-01 07:23:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1934/dataEnvio'] String "2025-05-01 07:22:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1935/dataEnvio'] String "2025-05-01 07:21:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1936/dataEnvio'] String "2025-05-01 07:19:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1937/dataEnvio'] String "2025-05-01 07:18:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1938/dataEnvio'] String "2025-05-01 07:18:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1939/dataEnvio'] String "2025-05-01 07:17:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1940/dataEnvio'] String "2025-05-01 07:17:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1941/dataEnvio'] String "2025-05-01 07:13:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1942/dataEnvio'] String "2025-05-01 07:11:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1943/dataEnvio'] String "2025-05-01 07:11:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1944/dataEnvio'] String "2025-05-01 07:10:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1945/dataEnvio'] String "2025-05-01 07:09:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1946/dataEnvio'] String "2025-05-01 07:08:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1947/dataEnvio'] String "2025-05-01 07:08:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1948/dataEnvio'] String "2025-05-01 07:07:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1949/dataEnvio'] String "2025-05-01 07:06:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1950/dataEnvio'] String "2025-05-01 07:06:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1951/dataEnvio'] String "2025-05-01 07:05:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1952/dataEnvio'] String "2025-05-01 07:04:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1953/dataEnvio'] String "2025-05-01 07:04:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1954/dataEnvio'] String "2025-05-01 07:03:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1955/dataEnvio'] String "2025-05-01 07:03:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1956/dataEnvio'] String "2025-05-01 07:03:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1957/dataEnvio'] String "2025-05-01 07:02:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1958/dataEnvio'] String "2025-05-01 06:58:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1959/dataEnvio'] String "2025-05-01 06:55:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1960/dataEnvio'] String "2025-05-01 06:55:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1961/dataEnvio'] String "2025-05-01 06:54:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1962/dataEnvio'] String "2025-05-01 06:54:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1963/dataEnvio'] String "2025-05-01 06:53:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1964/dataEnvio'] String "2025-05-01 06:52:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1965/dataEnvio'] String "2025-05-01 06:51:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1966/dataEnvio'] String "2025-05-01 06:50:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1967/dataEnvio'] String "2025-05-01 06:50:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1968/dataEnvio'] String "2025-05-01 06:47:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1969/dataEnvio'] String "2025-05-01 06:47:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1970/dataEnvio'] String "2025-05-01 06:45:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1971/dataEnvio'] String "2025-05-01 06:43:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1972/dataEnvio'] String "2025-05-01 06:43:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1973/dataEnvio'] String "2025-05-01 06:41:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1974/dataEnvio'] String "2025-05-01 06:39:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1975/dataEnvio'] String "2025-05-01 06:39:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1976/dataEnvio'] String "2025-05-01 06:39:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1977/dataEnvio'] String "2025-05-01 06:38:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1978/dataEnvio'] String "2025-05-01 06:38:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1979/dataEnvio'] String "2025-05-01 06:38:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1980/dataEnvio'] String "2025-05-01 06:38:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1981/dataEnvio'] String "2025-05-01 06:38:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1982/dataEnvio'] String "2025-05-01 06:38:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1983/dataEnvio'] String "2025-05-01 06:38:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1984/dataEnvio'] String "2025-05-01 06:38:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1985/dataEnvio'] String "2025-05-01 06:38:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1986/dataEnvio'] String "2025-05-01 06:38:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1987/dataEnvio'] String "2025-05-01 06:38:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1988/dataEnvio'] String "2025-05-01 06:38:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1989/dataEnvio'] String "2025-05-01 06:38:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1990/dataEnvio'] String "2025-05-01 06:37:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1991/dataEnvio'] String "2025-05-01 06:37:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1992/dataEnvio'] String "2025-05-01 06:37:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1993/dataEnvio'] String "2025-05-01 06:37:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1994/dataEnvio'] String "2025-05-01 06:37:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1995/dataEnvio'] String "2025-05-01 06:36:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1996/dataEnvio'] String "2025-05-01 06:36:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1997/dataEnvio'] String "2025-05-01 06:36:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1998/dataEnvio'] String "2025-05-01 06:36:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1999/dataEnvio'] String "2025-05-01 06:35:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2000/dataEnvio'] String "2025-05-01 06:35:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2001/dataEnvio'] String "2025-05-01 06:35:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2002/dataEnvio'] String "2025-05-01 06:35:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2003/dataEnvio'] String "2025-05-01 06:35:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2004/dataEnvio'] String "2025-05-01 06:35:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2005/dataEnvio'] String "2025-05-01 06:35:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2006/dataEnvio'] String "2025-05-01 06:34:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2007/dataEnvio'] String "2025-05-01 06:34:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2008/dataEnvio'] String "2025-05-01 06:34:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2009/dataEnvio'] String "2025-05-01 06:34:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2010/dataEnvio'] String "2025-05-01 06:34:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2011/dataEnvio'] String "2025-05-01 06:33:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2012/dataEnvio'] String "2025-05-01 06:33:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2013/dataEnvio'] String "2025-05-01 06:33:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2014/dataEnvio'] String "2025-05-01 06:33:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2015/dataEnvio'] String "2025-05-01 06:33:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2016/dataEnvio'] String "2025-05-01 06:31:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2017/dataEnvio'] String "2025-05-01 06:31:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2018/dataEnvio'] String "2025-05-01 06:31:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2019/dataEnvio'] String "2025-05-01 06:31:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2020/dataEnvio'] String "2025-05-01 06:31:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2021/dataEnvio'] String "2025-05-01 06:30:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2022/dataEnvio'] String "2025-05-01 06:30:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2023/dataEnvio'] String "2025-05-01 06:30:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2024/dataEnvio'] String "2025-05-01 06:30:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2025/dataEnvio'] String "2025-05-01 06:30:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2026/dataEnvio'] String "2025-05-01 06:30:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2027/dataEnvio'] String "2025-05-01 06:30:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2028/dataEnvio'] String "2025-05-01 06:30:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2029/dataEnvio'] String "2025-05-01 06:30:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2030/dataEnvio'] String "2025-05-01 06:30:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2031/dataEnvio'] String "2025-05-01 06:25:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2032/dataEnvio'] String "2025-05-01 06:24:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2033/dataEnvio'] String "2025-05-01 06:24:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2034/dataEnvio'] String "2025-05-01 06:24:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2035/dataEnvio'] String "2025-05-01 06:23:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2036/dataEnvio'] String "2025-05-01 06:22:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2037/dataEnvio'] String "2025-05-01 06:22:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2038/dataEnvio'] String "2025-05-01 06:21:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2039/dataEnvio'] String "2025-05-01 06:21:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2040/dataEnvio'] String "2025-05-01 06:21:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2041/dataEnvio'] String "2025-05-01 06:21:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2042/dataEnvio'] String "2025-05-01 06:21:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2043/dataEnvio'] String "2025-05-01 06:20:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2044/dataEnvio'] String "2025-05-01 06:19:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2045/dataEnvio'] String "2025-05-01 06:18:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2046/dataEnvio'] String "2025-05-01 06:18:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2047/dataEnvio'] String "2025-05-01 06:18:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2048/dataEnvio'] String "2025-05-01 06:18:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2049/dataEnvio'] String "2025-05-01 06:18:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2050/dataEnvio'] String "2025-05-01 06:17:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2051/dataEnvio'] String "2025-05-01 06:17:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2052/dataEnvio'] String "2025-05-01 06:17:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2053/dataEnvio'] String "2025-05-01 06:17:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2054/dataEnvio'] String "2025-05-01 06:17:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2055/dataEnvio'] String "2025-05-01 06:17:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2056/dataEnvio'] String "2025-05-01 06:17:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2057/dataEnvio'] String "2025-05-01 06:17:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2058/dataEnvio'] String "2025-05-01 06:17:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2059/dataEnvio'] String "2025-05-01 06:17:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2060/dataEnvio'] String "2025-05-01 06:16:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2061/dataEnvio'] String "2025-05-01 06:16:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2062/dataEnvio'] String "2025-05-01 06:15:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2063/dataEnvio'] String "2025-05-01 06:15:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2064/dataEnvio'] String "2025-05-01 06:15:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2065/dataEnvio'] String "2025-05-01 06:15:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2066/dataEnvio'] String "2025-05-01 06:15:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2067/dataEnvio'] String "2025-05-01 06:15:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2068/dataEnvio'] String "2025-05-01 06:15:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2069/dataEnvio'] String "2025-05-01 06:13:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2070/dataEnvio'] String "2025-05-01 06:13:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2071/dataEnvio'] String "2025-05-01 06:13:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2072/dataEnvio'] String "2025-05-01 06:13:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2073/dataEnvio'] String "2025-05-01 06:13:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2074/dataEnvio'] String "2025-05-01 06:13:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2075/dataEnvio'] String "2025-05-01 06:13:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2076/dataEnvio'] String "2025-05-01 06:12:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2077/dataEnvio'] String "2025-05-01 06:12:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2078/dataEnvio'] String "2025-05-01 06:11:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2079/dataEnvio'] String "2025-05-01 06:10:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2080/dataEnvio'] String "2025-05-01 06:10:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2081/dataEnvio'] String "2025-05-01 06:10:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2082/dataEnvio'] String "2025-05-01 06:10:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2083/dataEnvio'] String "2025-05-01 06:10:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2084/dataEnvio'] String "2025-05-01 06:10:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2085/dataEnvio'] String "2025-05-01 06:07:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2086/dataEnvio'] String "2025-05-01 06:07:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2087/dataEnvio'] String "2025-05-01 06:07:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2088/dataEnvio'] String "2025-05-01 06:07:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2089/dataEnvio'] String "2025-05-01 06:07:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2090/dataEnvio'] String "2025-05-01 06:07:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2091/dataEnvio'] String "2025-05-01 06:05:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2092/dataEnvio'] String "2025-05-01 06:04:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2093/dataEnvio'] String "2025-05-01 06:04:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2094/dataEnvio'] String "2025-05-01 06:04:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2095/dataEnvio'] String "2025-05-01 06:03:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2096/dataEnvio'] String "2025-05-01 06:02:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2097/dataEnvio'] String "2025-05-01 06:02:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2098/dataEnvio'] String "2025-05-01 06:01:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2099/dataEnvio'] String "2025-05-01 06:01:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2100/dataEnvio'] String "2025-05-01 06:01:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2101/dataEnvio'] String "2025-05-01 06:01:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2102/dataEnvio'] String "2025-05-01 06:01:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2103/dataEnvio'] String "2025-05-01 06:01:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2104/dataEnvio'] String "2025-05-01 06:00:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2105/dataEnvio'] String "2025-05-01 05:58:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2106/dataEnvio'] String "2025-05-01 05:58:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2107/dataEnvio'] String "2025-05-01 05:58:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2108/dataEnvio'] String "2025-05-01 05:58:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2109/dataEnvio'] String "2025-05-01 05:58:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2110/dataEnvio'] String "2025-05-01 05:58:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2111/dataEnvio'] String "2025-05-01 05:57:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2112/dataEnvio'] String "2025-05-01 05:57:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2113/dataEnvio'] String "2025-05-01 05:57:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2114/dataEnvio'] String "2025-05-01 05:56:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2115/dataEnvio'] String "2025-05-01 05:54:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2116/dataEnvio'] String "2025-05-01 05:54:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2117/dataEnvio'] String "2025-05-01 05:53:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2118/dataEnvio'] String "2025-05-01 05:52:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2119/dataEnvio'] String "2025-05-01 05:52:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2120/dataEnvio'] String "2025-05-01 05:52:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2121/dataEnvio'] String "2025-05-01 05:52:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2122/dataEnvio'] String "2025-05-01 05:52:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2123/dataEnvio'] String "2025-05-01 05:52:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2124/dataEnvio'] String "2025-05-01 05:52:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2125/dataEnvio'] String "2025-05-01 05:52:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2126/dataEnvio'] String "2025-05-01 05:51:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2127/dataEnvio'] String "2025-05-01 05:51:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2128/dataEnvio'] String "2025-05-01 05:51:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2129/dataEnvio'] String "2025-05-01 05:51:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2130/dataEnvio'] String "2025-05-01 05:50:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2131/dataEnvio'] String "2025-05-01 05:45:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2132/dataEnvio'] String "2025-05-01 05:45:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2133/dataEnvio'] String "2025-05-01 05:45:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2134/dataEnvio'] String "2025-05-01 05:44:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2135/dataEnvio'] String "2025-05-01 05:42:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2136/dataEnvio'] String "2025-05-01 05:41:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2137/dataEnvio'] String "2025-05-01 05:39:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2138/dataEnvio'] String "2025-05-01 05:39:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2139/dataEnvio'] String "2025-05-01 05:39:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2140/dataEnvio'] String "2025-05-01 05:38:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2141/dataEnvio'] String "2025-05-01 05:35:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2142/dataEnvio'] String "2025-05-01 05:35:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2143/dataEnvio'] String "2025-05-01 05:35:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2144/dataEnvio'] String "2025-05-01 05:34:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2145/dataEnvio'] String "2025-05-01 05:34:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2146/dataEnvio'] String "2025-05-01 05:33:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2147/dataEnvio'] String "2025-05-01 05:33:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2148/dataEnvio'] String "2025-05-01 05:33:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2149/dataEnvio'] String "2025-05-01 05:33:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2150/dataEnvio'] String "2025-05-01 05:33:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2151/dataEnvio'] String "2025-05-01 05:32:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2152/dataEnvio'] String "2025-05-01 05:32:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2153/dataEnvio'] String "2025-05-01 05:32:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2154/dataEnvio'] String "2025-05-01 05:32:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2155/dataEnvio'] String "2025-05-01 05:30:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2156/dataEnvio'] String "2025-05-01 05:29:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2157/dataEnvio'] String "2025-05-01 05:29:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2158/dataEnvio'] String "2025-05-01 05:29:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2159/dataEnvio'] String "2025-05-01 05:29:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2160/dataEnvio'] String "2025-05-01 05:29:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2161/dataEnvio'] String "2025-05-01 05:29:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2162/dataEnvio'] String "2025-05-01 05:29:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2163/dataEnvio'] String "2025-05-01 05:28:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2164/dataEnvio'] String "2025-05-01 05:28:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2165/dataEnvio'] String "2025-05-01 05:27:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2166/dataEnvio'] String "2025-05-01 05:27:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2167/dataEnvio'] String "2025-05-01 05:24:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2168/dataEnvio'] String "2025-05-01 05:23:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2169/dataEnvio'] String "2025-05-01 05:22:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2170/dataEnvio'] String "2025-05-01 05:20:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2171/dataEnvio'] String "2025-05-01 05:19:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2172/dataEnvio'] String "2025-05-01 05:18:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2173/dataEnvio'] String "2025-05-01 05:17:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2174/dataEnvio'] String "2025-05-01 05:16:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2175/dataEnvio'] String "2025-05-01 05:12:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2176/dataEnvio'] String "2025-05-01 05:12:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2177/dataEnvio'] String "2025-05-01 05:10:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2178/dataEnvio'] String "2025-05-01 05:09:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2179/dataEnvio'] String "2025-05-01 05:08:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2180/dataEnvio'] String "2025-05-01 05:07:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2181/dataEnvio'] String "2025-05-01 05:04:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2182/dataEnvio'] String "2025-05-01 05:01:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2183/dataEnvio'] String "2025-05-01 04:59:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2184/dataEnvio'] String "2025-05-01 04:58:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2185/dataEnvio'] String "2025-05-01 04:57:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2186/dataEnvio'] String "2025-05-01 04:56:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2187/dataEnvio'] String "2025-05-01 04:55:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2188/dataEnvio'] String "2025-05-01 04:55:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2189/dataEnvio'] String "2025-05-01 04:54:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2190/dataEnvio'] String "2025-05-01 04:53:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2191/dataEnvio'] String "2025-05-01 04:53:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2192/dataEnvio'] String "2025-05-01 04:52:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2193/dataEnvio'] String "2025-05-01 04:52:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2194/dataEnvio'] String "2025-05-01 04:50:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2195/dataEnvio'] String "2025-05-01 04:47:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2196/dataEnvio'] String "2025-05-01 04:46:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2197/dataEnvio'] String "2025-05-01 04:43:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2198/dataEnvio'] String "2025-05-01 04:40:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2199/dataEnvio'] String "2025-05-01 04:40:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2200/dataEnvio'] String "2025-05-01 04:39:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2201/dataEnvio'] String "2025-05-01 04:39:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2202/dataEnvio'] String "2025-05-01 04:37:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2203/dataEnvio'] String "2025-05-01 04:36:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2204/dataEnvio'] String "2025-05-01 04:35:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2205/dataEnvio'] String "2025-05-01 04:35:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2206/dataEnvio'] String "2025-05-01 04:34:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2207/dataEnvio'] String "2025-05-01 04:33:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2208/dataEnvio'] String "2025-05-01 04:29:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2209/dataEnvio'] String "2025-05-01 04:29:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2210/dataEnvio'] String "2025-05-01 04:27:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2211/dataEnvio'] String "2025-05-01 04:26:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2212/dataEnvio'] String "2025-05-01 04:25:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2213/dataEnvio'] String "2025-05-01 04:25:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2214/dataEnvio'] String "2025-05-01 04:25:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2215/dataEnvio'] String "2025-05-01 04:24:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2216/dataEnvio'] String "2025-05-01 04:24:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2217/dataEnvio'] String "2025-05-01 04:22:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2218/dataEnvio'] String "2025-05-01 04:19:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2219/dataEnvio'] String "2025-05-01 04:19:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2220/dataEnvio'] String "2025-05-01 04:19:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2221/dataEnvio'] String "2025-05-01 04:17:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2222/dataEnvio'] String "2025-05-01 04:16:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2223/dataEnvio'] String "2025-05-01 04:13:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2224/dataEnvio'] String "2025-05-01 04:11:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2225/dataEnvio'] String "2025-05-01 04:11:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2226/dataEnvio'] String "2025-05-01 04:10:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2227/dataEnvio'] String "2025-05-01 04:10:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2228/dataEnvio'] String "2025-05-01 04:08:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2229/dataEnvio'] String "2025-05-01 04:08:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2230/dataEnvio'] String "2025-05-01 04:06:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2231/dataEnvio'] String "2025-05-01 04:06:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2232/dataEnvio'] String "2025-05-01 04:05:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2233/dataEnvio'] String "2025-05-01 04:04:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2234/dataEnvio'] String "2025-05-01 03:59:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2235/dataEnvio'] String "2025-05-01 03:59:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2236/dataEnvio'] String "2025-05-01 03:58:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2237/dataEnvio'] String "2025-05-01 03:57:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2238/dataEnvio'] String "2025-05-01 03:56:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2239/dataEnvio'] String "2025-05-01 03:55:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2240/dataEnvio'] String "2025-05-01 03:48:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2241/dataEnvio'] String "2025-05-01 03:47:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2242/dataEnvio'] String "2025-05-01 03:46:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2243/dataEnvio'] String "2025-05-01 03:45:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2244/dataEnvio'] String "2025-05-01 03:44:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2245/dataEnvio'] String "2025-05-01 03:40:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2246/dataEnvio'] String "2025-05-01 03:37:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2247/dataEnvio'] String "2025-05-01 03:36:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2248/dataEnvio'] String "2025-05-01 03:33:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2249/dataEnvio'] String "2025-05-01 03:25:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2250/dataEnvio'] String "2025-05-01 03:25:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2251/dataEnvio'] String "2025-05-01 03:24:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2252/dataEnvio'] String "2025-05-01 03:23:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2253/dataEnvio'] String "2025-05-01 03:22:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2254/dataEnvio'] String "2025-05-01 03:21:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2255/dataEnvio'] String "2025-05-01 03:19:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2256/dataEnvio'] String "2025-05-01 03:14:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2257/dataEnvio'] String "2025-05-01 03:13:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2258/dataEnvio'] String "2025-05-01 03:11:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2259/dataEnvio'] String "2025-05-01 03:10:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2260/dataEnvio'] String "2025-05-01 03:07:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2261/dataEnvio'] String "2025-05-01 03:07:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2262/dataEnvio'] String "2025-05-01 03:04:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2263/dataEnvio'] String "2025-05-01 03:04:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2264/dataEnvio'] String "2025-05-01 03:04:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2265/dataEnvio'] String "2025-05-01 03:01:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2266/dataEnvio'] String "2025-05-01 02:58:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2267/dataEnvio'] String "2025-05-01 02:56:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2268/dataEnvio'] String "2025-05-01 02:51:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2269/dataEnvio'] String "2025-05-01 02:49:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2270/dataEnvio'] String "2025-05-01 02:47:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2271/dataEnvio'] String "2025-05-01 02:44:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2272/dataEnvio'] String "2025-05-01 02:44:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2273/dataEnvio'] String "2025-05-01 02:44:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2274/dataEnvio'] String "2025-05-01 02:43:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2275/dataEnvio'] String "2025-05-01 02:42:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2276/dataEnvio'] String "2025-05-01 02:40:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2277/dataEnvio'] String "2025-05-01 02:40:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2278/dataEnvio'] String "2025-05-01 02:37:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2279/dataEnvio'] String "2025-05-01 02:35:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2280/dataEnvio'] String "2025-05-01 02:34:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2281/dataEnvio'] String "2025-05-01 02:33:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2282/dataEnvio'] String "2025-05-01 02:33:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2283/dataEnvio'] String "2025-05-01 02:32:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2284/dataEnvio'] String "2025-05-01 02:32:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2285/dataEnvio'] String "2025-05-01 02:32:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2286/dataEnvio'] String "2025-05-01 02:31:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2287/dataEnvio'] String "2025-05-01 02:29:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2288/dataEnvio'] String "2025-05-01 02:28:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2289/dataEnvio'] String "2025-05-01 02:28:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2290/dataEnvio'] String "2025-05-01 02:27:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2291/dataEnvio'] String "2025-05-01 02:25:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2292/dataEnvio'] String "2025-05-01 02:24:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2293/dataEnvio'] String "2025-05-01 02:24:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2294/dataEnvio'] String "2025-05-01 02:24:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2295/dataEnvio'] String "2025-05-01 02:24:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2296/dataEnvio'] String "2025-05-01 02:24:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2297/dataEnvio'] String "2025-05-01 02:24:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2298/dataEnvio'] String "2025-05-01 02:24:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2299/dataEnvio'] String "2025-05-01 02:24:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2300/dataEnvio'] String "2025-05-01 02:24:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2301/dataEnvio'] String "2025-05-01 02:24:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2302/dataEnvio'] String "2025-05-01 02:24:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2303/dataEnvio'] String "2025-05-01 02:24:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2304/dataEnvio'] String "2025-05-01 02:24:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2305/dataEnvio'] String "2025-05-01 02:23:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2306/dataEnvio'] String "2025-05-01 02:22:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2307/dataEnvio'] String "2025-05-01 02:22:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2308/dataEnvio'] String "2025-05-01 02:22:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2309/dataEnvio'] String "2025-05-01 02:22:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2310/dataEnvio'] String "2025-05-01 02:22:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2311/dataEnvio'] String "2025-05-01 02:22:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2312/dataEnvio'] String "2025-05-01 02:22:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2313/dataEnvio'] String "2025-05-01 02:21:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2314/dataEnvio'] String "2025-05-01 02:21:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2315/dataEnvio'] String "2025-05-01 02:21:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2316/dataEnvio'] String "2025-05-01 02:21:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2317/dataEnvio'] String "2025-05-01 02:19:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2318/dataEnvio'] String "2025-05-01 02:18:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2319/dataEnvio'] String "2025-05-01 02:17:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2320/dataEnvio'] String "2025-05-01 02:17:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2321/dataEnvio'] String "2025-05-01 02:17:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2322/dataEnvio'] String "2025-05-01 02:17:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2323/dataEnvio'] String "2025-05-01 02:17:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2324/dataEnvio'] String "2025-05-01 02:15:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2325/dataEnvio'] String "2025-05-01 02:15:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2326/dataEnvio'] String "2025-05-01 02:14:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2327/dataEnvio'] String "2025-05-01 02:14:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2328/dataEnvio'] String "2025-05-01 02:14:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2329/dataEnvio'] String "2025-05-01 02:14:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2330/dataEnvio'] String "2025-05-01 02:14:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2331/dataEnvio'] String "2025-05-01 02:14:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2332/dataEnvio'] String "2025-05-01 02:14:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2333/dataEnvio'] String "2025-05-01 02:14:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2334/dataEnvio'] String "2025-05-01 02:14:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2335/dataEnvio'] String "2025-05-01 02:13:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2336/dataEnvio'] String "2025-05-01 02:13:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2337/dataEnvio'] String "2025-05-01 02:13:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2338/dataEnvio'] String "2025-05-01 02:12:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2339/dataEnvio'] String "2025-05-01 02:11:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2340/dataEnvio'] String "2025-05-01 02:10:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2341/dataEnvio'] String "2025-05-01 02:10:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2342/dataEnvio'] String "2025-05-01 02:10:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2343/dataEnvio'] String "2025-05-01 02:10:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2344/dataEnvio'] String "2025-05-01 02:09:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2345/dataEnvio'] String "2025-05-01 02:09:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2346/dataEnvio'] String "2025-05-01 02:09:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2347/dataEnvio'] String "2025-05-01 02:09:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2348/dataEnvio'] String "2025-05-01 02:09:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2349/dataEnvio'] String "2025-05-01 02:09:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2350/dataEnvio'] String "2025-05-01 02:09:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2351/dataEnvio'] String "2025-05-01 02:08:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2352/dataEnvio'] String "2025-05-01 02:08:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2353/dataEnvio'] String "2025-05-01 02:08:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2354/dataEnvio'] String "2025-05-01 02:07:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2355/dataEnvio'] String "2025-05-01 02:07:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2356/dataEnvio'] String "2025-05-01 02:07:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2357/dataEnvio'] String "2025-05-01 02:07:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2358/dataEnvio'] String "2025-05-01 02:07:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2359/dataEnvio'] String "2025-05-01 02:05:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2360/dataEnvio'] String "2025-05-01 02:05:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2361/dataEnvio'] String "2025-05-01 02:05:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2362/dataEnvio'] String "2025-05-01 02:05:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2363/dataEnvio'] String "2025-05-01 02:05:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2364/dataEnvio'] String "2025-05-01 02:05:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2365/dataEnvio'] String "2025-05-01 02:05:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2366/dataEnvio'] String "2025-05-01 02:04:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2367/dataEnvio'] String "2025-05-01 02:04:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2368/dataEnvio'] String "2025-05-01 02:04:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2369/dataEnvio'] String "2025-05-01 02:03:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2370/dataEnvio'] String "2025-05-01 02:03:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2371/dataEnvio'] String "2025-05-01 02:03:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2372/dataEnvio'] String "2025-05-01 02:03:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2373/dataEnvio'] String "2025-05-01 02:03:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2374/dataEnvio'] String "2025-05-01 02:02:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2375/dataEnvio'] String "2025-05-01 02:02:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2376/dataEnvio'] String "2025-05-01 02:02:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2377/dataEnvio'] String "2025-05-01 02:02:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2378/dataEnvio'] String "2025-05-01 02:01:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2379/dataEnvio'] String "2025-05-01 02:01:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2380/dataEnvio'] String "2025-05-01 02:01:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2381/dataEnvio'] String "2025-05-01 02:00:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2382/dataEnvio'] String "2025-05-01 02:00:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2383/dataEnvio'] String "2025-05-01 02:00:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2384/dataEnvio'] String "2025-05-01 02:00:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2385/dataEnvio'] String "2025-05-01 01:58:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2386/dataEnvio'] String "2025-05-01 01:58:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2387/dataEnvio'] String "2025-05-01 01:58:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2388/dataEnvio'] String "2025-05-01 01:57:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2389/dataEnvio'] String "2025-05-01 01:57:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2390/dataEnvio'] String "2025-05-01 01:56:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2391/dataEnvio'] String "2025-05-01 01:56:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2392/dataEnvio'] String "2025-05-01 01:56:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2393/dataEnvio'] String "2025-05-01 01:56:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2394/dataEnvio'] String "2025-05-01 01:56:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2395/dataEnvio'] String "2025-05-01 01:56:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2396/dataEnvio'] String "2025-05-01 01:56:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2397/dataEnvio'] String "2025-05-01 01:56:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2398/dataEnvio'] String "2025-05-01 01:56:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2399/dataEnvio'] String "2025-05-01 01:55:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2400/dataEnvio'] String "2025-05-01 01:55:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2401/dataEnvio'] String "2025-05-01 01:55:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2402/dataEnvio'] String "2025-05-01 01:55:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2403/dataEnvio'] String "2025-05-01 01:55:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2404/dataEnvio'] String "2025-05-01 01:55:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2405/dataEnvio'] String "2025-05-01 01:55:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2406/dataEnvio'] String "2025-05-01 01:54:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2407/dataEnvio'] String "2025-05-01 01:53:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2408/dataEnvio'] String "2025-05-01 01:53:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2409/dataEnvio'] String "2025-05-01 01:53:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2410/dataEnvio'] String "2025-05-01 01:53:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2411/dataEnvio'] String "2025-05-01 01:52:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2412/dataEnvio'] String "2025-05-01 01:51:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2413/dataEnvio'] String "2025-05-01 01:51:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2414/dataEnvio'] String "2025-05-01 01:51:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2415/dataEnvio'] String "2025-05-01 01:49:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2416/dataEnvio'] String "2025-05-01 01:49:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2417/dataEnvio'] String "2025-05-01 01:46:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2418/dataEnvio'] String "2025-05-01 01:45:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2419/dataEnvio'] String "2025-05-01 01:45:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2420/dataEnvio'] String "2025-05-01 01:45:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2421/dataEnvio'] String "2025-05-01 01:45:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2422/dataEnvio'] String "2025-05-01 01:45:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2423/dataEnvio'] String "2025-05-01 01:45:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2424/dataEnvio'] String "2025-05-01 01:44:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2425/dataEnvio'] String "2025-05-01 01:41:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2426/dataEnvio'] String "2025-05-01 01:40:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2427/dataEnvio'] String "2025-05-01 01:39:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2428/dataEnvio'] String "2025-05-01 01:39:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2429/dataEnvio'] String "2025-05-01 01:39:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2430/dataEnvio'] String "2025-05-01 01:39:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2431/dataEnvio'] String "2025-05-01 01:38:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2432/dataEnvio'] String "2025-05-01 01:37:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2433/dataEnvio'] String "2025-05-01 01:36:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2434/dataEnvio'] String "2025-05-01 01:35:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2435/dataEnvio'] String "2025-05-01 01:34:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2436/dataEnvio'] String "2025-05-01 01:33:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2437/dataEnvio'] String "2025-05-01 01:32:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2438/dataEnvio'] String "2025-05-01 01:32:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2439/dataEnvio'] String "2025-05-01 01:31:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2440/dataEnvio'] String "2025-05-01 01:31:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2441/dataEnvio'] String "2025-05-01 01:31:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2442/dataEnvio'] String "2025-05-01 01:31:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2443/dataEnvio'] String "2025-05-01 01:31:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2444/dataEnvio'] String "2025-05-01 01:31:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2445/dataEnvio'] String "2025-05-01 01:28:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2446/dataEnvio'] String "2025-05-01 01:26:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2447/dataEnvio'] String "2025-05-01 01:26:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2448/dataEnvio'] String "2025-05-01 01:25:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2449/dataEnvio'] String "2025-05-01 01:24:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2450/dataEnvio'] String "2025-05-01 01:24:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2451/dataEnvio'] String "2025-05-01 01:22:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2452/dataEnvio'] String "2025-05-01 01:22:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2453/dataEnvio'] String "2025-05-01 01:22:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2454/dataEnvio'] String "2025-05-01 01:22:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2455/dataEnvio'] String "2025-05-01 01:21:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2456/dataEnvio'] String "2025-05-01 01:21:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2457/dataEnvio'] String "2025-05-01 01:21:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2458/dataEnvio'] String "2025-05-01 01:19:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2459/dataEnvio'] String "2025-05-01 01:18:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2460/dataEnvio'] String "2025-05-01 01:18:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2461/dataEnvio'] String "2025-05-01 01:18:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2462/dataEnvio'] String "2025-05-01 01:18:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2463/dataEnvio'] String "2025-05-01 01:18:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2464/dataEnvio'] String "2025-05-01 01:14:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2465/dataEnvio'] String "2025-05-01 01:14:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2466/dataEnvio'] String "2025-05-01 01:14:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2467/dataEnvio'] String "2025-05-01 01:14:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2468/dataEnvio'] String "2025-05-01 01:13:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2469/dataEnvio'] String "2025-05-01 01:13:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2470/dataEnvio'] String "2025-05-01 01:13:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2471/dataEnvio'] String "2025-05-01 01:13:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2472/dataEnvio'] String "2025-05-01 01:13:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2473/dataEnvio'] String "2025-05-01 01:12:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2474/dataEnvio'] String "2025-05-01 01:10:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2475/dataEnvio'] String "2025-05-01 01:09:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2476/dataEnvio'] String "2025-05-01 01:09:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2477/dataEnvio'] String "2025-05-01 01:05:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2478/dataEnvio'] String "2025-05-01 01:04:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2479/dataEnvio'] String "2025-05-01 01:01:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2480/dataEnvio'] String "2025-05-01 00:58:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2481/dataEnvio'] String "2025-05-01 00:58:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2482/dataEnvio'] String "2025-05-01 00:57:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2483/dataEnvio'] String "2025-05-01 00:54:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2484/dataEnvio'] String "2025-05-01 00:53:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2485/dataEnvio'] String "2025-05-01 00:51:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2486/dataEnvio'] String "2025-05-01 00:44:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2487/dataEnvio'] String "2025-05-01 00:43:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2488/dataEnvio'] String "2025-05-01 00:38:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2489/dataEnvio'] String "2025-05-01 00:38:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2490/dataEnvio'] String "2025-05-01 00:35:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2491/dataEnvio'] String "2025-05-01 00:30:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2492/dataEnvio'] String "2025-05-01 00:27:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2493/dataEnvio'] String "2025-05-01 00:20:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2494/dataEnvio'] String "2025-05-01 00:17:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2495/dataEnvio'] String "2025-05-01 00:15:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2496/dataEnvio'] String "2025-05-01 00:12:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2497/dataEnvio'] String "2025-05-01 00:08:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2498/dataEnvio'] String "2025-05-01 00:04:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2499/dataEnvio'] String "2025-05-01 00:03:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2500/dataEnvio'] String "2025-05-01 00:02:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2501/dataEnvio'] String "2025-05-01 00:02:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2502/dataEnvio'] String "2025-05-01 00:01:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2503/dataEnvio'] String "2025-04-30 23:55:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2504/dataEnvio'] String "2025-04-30 23:52:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2505/dataEnvio'] String "2025-04-30 23:51:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2506/dataEnvio'] String "2025-04-30 23:50:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2507/dataEnvio'] String "2025-04-30 23:50:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2508/dataEnvio'] String "2025-04-30 23:47:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2509/dataEnvio'] String "2025-04-30 23:46:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2510/dataEnvio'] String "2025-04-30 23:44:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2511/dataEnvio'] String "2025-04-27 20:38:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2512/dataEnvio'] String "2025-04-27 14:43:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2513/dataEnvio'] String "2025-04-27 14:42:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2514/dataEnvio'] String "2025-04-27 14:41:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2515/dataEnvio'] String "2025-04-27 14:19:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2516/dataEnvio'] String "2025-04-27 14:19:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2517/dataEnvio'] String "2025-04-27 14:18:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2518/dataEnvio'] String "2025-04-27 13:15:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2519/dataEnvio'] String "2025-04-27 13:05:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2520/dataEnvio'] String "2025-04-27 13:05:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2521/dataEnvio'] String "2025-04-27 13:04:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2522/dataEnvio'] String "2025-04-27 13:02:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2523/dataEnvio'] String "2025-04-27 13:01:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2524/dataEnvio'] String "2025-04-27 13:01:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2525/dataEnvio'] String "2025-04-27 13:00:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2526/dataEnvio'] String "2025-04-27 12:58:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_9 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote?per_page=1258382974",
                    headers=headers)
        
        assert res_9.status_code == 200
        assert "application/json" in res_9.headers["content-type"]
        assert res_9.json()["success"] == True
        assert res_9.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_9.json()["data"]) == 2527
        assert res_9.json()["data"][0]["dataEnvio"] == "2025-05-04 00:43:57"
        assert res_9.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_9.json()["data"][1]["dataEnvio"] == "2025-05-04 00:43:52"
        assert res_9.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_9.json()["data"][2]["dataEnvio"] == "2025-05-04 00:43:47"
        assert res_9.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 2524 elements. This limit of 3 elements can be increased in the configurations
        assert res_9.json()["pagination"]["total"] == 2527.0
        assert res_9.json()["pagination"]["count"] == 2527.0
        assert res_9.json()["pagination"]["per_page"] == 1.258382974E9
        assert res_9.json()["pagination"]["current_page"] == 1.0
        assert res_9.json()["pagination"]["total_pages"] == 1.0
        assert res_9.json()["pagination"]["links"]["previous"] is None
        assert res_9.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # (201) POST:/v1/profissionais/lote
    # Found 1 potential fault of type-code 200
    # Using 1 example:
    #   1
    @timeout_decorator.timeout(60)
    def test_49(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"dataNascimento\": \"2006-03-26\", " + \
            " \"genero\": 4, " + \
            " \"email\": \"aaron.avila.vale.sobrinho@fake.com\", " + \
            " \"telefone\": \"11949911257\", " + \
            " \"nomeSocial\": \"YXWGpw\", " + \
            " \"numero\": \"67\", " + \
            " \"inep\": \"33003424\", " + \
            " \"formacoesAcademicas\": [], " + \
            " \"matriculaRede\": \"56789\", " + \
            " \"tipoVinculo\": 1, " + \
            " \"dataIngresso\": \"1966-11-11\", " + \
            " \"dataFim\": \"2079-09-05\", " + \
            " \"cargaHoraria\": 40 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
    
    
    # Calls:
    # (400) GET:/v1/profissionais/lote/{id}/erros
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_50(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id}/erros -> Response status 400 not defined for path '/v1/profissionais/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/7cUuMPonEzmlj/erros?page=68",
                    headers=headers)
        
        assert res_0.status_code == 400
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "O ID fornecido não é um UUID válido. ID: 7cUuMPonEzmlj"
    
    
    # Calls:
    # (400) GET:/v1/estudantes/lote/{id}/erros
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_51(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/lbLU0caEOVH/erros?page=1",
                    headers=headers)
        
        assert res_0.status_code == 400
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "O ID fornecido não é um UUID válido. ID: lbLU0caEOVH"
    
    
    # Calls:
    # (400) GET:/v1/estudantes/lote/{id}
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_52(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Object instance has properties which are not allowed by the schema: ["success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/c3BNsAjpaA92GhkF?page=517",
                    headers=headers)
        
        assert res_0.status_code == 400
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "O ID fornecido não é um UUID válido. ID: c3BNsAjpaA92GhkF"
    
    
    # Calls:
    # (400) GET:/v1/profissionais/lote/{id}
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_53(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id} -> Object instance has properties which are not allowed by the schema: ["success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/Rq_5mKBugc0GHLWw?" + 
                    "page=964&" + 
                    "per_page=370",
                    headers=headers)
        
        assert res_0.status_code == 400
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "O ID fornecido não é um UUID válido. ID: Rq_5mKBugc0GHLWw"
    
    
    # Calls:
    # (401) GET:/v1/profissionais/{cpf}
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_54(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/{cpf} -> Response status 401 not defined for path '/v1/profissionais/{cpf}'.
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/Q0oE",
                    headers=headers)
        
        assert res_0.status_code == 401
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # (401) GET:/v1/estudantes/{cpfNis}
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_55(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/{cpfNis} -> Response status 401 not defined for path '/v1/estudantes/{cpfNis}'.
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/1Ee0VS35LbOPdUb",
                    headers=headers)
        
        assert res_0.status_code == 401
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # (401) POST:/v1/profissionais
    # Found 1 potential fault of type-code 200
    # Using 1 example:
    #   5
    @timeout_decorator.timeout(60)
    def test_56(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais -> Response status 401 not defined for path '/v1/profissionais'.
        headers = {}
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"tipoEnsinoMedio\": 801, " + \
            " \"nivelEscolaridade\": 5, " + \
            " \"dataNascimento\": \"y\", " + \
            " \"racaCor\": 4, " + \
            " \"telefone\": \"\", " + \
            " \"sexo\": \"4\", " + \
            " \"logradouro\": \"8OOJEm3jQ6K\", " + \
            " \"municipio\": -1501065100, " + \
            " \"uf\": 665, " + \
            " \"formacoesAcademicas\": [], " + \
            " \"matriculaRede\": \"e\", " + \
            " \"tipoVinculo\": 521, " + \
            " \"codigoFuncao\": 72, " + \
            " \"dataFim\": \"2076-09-10\" " + \
            " } "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_0.status_code == 401
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # (401) POST:/v1/profissionais/lote
    # Found 1 potential fault of type-code 200
    # Using 1 example:
    #   1
    @timeout_decorator.timeout(60)
    def test_57(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Response status 401 not defined for path '/v1/profissionais/lote'.
        headers = {}
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"tipoEnsinoMedio\": 145, " + \
            " \"cpf\": \"KIEG8X705_\", " + \
            " \"nome\": \"LKRqb40fG\", " + \
            " \"racaCor\": 1, " + \
            " \"telefone\": \"LOjd\", " + \
            " \"nomeSocial\": \"Kwnu\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 359, " + \
            " 488, " + \
            " 576 " + \
            " ], " + \
            " \"logradouro\": \"YvuR\", " + \
            " \"bairro\": \"8H\", " + \
            " \"cep\": \"Pnr\", " + \
            " \"uf\": 614, " + \
            " \"inep\": 232, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 180 " + \
            " }, " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"jzjy7\" " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 1, " + \
            " \"anoConclusaoFormacaoAcademica\": -1988251537 " + \
            " }, " + \
            " { " + \
            " \"anoConclusaoFormacaoAcademica\": 651 " + \
            " }, " + \
            " {} " + \
            " ], " + \
            " \"matriculaRede\": \"\", " + \
            " \"dataIngresso\": \"1966-11-18\", " + \
            " \"cargaHoraria\": 998 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 942, " + \
            " \"nivelEscolaridade\": 183, " + \
            " \"cpf\": \"fXS7YpS\", " + \
            " \"genero\": 2, " + \
            " \"racaCor\": 5, " + \
            " \"telefone\": \"BdNMExRAMf\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 202 " + \
            " ], " + \
            " \"sexo\": \"4\", " + \
            " \"numero\": \"BBq\", " + \
            " \"cep\": \"vw\", " + \
            " \"tipoVinculo\": 1, " + \
            " \"cargaHoraria\": 323 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 1, " + \
            " \"cpf\": \"rbYb2qhjd1X\", " + \
            " \"nome\": \"CsJIkTF0\", " + \
            " \"dataNascimento\": \"V\", " + \
            " \"genero\": 42, " + \
            " \"racaCor\": 0, " + \
            " \"tipoDeficiencia\": [], " + \
            " \"sexo\": \"3\", " + \
            " \"logradouro\": \"LZM5XJUg6TdB_hL\", " + \
            " \"bairro\": \"ojT_\", " + \
            " \"cep\": \"XnSm\", " + \
            " \"municipio\": 883, " + \
            " \"uf\": 290, " + \
            " \"inep\": 201, " + \
            " \"codigoFuncao\": 449 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 762, " + \
            " \"cpf\": \"Yh37gN\", " + \
            " \"genero\": 9, " + \
            " \"racaCor\": 42, " + \
            " \"nomeSocial\": \"uyAN\", " + \
            " \"bairro\": \"\", " + \
            " \"municipio\": 118, " + \
            " \"inep\": \"40DRqWm\", " + \
            " \"formacoesAcademicas\": [], " + \
            " \"tipoVinculo\": 473, " + \
            " \"codigoFuncao\": 738, " + \
            " \"cargaHoraria\": 906 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 585, " + \
            " \"dataNascimento\": \"ek75VhOi\", " + \
            " \"genero\": 4, " + \
            " \"racaCor\": 4, " + \
            " \"telefone\": \"p\", " + \
            " \"nomeSocial\": \"U\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 685, " + \
            " 132, " + \
            " 351, " + \
            " 163, " + \
            " 435 " + \
            " ], " + \
            " \"numero\": \"plTs\", " + \
            " \"cep\": \"Lsc_l\", " + \
            " \"municipio\": 541, " + \
            " \"uf\": 724, " + \
            " \"inep\": 142, " + \
            " \"codigoFuncao\": 641, " + \
            " \"dataFim\": \"1923-07-09\", " + \
            " \"cargaHoraria\": 66 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 401
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # (401) PATCH:/v1/estudantes/lote
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_58(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. PATCH:/v1/estudantes/lote -> Response status 401 not defined for path '/v1/estudantes/lote'.
        headers = {}
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_5_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_6_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_7_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_8_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_9_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 401
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # (401) POST:/v1/estudantes/lote
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_59(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes/lote -> Response status 401 not defined for path '/v1/estudantes/lote'.
        headers = {}
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"numeroNISResponsavel\": \"\", " + \
            " \"nomeMaeEstudante\": \"Ej8\", " + \
            " \"cpf\": \"Y1TmUXM3\", " + \
            " \"nome\": \"95As6MHN7s\", " + \
            " \"genero\": 4, " + \
            " \"racaCor\": 42, " + \
            " \"email\": \"eGWtxMdBFOuYtrP\", " + \
            " \"telefone\": \"6\", " + \
            " \"nomeSocial\": \"qnr\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1886393674 " + \
            " ], " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"rg\": \"6P3F5tf1zWleDSv\", " + \
            " \"logradouro\": \"7khDU\", " + \
            " \"bairro\": \"\", " + \
            " \"numero\": \"UVTIyT\", " + \
            " \"estudantePpl\": 0, " + \
            " \"dataInicioMatricula\": \"1947-04-00\", " + \
            " \"inep\": 528, " + \
            " \"dataInicioPeriodoLetivo\": \"1982-03-06\", " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 926, " + \
            " \"estudanteAnoPeriodo\": 3 " + \
            " }, " + \
            " { " + \
            " \"cpfResponsavel\": \"0xAr\", " + \
            " \"genero\": 3, " + \
            " \"racaCor\": 3, " + \
            " \"nomeSocial\": \"S6QiUD2iy5EX0\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 235, " + \
            " 151 " + \
            " ], " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"numeroNIS\": \"hdjlMHb\", " + \
            " \"logradouro\": \"zXZfR\", " + \
            " \"cep\": \"aJ\", " + \
            " \"municipio\": 635, " + \
            " \"uf\": 854, " + \
            " \"estudantePpl\": 42, " + \
            " \"dataInicioMatricula\": \"2045-13-06\", " + \
            " \"serieAno\": 742, " + \
            " \"matriculaRede\": \"lM2WwWbnSvimCyj\", " + \
            " \"instituicao\": 242, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 734, " + \
            " \"estudanteAnoPeriodo\": 2, " + \
            " \"anoMatricula\": 188 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 401
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # (401) POST:/v1/estudantes
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_60(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 401 not defined for path '/v1/estudantes'.
        headers = {}
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"numeroNISResponsavel\": \"ieyIfjXoKnd\", " + \
            " \"nomeMaeEstudante\": \"v\", " + \
            " \"dataNascimento\": \"3xnfXrdS\", " + \
            " \"email\": \"\", " + \
            " \"telefone\": \"gA\", " + \
            " \"nomeSocial\": \"Ou9Znzv\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 783, " + \
            " 157, " + \
            " 834, " + \
            " 491, " + \
            " 966 " + \
            " ], " + \
            " \"orgaoEmissor\": \"37\", " + \
            " \"certidaoNascimento\": \"JazciA3i89N\", " + \
            " \"cnh\": \"Wx5XdZuu\", " + \
            " \"bairro\": \"ok185shz\", " + \
            " \"numero\": \"R\", " + \
            " \"cep\": \"\", " + \
            " \"municipio\": 976, " + \
            " \"dataInicioMatricula\": \"1953-09-16\", " + \
            " \"serieAno\": 322, " + \
            " \"inep\": 809, " + \
            " \"dataInicioPeriodoLetivo\": \"2051-10-20\", " + \
            " \"formaOrganizacaoTurma\": 21, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 844, " + \
            " \"estudanteAnoPeriodo\": 3 " + \
            " } "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_0.status_code == 401
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # (401) GET:/v1/estudantes/lote/{id}/erros
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_61(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 401 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/z/erros",
                    headers=headers)
        
        assert res_0.status_code == 401
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # (401) GET:/v1/profissionais/lote
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_62(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> Response status 401 not defined for path '/v1/profissionais/lote'.
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers)
        
        assert res_0.status_code == 401
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # (401) GET:/v1/estudantes/lote
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_63(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Response status 401 not defined for path '/v1/estudantes/lote'.
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?per_page=942",
                    headers=headers)
        
        assert res_0.status_code == 401
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # (401) GET:/v1/profissionais
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_64(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> Response status 401 not defined for path '/v1/profissionais'.
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?per_page=726",
                    headers=headers)
        
        assert res_0.status_code == 401
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # (401) GET:/v1/profissionais/lote/{id}/erros
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_65(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id}/erros -> Response status 401 not defined for path '/v1/profissionais/lote/{id}/erros'.
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/ce/erros?" + 
                    "page=691&" + 
                    "per_page=34",
                    headers=headers)
        
        assert res_0.status_code == 401
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # (401) GET:/v1/estudantes/validacao-cadastro
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_66(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> Response status 401 not defined for path '/v1/estudantes/validacao-cadastro'.
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/validacao-cadastro?per_page=-1250755546",
                    headers=headers)
        
        assert res_0.status_code == 401
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # (401) GET:/v1/profissionais/inep/{inep}
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_67(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> Response status 401 not defined for path '/v1/profissionais/inep/{inep}'.
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/inep/_stxwUHE0v?" + 
                    "page=298&" + 
                    "per_page=866",
                    headers=headers)
        
        assert res_0.status_code == 401
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # (401) GET:/v1/estudantes/lote/{id}
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_68(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Response status 401 not defined for path '/v1/estudantes/lote/{id}'.
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/3qqWKQDa4v?page=-1710077219",
                    headers=headers)
        
        assert res_0.status_code == 401
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # (401) GET:/v1/profissionais/lote/{id}
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_69(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id} -> Response status 401 not defined for path '/v1/profissionais/lote/{id}'.
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/1rA?" + 
                    "per_page=874&" + 
                    "incluir_objetos_processados=false",
                    headers=headers)
        
        assert res_0.status_code == 401
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # (401) GET:/v1/estudantes
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_70(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes -> Response status 401 not defined for path '/v1/estudantes'.
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?situacao_final=EVOMASTER",
                    headers=headers)
        
        assert res_0.status_code == 401
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # (401) GET:/v1/estudantes/solicitacoes-alteracoes
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_71(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> Response status 401 not defined for path '/v1/estudantes/solicitacoes-alteracoes'.
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/solicitacoes-alteracoes?" + 
                    "page=87&" + 
                    "per_page=133",
                    headers=headers)
        
        assert res_0.status_code == 401
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # (401) GET:/v1/estudantes/inep/{inep}
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_72(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/inep/{inep} -> Response status 401 not defined for path '/v1/estudantes/inep/{inep}'.
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/3l?" + 
                    "page=833&" + 
                    "ano_matricula=916&" + 
                    "situacao_final=REPROVADAS",
                    headers=headers)
        
        assert res_0.status_code == 401
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # (404) GET:/v1/estudantes/validacao-cadastro
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_73(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> Response status 404 not defined for path '/v1/estudantes/validacao-cadastro'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/validacao-cadastro?" + 
                    "page=855&" + 
                    "cpf=Rks8CnRbfu",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Ocorreu um erro inesperado."
        assert res_0.json()["errors"]["message"] == "Nenhum dado encontrado"


if __name__ == '__main__':
    unittest.main()
