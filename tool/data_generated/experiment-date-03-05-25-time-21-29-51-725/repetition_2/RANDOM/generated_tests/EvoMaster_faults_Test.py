#!/usr/bin/env python

import json
import unittest
import requests
import os
if os.name == 'nt':
    class timeout_decorator:
        @staticmethod
        def timeout(*args, **kwargs):
            return lambda f: f # return a no-op decorator
else:
    import timeout_decorator
from em_test_utils import *


#  This file was automatically generated by EvoMaster on 2025-05-04T03:03:01.247Z[Etc/UTC]
#  
#  The generated test suite contains 74 tests
#  
#  Covered targets: 3513
#  
#  Used time: 0h 50m 17s
#  
#  Needed budget for current results: 100%
#  
#  This file contains test cases that are likely to indicate faults.
class EvoMaster_faults_Test(unittest.TestCase):

    
    baseUrlOfSut = "http://localhost:8000"
    
    
    
    
    
    
    
    
    
    
    # Calls:
    # (500) GET:/v1/estudantes
    # Found 1 potential fault of type-code 100
    @timeout_decorator.timeout(60)
    def test_0_with500(self):
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?" + 
                    "page=370745689&" + 
                    "per_page=878&" + 
                    "situacao_matricula=EVOMASTER&" + 
                    "ano_matricula=2024",
                    headers=headers)
        
        assert res_0.status_code == 500
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Ocorreu um erro."
        assert res_0.json()["errors"]["message"] == "Situação de matricula informada incorreta, possíveis valores: ATIVAS,INATIVAS"
    
    
    # Calls:
    # 1 - (201) POST:/v1/estudantes/lote
    # 2 - (500) GET:/v1/profissionais/lote/{id}
    # Found 1 potential fault of type-code 100
    @timeout_decorator.timeout(60)
    def test_1_with500(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpfResponsavel\": \"57053580598\", " + \
            " \"numeroNISResponsavel\": \"di6dZzKTF4r\", " + \
            " \"cpf\": \"93961372942\", " + \
            " \"genero\": 7, " + \
            " \"racaCor\": 1, " + \
            " \"email\": \"hortencia.delvalle@fake.com\", " + \
            " \"telefone\": \"11901377051\", " + \
            " \"nomeSocial\": \"vYHSe9eaiB\", " + \
            " \"numeroNIS\": \"00811046338\", " + \
            " \"rg\": \"3608535045882489\", " + \
            " \"certidaoNascimento\": \"20564033897919916015747776608734\", " + \
            " \"logradouro\": \"RrvNBRw\", " + \
            " \"numero\": \"1340\", " + \
            " \"cep\": \"AN4\", " + \
            " \"instituicao\": 94468, " + \
            " \"dataInicioPeriodoLetivo\": \"2080-08-22\", " + \
            " \"formaOrganizacaoTurma\": 6, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 10, " + \
            " \"estudanteAnoPeriodo\": 3, " + \
            " \"estudanteIntegral\": 1, " + \
            " \"anoMatricula\": 661 " + \
            " }, " + \
            " { " + \
            " \"numeroNISResponsavel\": \"60285601184\", " + \
            " \"cpf\": \"87826329019\", " + \
            " \"dataNascimento\": \"\", " + \
            " \"genero\": 1, " + \
            " \"email\": \"hortencia.das.dores.cruz@fake.com\", " + \
            " \"nomeSocial\": \"mwjva82pVfW\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1, " + \
            " 2 " + \
            " ], " + \
            " \"cnh\": \"4fbNgBH9Ai\", " + \
            " \"bairro\": \"São Godói\", " + \
            " \"numero\": \"6276\", " + \
            " \"cep\": \"60311322\", " + \
            " \"uf\": 795, " + \
            " \"dataInicioMatricula\": \"1932-10-07\", " + \
            " \"matriculaRede\": \"qyWPbnYsup9Y\", " + \
            " \"inep\": 428, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 5, " + \
            " \"anoMatricula\": 2024 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        # Fault100. HTTP Status 500. GET:/v1/profissionais/lote/{id}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/dc89760e-16df-4d52-a1db-24a7f930817b?" + 
                    "page=832&" + 
                    "per_page=554&" + 
                    "incluir_objetos_processados=true",
                    headers=headers)
        
        assert res_1.status_code == 500
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Não foi possível recuperar o lote. ID fornecido: dc89760e-16df-4d52-a1db-24a7f930817b Nenhum lote correspondente foi encontrado."
    
    
    # Calls:
    # 1 - (500) GET:/v1/profissionais/lote/{id}
    # 2 - (500) GET:/v1/estudantes/lote/{id}
    # 3 - (422) POST:/v1/profissionais
    # Found 3 potential faults. Type-codes: 100, 200
    # Using 1 example:
    #   1
    @timeout_decorator.timeout(60)
    def test_2_with500(self):
        
        # Fault100. HTTP Status 500. GET:/v1/profissionais/lote/{id}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/b3de63db-051d-42e8-a407-f22f03da1042?page=46",
                    headers=headers)
        
        assert res_0.status_code == 500
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não foi possível recuperar o lote. ID fornecido: b3de63db-051d-42e8-a407-f22f03da1042 Nenhum lote correspondente foi encontrado."
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes/lote/{id}
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Object instance has properties which are not allowed by the schema: ["errors"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/cc6f2bbd-6c37-4c4c-8147-c1039f4e0877?per_page=1575816551",
                    headers=headers)
        
        assert res_1.status_code == 500
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Ocorreu um erro."
        assert res_1.json()["errors"]["message"] == "A quantidade máxima de registros por página é de 5000 registros."
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"dataNascimento\": \"1982-12-27\", " + \
            " \"genero\": 8, " + \
            " \"tipoDeficiencia\": [ " + \
            " 10, " + \
            " 10 " + \
            " ], " + \
            " \"logradouro\": \"Rua Largo Bernardo Grego\", " + \
            " \"bairro\": \"São Soares\", " + \
            " \"numero\": \"6620\", " + \
            " \"cep\": \"81548620\", " + \
            " \"municipio\": 3304557, " + \
            " \"uf\": 35, " + \
            " \"inep\": \"42150922\", " + \
            " \"formacoesAcademicas\": [], " + \
            " \"matriculaRede\": \"jvjvjv1\", " + \
            " \"tipoVinculo\": 1, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"2017-09-05\", " + \
            " \"cargaHoraria\": 40 " + \
            " } "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_2.status_code == 422
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #1 ($nome) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
    
    
    # Calls:
    # 1 - (200) GET:/v1/profissionais
    # 2 - (500) POST:/v1/estudantes
    # 3 - (401) POST:/v1/profissionais
    # Found 5 potential faults. Type-codes: 100, 200
    # Using 2 examples:
    #   1
    #   2010
    @timeout_decorator.timeout(60)
    def test_3_with500(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?page=719",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_0.json()["data"]) == 0
        assert res_0.json()["pagination"]["total"] == 3.0
        assert res_0.json()["pagination"]["count"] == 0.0
        assert res_0.json()["pagination"]["per_page"] == 10.0
        assert res_0.json()["pagination"]["current_page"] == 719.0
        assert res_0.json()["pagination"]["total_pages"] == 1.0
        assert res_0.json()["pagination"]["links"]["previous"] == 718.0
        assert res_0.json()["pagination"]["links"]["next"] is None
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"11029006300\", " + \
            " \"nomeMaeEstudante\": \"09GOKK4\", " + \
            " \"dataNascimento\": \"AhEixYigF8fat\", " + \
            " \"racaCor\": 3, " + \
            " \"email\": \"4mphnZDvXrC@example.com\", " + \
            " \"nomeSocial\": \"K4M5REPemK60\", " + \
            " \"tipoDeficiencia\": [], " + \
            " \"sexo\": \"3\", " + \
            " \"numeroNIS\": \"39545854470\", " + \
            " \"rg\": \"06067076005277845537\", " + \
            " \"orgaoEmissor\": \"zBky-RE\", " + \
            " \"certidaoNascimento\": \"84957603355788037283104473091085\", " + \
            " \"cnh\": \"02342004738\", " + \
            " \"bairro\": \"Centro\", " + \
            " \"numero\": \"08\", " + \
            " \"municipio\": 2700409, " + \
            " \"estudantePpl\": 0, " + \
            " \"serieAno\": 19, " + \
            " \"matriculaRede\": \"qkoBN\", " + \
            " \"dataInicioPeriodoLetivo\": \"2038-02-26\", " + \
            " \"formaOrganizacaoTurma\": 5, " + \
            " \"estudanteIntegral\": 42, " + \
            " \"anoMatricula\": 2024 " + \
            " } "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_1.status_code == 500
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Ocorreu um erro."
        assert res_1.json()["errors"]["message"] == "O campo nome é obrigatório. (and 1 more error)"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais -> Response status 401 not defined for path '/v1/profissionais'.
        headers = {}
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"tipoEnsinoMedio\": 1, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"cpf\": \"24205173158\", " + \
            " \"nome\": \"Isabella Corte\", " + \
            " \"genero\": 9, " + \
            " \"telefone\": \"11901377051\", " + \
            " \"logradouro\": \"NtFZIaKwCXif45822KI23C1A0K\", " + \
            " \"bairro\": \"eglJEKR C4MWk\", " + \
            " \"cep\": \"yqr7DYM\", " + \
            " \"inep\": \"29481643\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 1, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 1, " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 1, " + \
            " \"anoInicioFormacaoAcademica\": 2016 " + \
            " }, " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " } " + \
            " ], " + \
            " \"dataIngresso\": \"2012-04-05\", " + \
            " \"dataFim\": \"2086-10-02\", " + \
            " \"cargaHoraria\": 472 " + \
            " } "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_2.status_code == 401
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # 1 - (400) GET:/v1/profissionais/lote/{id}/erros
    # 2 - (200) GET:/v1/estudantes
    # 3 - (500) POST:/v1/estudantes
    # 4 - (400) GET:/v1/profissionais/lote/{id}/erros
    # 5 - (200) GET:/v1/estudantes/{cpfNis}
    # Found 6 potential faults. Type-codes: 100, 200
    @timeout_decorator.timeout(60)
    def test_4_with500(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id}/erros -> Response status 400 not defined for path '/v1/profissionais/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/27/erros?per_page=529",
                    headers=headers)
        
        assert res_0.status_code == 400
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "O ID fornecido não é um UUID válido. ID: 27"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?per_page=529",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_1.json()["data"]) == 529
        assert res_1.json()["data"][0]["cpf"] == "49255179888"
        assert res_1.json()["data"][0]["nome"] == "111"
        assert res_1.json()["data"][0]["nomeSocial"] == "test"
        assert res_1.json()["data"][0]["numeroNIS"] is None
        assert res_1.json()["data"][0]["rg"] == "22307981"
        assert res_1.json()["data"][0]["orgaoEmissor"] == "SSP"
        assert res_1.json()["data"][0]["cpfResponsavel"] == "48405399283"
        assert res_1.json()["data"][0]["nomeMaeEstudante"] == "Valentina Rezende"
        assert res_1.json()["data"][0]["numeroNISResponsavel"] == "64668522654"
        assert res_1.json()["data"][0]["dataNascimento"] == "2024-12-28"
        assert res_1.json()["data"][0]["logradouro"] == "Rua teste"
        assert res_1.json()["data"][0]["bairro"] == "Santa Lucia"
        assert res_1.json()["data"][0]["numero"] == "220"
        assert res_1.json()["data"][0]["cep"] == "57018780"
        assert res_1.json()["data"][0]["municipio"] == 1100940.0
        assert res_1.json()["data"][0]["certidaoNascimento"] == "33333333"
        assert res_1.json()["data"][0]["cnh"] == "3333333"
        assert res_1.json()["data"][0]["uf"] == 11.0
        assert res_1.json()["data"][0]["racaCor"] == 3.0
        assert len(res_1.json()["data"][0]["tipoDeficiencia"]) == 3
        assert res_1.json()["data"][0]["tipoDeficiencia"][0] == 1.0
        assert res_1.json()["data"][0]["tipoDeficiencia"][1] == 2.0
        assert res_1.json()["data"][0]["tipoDeficiencia"][2] == 3.0
        assert res_1.json()["data"][0]["genero"] == 3.0
        assert res_1.json()["data"][0]["telefone"] == "3333333"
        assert res_1.json()["data"][0]["email"] == "AFTER-TWO@AFTER-TWO.com"
        assert res_1.json()["data"][0]["situacaoCadastroValidado"] == 3.0
        assert len(res_1.json()["data"][0]["matriculas"]) == 1
        assert res_1.json()["data"][0]["matriculas"][0]["codigoMatriculaSgp"] == 1733024.0
        assert res_1.json()["data"][0]["matriculas"][0]["codInstituicao"] == 7259.0
        assert res_1.json()["data"][0]["matriculas"][0]["dataInicioMatricula"] == "2024-09-28"
        assert res_1.json()["data"][0]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_1.json()["data"][0]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_1.json()["data"][0]["matriculas"][0]["situacaoMatricula"] == True
        assert res_1.json()["data"][0]["matriculas"][0]["serieAno"] == 74.0
        assert res_1.json()["data"][0]["matriculas"][0]["etapaEnsinoConsolidado"] == "Formação inicial continuada ou qualificação profissional (FIC)"
        assert res_1.json()["data"][0]["matriculas"][0]["matriculaRede"] == "Teste Ricardo"
        assert res_1.json()["data"][0]["matriculas"][0]["deletadaEm"] is None
        assert res_1.json()["data"][0]["matriculas"][0]["inep"] == "12005037"
        assert res_1.json()["data"][0]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_1.json()["data"][0]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_1.json()["data"][0]["matriculas"][0]["dataInicioPeriodoLetivo"] == "2024-09-28"
        assert res_1.json()["data"][0]["matriculas"][0]["formaOrganizacaoTurma"] == 1.0
        assert res_1.json()["data"][0]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] == 0.0
        assert res_1.json()["data"][0]["matriculas"][0]["estudanteAnoPeriodo"] == 1.0
        assert res_1.json()["data"][0]["matriculas"][0]["estudanteIntegral"] == True
        assert res_1.json()["data"][0]["matriculas"][0]["dataAtivacaoMatricula"] == "2024-09-27 00:00:00"
        assert res_1.json()["data"][0]["matriculas"][0]["anoMatricula"] == 2024.0
        assert len(res_1.json()["data"][0]["outrasMatriculas"]) == 0
        assert res_1.json()["data"][1]["cpf"] == "67089268578"
        assert res_1.json()["data"][1]["nome"] == "6cc97vMeCP9KgSI"
        assert res_1.json()["data"][1]["nomeSocial"] == "rRAEEBPUPdYf"
        assert res_1.json()["data"][1]["numeroNIS"] == "30183310316"
        assert res_1.json()["data"][1]["rg"] == "53669048"
        assert res_1.json()["data"][1]["orgaoEmissor"] == "i4tf"
        assert res_1.json()["data"][1]["cpfResponsavel"] == "52008260631"
        assert res_1.json()["data"][1]["nomeMaeEstudante"] == "7aTq92Zi"
        assert res_1.json()["data"][1]["numeroNISResponsavel"] == "11273745692"
        assert res_1.json()["data"][1]["dataNascimento"] == "2008-10-29"
        assert res_1.json()["data"][1]["logradouro"] == "rWjgYPU1P8"
        assert res_1.json()["data"][1]["bairro"] == "G5tQ1ZJN0"
        assert res_1.json()["data"][1]["numero"] == "55"
        assert res_1.json()["data"][1]["cep"] == "19141821"
        assert res_1.json()["data"][1]["municipio"] == 4200705.0
        assert res_1.json()["data"][1]["certidaoNascimento"] == "373271505447"
        assert res_1.json()["data"][1]["cnh"] == "56267273661"
        assert res_1.json()["data"][1]["uf"] == 42.0
        assert res_1.json()["data"][1]["racaCor"] == 0.0
        assert len(res_1.json()["data"][1]["tipoDeficiencia"]) == 3
        assert res_1.json()["data"][1]["tipoDeficiencia"][0] == 1.0
        assert res_1.json()["data"][1]["tipoDeficiencia"][1] == 2.0
        assert res_1.json()["data"][1]["tipoDeficiencia"][2] == 3.0
        assert res_1.json()["data"][1]["genero"] == 4.0
        assert res_1.json()["data"][1]["telefone"] == "11969630845"
        assert res_1.json()["data"][1]["email"] == "RTT0VngF3Deo0O@example.com"
        assert res_1.json()["data"][1]["situacaoCadastroValidado"] == 4.0
        assert len(res_1.json()["data"][1]["matriculas"]) == 1
        assert res_1.json()["data"][1]["matriculas"][0]["codigoMatriculaSgp"] == 1.020298E7
        assert res_1.json()["data"][1]["matriculas"][0]["codInstituicao"] == 81776.0
        assert res_1.json()["data"][1]["matriculas"][0]["dataInicioMatricula"] == "2024-02-19"
        assert res_1.json()["data"][1]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_1.json()["data"][1]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_1.json()["data"][1]["matriculas"][0]["situacaoMatricula"] == True
        assert res_1.json()["data"][1]["matriculas"][0]["serieAno"] == 71.0
        assert res_1.json()["data"][1]["matriculas"][0]["etapaEnsinoConsolidado"] == "EJA - Ensino Médio"
        assert res_1.json()["data"][1]["matriculas"][0]["matriculaRede"] == "jvjvjv1"
        assert res_1.json()["data"][1]["matriculas"][0]["deletadaEm"] is None
        assert res_1.json()["data"][1]["matriculas"][0]["inep"] == "26540720"
        assert res_1.json()["data"][1]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_1.json()["data"][1]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_1.json()["data"][1]["matriculas"][0]["dataInicioPeriodoLetivo"] == "2024-01-29"
        assert res_1.json()["data"][1]["matriculas"][0]["formaOrganizacaoTurma"] == 1.0
        assert res_1.json()["data"][1]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] == 3.0
        assert res_1.json()["data"][1]["matriculas"][0]["estudanteAnoPeriodo"] == 3.0
        assert res_1.json()["data"][1]["matriculas"][0]["estudanteIntegral"] == True
        assert res_1.json()["data"][1]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_1.json()["data"][1]["matriculas"][0]["anoMatricula"] == 2024.0
        assert len(res_1.json()["data"][1]["outrasMatriculas"]) == 0
        assert res_1.json()["data"][2]["cpf"] == "81601036620"
        assert res_1.json()["data"][2]["nome"] == "7nCcq XDiMfCbaJ0cFs"
        assert res_1.json()["data"][2]["nomeSocial"] == "YXWGpw"
        assert res_1.json()["data"][2]["numeroNIS"] == "34442480673"
        assert res_1.json()["data"][2]["rg"] == "21577661"
        assert res_1.json()["data"][2]["orgaoEmissor"] == "vC2a0H9Lv4"
        assert res_1.json()["data"][2]["cpfResponsavel"] == "85307915250"
        assert res_1.json()["data"][2]["nomeMaeEstudante"] == "uoUPQKkc8iCGVq2wAS1"
        assert res_1.json()["data"][2]["numeroNISResponsavel"] == "27296692788"
        assert res_1.json()["data"][2]["dataNascimento"] == "1998-08-08"
        assert res_1.json()["data"][2]["logradouro"] == "01PKhhqGroyvggLAFUEoOHr3Q0KI"
        assert res_1.json()["data"][2]["bairro"] == "nL4bOxhpEiU2PjnP"
        assert res_1.json()["data"][2]["numero"] == "02"
        assert res_1.json()["data"][2]["cep"] == "76984525"
        assert res_1.json()["data"][2]["municipio"] == 4200705.0
        assert res_1.json()["data"][2]["certidaoNascimento"] == "3679215604607"
        assert res_1.json()["data"][2]["cnh"] == "02342004738"
        assert res_1.json()["data"][2]["uf"] == 42.0
        assert res_1.json()["data"][2]["racaCor"] == 2.0
        assert len(res_1.json()["data"][2]["tipoDeficiencia"]) == 3
        assert res_1.json()["data"][2]["tipoDeficiencia"][0] == 1.0
        assert res_1.json()["data"][2]["tipoDeficiencia"][1] == 2.0
        assert res_1.json()["data"][2]["tipoDeficiencia"][2] == 3.0
        assert res_1.json()["data"][2]["genero"] == 3.0
        assert res_1.json()["data"][2]["telefone"] == "11949911257"
        assert res_1.json()["data"][2]["email"] == "4mphnZDvXrC@example.com"
        assert res_1.json()["data"][2]["situacaoCadastroValidado"] == 4.0
        assert len(res_1.json()["data"][2]["matriculas"]) == 1
        assert res_1.json()["data"][2]["matriculas"][0]["codigoMatriculaSgp"] == 1.0202989E7
        assert res_1.json()["data"][2]["matriculas"][0]["codInstituicao"] == 81776.0
        assert res_1.json()["data"][2]["matriculas"][0]["dataInicioMatricula"] == "2024-11-01"
        assert res_1.json()["data"][2]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_1.json()["data"][2]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_1.json()["data"][2]["matriculas"][0]["situacaoMatricula"] == True
        assert res_1.json()["data"][2]["matriculas"][0]["serieAno"] == 58.0
        assert res_1.json()["data"][2]["matriculas"][0]["etapaEnsinoConsolidado"] == "Educação de Jovens e Adultos (EJA) - Fundamental"
        assert res_1.json()["data"][2]["matriculas"][0]["matriculaRede"] == "e2XouiaD2aNA 8"
        assert res_1.json()["data"][2]["matriculas"][0]["deletadaEm"] is None
        assert res_1.json()["data"][2]["matriculas"][0]["inep"] == "26540720"
        assert res_1.json()["data"][2]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_1.json()["data"][2]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_1.json()["data"][2]["matriculas"][0]["dataInicioPeriodoLetivo"] == "2024-10-22"
        assert res_1.json()["data"][2]["matriculas"][0]["formaOrganizacaoTurma"] == 6.0
        assert res_1.json()["data"][2]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] == 4.0
        assert res_1.json()["data"][2]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_1.json()["data"][2]["matriculas"][0]["estudanteIntegral"] == False
        assert res_1.json()["data"][2]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_1.json()["data"][2]["matriculas"][0]["anoMatricula"] is None
        assert len(res_1.json()["data"][2]["outrasMatriculas"]) == 0
        # Skipping assertions on the remaining 526 elements. This limit of 3 elements can be increased in the configurations
        assert res_1.json()["pagination"]["total"] == 598780.0
        assert res_1.json()["pagination"]["count"] == 529.0
        assert res_1.json()["pagination"]["per_page"] == 529.0
        assert res_1.json()["pagination"]["current_page"] == 1.0
        assert res_1.json()["pagination"]["total_pages"] == 1132.0
        assert res_1.json()["pagination"]["links"]["previous"] is None
        assert res_1.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"nomeMaeEstudante\": \"Guilherme da Nóbrega\", " + \
            " \"nome\": \"PeUoA7gq\", " + \
            " \"dataNascimento\": \"2010-08-22\", " + \
            " \"racaCor\": 5, " + \
            " \"nomeSocial\": \"oZymDIPtU\", " + \
            " \"numeroNIS\": \"s6LKO\", " + \
            " \"bairro\": \"São Serrano\", " + \
            " \"numero\": \"698\", " + \
            " \"estudantePpl\": 1, " + \
            " \"instituicao\": 390, " + \
            " \"inep\": 55, " + \
            " \"dataInicioPeriodoLetivo\": \"1935-03-30\", " + \
            " \"formaOrganizacaoTurma\": 1, " + \
            " \"estudanteAnoPeriodo\": 2, " + \
            " \"anoMatricula\": 2024 " + \
            " } "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_2.status_code == 500
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Ocorreu um erro."
        assert res_2.json()["errors"]["message"] == "O campo numeroNIS deve ser numérico. (and 1 more error)"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id}/erros -> Response status 400 not defined for path '/v1/profissionais/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/70Cdhq61MBUbxHM/erros?per_page=-1163286881",
                    headers=headers)
        
        assert res_3.status_code == 400
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "O ID fornecido não é um UUID válido. ID: 70Cdhq61MBUbxHM"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/{cpfNis} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/72102385655",
                    headers=headers)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Dados obtidos com sucesso."
        assert res_4.json()["data"]["cpf"] == "72102385655"
        assert res_4.json()["data"]["nome"] == "Dra. Mércia Louzada"
        assert res_4.json()["data"]["nomeSocial"] is None
        assert res_4.json()["data"]["numeroNIS"] == "75291500474"
        assert res_4.json()["data"]["rg"] == "44851774180578712730"
        assert res_4.json()["data"]["orgaoEmissor"] == "fZCN-kj"
        assert res_4.json()["data"]["cpfResponsavel"] == "47415193402"
        assert res_4.json()["data"]["nomeMaeEstudante"] == "Maria Vitória Brites"
        assert res_4.json()["data"]["numeroNISResponsavel"] == "98561584700"
        assert res_4.json()["data"]["dataNascimento"] == "2004-09-29"
        assert res_4.json()["data"]["logradouro"] == "Avenida Joana"
        assert res_4.json()["data"]["bairro"] == "Bairro distinctio"
        assert res_4.json()["data"]["numero"] == "421"
        assert res_4.json()["data"]["cep"] == "60512051"
        assert res_4.json()["data"]["municipio"] == 3535309.0
        assert res_4.json()["data"]["certidaoNascimento"] == "48271525876140456298038777285234"
        assert res_4.json()["data"]["cnh"] == "68360684421"
        assert res_4.json()["data"]["uf"] == 41.0
        assert res_4.json()["data"]["racaCor"] == 2.0
        assert len(res_4.json()["data"]["tipoDeficiencia"]) == 3
        assert res_4.json()["data"]["tipoDeficiencia"][0] == 5.0
        assert res_4.json()["data"]["tipoDeficiencia"][1] == 9.0
        assert res_4.json()["data"]["tipoDeficiencia"][2] == 10.0
        assert res_4.json()["data"]["genero"] == 2.0
        assert res_4.json()["data"]["telefone"] is None
        assert res_4.json()["data"]["email"] is None
        assert res_4.json()["data"]["situacaoCadastroValidado"] == 4.0
        assert len(res_4.json()["data"]["matriculas"]) == 1
        assert res_4.json()["data"]["matriculas"][0]["codigoMatriculaSgp"] == 1226221.0
        assert res_4.json()["data"]["matriculas"][0]["codInstituicao"] == 223381.0
        assert res_4.json()["data"]["matriculas"][0]["dataInicioMatricula"] == "1989-11-10"
        assert res_4.json()["data"]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_4.json()["data"]["matriculas"][0]["dataFimOuAprovacao"] == "2002-10-10"
        assert res_4.json()["data"]["matriculas"][0]["situacaoMatricula"] == False
        assert res_4.json()["data"]["matriculas"][0]["serieAno"] == 7.0
        assert res_4.json()["data"]["matriculas"][0]["etapaEnsinoConsolidado"] == "Ensino Fundamental de 8 anos"
        assert res_4.json()["data"]["matriculas"][0]["matriculaRede"] is None
        assert res_4.json()["data"]["matriculas"][0]["deletadaEm"] == "2024-05-02 20:57:58"
        assert res_4.json()["data"]["matriculas"][0]["inep"] == "27610099"
        assert res_4.json()["data"]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_4.json()["data"]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_4.json()["data"]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_4.json()["data"]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_4.json()["data"]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_4.json()["data"]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_4.json()["data"]["matriculas"][0]["estudanteIntegral"] is None
        assert res_4.json()["data"]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_4.json()["data"]["matriculas"][0]["anoMatricula"] is None
        assert len(res_4.json()["data"]["outrasMatriculas"]) == 0
    
    
    # Calls:
    # 1 - (500) POST:/v1/estudantes
    # 2 - (200) GET:/v1/profissionais
    # 3 - (404) GET:/v1/estudantes/solicitacoes-alteracoes
    # 4 - (200) PATCH:/v1/estudantes/lote
    # 5 - (404) GET:/v1/profissionais/{cpf}
    # Found 8 potential faults. Type-codes: 100, 200
    @timeout_decorator.timeout(60)
    def test_5_with500(self):
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"numeroNISResponsavel\": \"72yZglYHf\", " + \
            " \"nome\": \"João da Silva 2\", " + \
            " \"racaCor\": 4, " + \
            " \"email\": \"aaron.mauricio.serra.sobrinho@fake.com\", " + \
            " \"telefone\": \"11951045305\", " + \
            " \"nomeSocial\": \"K4M5REPemK60\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 529, " + \
            " 838, " + \
            " 1, " + \
            " 2, " + \
            " 9 " + \
            " ], " + \
            " \"rg\": \"9202045063350567\", " + \
            " \"orgaoEmissor\": \"8OkQV\", " + \
            " \"cnh\": \"68360684421\", " + \
            " \"logradouro\": \"Rua Avenida Maraisa Vieira\", " + \
            " \"cep\": \"twQAR60O\", " + \
            " \"uf\": 24, " + \
            " \"dataInicioMatricula\": \"1917-01-30\", " + \
            " \"serieAno\": 21, " + \
            " \"matriculaRede\": \"jvjvjv1\", " + \
            " \"inep\": 29477735, " + \
            " \"dataInicioPeriodoLetivo\": \"1916-03-16\", " + \
            " \"formaOrganizacaoTurma\": 2, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 10, " + \
            " \"estudanteAnoPeriodo\": 3 " + \
            " } "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_0.status_code == 500
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Ocorreu um erro."
        assert res_0.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório. (and 2 more errors)"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?per_page=96",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_1.json()["data"]) == 3
        assert res_1.json()["data"][0]["tipoEnsinoMedio"] == 2.0
        assert res_1.json()["data"][0]["nivelEscolaridade"] == 10.0
        assert res_1.json()["data"][0]["cpf"] == "43839402000"
        assert res_1.json()["data"][0]["nome"] == "João da Silva 2"
        assert res_1.json()["data"][0]["dataNascimento"] == "1985-06-15"
        assert res_1.json()["data"][0]["genero"] == 1.0
        assert res_1.json()["data"][0]["racaCor"] == 2.0
        assert res_1.json()["data"][0]["email"] == "joao.silva@email.com"
        assert res_1.json()["data"][0]["telefone"] is None
        assert res_1.json()["data"][0]["nomeSocial"] is None
        assert res_1.json()["data"][0]["logradouro"] == "Rua das Flores"
        assert res_1.json()["data"][0]["bairro"] == "Centro"
        assert res_1.json()["data"][0]["numero"] == "123"
        assert res_1.json()["data"][0]["cep"] == "01001000"
        assert res_1.json()["data"][0]["municipio"] == 2700409.0
        assert res_1.json()["data"][0]["uf"] == 27.0
        assert res_1.json()["data"][0]["codigoInstituicao"] == 6.0
        assert res_1.json()["data"][0]["cargaHoraria"] == 40.0
        assert res_1.json()["data"][0]["situacaoAtiva"] == True
        assert res_1.json()["data"][0]["dataIngresso"] == "2015-02-10"
        assert res_1.json()["data"][0]["dataFim"] is None
        assert res_1.json()["data"][0]["codigoFuncao"] == 2.0
        assert res_1.json()["data"][0]["matriculaRede"] == "56789"
        assert res_1.json()["data"][0]["tipoVinculo"] == 0.0
        assert res_1.json()["data"][0]["inep"] == "27014088"
        assert len(res_1.json()["data"][0]["tipoDeficiencia"]) == 3
        assert res_1.json()["data"][0]["tipoDeficiencia"][0] == 1.0
        assert res_1.json()["data"][0]["tipoDeficiencia"][1] == 2.0
        assert res_1.json()["data"][0]["tipoDeficiencia"][2] == 3.0
        assert len(res_1.json()["data"][0]["formacoesAcademicas"]) == 2
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["principal"] is None
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["principal"] is None
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][1]["tipoEnsinoMedio"] == 2.0
        assert res_1.json()["data"][1]["nivelEscolaridade"] == 10.0
        assert res_1.json()["data"][1]["cpf"] == "33722248094"
        assert res_1.json()["data"][1]["nome"] == "João da Silva 2"
        assert res_1.json()["data"][1]["dataNascimento"] == "1985-06-15"
        assert res_1.json()["data"][1]["genero"] == 1.0
        assert res_1.json()["data"][1]["racaCor"] == 2.0
        assert res_1.json()["data"][1]["email"] == "joao.silva@email.com"
        assert res_1.json()["data"][1]["telefone"] is None
        assert res_1.json()["data"][1]["nomeSocial"] is None
        assert res_1.json()["data"][1]["logradouro"] == "Rua das Flores"
        assert res_1.json()["data"][1]["bairro"] == "Centro"
        assert res_1.json()["data"][1]["numero"] == "123"
        assert res_1.json()["data"][1]["cep"] == "01001000"
        assert res_1.json()["data"][1]["municipio"] == 2700409.0
        assert res_1.json()["data"][1]["uf"] == 27.0
        assert res_1.json()["data"][1]["codigoInstituicao"] == 6.0
        assert res_1.json()["data"][1]["cargaHoraria"] == 40.0
        assert res_1.json()["data"][1]["situacaoAtiva"] == True
        assert res_1.json()["data"][1]["dataIngresso"] == "2015-02-10"
        assert res_1.json()["data"][1]["dataFim"] is None
        assert res_1.json()["data"][1]["codigoFuncao"] == 2.0
        assert res_1.json()["data"][1]["matriculaRede"] == "56789"
        assert res_1.json()["data"][1]["tipoVinculo"] == 0.0
        assert res_1.json()["data"][1]["inep"] == "27014088"
        assert len(res_1.json()["data"][1]["tipoDeficiencia"]) == 3
        assert res_1.json()["data"][1]["tipoDeficiencia"][0] == 1.0
        assert res_1.json()["data"][1]["tipoDeficiencia"][1] == 2.0
        assert res_1.json()["data"][1]["tipoDeficiencia"][2] == 3.0
        assert len(res_1.json()["data"][1]["formacoesAcademicas"]) == 2
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["principal"] is None
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["principal"] is None
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][2]["tipoEnsinoMedio"] == 2.0
        assert res_1.json()["data"][2]["nivelEscolaridade"] == 10.0
        assert res_1.json()["data"][2]["cpf"] == "31863200037"
        assert res_1.json()["data"][2]["nome"] == "João da Silva 2"
        assert res_1.json()["data"][2]["dataNascimento"] == "1985-06-15"
        assert res_1.json()["data"][2]["genero"] == 1.0
        assert res_1.json()["data"][2]["racaCor"] == 2.0
        assert res_1.json()["data"][2]["email"] == "joao.silva@email.com"
        assert res_1.json()["data"][2]["telefone"] is None
        assert res_1.json()["data"][2]["nomeSocial"] is None
        assert res_1.json()["data"][2]["logradouro"] == "Rua das Flores"
        assert res_1.json()["data"][2]["bairro"] == "Centro"
        assert res_1.json()["data"][2]["numero"] == "123"
        assert res_1.json()["data"][2]["cep"] == "01001000"
        assert res_1.json()["data"][2]["municipio"] == 2700409.0
        assert res_1.json()["data"][2]["uf"] == 27.0
        assert res_1.json()["data"][2]["codigoInstituicao"] == 6.0
        assert res_1.json()["data"][2]["cargaHoraria"] == 40.0
        assert res_1.json()["data"][2]["situacaoAtiva"] == True
        assert res_1.json()["data"][2]["dataIngresso"] == "2015-02-10"
        assert res_1.json()["data"][2]["dataFim"] is None
        assert res_1.json()["data"][2]["codigoFuncao"] == 2.0
        assert res_1.json()["data"][2]["matriculaRede"] == "56789"
        assert res_1.json()["data"][2]["tipoVinculo"] == 0.0
        assert res_1.json()["data"][2]["inep"] == "27014088"
        assert len(res_1.json()["data"][2]["tipoDeficiencia"]) == 3
        assert res_1.json()["data"][2]["tipoDeficiencia"][0] == 1.0
        assert res_1.json()["data"][2]["tipoDeficiencia"][1] == 2.0
        assert res_1.json()["data"][2]["tipoDeficiencia"][2] == 3.0
        assert len(res_1.json()["data"][2]["formacoesAcademicas"]) == 2
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["principal"] is None
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["principal"] is None
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_1.json()["pagination"]["total"] == 3.0
        assert res_1.json()["pagination"]["count"] == 3.0
        assert res_1.json()["pagination"]["per_page"] == 96.0
        assert res_1.json()["pagination"]["current_page"] == 1.0
        assert res_1.json()["pagination"]["total_pages"] == 1.0
        assert res_1.json()["pagination"]["links"]["previous"] is None
        assert res_1.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> Response status 404 not defined for path '/v1/estudantes/solicitacoes-alteracoes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/solicitacoes-alteracoes?" + 
                    "page=513&" + 
                    "per_page=703&" + 
                    "cpfAtual=05865882058&" + 
                    "cpfNovo=30311393721",
                    headers=headers)
        
        assert res_2.status_code == 404
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Ocorreu um erro inesperado."
        assert res_2.json()["errors"]["message"] == "Nenhum dado encontrado"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_86_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_87_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_88_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_89_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_3 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_3.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/44658295822",
                    headers=headers)
        
        assert res_4.status_code == 404
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "Nenhum profissional de educação encontrado."
    
    
    # Calls:
    # 1 - (404) GET:/v1/estudantes/{cpfNis}
    # 2 - (500) GET:/v1/estudantes
    # 3 - (200) GET:/v1/estudantes/validacao-cadastro
    # 4 - (401) POST:/v1/profissionais
    # 5 - (401) GET:/v1/estudantes/solicitacoes-alteracoes
    # Found 7 potential faults. Type-codes: 100, 200
    @timeout_decorator.timeout(60)
    def test_6_with500(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/aqPv16zYnxQ3MmE",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Nenhum estudante encontrado."
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?" + 
                    "per_page=235&" + 
                    "situacao_matricula=ATIVAS&" + 
                    "situacao_final=REPROVADAS",
                    headers=headers)
        
        assert res_1.status_code == 500
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Ocorreu um erro inesperado."
        assert res_1.json()["errors"]["message"] == "O campo ano_matricula é obrigatório quando o campo situacao_final é informado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/validacao-cadastro?cpf=77575062650",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Operação realizada com sucesso"
        assert len(res_2.json()["data"]) == 1
        assert res_2.json()["data"][0]["cpf"] == "77575062650"
        assert res_2.json()["data"][0]["numeroNIS"] is None
        assert res_2.json()["data"][0]["situacaoCadastral"] == "Inexistente"
        assert res_2.json()["data"][0]["situacaoCpf"] == "CPF não encontrado na base do BCPF"
        assert res_2.json()["data"][0]["nome"] == "Maria Flor Caseira"
        assert res_2.json()["data"][0]["nomeValidado"] == False
        assert res_2.json()["data"][0]["dataNascimento"] == "1981-05-16"
        assert res_2.json()["data"][0]["dataNascimentoValidada"] == False
        assert res_2.json()["data"][0]["nomeMaeEstudante"] == "Sophie Cachoeira Filho"
        assert res_2.json()["data"][0]["nomeMaeEstudanteValidado"] == False
        assert res_2.json()["data"][0]["dataValidacaoCadastral"] == "2025-05-01 16:19:13"
        assert res_2.json()["pagination"]["total"] == 1.0
        assert res_2.json()["pagination"]["count"] == 1.0
        assert res_2.json()["pagination"]["per_page"] == 15.0
        assert res_2.json()["pagination"]["current_page"] == 1.0
        assert res_2.json()["pagination"]["total_pages"] == 1.0
        assert res_2.json()["pagination"]["links"]["previous"] is None
        assert res_2.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais -> Response status 401 not defined for path '/v1/profissionais'.
        headers = {}
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpf\": \"13121905588\", " + \
            " \"nome\": \"José de Lara\", " + \
            " \"dataNascimento\": \"1977-04-22\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 3, " + \
            " 10, " + \
            " 3 " + \
            " ], " + \
            " \"sexo\": \"1\", " + \
            " \"municipio\": 35, " + \
            " \"inep\": 26540720, " + \
            " \"matriculaRede\": \"3ArBS\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"dataIngresso\": \"2014-04-09\", " + \
            " \"dataFim\": \"1944-02-03\", " + \
            " \"cargaHoraria\": 40 " + \
            " } "
        headers['Accept'] = "application/json"
        res_3 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_3.status_code == 401
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "Não autorizado"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> Response status 401 not defined for path '/v1/estudantes/solicitacoes-alteracoes'.
        headers = {}
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/solicitacoes-alteracoes?" + 
                    "page=833&" + 
                    "per_page=10&" + 
                    "cpfAtual=18390714604",
                    headers=headers)
        
        assert res_4.status_code == 401
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # 1 - (500) GET:/v1/profissionais/lote/{id}
    # 2 - (201) POST:/v1/estudantes/lote
    # 3 - (201) POST:/v1/estudantes/lote
    # 4 - (500) POST:/v1/estudantes
    # 5 - (401) GET:/v1/estudantes
    # 6 - (400) GET:/v1/estudantes/lote/{id}/erros
    # 7 - (500) GET:/v1/profissionais/lote/{id}
    # Found 6 potential faults. Type-codes: 100, 200
    # Using 2 examples:
    #   2025
    #   25
    @timeout_decorator.timeout(60)
    def test_7_with500(self):
        
        # Fault100. HTTP Status 500. GET:/v1/profissionais/lote/{id}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/4e4cbb8f-9ac2-4d40-97d3-323961f02b69?per_page=260",
                    headers=headers)
        
        assert res_0.status_code == 500
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não foi possível recuperar o lote. ID fornecido: 4e4cbb8f-9ac2-4d40-97d3-323961f02b69 Nenhum lote correspondente foi encontrado."
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"numeroNISResponsavel\": \"53414063393\", " + \
            " \"cpf\": \"23351355467\", " + \
            " \"nome\": \"Sra. Célia da Fronteira\", " + \
            " \"dataNascimento\": \"2007-09-21\", " + \
            " \"genero\": 2, " + \
            " \"racaCor\": 0, " + \
            " \"email\": \"hortencia.mares.jr@fake.com\", " + \
            " \"telefone\": \"ZCpbkx\", " + \
            " \"nomeSocial\": \"_FsK7ywmc0Zm_Yy\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 2, " + \
            " 9 " + \
            " ], " + \
            " \"orgaoEmissor\": \"AzYF-XM\", " + \
            " \"certidaoNascimento\": \"BVl9A8h_w9pFt7f2\", " + \
            " \"bairro\": \"0Rn\", " + \
            " \"uf\": 29, " + \
            " \"estudantePpl\": 0, " + \
            " \"dataInicioMatricula\": \"2021-03-12\", " + \
            " \"instituicao\": -76006010, " + \
            " \"inep\": 12031810, " + \
            " \"formaOrganizacaoTurma\": 2 " + \
            " }, " + \
            " { " + \
            " \"cpf\": \"95293835840\", " + \
            " \"nome\": \"fTlnoPcExB\", " + \
            " \"dataNascimento\": \"2005-01-21\", " + \
            " \"email\": \"hortencia.galindo@fake.com\", " + \
            " \"nomeSocial\": \"XuUL6mD7TjXqUC\", " + \
            " \"sexo\": \"4\", " + \
            " \"rg\": \"ja_2u4OBBQPOg4ok\", " + \
            " \"certidaoNascimento\": \"48343787402666878345927521783412\", " + \
            " \"logradouro\": \"Rua Rua Teobaldo Mendes\", " + \
            " \"bairro\": \"Gutierrez\", " + \
            " \"cep\": \"1vyEBp7K\", " + \
            " \"municipio\": 1714302, " + \
            " \"uf\": 480, " + \
            " \"estudantePpl\": 1, " + \
            " \"inep\": 29442079, " + \
            " \"dataInicioPeriodoLetivo\": \"1921-04-00\", " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 10, " + \
            " \"estudanteAnoPeriodo\": 1, " + \
            " \"estudanteIntegral\": 0 " + \
            " }, " + \
            " { " + \
            " \"numeroNISResponsavel\": \"9gIDNFi\", " + \
            " \"nome\": \"Henrique Neves\", " + \
            " \"dataNascimento\": \"2010-12-28\", " + \
            " \"genero\": 0, " + \
            " \"racaCor\": 2, " + \
            " \"email\": \"hortencia.padilha.cervantes@fake.com\", " + \
            " \"nomeSocial\": \"pCifpRBMCpY\", " + \
            " \"certidaoNascimento\": \"41032728652690038469853799325232\", " + \
            " \"logradouro\": \"Rua Av. Poliana Faria\", " + \
            " \"uf\": 43, " + \
            " \"estudantePpl\": 1, " + \
            " \"serieAno\": 10, " + \
            " \"instituicao\": 382, " + \
            " \"inep\": 35002781, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 0, " + \
            " \"anoMatricula\": 2024 " + \
            " }, " + \
            " { " + \
            " \"cpfResponsavel\": \"iWpunlai\", " + \
            " \"numeroNISResponsavel\": \"36684756197\", " + \
            " \"email\": \"hortencia.marinho.neto@fake.com\", " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"numeroNIS\": \"96786204944\", " + \
            " \"rg\": \"1190260057074409\", " + \
            " \"orgaoEmissor\": \"Ma\", " + \
            " \"certidaoNascimento\": \"36585845600452363120085614373044\", " + \
            " \"uf\": 27, " + \
            " \"serieAno\": 71, " + \
            " \"dataInicioPeriodoLetivo\": \"2068-01-30\", " + \
            " \"estudanteAnoPeriodo\": 2, " + \
            " \"estudanteIntegral\": 42 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_1.status_code == 201
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Operação realizada com sucesso"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"nomeMaeEstudante\": \"covZ\", " + \
            " \"cpf\": \"81773739352\", " + \
            " \"genero\": 42, " + \
            " \"email\": \"3R92V4o6reqgHTQ\", " + \
            " \"telefone\": \"11949911257\", " + \
            " \"sexo\": \"3\", " + \
            " \"numeroNIS\": \"W8o\", " + \
            " \"rg\": \"5661077260076339\", " + \
            " \"orgaoEmissor\": \"gXYZ7SQ\", " + \
            " \"cnh\": \"10142015477\", " + \
            " \"numero\": \"6276\", " + \
            " \"cep\": \"v5s\", " + \
            " \"estudantePpl\": 0, " + \
            " \"matriculaRede\": \"Tov97vp_jG\", " + \
            " \"instituicao\": 6, " + \
            " \"dataInicioPeriodoLetivo\": \"1938-03-26\", " + \
            " \"formaOrganizacaoTurma\": 6, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 10, " + \
            " \"estudanteAnoPeriodo\": 3, " + \
            " \"estudanteIntegral\": 42, " + \
            " \"anoMatricula\": 315 " + \
            " }, " + \
            " { " + \
            " \"cpfResponsavel\": \"85319335792\", " + \
            " \"nomeMaeEstudante\": \"Valentina Carneiro\", " + \
            " \"cpf\": \"73034517300\", " + \
            " \"nome\": \"Roberta Costa Neto\", " + \
            " \"racaCor\": 2, " + \
            " \"email\": \"BrDkSEztHFTuCw\", " + \
            " \"telefone\": \"11949911257\", " + \
            " \"certidaoNascimento\": \"g4JfDEyBZZZqa9\", " + \
            " \"cnh\": \"07206622586\", " + \
            " \"logradouro\": \"Rua Rua Rafael\", " + \
            " \"numero\": \"eksj1\", " + \
            " \"cep\": \"35513647\", " + \
            " \"municipio\": 4200705, " + \
            " \"uf\": 32, " + \
            " \"estudantePpl\": 2, " + \
            " \"serieAno\": 58, " + \
            " \"formaOrganizacaoTurma\": 2, " + \
            " \"estudanteAnoPeriodo\": 3 " + \
            " }, " + \
            " { " + \
            " \"cpfResponsavel\": \"M3JQt\", " + \
            " \"nomeMaeEstudante\": \"Sra. Eunice Paz\", " + \
            " \"cpf\": \"gn\", " + \
            " \"nome\": \"Afonso Sandoval Neto\", " + \
            " \"dataNascimento\": \"1984-04-02\", " + \
            " \"genero\": 6, " + \
            " \"racaCor\": 5, " + \
            " \"tipoDeficiencia\": [ " + \
            " 3 " + \
            " ], " + \
            " \"sexo\": \"3\", " + \
            " \"numeroNIS\": \"31226147711\", " + \
            " \"rg\": \"8546641684534576\", " + \
            " \"orgaoEmissor\": \"SEDS\", " + \
            " \"cnh\": \"01354673004\", " + \
            " \"bairro\": \"São Batista\", " + \
            " \"numero\": \"8750\", " + \
            " \"cep\": \"57447841\", " + \
            " \"municipio\": 2700409, " + \
            " \"uf\": 11, " + \
            " \"estudantePpl\": 2, " + \
            " \"dataInicioMatricula\": \"1921-08-07\", " + \
            " \"serieAno\": 26, " + \
            " \"matriculaRede\": \"7\", " + \
            " \"instituicao\": 94194, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 0, " + \
            " \"estudanteIntegral\": 1 " + \
            " }, " + \
            " { " + \
            " \"numeroNISResponsavel\": \"13792495162\", " + \
            " \"nomeMaeEstudante\": \"Carolina Quintana Feliciano\", " + \
            " \"email\": \"hortencia.ferminiano.cortes.jr@fake.com\", " + \
            " \"telefone\": \"11949911257\", " + \
            " \"nomeSocial\": \"8hbo50Mnoym\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 3, " + \
            " 5, " + \
            " 1, " + \
            " 5 " + \
            " ], " + \
            " \"numeroNIS\": \"72381432487\", " + \
            " \"rg\": \"2fxscDV5DNRdbcD\", " + \
            " \"orgaoEmissor\": \"8OkQV\", " + \
            " \"bairro\": \"São Ramires\", " + \
            " \"cep\": \"20257054\", " + \
            " \"municipio\": 1302603, " + \
            " \"matriculaRede\": \"G8BMn2\", " + \
            " \"inep\": 29191149, " + \
            " \"formaOrganizacaoTurma\": 2, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 5, " + \
            " \"estudanteAnoPeriodo\": 2, " + \
            " \"anoMatricula\": 2025 " + \
            " }, " + \
            " { " + \
            " \"nomeMaeEstudante\": \"Srta. Mary da Cruz Gomes Neto\", " + \
            " \"cpf\": \"78813597223\", " + \
            " \"nome\": \"uHhwj7t\", " + \
            " \"dataNascimento\": \"6M2Nwx9ksGq\", " + \
            " \"email\": \"yNMnZSmgsdyiJy\", " + \
            " \"telefone\": \"11903903990\", " + \
            " \"nomeSocial\": \"XtaUkIq\", " + \
            " \"tipoDeficiencia\": [], " + \
            " \"numeroNIS\": \"68280184840\", " + \
            " \"rg\": \"1450186204560947\", " + \
            " \"cnh\": \"01354673004\", " + \
            " \"bairro\": \"São de Aguiar\", " + \
            " \"estudantePpl\": 2, " + \
            " \"serieAno\": 25, " + \
            " \"instituicao\": 149264, " + \
            " \"inep\": 32014724, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 5 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_2.status_code == 201
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Operação realizada com sucesso"
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"nomeMaeEstudante\": \"Ana Sophia Roseira\", " + \
            " \"nome\": \"Henry Alves\", " + \
            " \"racaCor\": 5, " + \
            " \"email\": \"hortencia.lovato.bittencourt@fake.com\", " + \
            " \"telefone\": \"11951045305\", " + \
            " \"nomeSocial\": \"oZymDIPtU\", " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"rg\": \"0871780121732788\", " + \
            " \"certidaoNascimento\": \"84607075612733369971673554353469\", " + \
            " \"cnh\": \"03251028466\", " + \
            " \"numero\": \"220\", " + \
            " \"municipio\": 2611606, " + \
            " \"estudantePpl\": 0, " + \
            " \"matriculaRede\": \"56789\", " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 198, " + \
            " \"estudanteAnoPeriodo\": 1, " + \
            " \"estudanteIntegral\": 42, " + \
            " \"anoMatricula\": 789 " + \
            " } "
        headers['Accept'] = "application/json"
        res_3 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_3.status_code == 500
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "Ocorreu um erro."
        assert res_3.json()["errors"]["message"] == "O campo dataNascimento é obrigatório. (and 2 more errors)"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes -> Response status 401 not defined for path '/v1/estudantes'.
        headers = {}
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?" + 
                    "page=899&" + 
                    "per_page=263&" + 
                    "situacao_matricula=ATIVAS&" + 
                    "situacao_final=REPROVADAS",
                    headers=headers)
        
        assert res_4.status_code == 401
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "Não autorizado"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/33/erros?" + 
                    "page=-1929967990&" + 
                    "per_page=892",
                    headers=headers)
        
        assert res_5.status_code == 400
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "O ID fornecido não é um UUID válido. ID: 33"
        
        # Fault100. HTTP Status 500. GET:/v1/profissionais/lote/{id}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_6 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/3e730fc3-2694-49cb-9cde-c3cee8b9854f?" + 
                    "page=1&" + 
                    "per_page=503",
                    headers=headers)
        
        assert res_6.status_code == 500
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == False
        assert res_6.json()["message"] == "Não foi possível recuperar o lote. ID fornecido: 3e730fc3-2694-49cb-9cde-c3cee8b9854f Nenhum lote correspondente foi encontrado."
    
    
    # Calls:
    # 1 - (200) GET:/v1/profissionais
    # 2 - (404) GET:/v1/estudantes/validacao-cadastro
    # 3 - (200) GET:/v1/estudantes/lote
    # 4 - (500) POST:/v1/estudantes/lote
    # 5 - (null) GET:/v1/estudantes
    # Found 8 potential faults. Type-codes: 100, 200
    @timeout_decorator.timeout(60)
    def test_8_with500(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?page=763",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_0.json()["data"]) == 0
        assert res_0.json()["pagination"]["total"] == 3.0
        assert res_0.json()["pagination"]["count"] == 0.0
        assert res_0.json()["pagination"]["per_page"] == 10.0
        assert res_0.json()["pagination"]["current_page"] == 763.0
        assert res_0.json()["pagination"]["total_pages"] == 1.0
        assert res_0.json()["pagination"]["links"]["previous"] == 762.0
        assert res_0.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> Response status 404 not defined for path '/v1/estudantes/validacao-cadastro'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/validacao-cadastro?cpf=43839402000",
                    headers=headers)
        
        assert res_1.status_code == 404
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Ocorreu um erro inesperado."
        assert res_1.json()["errors"]["message"] == "Nenhum dado encontrado"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?" + 
                    "page=4&" + 
                    "per_page=235",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_2.json()["data"]) == 235
        assert res_2.json()["data"][0]["dataEnvio"] == "2025-05-03 10:55:58"
        assert res_2.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_2.json()["data"][1]["dataEnvio"] == "2025-05-03 10:55:47"
        assert res_2.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_2.json()["data"][2]["dataEnvio"] == "2025-05-03 10:54:31"
        assert res_2.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 232 elements. This limit of 3 elements can be increased in the configurations
        assert res_2.json()["pagination"]["total"] == 9449.0
        assert res_2.json()["pagination"]["count"] == 235.0
        assert res_2.json()["pagination"]["per_page"] == 235.0
        assert res_2.json()["pagination"]["current_page"] == 4.0
        assert res_2.json()["pagination"]["total_pages"] == 41.0
        assert res_2.json()["pagination"]["links"]["previous"] == 3.0
        assert res_2.json()["pagination"]["links"]["next"] == 5.0
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes/lote
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["errors"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_3 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_3.status_code == 500
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "Ocorreu um erro."
        assert res_3.json()["errors"]["message"] == "JSON inválido."
        
        try:
            headers = {}
            headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
            headers['Accept'] = "*/*"
            requests \
                    .get(self.baseUrlOfSut + "/v1/estudantes?" + 
                        "page=508&" + 
                        "per_page=840&" + 
                        "situacao_matricula=ATIVAS",
                        headers=headers)
        except AssertionError as e:
            raise e
        except Exception as e:
            pass
    
    
    # Calls:
    # 1 - (400) GET:/v1/estudantes/lote/{id}/erros
    # 2 - (201) POST:/v1/estudantes/lote
    # 3 - (500) GET:/v1/estudantes/lote/{id}
    # 4 - (200) GET:/v1/estudantes/lote
    # 5 - (500) POST:/v1/estudantes
    # 6 - (200) GET:/v1/estudantes/{cpfNis}
    # 7 - (400) GET:/v1/estudantes/lote/{id}
    # Found 9 potential faults. Type-codes: 100, 200
    @timeout_decorator.timeout(60)
    def test_9_with500(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/HlvwPzeD5Rh/erros?per_page=459",
                    headers=headers)
        
        assert res_0.status_code == 400
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "O ID fornecido não é um UUID válido. ID: HlvwPzeD5Rh"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"numeroNISResponsavel\": \"97571598415\", " + \
            " \"cpf\": \"8sLN\", " + \
            " \"nome\": \"sq79iMVV\", " + \
            " \"telefone\": \"Ua8tJ\", " + \
            " \"nomeSocial\": \"hd2\", " + \
            " \"sexo\": \"1\", " + \
            " \"numeroNIS\": \"53468480165\", " + \
            " \"certidaoNascimento\": \"4NCBu2DTYUshTKms\", " + \
            " \"cnh\": \"10142015477\", " + \
            " \"bairro\": \"São Pereira\", " + \
            " \"numero\": \"355\", " + \
            " \"cep\": \"23507115\", " + \
            " \"uf\": 26, " + \
            " \"estudantePpl\": 2, " + \
            " \"dataInicioMatricula\": \"1924-02-07\", " + \
            " \"serieAno\": 34, " + \
            " \"instituicao\": 8444, " + \
            " \"inep\": 32049480, " + \
            " \"formaOrganizacaoTurma\": 4, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 7 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_1.status_code == 201
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Operação realizada com sucesso"
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes/lote/{id}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/0762ad18-3032-4efe-8174-afad5ca00fbe?per_page=283",
                    headers=headers)
        
        assert res_2.status_code == 500
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Não foi possível recuperar o lote. ID fornecido: 0762ad18-3032-4efe-8174-afad5ca00fbe Nenhum lote correspondente foi encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?page=142",
                    headers=headers)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_3.json()["data"]) == 10
        assert res_3.json()["data"][0]["dataEnvio"] == "2025-05-03 05:13:53"
        assert res_3.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_3.json()["data"][1]["dataEnvio"] == "2025-05-03 05:13:49"
        assert res_3.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_3.json()["data"][2]["dataEnvio"] == "2025-05-03 05:13:39"
        assert res_3.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_3.json()["pagination"]["total"] == 9481.0
        assert res_3.json()["pagination"]["count"] == 10.0
        assert res_3.json()["pagination"]["per_page"] == 10.0
        assert res_3.json()["pagination"]["current_page"] == 142.0
        assert res_3.json()["pagination"]["total_pages"] == 949.0
        assert res_3.json()["pagination"]["links"]["previous"] == 141.0
        assert res_3.json()["pagination"]["links"]["next"] == 143.0
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"68865481900\", " + \
            " \"numeroNISResponsavel\": \"87476943928\", " + \
            " \"cpf\": \"81773739352\", " + \
            " \"nome\": \"efgZokBmUEAy4c\", " + \
            " \"dataNascimento\": \"1972-11-20\", " + \
            " \"genero\": 8, " + \
            " \"racaCor\": 1, " + \
            " \"sexo\": \"3\", " + \
            " \"rg\": \"AYho0eEOvpOSCdGw\", " + \
            " \"orgaoEmissor\": \"SEDS\", " + \
            " \"certidaoNascimento\": \"89678483217018032313595113291516\", " + \
            " \"logradouro\": \"Rua R. Isadora Aguiar\", " + \
            " \"numero\": \"89229\", " + \
            " \"estudantePpl\": 0, " + \
            " \"serieAno\": 19, " + \
            " \"inep\": 41532074, " + \
            " \"dataInicioPeriodoLetivo\": \"1950-09-24\", " + \
            " \"formaOrganizacaoTurma\": 1, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 10, " + \
            " \"estudanteIntegral\": 1 " + \
            " } "
        headers['Accept'] = "application/json"
        res_4 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_4.status_code == 500
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "Ocorreu um erro."
        assert res_4.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/{cpfNis} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/81620597330",
                    headers=headers)
        
        assert res_5.status_code == 200
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == True
        assert res_5.json()["message"] == "Dados obtidos com sucesso."
        assert res_5.json()["data"]["cpf"] == "81620597330"
        assert res_5.json()["data"]["nome"] == "Bárbara Corte Filho"
        assert res_5.json()["data"]["nomeSocial"] is None
        assert res_5.json()["data"]["numeroNIS"] == "73778179496"
        assert res_5.json()["data"]["rg"] == "45972336872284413857"
        assert res_5.json()["data"]["orgaoEmissor"] == "VUVY-Ea"
        assert res_5.json()["data"]["cpfResponsavel"] == "06466290438"
        assert res_5.json()["data"]["nomeMaeEstudante"] == "Kauê Soeira"
        assert res_5.json()["data"]["numeroNISResponsavel"] == "25235719284"
        assert res_5.json()["data"]["dataNascimento"] == "1987-09-30"
        assert res_5.json()["data"]["logradouro"] == "Ponte Erick Lima"
        assert res_5.json()["data"]["bairro"] == "Bairro quas"
        assert res_5.json()["data"]["numero"] == "487"
        assert res_5.json()["data"]["cep"] == "25132390"
        assert res_5.json()["data"]["municipio"] == 3130507.0
        assert res_5.json()["data"]["certidaoNascimento"] == "72301095066044898948758647751717"
        assert res_5.json()["data"]["cnh"] == "38270300618"
        assert res_5.json()["data"]["uf"] == 42.0
        assert res_5.json()["data"]["racaCor"] == 3.0
        assert len(res_5.json()["data"]["tipoDeficiencia"]) == 3
        assert res_5.json()["data"]["tipoDeficiencia"][0] == 5.0
        assert res_5.json()["data"]["tipoDeficiencia"][1] == 9.0
        assert res_5.json()["data"]["tipoDeficiencia"][2] == 10.0
        assert res_5.json()["data"]["genero"] == 2.0
        assert res_5.json()["data"]["telefone"] is None
        assert res_5.json()["data"]["email"] is None
        assert res_5.json()["data"]["situacaoCadastroValidado"] == 4.0
        assert len(res_5.json()["data"]["matriculas"]) == 1
        assert res_5.json()["data"]["matriculas"][0]["codigoMatriculaSgp"] == 1226216.0
        assert res_5.json()["data"]["matriculas"][0]["codInstituicao"] == 223381.0
        assert res_5.json()["data"]["matriculas"][0]["dataInicioMatricula"] == "1978-12-02"
        assert res_5.json()["data"]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_5.json()["data"]["matriculas"][0]["dataFimOuAprovacao"] == "1994-09-05"
        assert res_5.json()["data"]["matriculas"][0]["situacaoMatricula"] == False
        assert res_5.json()["data"]["matriculas"][0]["serieAno"] == 64.0
        assert res_5.json()["data"]["matriculas"][0]["etapaEnsinoConsolidado"] == "Formação inicial continuada ou qualificação profissional (FIC)"
        assert res_5.json()["data"]["matriculas"][0]["matriculaRede"] is None
        assert res_5.json()["data"]["matriculas"][0]["deletadaEm"] == "2024-05-02 20:57:30"
        assert res_5.json()["data"]["matriculas"][0]["inep"] == "27610099"
        assert res_5.json()["data"]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_5.json()["data"]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_5.json()["data"]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_5.json()["data"]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_5.json()["data"]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_5.json()["data"]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_5.json()["data"]["matriculas"][0]["estudanteIntegral"] is None
        assert res_5.json()["data"]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_5.json()["data"]["matriculas"][0]["anoMatricula"] is None
        assert len(res_5.json()["data"]["outrasMatriculas"]) == 0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Object instance has properties which are not allowed by the schema: ["success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_6 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/njFivi6vcwbTb?" + 
                    "page=336&" + 
                    "per_page=10&" + 
                    "incluir_objetos_processados=false",
                    headers=headers)
        
        assert res_6.status_code == 400
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == False
        assert res_6.json()["message"] == "O ID fornecido não é um UUID válido. ID: njFivi6vcwbTb"
    
    
    # Calls:
    # 1 - (500) GET:/v1/profissionais/lote/{id}
    # 2 - (401) GET:/v1/estudantes/solicitacoes-alteracoes
    # 3 - (500) POST:/v1/estudantes
    # 4 - (200) GET:/v1/profissionais/{cpf}
    # 5 - (200) GET:/v1/estudantes/lote
    # 6 - (400) GET:/v1/profissionais/lote/{id}/erros
    # 7 - (404) GET:/v1/estudantes/{cpfNis}
    # 8 - (400) GET:/v1/profissionais/lote/{id}
    # Found 10 potential faults. Type-codes: 100, 200
    @timeout_decorator.timeout(60)
    def test_10_with500(self):
        
        # Fault100. HTTP Status 500. GET:/v1/profissionais/lote/{id}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/d1cff13a-951f-4cc7-8f44-2139116741ea?" + 
                    "page=935&" + 
                    "per_page=260&" + 
                    "incluir_objetos_processados=false",
                    headers=headers)
        
        assert res_0.status_code == 500
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não foi possível recuperar o lote. ID fornecido: d1cff13a-951f-4cc7-8f44-2139116741ea Nenhum lote correspondente foi encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> Response status 401 not defined for path '/v1/estudantes/solicitacoes-alteracoes'.
        headers = {}
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/solicitacoes-alteracoes?" + 
                    "per_page=10&" + 
                    "cpfAtual=iL&" + 
                    "cpfNovo=31863200037",
                    headers=headers)
        
        assert res_1.status_code == 401
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Não autorizado"
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"31863200037\", " + \
            " \"nome\": \"João da Silva 2\", " + \
            " \"dataNascimento\": \"1985-06-15\", " + \
            " \"genero\": 4, " + \
            " \"email\": \"joao.silva@email.com\", " + \
            " \"telefone\": \"vM\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 284, " + \
            " 3, " + \
            " 2, " + \
            " 1, " + \
            " 2 " + \
            " ], " + \
            " \"sexo\": \"0\", " + \
            " \"rg\": \"XEbjnHf1iFH\", " + \
            " \"certidaoNascimento\": \"Y1YoDjWzXHM\", " + \
            " \"logradouro\": \"apD\", " + \
            " \"cep\": \"M6b\", " + \
            " \"estudantePpl\": 42, " + \
            " \"matriculaRede\": \"56789\", " + \
            " \"inep\": 27014088, " + \
            " \"dataInicioPeriodoLetivo\": \"1963-09-23\", " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 559, " + \
            " \"estudanteAnoPeriodo\": 42, " + \
            " \"anoMatricula\": 148 " + \
            " } "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_2.status_code == 500
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Ocorreu um erro."
        assert res_2.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/{cpf} -> Instance failed to match all required schemas (matched only 0 out of 5)
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/33722248094",
                    headers=headers)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Dados obtidos com sucesso."
        assert res_3.json()["data"]["tipoEnsinoMedio"] == 2.0
        assert res_3.json()["data"]["nivelEscolaridade"] == 10.0
        assert res_3.json()["data"]["cpf"] == "33722248094"
        assert res_3.json()["data"]["nome"] == "João da Silva 2"
        assert res_3.json()["data"]["dataNascimento"] == "1985-06-15"
        assert res_3.json()["data"]["genero"] == 1.0
        assert res_3.json()["data"]["racaCor"] == 2.0
        assert res_3.json()["data"]["email"] == "joao.silva@email.com"
        assert res_3.json()["data"]["telefone"] is None
        assert res_3.json()["data"]["nomeSocial"] is None
        assert res_3.json()["data"]["logradouro"] == "Rua das Flores"
        assert res_3.json()["data"]["bairro"] == "Centro"
        assert res_3.json()["data"]["numero"] == "123"
        assert res_3.json()["data"]["cep"] == "01001000"
        assert res_3.json()["data"]["municipio"] == 2700409.0
        assert res_3.json()["data"]["uf"] == 27.0
        assert res_3.json()["data"]["codigoInstituicao"] == 6.0
        assert res_3.json()["data"]["cargaHoraria"] == 40.0
        assert res_3.json()["data"]["situacaoAtiva"] == True
        assert res_3.json()["data"]["dataIngresso"] == "2015-02-10"
        assert res_3.json()["data"]["dataFim"] is None
        assert res_3.json()["data"]["codigoFuncao"] == 2.0
        assert res_3.json()["data"]["matriculaRede"] == "56789"
        assert res_3.json()["data"]["tipoVinculo"] == 0.0
        assert res_3.json()["data"]["inep"] == "27014088"
        assert len(res_3.json()["data"]["tipoDeficiencia"]) == 3
        assert res_3.json()["data"]["tipoDeficiencia"][0] == 1.0
        assert res_3.json()["data"]["tipoDeficiencia"][1] == 2.0
        assert res_3.json()["data"]["tipoDeficiencia"][2] == 3.0
        assert len(res_3.json()["data"]["formacoesAcademicas"]) == 2
        assert res_3.json()["data"]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_3.json()["data"]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_3.json()["data"]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_3.json()["data"]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_3.json()["data"]["formacoesAcademicas"][0]["principal"] is None
        assert res_3.json()["data"]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_3.json()["data"]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_3.json()["data"]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_3.json()["data"]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_3.json()["data"]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_3.json()["data"]["formacoesAcademicas"][1]["principal"] is None
        assert res_3.json()["data"]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_4.json()["data"]) == 10
        assert res_4.json()["data"][0]["dataEnvio"] == "2025-05-03 23:46:34"
        assert res_4.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_4.json()["data"][1]["dataEnvio"] == "2025-05-03 23:46:30"
        assert res_4.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_4.json()["data"][2]["dataEnvio"] == "2025-05-03 23:45:22"
        assert res_4.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_4.json()["pagination"]["total"] == 9453.0
        assert res_4.json()["pagination"]["count"] == 10.0
        assert res_4.json()["pagination"]["per_page"] == 10.0
        assert res_4.json()["pagination"]["current_page"] == 1.0
        assert res_4.json()["pagination"]["total_pages"] == 946.0
        assert res_4.json()["pagination"]["links"]["previous"] is None
        assert res_4.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id}/erros -> Response status 400 not defined for path '/v1/profissionais/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/oMHRb2KJ3OS1El/erros?per_page=503",
                    headers=headers)
        
        assert res_5.status_code == 400
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "O ID fornecido não é um UUID válido. ID: oMHRb2KJ3OS1El"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_6 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/33722248094",
                    headers=headers)
        
        assert res_6.status_code == 404
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == False
        assert res_6.json()["message"] == "Nenhum estudante encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id} -> Object instance has properties which are not allowed by the schema: ["success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_7 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/NLjEV7Vg?" + 
                    "per_page=260&" + 
                    "incluir_objetos_processados=true",
                    headers=headers)
        
        assert res_7.status_code == 400
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == False
        assert res_7.json()["message"] == "O ID fornecido não é um UUID válido. ID: NLjEV7Vg"
    
    
    # Calls:
    # 1 - (422) POST:/v1/profissionais
    # 2 - (500) GET:/v1/estudantes
    # 3 - (200) GET:/v1/estudantes/lote
    # 4 - (404) GET:/v1/profissionais/{cpf}
    # 5 - (401) POST:/v1/profissionais
    # 6 - (500) GET:/v1/estudantes
    # 7 - (500) GET:/v1/estudantes/inep/{inep}
    # 8 - (422) POST:/v1/profissionais/lote
    # Found 7 potential faults. Type-codes: 100, 200
    # Using 2 examples:
    #   1
    #   123456789
    @timeout_decorator.timeout(60)
    def test_11_with500(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"genero\": 7, " + \
            " \"telefone\": \"11945225241\", " + \
            " \"sexo\": \"2\", " + \
            " \"logradouro\": \"tndn4qtao0hYZUoM\", " + \
            " \"bairro\": \"São Rodrigues\", " + \
            " \"numero\": \"9325\", " + \
            " \"cep\": \"\", " + \
            " \"municipio\": 2611606, " + \
            " \"uf\": 27, " + \
            " \"inep\": \"29390869\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 1, " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 851 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 1, " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " } " + \
            " ], " + \
            " \"dataIngresso\": \"1934-00-32\", " + \
            " \"dataFim\": \"2073-00-12\" " + \
            " } "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_0.status_code == 422
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #1 ($nome) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?" + 
                    "page=931&" + 
                    "per_page=529&" + 
                    "situacao_matricula=EVOMASTER",
                    headers=headers)
        
        assert res_1.status_code == 500
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Ocorreu um erro."
        assert res_1.json()["errors"]["message"] == "Situação de matricula informada incorreta, possíveis valores: ATIVAS,INATIVAS"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?" + 
                    "page=391&" + 
                    "per_page=260",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_2.json()["data"]) == 0
        assert res_2.json()["pagination"]["total"] == 9477.0
        assert res_2.json()["pagination"]["count"] == 0.0
        assert res_2.json()["pagination"]["per_page"] == 260.0
        assert res_2.json()["pagination"]["current_page"] == 391.0
        assert res_2.json()["pagination"]["total_pages"] == 37.0
        assert res_2.json()["pagination"]["links"]["previous"] == 390.0
        assert res_2.json()["pagination"]["links"]["next"] is None
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/UA",
                    headers=headers)
        
        assert res_3.status_code == 404
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "Nenhum profissional de educação encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais -> Response status 401 not defined for path '/v1/profissionais'.
        headers = {}
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpf\": \"60616587445\", " + \
            " \"nome\": \"Emilly Pires\", " + \
            " \"genero\": 9, " + \
            " \"email\": \"hortencia.de.souza.branco@fake.com\", " + \
            " \"telefone\": \"3333333\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 14916646, " + \
            " 3 " + \
            " ], " + \
            " \"logradouro\": \"Rua Largo Antonella Padrão\", " + \
            " \"bairro\": \"São Barreto\", " + \
            " \"numero\": \"233\", " + \
            " \"cep\": \"75006960\", " + \
            " \"uf\": 43, " + \
            " \"inep\": 33225605, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 1, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\", " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"anoInicioFormacaoAcademica\": 424 " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"123456789\", " + \
            " \"dataIngresso\": \"1997-11-16\" " + \
            " } "
        headers['Accept'] = "application/json"
        res_4 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_4.status_code == 401
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "Não autorizado"
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?" + 
                    "page=888&" + 
                    "situacao_final=APROVADAS",
                    headers=headers)
        
        assert res_5.status_code == 500
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "Ocorreu um erro inesperado."
        assert res_5.json()["errors"]["message"] == "O campo ano_matricula é obrigatório quando o campo situacao_final é informado."
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes/inep/{inep}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_6 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/12033057?" + 
                    "page=616&" + 
                    "situacao_final=EVOMASTER",
                    headers=headers)
        
        assert res_6.status_code == 500
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == False
        assert res_6.json()["message"] == "Não foi possível obter os estudantes."
        assert res_6.json()["errors"]["message"] == "O campo situacao_final é inválido."
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_7 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_7.status_code == 422
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == False
        assert res_7.json()["message"] == "JSON inválido."
    
    
    # Calls:
    # 1 - (200) GET:/v1/estudantes/validacao-cadastro
    # 2 - (200) GET:/v1/profissionais
    # 3 - (400) GET:/v1/estudantes/lote/{id}/erros
    # 4 - (500) GET:/v1/estudantes/inep/{inep}
    # Found 25 potential faults. Type-codes: 100, 200
    @timeout_decorator.timeout(60)
    def test_12_with500(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/3'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/4'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/5'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/6'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/7'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/8'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/9'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/10'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/11'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/12'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/13'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/14'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/validacao-cadastro",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        assert len(res_0.json()["data"]) == 15
        assert res_0.json()["data"][0]["cpf"] == "99999701094"
        assert res_0.json()["data"][0]["numeroNIS"] is None
        assert res_0.json()["data"][0]["situacaoCadastral"] == "Autenticada"
        assert res_0.json()["data"][0]["situacaoCpf"] == "CPF não encontrado na base do BCPF"
        assert res_0.json()["data"][0]["nome"] == "Bryan  Chen"
        assert res_0.json()["data"][0]["nomeValidado"] == True
        assert res_0.json()["data"][0]["dataNascimento"] == "1956-01-11"
        assert res_0.json()["data"][0]["dataNascimentoValidada"] == True
        assert res_0.json()["data"][0]["nomeMaeEstudante"] == "Mr. Daniel Johnson DVM"
        assert res_0.json()["data"][0]["nomeMaeEstudanteValidado"] == True
        assert res_0.json()["data"][0]["dataValidacaoCadastral"] == "2025-03-11 01:39:26"
        assert res_0.json()["data"][1]["cpf"] == "34535377693"
        assert res_0.json()["data"][1]["numeroNIS"] == "11979328182"
        assert res_0.json()["data"][1]["situacaoCadastral"] == "Não autenticada"
        assert res_0.json()["data"][1]["situacaoCpf"] == "Testando o serviço de validação"
        assert res_0.json()["data"][1]["nome"] == "Trevor Hester"
        assert res_0.json()["data"][1]["nomeValidado"] == True
        assert res_0.json()["data"][1]["dataNascimento"] == "1968-02-26"
        assert res_0.json()["data"][1]["dataNascimentoValidada"] == False
        assert res_0.json()["data"][1]["nomeMaeEstudante"] == "Juan Mccullough"
        assert res_0.json()["data"][1]["nomeMaeEstudanteValidado"] == True
        assert res_0.json()["data"][1]["dataValidacaoCadastral"] == "2023-06-16 00:00:00"
        assert res_0.json()["data"][2]["cpf"] == "14064786602"
        assert res_0.json()["data"][2]["numeroNIS"] == "124112231"
        assert res_0.json()["data"][2]["situacaoCadastral"] == "Não autenticada"
        assert res_0.json()["data"][2]["situacaoCpf"] == "Quando há omissão de DIRPF em um dos últimos 5 exercícios"
        assert res_0.json()["data"][2]["nome"] == "Donald Jackson"
        assert res_0.json()["data"][2]["nomeValidado"] == False
        assert res_0.json()["data"][2]["dataNascimento"] == "1954-08-23"
        assert res_0.json()["data"][2]["dataNascimentoValidada"] == False
        assert res_0.json()["data"][2]["nomeMaeEstudante"] == "Timothy Garcia"
        assert res_0.json()["data"][2]["nomeMaeEstudanteValidado"] == True
        assert res_0.json()["data"][2]["dataValidacaoCadastral"] == "2024-04-23 00:00:00"
        # Skipping assertions on the remaining 12 elements. This limit of 3 elements can be increased in the configurations
        assert res_0.json()["pagination"]["total"] == 54714.0
        assert res_0.json()["pagination"]["count"] == 15.0
        assert res_0.json()["pagination"]["per_page"] == 15.0
        assert res_0.json()["pagination"]["current_page"] == 1.0
        assert res_0.json()["pagination"]["total_pages"] == 3648.0
        assert res_0.json()["pagination"]["links"]["previous"] is None
        assert res_0.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?per_page=96",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_1.json()["data"]) == 3
        assert res_1.json()["data"][0]["tipoEnsinoMedio"] == 2.0
        assert res_1.json()["data"][0]["nivelEscolaridade"] == 10.0
        assert res_1.json()["data"][0]["cpf"] == "43839402000"
        assert res_1.json()["data"][0]["nome"] == "João da Silva 2"
        assert res_1.json()["data"][0]["dataNascimento"] == "1985-06-15"
        assert res_1.json()["data"][0]["genero"] == 1.0
        assert res_1.json()["data"][0]["racaCor"] == 2.0
        assert res_1.json()["data"][0]["email"] == "joao.silva@email.com"
        assert res_1.json()["data"][0]["telefone"] is None
        assert res_1.json()["data"][0]["nomeSocial"] is None
        assert res_1.json()["data"][0]["logradouro"] == "Rua das Flores"
        assert res_1.json()["data"][0]["bairro"] == "Centro"
        assert res_1.json()["data"][0]["numero"] == "123"
        assert res_1.json()["data"][0]["cep"] == "01001000"
        assert res_1.json()["data"][0]["municipio"] == 2700409.0
        assert res_1.json()["data"][0]["uf"] == 27.0
        assert res_1.json()["data"][0]["codigoInstituicao"] == 6.0
        assert res_1.json()["data"][0]["cargaHoraria"] == 40.0
        assert res_1.json()["data"][0]["situacaoAtiva"] == True
        assert res_1.json()["data"][0]["dataIngresso"] == "2015-02-10"
        assert res_1.json()["data"][0]["dataFim"] is None
        assert res_1.json()["data"][0]["codigoFuncao"] == 2.0
        assert res_1.json()["data"][0]["matriculaRede"] == "56789"
        assert res_1.json()["data"][0]["tipoVinculo"] == 0.0
        assert res_1.json()["data"][0]["inep"] == "27014088"
        assert len(res_1.json()["data"][0]["tipoDeficiencia"]) == 3
        assert res_1.json()["data"][0]["tipoDeficiencia"][0] == 1.0
        assert res_1.json()["data"][0]["tipoDeficiencia"][1] == 2.0
        assert res_1.json()["data"][0]["tipoDeficiencia"][2] == 3.0
        assert len(res_1.json()["data"][0]["formacoesAcademicas"]) == 2
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["principal"] is None
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["principal"] is None
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][1]["tipoEnsinoMedio"] == 2.0
        assert res_1.json()["data"][1]["nivelEscolaridade"] == 10.0
        assert res_1.json()["data"][1]["cpf"] == "33722248094"
        assert res_1.json()["data"][1]["nome"] == "João da Silva 2"
        assert res_1.json()["data"][1]["dataNascimento"] == "1985-06-15"
        assert res_1.json()["data"][1]["genero"] == 1.0
        assert res_1.json()["data"][1]["racaCor"] == 2.0
        assert res_1.json()["data"][1]["email"] == "joao.silva@email.com"
        assert res_1.json()["data"][1]["telefone"] is None
        assert res_1.json()["data"][1]["nomeSocial"] is None
        assert res_1.json()["data"][1]["logradouro"] == "Rua das Flores"
        assert res_1.json()["data"][1]["bairro"] == "Centro"
        assert res_1.json()["data"][1]["numero"] == "123"
        assert res_1.json()["data"][1]["cep"] == "01001000"
        assert res_1.json()["data"][1]["municipio"] == 2700409.0
        assert res_1.json()["data"][1]["uf"] == 27.0
        assert res_1.json()["data"][1]["codigoInstituicao"] == 6.0
        assert res_1.json()["data"][1]["cargaHoraria"] == 40.0
        assert res_1.json()["data"][1]["situacaoAtiva"] == True
        assert res_1.json()["data"][1]["dataIngresso"] == "2015-02-10"
        assert res_1.json()["data"][1]["dataFim"] is None
        assert res_1.json()["data"][1]["codigoFuncao"] == 2.0
        assert res_1.json()["data"][1]["matriculaRede"] == "56789"
        assert res_1.json()["data"][1]["tipoVinculo"] == 0.0
        assert res_1.json()["data"][1]["inep"] == "27014088"
        assert len(res_1.json()["data"][1]["tipoDeficiencia"]) == 3
        assert res_1.json()["data"][1]["tipoDeficiencia"][0] == 1.0
        assert res_1.json()["data"][1]["tipoDeficiencia"][1] == 2.0
        assert res_1.json()["data"][1]["tipoDeficiencia"][2] == 3.0
        assert len(res_1.json()["data"][1]["formacoesAcademicas"]) == 2
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["principal"] is None
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["principal"] is None
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][2]["tipoEnsinoMedio"] == 2.0
        assert res_1.json()["data"][2]["nivelEscolaridade"] == 10.0
        assert res_1.json()["data"][2]["cpf"] == "31863200037"
        assert res_1.json()["data"][2]["nome"] == "João da Silva 2"
        assert res_1.json()["data"][2]["dataNascimento"] == "1985-06-15"
        assert res_1.json()["data"][2]["genero"] == 1.0
        assert res_1.json()["data"][2]["racaCor"] == 2.0
        assert res_1.json()["data"][2]["email"] == "joao.silva@email.com"
        assert res_1.json()["data"][2]["telefone"] is None
        assert res_1.json()["data"][2]["nomeSocial"] is None
        assert res_1.json()["data"][2]["logradouro"] == "Rua das Flores"
        assert res_1.json()["data"][2]["bairro"] == "Centro"
        assert res_1.json()["data"][2]["numero"] == "123"
        assert res_1.json()["data"][2]["cep"] == "01001000"
        assert res_1.json()["data"][2]["municipio"] == 2700409.0
        assert res_1.json()["data"][2]["uf"] == 27.0
        assert res_1.json()["data"][2]["codigoInstituicao"] == 6.0
        assert res_1.json()["data"][2]["cargaHoraria"] == 40.0
        assert res_1.json()["data"][2]["situacaoAtiva"] == True
        assert res_1.json()["data"][2]["dataIngresso"] == "2015-02-10"
        assert res_1.json()["data"][2]["dataFim"] is None
        assert res_1.json()["data"][2]["codigoFuncao"] == 2.0
        assert res_1.json()["data"][2]["matriculaRede"] == "56789"
        assert res_1.json()["data"][2]["tipoVinculo"] == 0.0
        assert res_1.json()["data"][2]["inep"] == "27014088"
        assert len(res_1.json()["data"][2]["tipoDeficiencia"]) == 3
        assert res_1.json()["data"][2]["tipoDeficiencia"][0] == 1.0
        assert res_1.json()["data"][2]["tipoDeficiencia"][1] == 2.0
        assert res_1.json()["data"][2]["tipoDeficiencia"][2] == 3.0
        assert len(res_1.json()["data"][2]["formacoesAcademicas"]) == 2
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["principal"] is None
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["principal"] is None
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_1.json()["pagination"]["total"] == 3.0
        assert res_1.json()["pagination"]["count"] == 3.0
        assert res_1.json()["pagination"]["per_page"] == 96.0
        assert res_1.json()["pagination"]["current_page"] == 1.0
        assert res_1.json()["pagination"]["total_pages"] == 1.0
        assert res_1.json()["pagination"]["links"]["previous"] is None
        assert res_1.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/13/erros",
                    headers=headers)
        
        assert res_2.status_code == 400
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "O ID fornecido não é um UUID válido. ID: 13"
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes/inep/{inep}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/0UWQ8vS?" + 
                    "situacao_matricula=EVOMASTER&" + 
                    "ano_matricula=665",
                    headers=headers)
        
        assert res_3.status_code == 500
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "Ocorreu um erro."
        assert res_3.json()["errors"]["message"] == "Situação de matricula informada incorreta, possíveis valores: ATIVAS,INATIVAS"
    
    
    # Calls:
    # 1 - (500) GET:/v1/profissionais/lote/{id}
    # 2 - (500) GET:/v1/profissionais/lote/{id}
    # 3 - (400) GET:/v1/profissionais/lote/{id}/erros
    # 4 - (500) GET:/v1/profissionais/lote/{id}
    # 5 - (200) GET:/v1/estudantes/inep/{inep}
    # 6 - (500) GET:/v1/profissionais/lote/{id}
    # 7 - (500) GET:/v1/estudantes/inep/{inep}
    # 8 - (404) GET:/v1/estudantes/solicitacoes-alteracoes
    # Found 9 potential faults. Type-codes: 100, 200
    @timeout_decorator.timeout(60)
    def test_13_with500(self):
        
        # Fault100. HTTP Status 500. GET:/v1/profissionais/lote/{id}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/729b0f9f-60ec-4a6f-996f-a43916672614?incluir_objetos_processados=true",
                    headers=headers)
        
        assert res_0.status_code == 500
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não foi possível recuperar o lote. ID fornecido: 729b0f9f-60ec-4a6f-996f-a43916672614 Nenhum lote correspondente foi encontrado."
        
        # Fault100. HTTP Status 500. GET:/v1/profissionais/lote/{id}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/806b9369-13e7-4e6c-be32-d20fd5c3ca4d?" + 
                    "page=67&" + 
                    "per_page=317&" + 
                    "incluir_objetos_processados=true",
                    headers=headers)
        
        assert res_1.status_code == 500
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Não foi possível recuperar o lote. ID fornecido: 806b9369-13e7-4e6c-be32-d20fd5c3ca4d Nenhum lote correspondente foi encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id}/erros -> Response status 400 not defined for path '/v1/profissionais/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/Rio%20Grande%20do%20Sul/erros?page=744",
                    headers=headers)
        
        assert res_2.status_code == 400
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "O ID fornecido não é um UUID válido. ID: Rio Grande do Sul"
        
        # Fault100. HTTP Status 500. GET:/v1/profissionais/lote/{id}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/3bd94acf-8fdb-403e-a314-79b621a16b95?page=726",
                    headers=headers)
        
        assert res_3.status_code == 500
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "Não foi possível recuperar o lote. ID fornecido: 3bd94acf-8fdb-403e-a314-79b621a16b95 Nenhum lote correspondente foi encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/inep/{inep} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/16005074?" + 
                    "page=178&" + 
                    "per_page=729&" + 
                    "situacao_matricula=INATIVAS",
                    headers=headers)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Estudantes obtidos com sucesso."
        assert len(res_4.json()["data"]) == 0
        assert res_4.json()["pagination"]["total"] == 0.0
        assert res_4.json()["pagination"]["count"] == 0.0
        assert res_4.json()["pagination"]["per_page"] == 729.0
        assert res_4.json()["pagination"]["current_page"] == 178.0
        assert res_4.json()["pagination"]["total_pages"] == 1.0
        assert res_4.json()["pagination"]["links"]["previous"] == 177.0
        assert res_4.json()["pagination"]["links"]["next"] is None
        
        # Fault100. HTTP Status 500. GET:/v1/profissionais/lote/{id}
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id} -> Object instance has properties which are not allowed by the schema: ["errors"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/7af0e836-04d8-4b82-afeb-0c5da11c5a88?per_page=-776403404",
                    headers=headers)
        
        assert res_5.status_code == 500
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "Ocorreu um erro."
        assert res_5.json()["errors"]["message"] == "A quantidade máxima de registros por página é de 5000 registros."
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes/inep/{inep}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_6 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/41069005?" + 
                    "page=284&" + 
                    "per_page=544&" + 
                    "ano_matricula=2025&" + 
                    "situacao_final=EVOMASTER",
                    headers=headers)
        
        assert res_6.status_code == 500
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == False
        assert res_6.json()["message"] == "Não foi possível obter os estudantes."
        assert res_6.json()["errors"]["message"] == "O campo situacao_final é inválido."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> Response status 404 not defined for path '/v1/estudantes/solicitacoes-alteracoes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_7 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/solicitacoes-alteracoes?page=709",
                    headers=headers)
        
        assert res_7.status_code == 404
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == False
        assert res_7.json()["message"] == "Ocorreu um erro inesperado."
        assert res_7.json()["errors"]["message"] == "Nenhum dado encontrado"
    
    
    # Calls:
    # 1 - (404) GET:/v1/profissionais/{cpf}
    # 2 - (200) GET:/v1/estudantes/{cpfNis}
    # 3 - (400) GET:/v1/estudantes/lote/{id}
    # 4 - (200) GET:/v1/estudantes/lote
    # 5 - (500) GET:/v1/estudantes/lote/{id}
    # 6 - (200) GET:/v1/profissionais
    # 7 - (200) GET:/v1/estudantes/solicitacoes-alteracoes
    # Found 14 potential faults. Type-codes: 100, 200
    @timeout_decorator.timeout(60)
    def test_14_with500(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/25581162662",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Nenhum profissional de educação encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/{cpfNis} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/68373484507",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Dados obtidos com sucesso."
        assert res_1.json()["data"]["cpf"] == "68373484507"
        assert res_1.json()["data"]["nome"] == "Aaron Rico Jr."
        assert res_1.json()["data"]["nomeSocial"] is None
        assert res_1.json()["data"]["numeroNIS"] == "18229871626"
        assert res_1.json()["data"]["rg"] == "4009994721932979"
        assert res_1.json()["data"]["orgaoEmissor"] == "SSP-AM"
        assert res_1.json()["data"]["cpfResponsavel"] == "58007918728"
        assert res_1.json()["data"]["nomeMaeEstudante"] == "Sra. Vanessa Márcia Saraiva"
        assert res_1.json()["data"]["numeroNISResponsavel"] == "41116669672"
        assert res_1.json()["data"]["dataNascimento"] == "2005-12-14"
        assert res_1.json()["data"]["logradouro"] == "Rua Rua Colaço"
        assert res_1.json()["data"]["bairro"] == "São Espinoza"
        assert res_1.json()["data"]["numero"] == "15815"
        assert res_1.json()["data"]["cep"] == "98307354"
        assert res_1.json()["data"]["municipio"] == 1302603.0
        assert res_1.json()["data"]["certidaoNascimento"] == "38043732736758070175662742214309"
        assert res_1.json()["data"]["cnh"] is None
        assert res_1.json()["data"]["uf"] == 13.0
        assert res_1.json()["data"]["racaCor"] == 0.0
        assert len(res_1.json()["data"]["tipoDeficiencia"]) == 0
        assert res_1.json()["data"]["genero"] == 3.0
        assert res_1.json()["data"]["telefone"] is None
        assert res_1.json()["data"]["email"] is None
        assert res_1.json()["data"]["situacaoCadastroValidado"] is None
        assert len(res_1.json()["data"]["matriculas"]) == 1
        assert res_1.json()["data"]["matriculas"][0]["codigoMatriculaSgp"] == 2266430.0
        assert res_1.json()["data"]["matriculas"][0]["codInstituicao"] == 8438.0
        assert res_1.json()["data"]["matriculas"][0]["dataInicioMatricula"] == "2024-01-01"
        assert res_1.json()["data"]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_1.json()["data"]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_1.json()["data"]["matriculas"][0]["situacaoMatricula"] == True
        assert res_1.json()["data"]["matriculas"][0]["serieAno"] == 45.0
        assert res_1.json()["data"]["matriculas"][0]["etapaEnsinoConsolidado"] == "EJA - Ensino Médio"
        assert res_1.json()["data"]["matriculas"][0]["matriculaRede"] is None
        assert res_1.json()["data"]["matriculas"][0]["deletadaEm"] is None
        assert res_1.json()["data"]["matriculas"][0]["inep"] == "12033251"
        assert res_1.json()["data"]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_1.json()["data"]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_1.json()["data"]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_1.json()["data"]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_1.json()["data"]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_1.json()["data"]["matriculas"][0]["estudanteAnoPeriodo"] == 1.0
        assert res_1.json()["data"]["matriculas"][0]["estudanteIntegral"] is None
        assert res_1.json()["data"]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_1.json()["data"]["matriculas"][0]["anoMatricula"] is None
        assert len(res_1.json()["data"]["outrasMatriculas"]) == 0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Object instance has properties which are not allowed by the schema: ["success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/8?" + 
                    "per_page=-332607673&" + 
                    "incluir_objetos_processados=false",
                    headers=headers)
        
        assert res_2.status_code == 400
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "O ID fornecido não é um UUID válido. ID: 8"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> GET on path '/v1/estudantes/lote' defines a response schema but no response body found.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?per_page=-332607673",
                    headers=headers)
        
        assert res_3.status_code == 200
        # the response payload was too large, above the threshold of 1000000 bytes. No assertion on it is therefore generated.
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes/lote/{id}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/44804aec-17b3-4891-836b-c14c639c6785?incluir_objetos_processados=true",
                    headers=headers)
        
        assert res_4.status_code == 500
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "Não foi possível recuperar o lote. ID fornecido: 44804aec-17b3-4891-836b-c14c639c6785 Nenhum lote correspondente foi encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers)
        
        assert res_5.status_code == 200
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == True
        assert res_5.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_5.json()["data"]) == 3
        assert res_5.json()["data"][0]["tipoEnsinoMedio"] == 2.0
        assert res_5.json()["data"][0]["nivelEscolaridade"] == 10.0
        assert res_5.json()["data"][0]["cpf"] == "43839402000"
        assert res_5.json()["data"][0]["nome"] == "João da Silva 2"
        assert res_5.json()["data"][0]["dataNascimento"] == "1985-06-15"
        assert res_5.json()["data"][0]["genero"] == 1.0
        assert res_5.json()["data"][0]["racaCor"] == 2.0
        assert res_5.json()["data"][0]["email"] == "joao.silva@email.com"
        assert res_5.json()["data"][0]["telefone"] is None
        assert res_5.json()["data"][0]["nomeSocial"] is None
        assert res_5.json()["data"][0]["logradouro"] == "Rua das Flores"
        assert res_5.json()["data"][0]["bairro"] == "Centro"
        assert res_5.json()["data"][0]["numero"] == "123"
        assert res_5.json()["data"][0]["cep"] == "01001000"
        assert res_5.json()["data"][0]["municipio"] == 2700409.0
        assert res_5.json()["data"][0]["uf"] == 27.0
        assert res_5.json()["data"][0]["codigoInstituicao"] == 6.0
        assert res_5.json()["data"][0]["cargaHoraria"] == 40.0
        assert res_5.json()["data"][0]["situacaoAtiva"] == True
        assert res_5.json()["data"][0]["dataIngresso"] == "2015-02-10"
        assert res_5.json()["data"][0]["dataFim"] is None
        assert res_5.json()["data"][0]["codigoFuncao"] == 2.0
        assert res_5.json()["data"][0]["matriculaRede"] == "56789"
        assert res_5.json()["data"][0]["tipoVinculo"] == 0.0
        assert res_5.json()["data"][0]["inep"] == "27014088"
        assert len(res_5.json()["data"][0]["tipoDeficiencia"]) == 3
        assert res_5.json()["data"][0]["tipoDeficiencia"][0] == 1.0
        assert res_5.json()["data"][0]["tipoDeficiencia"][1] == 2.0
        assert res_5.json()["data"][0]["tipoDeficiencia"][2] == 3.0
        assert len(res_5.json()["data"][0]["formacoesAcademicas"]) == 2
        assert res_5.json()["data"][0]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_5.json()["data"][0]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_5.json()["data"][0]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_5.json()["data"][0]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_5.json()["data"][0]["formacoesAcademicas"][0]["principal"] is None
        assert res_5.json()["data"][0]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_5.json()["data"][0]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_5.json()["data"][0]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_5.json()["data"][0]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_5.json()["data"][0]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_5.json()["data"][0]["formacoesAcademicas"][1]["principal"] is None
        assert res_5.json()["data"][0]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_5.json()["data"][1]["tipoEnsinoMedio"] == 2.0
        assert res_5.json()["data"][1]["nivelEscolaridade"] == 10.0
        assert res_5.json()["data"][1]["cpf"] == "33722248094"
        assert res_5.json()["data"][1]["nome"] == "João da Silva 2"
        assert res_5.json()["data"][1]["dataNascimento"] == "1985-06-15"
        assert res_5.json()["data"][1]["genero"] == 1.0
        assert res_5.json()["data"][1]["racaCor"] == 2.0
        assert res_5.json()["data"][1]["email"] == "joao.silva@email.com"
        assert res_5.json()["data"][1]["telefone"] is None
        assert res_5.json()["data"][1]["nomeSocial"] is None
        assert res_5.json()["data"][1]["logradouro"] == "Rua das Flores"
        assert res_5.json()["data"][1]["bairro"] == "Centro"
        assert res_5.json()["data"][1]["numero"] == "123"
        assert res_5.json()["data"][1]["cep"] == "01001000"
        assert res_5.json()["data"][1]["municipio"] == 2700409.0
        assert res_5.json()["data"][1]["uf"] == 27.0
        assert res_5.json()["data"][1]["codigoInstituicao"] == 6.0
        assert res_5.json()["data"][1]["cargaHoraria"] == 40.0
        assert res_5.json()["data"][1]["situacaoAtiva"] == True
        assert res_5.json()["data"][1]["dataIngresso"] == "2015-02-10"
        assert res_5.json()["data"][1]["dataFim"] is None
        assert res_5.json()["data"][1]["codigoFuncao"] == 2.0
        assert res_5.json()["data"][1]["matriculaRede"] == "56789"
        assert res_5.json()["data"][1]["tipoVinculo"] == 0.0
        assert res_5.json()["data"][1]["inep"] == "27014088"
        assert len(res_5.json()["data"][1]["tipoDeficiencia"]) == 3
        assert res_5.json()["data"][1]["tipoDeficiencia"][0] == 1.0
        assert res_5.json()["data"][1]["tipoDeficiencia"][1] == 2.0
        assert res_5.json()["data"][1]["tipoDeficiencia"][2] == 3.0
        assert len(res_5.json()["data"][1]["formacoesAcademicas"]) == 2
        assert res_5.json()["data"][1]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_5.json()["data"][1]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_5.json()["data"][1]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_5.json()["data"][1]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_5.json()["data"][1]["formacoesAcademicas"][0]["principal"] is None
        assert res_5.json()["data"][1]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_5.json()["data"][1]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_5.json()["data"][1]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_5.json()["data"][1]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_5.json()["data"][1]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_5.json()["data"][1]["formacoesAcademicas"][1]["principal"] is None
        assert res_5.json()["data"][1]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_5.json()["data"][2]["tipoEnsinoMedio"] == 2.0
        assert res_5.json()["data"][2]["nivelEscolaridade"] == 10.0
        assert res_5.json()["data"][2]["cpf"] == "31863200037"
        assert res_5.json()["data"][2]["nome"] == "João da Silva 2"
        assert res_5.json()["data"][2]["dataNascimento"] == "1985-06-15"
        assert res_5.json()["data"][2]["genero"] == 1.0
        assert res_5.json()["data"][2]["racaCor"] == 2.0
        assert res_5.json()["data"][2]["email"] == "joao.silva@email.com"
        assert res_5.json()["data"][2]["telefone"] is None
        assert res_5.json()["data"][2]["nomeSocial"] is None
        assert res_5.json()["data"][2]["logradouro"] == "Rua das Flores"
        assert res_5.json()["data"][2]["bairro"] == "Centro"
        assert res_5.json()["data"][2]["numero"] == "123"
        assert res_5.json()["data"][2]["cep"] == "01001000"
        assert res_5.json()["data"][2]["municipio"] == 2700409.0
        assert res_5.json()["data"][2]["uf"] == 27.0
        assert res_5.json()["data"][2]["codigoInstituicao"] == 6.0
        assert res_5.json()["data"][2]["cargaHoraria"] == 40.0
        assert res_5.json()["data"][2]["situacaoAtiva"] == True
        assert res_5.json()["data"][2]["dataIngresso"] == "2015-02-10"
        assert res_5.json()["data"][2]["dataFim"] is None
        assert res_5.json()["data"][2]["codigoFuncao"] == 2.0
        assert res_5.json()["data"][2]["matriculaRede"] == "56789"
        assert res_5.json()["data"][2]["tipoVinculo"] == 0.0
        assert res_5.json()["data"][2]["inep"] == "27014088"
        assert len(res_5.json()["data"][2]["tipoDeficiencia"]) == 3
        assert res_5.json()["data"][2]["tipoDeficiencia"][0] == 1.0
        assert res_5.json()["data"][2]["tipoDeficiencia"][1] == 2.0
        assert res_5.json()["data"][2]["tipoDeficiencia"][2] == 3.0
        assert len(res_5.json()["data"][2]["formacoesAcademicas"]) == 2
        assert res_5.json()["data"][2]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_5.json()["data"][2]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_5.json()["data"][2]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_5.json()["data"][2]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_5.json()["data"][2]["formacoesAcademicas"][0]["principal"] is None
        assert res_5.json()["data"][2]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_5.json()["data"][2]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_5.json()["data"][2]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_5.json()["data"][2]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_5.json()["data"][2]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_5.json()["data"][2]["formacoesAcademicas"][1]["principal"] is None
        assert res_5.json()["data"][2]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_5.json()["pagination"]["total"] == 3.0
        assert res_5.json()["pagination"]["count"] == 3.0
        assert res_5.json()["pagination"]["per_page"] == 10.0
        assert res_5.json()["pagination"]["current_page"] == 1.0
        assert res_5.json()["pagination"]["total_pages"] == 1.0
        assert res_5.json()["pagination"]["links"]["previous"] is None
        assert res_5.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_6 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/solicitacoes-alteracoes?cpfNovo=49255179888",
                    headers=headers)
        
        assert res_6.status_code == 200
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == True
        assert res_6.json()["message"] == "Operação realizada com sucesso"
        assert len(res_6.json()["data"]) == 2
        assert res_6.json()["data"][0]["cpfAtual"] == "49255179888"
        assert res_6.json()["data"][0]["cpfNovo"] == "49255179888"
        assert res_6.json()["data"][0]["situacaoCpf"] is None
        assert res_6.json()["data"][0]["descricaoSituacaoCpf"] is None
        assert res_6.json()["data"][0]["tipoSituacaoCpf"] is None
        assert res_6.json()["data"][0]["nomeAtual"] == "111"
        assert res_6.json()["data"][0]["nomeNovo"] == "JV2"
        assert res_6.json()["data"][0]["nomeValidado"] is None
        assert res_6.json()["data"][0]["dataNascimentoAtual"] == "2024-12-28"
        assert res_6.json()["data"][0]["dataNascimentoNovo"] == "2024-12-28"
        assert res_6.json()["data"][0]["dataNascimentoValidada"] is None
        assert res_6.json()["data"][0]["nomeMaeEstudanteAtual"] == "Valentina Rezende"
        assert res_6.json()["data"][0]["nomeMaeEstudanteNovo"] == "Valentina Rezende"
        assert res_6.json()["data"][0]["nomeMaeEstudanteValidado"] is None
        assert res_6.json()["data"][0]["dataValidacaoCadastral"] is None
        assert res_6.json()["data"][1]["cpfAtual"] == "63535460689"
        assert res_6.json()["data"][1]["cpfNovo"] == "49255179888"
        assert res_6.json()["data"][1]["situacaoCpf"] is None
        assert res_6.json()["data"][1]["descricaoSituacaoCpf"] is None
        assert res_6.json()["data"][1]["tipoSituacaoCpf"] is None
        assert res_6.json()["data"][1]["nomeAtual"] == "Miss Meredith Muller"
        assert res_6.json()["data"][1]["nomeNovo"] == "Miss Meredith Muller"
        assert res_6.json()["data"][1]["nomeValidado"] is None
        assert res_6.json()["data"][1]["dataNascimentoAtual"] == "2024-12-28"
        assert res_6.json()["data"][1]["dataNascimentoNovo"] == "2024-12-28"
        assert res_6.json()["data"][1]["dataNascimentoValidada"] is None
        assert res_6.json()["data"][1]["nomeMaeEstudanteAtual"] == "Jessica Frami"
        assert res_6.json()["data"][1]["nomeMaeEstudanteNovo"] == "Jessica Frami"
        assert res_6.json()["data"][1]["nomeMaeEstudanteValidado"] is None
        assert res_6.json()["data"][1]["dataValidacaoCadastral"] is None
        assert res_6.json()["pagination"]["total"] == 2.0
        assert res_6.json()["pagination"]["count"] == 2.0
        assert res_6.json()["pagination"]["per_page"] == 15.0
        assert res_6.json()["pagination"]["current_page"] == 1.0
        assert res_6.json()["pagination"]["total_pages"] == 1.0
        assert res_6.json()["pagination"]["links"]["previous"] is None
        assert res_6.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # 1 - (500) POST:/v1/estudantes
    # 2 - (422) POST:/v1/profissionais/lote
    # 3 - (500) POST:/v1/estudantes
    # 4 - (500) POST:/v1/estudantes
    # 5 - (200) GET:/v1/profissionais/lote
    # 6 - (422) POST:/v1/profissionais
    # 7 - (404) GET:/v1/profissionais/{cpf}
    # 8 - (200) GET:/v1/estudantes
    # 9 - (500) GET:/v1/profissionais/inep/{inep}
    # Found 20 potential faults. Type-codes: 100, 200
    # Using 2 examples:
    #   2014
    #   Universidade Federal do Rio de Janeiro
    @timeout_decorator.timeout(60)
    def test_15_with500(self):
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"57053580598\", " + \
            " \"nomeMaeEstudante\": \"Ruan Muniz\", " + \
            " \"nome\": \"Ana Lívia da Fonseca Filho\", " + \
            " \"genero\": 5, " + \
            " \"racaCor\": 5, " + \
            " \"telefone\": \"ObvNE3Xzd\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 3, " + \
            " 658, " + \
            " 2, " + \
            " 5 " + \
            " ], " + \
            " \"sexo\": \"3\", " + \
            " \"orgaoEmissor\": \"y6C\", " + \
            " \"certidaoNascimento\": \"67126848004846978960212993830059\", " + \
            " \"logradouro\": \"Rua Rua Walter\", " + \
            " \"numero\": \"67899\", " + \
            " \"municipio\": 3123908, " + \
            " \"serieAno\": 64, " + \
            " \"matriculaRede\": \"e2XouiaD2aNA 8\", " + \
            " \"inep\": 29182166, " + \
            " \"dataInicioPeriodoLetivo\": \"2084-02-29\", " + \
            " \"estudanteIntegral\": 1 " + \
            " } "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_0.status_code == 500
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Ocorreu um erro."
        assert res_0.json()["errors"]["message"] == "O campo dataNascimento é obrigatório. (and 1 more error)"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_1.status_code == 422
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "JSON inválido."
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"93537215983\", " + \
            " \"genero\": 9, " + \
            " \"email\": \"hortencia.ester.pacheco.jr@fake.com\", " + \
            " \"numeroNIS\": \"kf\", " + \
            " \"certidaoNascimento\": \"01904932814291592855911903270076\", " + \
            " \"logradouro\": \"Rua Av. Cristiana Perez\", " + \
            " \"bairro\": \"São Alcantara\", " + \
            " \"municipio\": 2408102, " + \
            " \"estudantePpl\": 42, " + \
            " \"dataInicioMatricula\": \"2041-09-05\", " + \
            " \"serieAno\": 567, " + \
            " \"instituicao\": 186425, " + \
            " \"inep\": 42012830, " + \
            " \"dataInicioPeriodoLetivo\": \"1961-13-06\", " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 3, " + \
            " \"estudanteIntegral\": 42 " + \
            " } "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_2.status_code == 500
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Ocorreu um erro."
        assert res_2.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"numeroNISResponsavel\": \"04677569800\", " + \
            " \"cpf\": \"F6NoOha6\", " + \
            " \"genero\": 7, " + \
            " \"email\": \"alonso.corona.filho@fake.com\", " + \
            " \"sexo\": \"2\", " + \
            " \"numeroNIS\": \"76669562164\", " + \
            " \"orgaoEmissor\": \"SSP-RN\", " + \
            " \"logradouro\": \"Rua Largo Madalena\", " + \
            " \"municipio\": 2700409, " + \
            " \"serieAno\": 27, " + \
            " \"inep\": 719, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 4, " + \
            " \"anoMatricula\": 606 " + \
            " } "
        headers['Accept'] = "application/json"
        res_3 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_3.status_code == 500
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "Ocorreu um erro."
        assert res_3.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/0/dataEnvio'] String "2025-05-03 23:45:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1/dataEnvio'] String "2025-05-03 23:45:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2/dataEnvio'] String "2025-05-03 23:44:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/3/dataEnvio'] String "2025-05-03 23:40:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/4/dataEnvio'] String "2025-05-03 23:39:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/5/dataEnvio'] String "2025-05-03 23:38:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/6/dataEnvio'] String "2025-05-03 23:36:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/7/dataEnvio'] String "2025-05-03 23:35:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/8/dataEnvio'] String "2025-05-03 23:33:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/9/dataEnvio'] String "2025-05-03 23:28:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_4.json()["data"]) == 10
        assert res_4.json()["data"][0]["dataEnvio"] == "2025-05-03 23:45:41"
        assert res_4.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_4.json()["data"][1]["dataEnvio"] == "2025-05-03 23:45:09"
        assert res_4.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_4.json()["data"][2]["dataEnvio"] == "2025-05-03 23:44:33"
        assert res_4.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_4.json()["pagination"]["total"] == 2389.0
        assert res_4.json()["pagination"]["count"] == 10.0
        assert res_4.json()["pagination"]["per_page"] == 10.0
        assert res_4.json()["pagination"]["current_page"] == 1.0
        assert res_4.json()["pagination"]["total_pages"] == 239.0
        assert res_4.json()["pagination"]["links"]["previous"] is None
        assert res_4.json()["pagination"]["links"]["next"] == 2.0
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"cpf\": \"48383102429\", " + \
            " \"nome\": \"Emilly Campos Neto\", " + \
            " \"genero\": 4, " + \
            " \"racaCor\": 4, " + \
            " \"logradouro\": \"Rua R. Marinho\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": -742716294, " + \
            " \"anoInicioFormacaoAcademica\": 63, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 571, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoInicioFormacaoAcademica\": 2016, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Rio de Janeiro\", " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " } " + \
            " ], " + \
            " \"tipoVinculo\": 596, " + \
            " \"cargaHoraria\": 40 " + \
            " } "
        headers['Accept'] = "application/json"
        res_5 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_5.status_code == 422
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #2 ($dataNascimento) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_6 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/LQn5Qwuc",
                    headers=headers)
        
        assert res_6.status_code == 404
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == False
        assert res_6.json()["message"] == "Nenhum profissional de educação encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_7 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?" + 
                    "page=637&" + 
                    "ano_matricula=2024",
                    headers=headers)
        
        assert res_7.status_code == 200
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == True
        assert res_7.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_7.json()["data"]) == 10
        assert res_7.json()["data"][0]["cpf"] == "45884611170"
        assert res_7.json()["data"][0]["nome"] == "Agustina Velasques Ferreira"
        assert res_7.json()["data"][0]["nomeSocial"] is None
        assert res_7.json()["data"][0]["numeroNIS"] == "24228660570"
        assert res_7.json()["data"][0]["rg"] == "5317480698499031"
        assert res_7.json()["data"][0]["orgaoEmissor"] == "SSP-RS"
        assert res_7.json()["data"][0]["cpfResponsavel"] == "53106004851"
        assert res_7.json()["data"][0]["nomeMaeEstudante"] == "Sra. Daniele Luísa Ferreira Sobrinho"
        assert res_7.json()["data"][0]["numeroNISResponsavel"] == "11467129237"
        assert res_7.json()["data"][0]["dataNascimento"] == "2008-01-22"
        assert res_7.json()["data"][0]["logradouro"] == "Rua Rua Rafael"
        assert res_7.json()["data"][0]["bairro"] == "São Garcia"
        assert res_7.json()["data"][0]["numero"] == "4"
        assert res_7.json()["data"][0]["cep"] == "16244205"
        assert res_7.json()["data"][0]["municipio"] == 4314902.0
        assert res_7.json()["data"][0]["certidaoNascimento"] == "90636083364866123901590604325176"
        assert res_7.json()["data"][0]["cnh"] is None
        assert res_7.json()["data"][0]["uf"] == 43.0
        assert res_7.json()["data"][0]["racaCor"] == 3.0
        assert len(res_7.json()["data"][0]["tipoDeficiencia"]) == 0
        assert res_7.json()["data"][0]["genero"] == 4.0
        assert res_7.json()["data"][0]["telefone"] is None
        assert res_7.json()["data"][0]["email"] == "agustina.velasques.ferreira@fake.com"
        assert res_7.json()["data"][0]["situacaoCadastroValidado"] is None
        assert len(res_7.json()["data"][0]["matriculas"]) == 1
        assert res_7.json()["data"][0]["matriculas"][0]["codigoMatriculaSgp"] == 1.0096644E7
        assert res_7.json()["data"][0]["matriculas"][0]["codInstituicao"] == 217710.0
        assert res_7.json()["data"][0]["matriculas"][0]["dataInicioMatricula"] == "2024-01-01"
        assert res_7.json()["data"][0]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_7.json()["data"][0]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_7.json()["data"][0]["matriculas"][0]["situacaoMatricula"] == True
        assert res_7.json()["data"][0]["matriculas"][0]["serieAno"] == 27.0
        assert res_7.json()["data"][0]["matriculas"][0]["etapaEnsinoConsolidado"] == "Ensino Médio"
        assert res_7.json()["data"][0]["matriculas"][0]["matriculaRede"] is None
        assert res_7.json()["data"][0]["matriculas"][0]["deletadaEm"] is None
        assert res_7.json()["data"][0]["matriculas"][0]["inep"] == "52031330"
        assert res_7.json()["data"][0]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_7.json()["data"][0]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_7.json()["data"][0]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_7.json()["data"][0]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_7.json()["data"][0]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_7.json()["data"][0]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_7.json()["data"][0]["matriculas"][0]["estudanteIntegral"] is None
        assert res_7.json()["data"][0]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_7.json()["data"][0]["matriculas"][0]["anoMatricula"] is None
        assert len(res_7.json()["data"][0]["outrasMatriculas"]) == 0
        assert res_7.json()["data"][1]["cpf"] == "88666057190"
        assert res_7.json()["data"][1]["nome"] == "Agustina Velasques Neto"
        assert res_7.json()["data"][1]["nomeSocial"] is None
        assert res_7.json()["data"][1]["numeroNIS"] == "88706553067"
        assert res_7.json()["data"][1]["rg"] == "9085097911462356"
        assert res_7.json()["data"][1]["orgaoEmissor"] == "SSP-SP"
        assert res_7.json()["data"][1]["cpfResponsavel"] == "78938424740"
        assert res_7.json()["data"][1]["nomeMaeEstudante"] == "Dr. Vanessa Galindo Prado Sobrinho"
        assert res_7.json()["data"][1]["numeroNISResponsavel"] == "02955900391"
        assert res_7.json()["data"][1]["dataNascimento"] == "2005-10-08"
        assert res_7.json()["data"][1]["logradouro"] == "Rua Av. José"
        assert res_7.json()["data"][1]["bairro"] == "São Colaço"
        assert res_7.json()["data"][1]["numero"] == "794"
        assert res_7.json()["data"][1]["cep"] == "11816112"
        assert res_7.json()["data"][1]["municipio"] == 3550308.0
        assert res_7.json()["data"][1]["certidaoNascimento"] == "31513985991538669744993777257554"
        assert res_7.json()["data"][1]["cnh"] is None
        assert res_7.json()["data"][1]["uf"] == 35.0
        assert res_7.json()["data"][1]["racaCor"] == 1.0
        assert len(res_7.json()["data"][1]["tipoDeficiencia"]) == 0
        assert res_7.json()["data"][1]["genero"] == 3.0
        assert res_7.json()["data"][1]["telefone"] is None
        assert res_7.json()["data"][1]["email"] == "agustina.velasques.neto@fake.com"
        assert res_7.json()["data"][1]["situacaoCadastroValidado"] is None
        assert len(res_7.json()["data"][1]["matriculas"]) == 1
        assert res_7.json()["data"][1]["matriculas"][0]["codigoMatriculaSgp"] == 7991428.0
        assert res_7.json()["data"][1]["matriculas"][0]["codInstituicao"] == 199194.0
        assert res_7.json()["data"][1]["matriculas"][0]["dataInicioMatricula"] == "2024-01-01"
        assert res_7.json()["data"][1]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_7.json()["data"][1]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_7.json()["data"][1]["matriculas"][0]["situacaoMatricula"] == True
        assert res_7.json()["data"][1]["matriculas"][0]["serieAno"] == 27.0
        assert res_7.json()["data"][1]["matriculas"][0]["etapaEnsinoConsolidado"] == "Ensino Médio"
        assert res_7.json()["data"][1]["matriculas"][0]["matriculaRede"] is None
        assert res_7.json()["data"][1]["matriculas"][0]["deletadaEm"] is None
        assert res_7.json()["data"][1]["matriculas"][0]["inep"] == "42152739"
        assert res_7.json()["data"][1]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_7.json()["data"][1]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_7.json()["data"][1]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_7.json()["data"][1]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_7.json()["data"][1]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_7.json()["data"][1]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_7.json()["data"][1]["matriculas"][0]["estudanteIntegral"] is None
        assert res_7.json()["data"][1]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_7.json()["data"][1]["matriculas"][0]["anoMatricula"] is None
        assert len(res_7.json()["data"][1]["outrasMatriculas"]) == 0
        assert res_7.json()["data"][2]["cpf"] == "22064712801"
        assert res_7.json()["data"][2]["nome"] == "Agustina Velasques Queirós"
        assert res_7.json()["data"][2]["nomeSocial"] is None
        assert res_7.json()["data"][2]["numeroNIS"] == "64779136671"
        assert res_7.json()["data"][2]["rg"] == "9639001038237271"
        assert res_7.json()["data"][2]["orgaoEmissor"] == "SSP-RJ"
        assert res_7.json()["data"][2]["cpfResponsavel"] == "98874425260"
        assert res_7.json()["data"][2]["nomeMaeEstudante"] == "Srta. Luara Pedrosa"
        assert res_7.json()["data"][2]["numeroNISResponsavel"] == "12211188780"
        assert res_7.json()["data"][2]["dataNascimento"] == "2007-06-03"
        assert res_7.json()["data"][2]["logradouro"] == "Rua R. Mário Correia"
        assert res_7.json()["data"][2]["bairro"] == "São Galvão"
        assert res_7.json()["data"][2]["numero"] == "87"
        assert res_7.json()["data"][2]["cep"] == "29973538"
        assert res_7.json()["data"][2]["municipio"] == 3304557.0
        assert res_7.json()["data"][2]["certidaoNascimento"] == "85599646314740687817955956438653"
        assert res_7.json()["data"][2]["cnh"] is None
        assert res_7.json()["data"][2]["uf"] == 33.0
        assert res_7.json()["data"][2]["racaCor"] == 1.0
        assert len(res_7.json()["data"][2]["tipoDeficiencia"]) == 0
        assert res_7.json()["data"][2]["genero"] == 2.0
        assert res_7.json()["data"][2]["telefone"] is None
        assert res_7.json()["data"][2]["email"] == "agustina.velasques.queiros@fake.com"
        assert res_7.json()["data"][2]["situacaoCadastroValidado"] is None
        assert len(res_7.json()["data"][2]["matriculas"]) == 1
        assert res_7.json()["data"][2]["matriculas"][0]["codigoMatriculaSgp"] == 7931996.0
        assert res_7.json()["data"][2]["matriculas"][0]["codInstituicao"] == 188205.0
        assert res_7.json()["data"][2]["matriculas"][0]["dataInicioMatricula"] == "2024-01-01"
        assert res_7.json()["data"][2]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_7.json()["data"][2]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_7.json()["data"][2]["matriculas"][0]["situacaoMatricula"] == True
        assert res_7.json()["data"][2]["matriculas"][0]["serieAno"] == 25.0
        assert res_7.json()["data"][2]["matriculas"][0]["etapaEnsinoConsolidado"] == "Ensino Médio"
        assert res_7.json()["data"][2]["matriculas"][0]["matriculaRede"] is None
        assert res_7.json()["data"][2]["matriculas"][0]["deletadaEm"] is None
        assert res_7.json()["data"][2]["matriculas"][0]["inep"] == "41144180"
        assert res_7.json()["data"][2]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_7.json()["data"][2]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_7.json()["data"][2]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_7.json()["data"][2]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_7.json()["data"][2]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_7.json()["data"][2]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_7.json()["data"][2]["matriculas"][0]["estudanteIntegral"] is None
        assert res_7.json()["data"][2]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_7.json()["data"][2]["matriculas"][0]["anoMatricula"] is None
        assert len(res_7.json()["data"][2]["outrasMatriculas"]) == 0
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_7.json()["pagination"]["total"] == 598560.0
        assert res_7.json()["pagination"]["count"] == 10.0
        assert res_7.json()["pagination"]["per_page"] == 10.0
        assert res_7.json()["pagination"]["current_page"] == 637.0
        assert res_7.json()["pagination"]["total_pages"] == 59856.0
        assert res_7.json()["pagination"]["links"]["previous"] == 636.0
        assert res_7.json()["pagination"]["links"]["next"] == 638.0
        
        # Fault100. HTTP Status 500. GET:/v1/profissionais/inep/{inep}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_8 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/inep/29476720?" + 
                    "page=27&" + 
                    "per_page=1222576320",
                    headers=headers)
        
        assert res_8.status_code == 500
        assert "application/json" in res_8.headers["content-type"]
        assert res_8.json()["success"] == False
        assert res_8.json()["message"] == "Ocorreu um erro."
        assert res_8.json()["errors"]["message"] == "A quantidade máxima de registros por página é de 5000 registros."
    
    
    # Calls:
    # 1 - (400) GET:/v1/profissionais/lote/{id}/erros
    # 2 - (500) GET:/v1/estudantes
    # 3 - (200) GET:/v1/estudantes
    # 4 - (200) PATCH:/v1/estudantes/lote
    # 5 - (200) GET:/v1/estudantes/lote
    # 6 - (500) POST:/v1/estudantes
    # 7 - (200) GET:/v1/estudantes/lote
    # 8 - (404) GET:/v1/profissionais/{cpf}
    # Found 11 potential faults. Type-codes: 100, 200
    @timeout_decorator.timeout(60)
    def test_16_with500(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id}/erros -> Response status 400 not defined for path '/v1/profissionais/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/43/erros?per_page=426",
                    headers=headers)
        
        assert res_0.status_code == 400
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "O ID fornecido não é um UUID válido. ID: 43"
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?" + 
                    "per_page=283&" + 
                    "ano_matricula=2024&" + 
                    "situacao_final=EVOMASTER",
                    headers=headers)
        
        assert res_1.status_code == 500
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Ocorreu um erro inesperado."
        assert res_1.json()["errors"]["message"] == "O campo situacao_final é inválido."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?ano_matricula=2024",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_2.json()["data"]) == 10
        assert res_2.json()["data"][0]["cpf"] == "49255179888"
        assert res_2.json()["data"][0]["nome"] == "111"
        assert res_2.json()["data"][0]["nomeSocial"] == "test"
        assert res_2.json()["data"][0]["numeroNIS"] is None
        assert res_2.json()["data"][0]["rg"] == "22307981"
        assert res_2.json()["data"][0]["orgaoEmissor"] == "SSP"
        assert res_2.json()["data"][0]["cpfResponsavel"] == "48405399283"
        assert res_2.json()["data"][0]["nomeMaeEstudante"] == "Valentina Rezende"
        assert res_2.json()["data"][0]["numeroNISResponsavel"] == "64668522654"
        assert res_2.json()["data"][0]["dataNascimento"] == "2024-12-28"
        assert res_2.json()["data"][0]["logradouro"] == "Rua teste"
        assert res_2.json()["data"][0]["bairro"] == "Santa Lucia"
        assert res_2.json()["data"][0]["numero"] == "220"
        assert res_2.json()["data"][0]["cep"] == "57018780"
        assert res_2.json()["data"][0]["municipio"] == 1100940.0
        assert res_2.json()["data"][0]["certidaoNascimento"] == "33333333"
        assert res_2.json()["data"][0]["cnh"] == "3333333"
        assert res_2.json()["data"][0]["uf"] == 11.0
        assert res_2.json()["data"][0]["racaCor"] == 3.0
        assert len(res_2.json()["data"][0]["tipoDeficiencia"]) == 3
        assert res_2.json()["data"][0]["tipoDeficiencia"][0] == 1.0
        assert res_2.json()["data"][0]["tipoDeficiencia"][1] == 2.0
        assert res_2.json()["data"][0]["tipoDeficiencia"][2] == 3.0
        assert res_2.json()["data"][0]["genero"] == 3.0
        assert res_2.json()["data"][0]["telefone"] == "3333333"
        assert res_2.json()["data"][0]["email"] == "AFTER-TWO@AFTER-TWO.com"
        assert res_2.json()["data"][0]["situacaoCadastroValidado"] == 3.0
        assert len(res_2.json()["data"][0]["matriculas"]) == 1
        assert res_2.json()["data"][0]["matriculas"][0]["codigoMatriculaSgp"] == 1733024.0
        assert res_2.json()["data"][0]["matriculas"][0]["codInstituicao"] == 7259.0
        assert res_2.json()["data"][0]["matriculas"][0]["dataInicioMatricula"] == "2024-09-28"
        assert res_2.json()["data"][0]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_2.json()["data"][0]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_2.json()["data"][0]["matriculas"][0]["situacaoMatricula"] == True
        assert res_2.json()["data"][0]["matriculas"][0]["serieAno"] == 74.0
        assert res_2.json()["data"][0]["matriculas"][0]["etapaEnsinoConsolidado"] == "Formação inicial continuada ou qualificação profissional (FIC)"
        assert res_2.json()["data"][0]["matriculas"][0]["matriculaRede"] == "Teste Ricardo"
        assert res_2.json()["data"][0]["matriculas"][0]["deletadaEm"] is None
        assert res_2.json()["data"][0]["matriculas"][0]["inep"] == "12005037"
        assert res_2.json()["data"][0]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_2.json()["data"][0]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_2.json()["data"][0]["matriculas"][0]["dataInicioPeriodoLetivo"] == "2024-09-28"
        assert res_2.json()["data"][0]["matriculas"][0]["formaOrganizacaoTurma"] == 1.0
        assert res_2.json()["data"][0]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] == 0.0
        assert res_2.json()["data"][0]["matriculas"][0]["estudanteAnoPeriodo"] == 1.0
        assert res_2.json()["data"][0]["matriculas"][0]["estudanteIntegral"] == True
        assert res_2.json()["data"][0]["matriculas"][0]["dataAtivacaoMatricula"] == "2024-09-27 00:00:00"
        assert res_2.json()["data"][0]["matriculas"][0]["anoMatricula"] == 2024.0
        assert len(res_2.json()["data"][0]["outrasMatriculas"]) == 0
        assert res_2.json()["data"][1]["cpf"] == "67089268578"
        assert res_2.json()["data"][1]["nome"] == "6cc97vMeCP9KgSI"
        assert res_2.json()["data"][1]["nomeSocial"] == "rRAEEBPUPdYf"
        assert res_2.json()["data"][1]["numeroNIS"] == "30183310316"
        assert res_2.json()["data"][1]["rg"] == "53669048"
        assert res_2.json()["data"][1]["orgaoEmissor"] == "i4tf"
        assert res_2.json()["data"][1]["cpfResponsavel"] == "52008260631"
        assert res_2.json()["data"][1]["nomeMaeEstudante"] == "7aTq92Zi"
        assert res_2.json()["data"][1]["numeroNISResponsavel"] == "11273745692"
        assert res_2.json()["data"][1]["dataNascimento"] == "2008-10-29"
        assert res_2.json()["data"][1]["logradouro"] == "rWjgYPU1P8"
        assert res_2.json()["data"][1]["bairro"] == "G5tQ1ZJN0"
        assert res_2.json()["data"][1]["numero"] == "55"
        assert res_2.json()["data"][1]["cep"] == "19141821"
        assert res_2.json()["data"][1]["municipio"] == 4200705.0
        assert res_2.json()["data"][1]["certidaoNascimento"] == "373271505447"
        assert res_2.json()["data"][1]["cnh"] == "56267273661"
        assert res_2.json()["data"][1]["uf"] == 42.0
        assert res_2.json()["data"][1]["racaCor"] == 0.0
        assert len(res_2.json()["data"][1]["tipoDeficiencia"]) == 3
        assert res_2.json()["data"][1]["tipoDeficiencia"][0] == 1.0
        assert res_2.json()["data"][1]["tipoDeficiencia"][1] == 2.0
        assert res_2.json()["data"][1]["tipoDeficiencia"][2] == 3.0
        assert res_2.json()["data"][1]["genero"] == 4.0
        assert res_2.json()["data"][1]["telefone"] == "11969630845"
        assert res_2.json()["data"][1]["email"] == "RTT0VngF3Deo0O@example.com"
        assert res_2.json()["data"][1]["situacaoCadastroValidado"] == 4.0
        assert len(res_2.json()["data"][1]["matriculas"]) == 1
        assert res_2.json()["data"][1]["matriculas"][0]["codigoMatriculaSgp"] == 1.020298E7
        assert res_2.json()["data"][1]["matriculas"][0]["codInstituicao"] == 81776.0
        assert res_2.json()["data"][1]["matriculas"][0]["dataInicioMatricula"] == "2024-02-19"
        assert res_2.json()["data"][1]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_2.json()["data"][1]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_2.json()["data"][1]["matriculas"][0]["situacaoMatricula"] == True
        assert res_2.json()["data"][1]["matriculas"][0]["serieAno"] == 71.0
        assert res_2.json()["data"][1]["matriculas"][0]["etapaEnsinoConsolidado"] == "EJA - Ensino Médio"
        assert res_2.json()["data"][1]["matriculas"][0]["matriculaRede"] == "jvjvjv1"
        assert res_2.json()["data"][1]["matriculas"][0]["deletadaEm"] is None
        assert res_2.json()["data"][1]["matriculas"][0]["inep"] == "26540720"
        assert res_2.json()["data"][1]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_2.json()["data"][1]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_2.json()["data"][1]["matriculas"][0]["dataInicioPeriodoLetivo"] == "2024-01-29"
        assert res_2.json()["data"][1]["matriculas"][0]["formaOrganizacaoTurma"] == 1.0
        assert res_2.json()["data"][1]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] == 3.0
        assert res_2.json()["data"][1]["matriculas"][0]["estudanteAnoPeriodo"] == 3.0
        assert res_2.json()["data"][1]["matriculas"][0]["estudanteIntegral"] == True
        assert res_2.json()["data"][1]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_2.json()["data"][1]["matriculas"][0]["anoMatricula"] == 2024.0
        assert len(res_2.json()["data"][1]["outrasMatriculas"]) == 0
        assert res_2.json()["data"][2]["cpf"] == "81601036620"
        assert res_2.json()["data"][2]["nome"] == "7nCcq XDiMfCbaJ0cFs"
        assert res_2.json()["data"][2]["nomeSocial"] == "YXWGpw"
        assert res_2.json()["data"][2]["numeroNIS"] == "34442480673"
        assert res_2.json()["data"][2]["rg"] == "21577661"
        assert res_2.json()["data"][2]["orgaoEmissor"] == "vC2a0H9Lv4"
        assert res_2.json()["data"][2]["cpfResponsavel"] == "85307915250"
        assert res_2.json()["data"][2]["nomeMaeEstudante"] == "uoUPQKkc8iCGVq2wAS1"
        assert res_2.json()["data"][2]["numeroNISResponsavel"] == "27296692788"
        assert res_2.json()["data"][2]["dataNascimento"] == "1998-08-08"
        assert res_2.json()["data"][2]["logradouro"] == "01PKhhqGroyvggLAFUEoOHr3Q0KI"
        assert res_2.json()["data"][2]["bairro"] == "nL4bOxhpEiU2PjnP"
        assert res_2.json()["data"][2]["numero"] == "02"
        assert res_2.json()["data"][2]["cep"] == "76984525"
        assert res_2.json()["data"][2]["municipio"] == 4200705.0
        assert res_2.json()["data"][2]["certidaoNascimento"] == "3679215604607"
        assert res_2.json()["data"][2]["cnh"] == "02342004738"
        assert res_2.json()["data"][2]["uf"] == 42.0
        assert res_2.json()["data"][2]["racaCor"] == 2.0
        assert len(res_2.json()["data"][2]["tipoDeficiencia"]) == 3
        assert res_2.json()["data"][2]["tipoDeficiencia"][0] == 1.0
        assert res_2.json()["data"][2]["tipoDeficiencia"][1] == 2.0
        assert res_2.json()["data"][2]["tipoDeficiencia"][2] == 3.0
        assert res_2.json()["data"][2]["genero"] == 3.0
        assert res_2.json()["data"][2]["telefone"] == "11949911257"
        assert res_2.json()["data"][2]["email"] == "4mphnZDvXrC@example.com"
        assert res_2.json()["data"][2]["situacaoCadastroValidado"] == 4.0
        assert len(res_2.json()["data"][2]["matriculas"]) == 1
        assert res_2.json()["data"][2]["matriculas"][0]["codigoMatriculaSgp"] == 1.0202989E7
        assert res_2.json()["data"][2]["matriculas"][0]["codInstituicao"] == 81776.0
        assert res_2.json()["data"][2]["matriculas"][0]["dataInicioMatricula"] == "2024-11-01"
        assert res_2.json()["data"][2]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_2.json()["data"][2]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_2.json()["data"][2]["matriculas"][0]["situacaoMatricula"] == True
        assert res_2.json()["data"][2]["matriculas"][0]["serieAno"] == 58.0
        assert res_2.json()["data"][2]["matriculas"][0]["etapaEnsinoConsolidado"] == "Educação de Jovens e Adultos (EJA) - Fundamental"
        assert res_2.json()["data"][2]["matriculas"][0]["matriculaRede"] == "e2XouiaD2aNA 8"
        assert res_2.json()["data"][2]["matriculas"][0]["deletadaEm"] is None
        assert res_2.json()["data"][2]["matriculas"][0]["inep"] == "26540720"
        assert res_2.json()["data"][2]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_2.json()["data"][2]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_2.json()["data"][2]["matriculas"][0]["dataInicioPeriodoLetivo"] == "2024-10-22"
        assert res_2.json()["data"][2]["matriculas"][0]["formaOrganizacaoTurma"] == 6.0
        assert res_2.json()["data"][2]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] == 4.0
        assert res_2.json()["data"][2]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_2.json()["data"][2]["matriculas"][0]["estudanteIntegral"] == False
        assert res_2.json()["data"][2]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_2.json()["data"][2]["matriculas"][0]["anoMatricula"] is None
        assert len(res_2.json()["data"][2]["outrasMatriculas"]) == 0
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_2.json()["pagination"]["total"] == 598560.0
        assert res_2.json()["pagination"]["count"] == 10.0
        assert res_2.json()["pagination"]["per_page"] == 10.0
        assert res_2.json()["pagination"]["current_page"] == 1.0
        assert res_2.json()["pagination"]["total_pages"] == 59856.0
        assert res_2.json()["pagination"]["links"]["previous"] is None
        assert res_2.json()["pagination"]["links"]["next"] == 2.0
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_63_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_3 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_3.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?per_page=121",
                    headers=headers)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_4.json()["data"]) == 121
        assert res_4.json()["data"][0]["dataEnvio"] == "2025-05-03 23:52:42"
        assert res_4.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_4.json()["data"][1]["dataEnvio"] == "2025-05-03 23:52:09"
        assert res_4.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_4.json()["data"][2]["dataEnvio"] == "2025-05-03 23:52:06"
        assert res_4.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 118 elements. This limit of 3 elements can be increased in the configurations
        assert res_4.json()["pagination"]["total"] == 9464.0
        assert res_4.json()["pagination"]["count"] == 121.0
        assert res_4.json()["pagination"]["per_page"] == 121.0
        assert res_4.json()["pagination"]["current_page"] == 1.0
        assert res_4.json()["pagination"]["total_pages"] == 79.0
        assert res_4.json()["pagination"]["links"]["previous"] is None
        assert res_4.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"51181309050\", " + \
            " \"nomeMaeEstudante\": \"Davi Luca Nogueira Jr.\", " + \
            " \"email\": \"agustina.vieira.jr@fake.com\", " + \
            " \"telefone\": \"11969630845\", " + \
            " \"nomeSocial\": \"IFAHvC2o0k87\", " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"numeroNIS\": \"73710887057\", " + \
            " \"orgaoEmissor\": \"RhoH-mk\", " + \
            " \"cnh\": \"78984121615\", " + \
            " \"logradouro\": \"Rua Avenida Simon\", " + \
            " \"dataInicioMatricula\": \"2077-12-22\", " + \
            " \"matriculaRede\": \"qkoBN\", " + \
            " \"inep\": 29442079, " + \
            " \"formaOrganizacaoTurma\": 2, " + \
            " \"estudanteAnoPeriodo\": 1, " + \
            " \"estudanteIntegral\": 0 " + \
            " } "
        headers['Accept'] = "application/json"
        res_5 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_5.status_code == 500
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "Ocorreu um erro."
        assert res_5.json()["errors"]["message"] == "O campo nome é obrigatório. (and 2 more errors)"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_6 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?" + 
                    "page=201&" + 
                    "per_page=754",
                    headers=headers)
        
        assert res_6.status_code == 200
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == True
        assert res_6.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_6.json()["data"]) == 0
        assert res_6.json()["pagination"]["total"] == 9464.0
        assert res_6.json()["pagination"]["count"] == 0.0
        assert res_6.json()["pagination"]["per_page"] == 754.0
        assert res_6.json()["pagination"]["current_page"] == 201.0
        assert res_6.json()["pagination"]["total_pages"] == 13.0
        assert res_6.json()["pagination"]["links"]["previous"] == 200.0
        assert res_6.json()["pagination"]["links"]["next"] is None
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_7 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/47493561583",
                    headers=headers)
        
        assert res_7.status_code == 404
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == False
        assert res_7.json()["message"] == "Nenhum profissional de educação encontrado."
    
    
    # Calls:
    # 1 - (200) PATCH:/v1/estudantes/lote
    # 2 - (200) GET:/v1/profissionais/lote
    # 3 - (401) GET:/v1/estudantes/solicitacoes-alteracoes
    # 4 - (500) GET:/v1/estudantes/lote/{id}
    # 5 - (500) GET:/v1/estudantes/lote/{id}
    # 6 - (400) GET:/v1/estudantes/lote/{id}/erros
    # 7 - (401) POST:/v1/estudantes/lote
    # 8 - (500) GET:/v1/estudantes/lote/{id}
    # 9 - (200) GET:/v1/profissionais
    # Found 10 potential faults. Type-codes: 100, 200
    # Using 1 example:
    #   25
    @timeout_decorator.timeout(60)
    def test_17_with500(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_77_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_78_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_79_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_80_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_81_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_0.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote?" + 
                    "page=682&" + 
                    "per_page=15",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_1.json()["data"]) == 0
        assert res_1.json()["pagination"]["total"] == 2392.0
        assert res_1.json()["pagination"]["count"] == 0.0
        assert res_1.json()["pagination"]["per_page"] == 15.0
        assert res_1.json()["pagination"]["current_page"] == 682.0
        assert res_1.json()["pagination"]["total_pages"] == 160.0
        assert res_1.json()["pagination"]["links"]["previous"] == 681.0
        assert res_1.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> Response status 401 not defined for path '/v1/estudantes/solicitacoes-alteracoes'.
        headers = {}
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/solicitacoes-alteracoes?" + 
                    "per_page=235&" + 
                    "cpfAtual=93773545959&" + 
                    "cpfNovo=90778210820",
                    headers=headers)
        
        assert res_2.status_code == 401
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Não autorizado"
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes/lote/{id}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/1e1981bc-d7c4-48a8-9fdf-3aad9966fe7b?" + 
                    "per_page=922&" + 
                    "incluir_objetos_processados=true",
                    headers=headers)
        
        assert res_3.status_code == 500
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "Não foi possível recuperar o lote. ID fornecido: 1e1981bc-d7c4-48a8-9fdf-3aad9966fe7b Nenhum lote correspondente foi encontrado."
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes/lote/{id}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/73a9efd8-15ba-4f82-924f-5b28fcdc62bd?page=482",
                    headers=headers)
        
        assert res_4.status_code == 500
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "Não foi possível recuperar o lote. ID fornecido: 73a9efd8-15ba-4f82-924f-5b28fcdc62bd Nenhum lote correspondente foi encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/42/erros",
                    headers=headers)
        
        assert res_5.status_code == 400
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "O ID fornecido não é um UUID válido. ID: 42"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes/lote -> Response status 401 not defined for path '/v1/estudantes/lote'.
        headers = {}
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpfResponsavel\": \"85951397332\", " + \
            " \"nomeMaeEstudante\": \"Sra. Lara Aguiar da Cruz\", " + \
            " \"cpf\": \"\", " + \
            " \"nome\": \"Andrew Kelley\", " + \
            " \"racaCor\": 3, " + \
            " \"nomeSocial\": \"C9Wr\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 2, " + \
            " 2, " + \
            " 3, " + \
            " 10, " + \
            " 5 " + \
            " ], " + \
            " \"numeroNIS\": \"78756087763\", " + \
            " \"rg\": \"2657670738300566\", " + \
            " \"orgaoEmissor\": \"VUVY-Ea\", " + \
            " \"logradouro\": \"Rua Avenida Emanuelly de Freitas\", " + \
            " \"bairro\": \"São Marinho\", " + \
            " \"numero\": \"59402\", " + \
            " \"cep\": \"41582612\", " + \
            " \"serieAno\": 25, " + \
            " \"matriculaRede\": \"3ArBS\", " + \
            " \"inep\": 35004174, " + \
            " \"formaOrganizacaoTurma\": 3, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 7, " + \
            " \"estudanteAnoPeriodo\": 3, " + \
            " \"estudanteIntegral\": 0 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_6 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_6.status_code == 401
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == False
        assert res_6.json()["message"] == "Não autorizado"
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes/lote/{id}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_7 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/ddc444b4-b999-47d5-ad4c-b8db1515df80",
                    headers=headers)
        
        assert res_7.status_code == 500
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == False
        assert res_7.json()["message"] == "Não foi possível recuperar o lote. ID fornecido: ddc444b4-b999-47d5-ad4c-b8db1515df80 Nenhum lote correspondente foi encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_8 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?" + 
                    "page=940&" + 
                    "per_page=121",
                    headers=headers)
        
        assert res_8.status_code == 200
        assert "application/json" in res_8.headers["content-type"]
        assert res_8.json()["success"] == True
        assert res_8.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_8.json()["data"]) == 0
        assert res_8.json()["pagination"]["total"] == 3.0
        assert res_8.json()["pagination"]["count"] == 0.0
        assert res_8.json()["pagination"]["per_page"] == 121.0
        assert res_8.json()["pagination"]["current_page"] == 940.0
        assert res_8.json()["pagination"]["total_pages"] == 1.0
        assert res_8.json()["pagination"]["links"]["previous"] == 939.0
        assert res_8.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # 1 - (422) POST:/v1/profissionais
    # 2 - (200) GET:/v1/estudantes
    # 3 - (500) POST:/v1/estudantes
    # 4 - (401) GET:/v1/profissionais/{cpf}
    # 5 - (200) PATCH:/v1/estudantes/lote
    # 6 - (200) PATCH:/v1/estudantes/lote
    # 7 - (200) GET:/v1/profissionais
    # 8 - (404) GET:/v1/estudantes/validacao-cadastro
    # Found 10 potential faults. Type-codes: 100, 200
    # Using 2 examples:
    #   2014
    #   44
    @timeout_decorator.timeout(60)
    def test_18_with500(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"tipoEnsinoMedio\": 849, " + \
            " \"nivelEscolaridade\": 960, " + \
            " \"cpf\": \"IogOLV\", " + \
            " \"nome\": \"Dosy2xPuR\", " + \
            " \"dataNascimento\": \"XTAY1OVRvwUid3\", " + \
            " \"genero\": 5, " + \
            " \"racaCor\": 5, " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"numero\": \"\", " + \
            " \"municipio\": 820, " + \
            " \"inep\": 415, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 261, " + \
            " \"anoConclusaoFormacaoAcademica\": 91 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 327, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"WVDyWXqOYTQxf0\", " + \
            " \"tipoVinculo\": 146, " + \
            " \"dataIngresso\": \"2075-06-24\", " + \
            " \"dataFim\": \"2035-07-08\", " + \
            " \"cargaHoraria\": 44 " + \
            " } "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_0.status_code == 422
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #10 ($tipoDeficiencia) must be of type array, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?" + 
                    "page=621&" + 
                    "per_page=260&" + 
                    "situacao_matricula=ATIVAS&" + 
                    "ano_matricula=-819205899",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_1.json()["data"]) == 0
        assert res_1.json()["pagination"]["total"] == 0.0
        assert res_1.json()["pagination"]["count"] == 0.0
        assert res_1.json()["pagination"]["per_page"] == 260.0
        assert res_1.json()["pagination"]["current_page"] == 621.0
        assert res_1.json()["pagination"]["total_pages"] == 0.0
        assert res_1.json()["pagination"]["links"]["previous"] == 620.0
        assert res_1.json()["pagination"]["links"]["next"] is None
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"t3HY\", " + \
            " \"numeroNISResponsavel\": \"0Dkg\", " + \
            " \"nomeMaeEstudante\": \"xx\", " + \
            " \"cpf\": \"JsE9BHZ_\", " + \
            " \"nome\": \"QO\", " + \
            " \"nomeSocial\": \"o4CQUp9dE72Saxc1\", " + \
            " \"sexo\": \"1\", " + \
            " \"numeroNIS\": \"cNThPZv9\", " + \
            " \"orgaoEmissor\": \"bRRH4SgvJ\", " + \
            " \"cnh\": \"\", " + \
            " \"municipio\": 1000, " + \
            " \"uf\": 159, " + \
            " \"matriculaRede\": \"jP\", " + \
            " \"instituicao\": 949, " + \
            " \"dataInicioPeriodoLetivo\": \"1973-03-19\", " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 769, " + \
            " \"anoMatricula\": 993 " + \
            " } "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_2.status_code == 500
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Ocorreu um erro."
        assert res_2.json()["errors"]["message"] == "O campo numeroNISResponsavel deve ser numérico. (and 1 more error)"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/{cpf} -> Response status 401 not defined for path '/v1/profissionais/{cpf}'.
        headers = {}
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/nH66DQqNm3d",
                    headers=headers)
        
        assert res_3.status_code == 401
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "Não autorizado"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_13_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_14_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_15_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_16_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_17_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_4 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_4.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_18_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_19_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_20_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_21_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_5 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_5.status_code == 200
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == True
        assert res_5.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_5.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_6 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?" + 
                    "page=1&" + 
                    "per_page=503",
                    headers=headers)
        
        assert res_6.status_code == 200
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == True
        assert res_6.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_6.json()["data"]) == 3
        assert res_6.json()["data"][0]["tipoEnsinoMedio"] == 2.0
        assert res_6.json()["data"][0]["nivelEscolaridade"] == 10.0
        assert res_6.json()["data"][0]["cpf"] == "43839402000"
        assert res_6.json()["data"][0]["nome"] == "João da Silva 2"
        assert res_6.json()["data"][0]["dataNascimento"] == "1985-06-15"
        assert res_6.json()["data"][0]["genero"] == 1.0
        assert res_6.json()["data"][0]["racaCor"] == 2.0
        assert res_6.json()["data"][0]["email"] == "joao.silva@email.com"
        assert res_6.json()["data"][0]["telefone"] is None
        assert res_6.json()["data"][0]["nomeSocial"] is None
        assert res_6.json()["data"][0]["logradouro"] == "Rua das Flores"
        assert res_6.json()["data"][0]["bairro"] == "Centro"
        assert res_6.json()["data"][0]["numero"] == "123"
        assert res_6.json()["data"][0]["cep"] == "01001000"
        assert res_6.json()["data"][0]["municipio"] == 2700409.0
        assert res_6.json()["data"][0]["uf"] == 27.0
        assert res_6.json()["data"][0]["codigoInstituicao"] == 6.0
        assert res_6.json()["data"][0]["cargaHoraria"] == 40.0
        assert res_6.json()["data"][0]["situacaoAtiva"] == True
        assert res_6.json()["data"][0]["dataIngresso"] == "2015-02-10"
        assert res_6.json()["data"][0]["dataFim"] is None
        assert res_6.json()["data"][0]["codigoFuncao"] == 2.0
        assert res_6.json()["data"][0]["matriculaRede"] == "56789"
        assert res_6.json()["data"][0]["tipoVinculo"] == 0.0
        assert res_6.json()["data"][0]["inep"] == "27014088"
        assert len(res_6.json()["data"][0]["tipoDeficiencia"]) == 3
        assert res_6.json()["data"][0]["tipoDeficiencia"][0] == 1.0
        assert res_6.json()["data"][0]["tipoDeficiencia"][1] == 2.0
        assert res_6.json()["data"][0]["tipoDeficiencia"][2] == 3.0
        assert len(res_6.json()["data"][0]["formacoesAcademicas"]) == 2
        assert res_6.json()["data"][0]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_6.json()["data"][0]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_6.json()["data"][0]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_6.json()["data"][0]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_6.json()["data"][0]["formacoesAcademicas"][0]["principal"] is None
        assert res_6.json()["data"][0]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_6.json()["data"][0]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_6.json()["data"][0]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_6.json()["data"][0]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_6.json()["data"][0]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_6.json()["data"][0]["formacoesAcademicas"][1]["principal"] is None
        assert res_6.json()["data"][0]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_6.json()["data"][1]["tipoEnsinoMedio"] == 2.0
        assert res_6.json()["data"][1]["nivelEscolaridade"] == 10.0
        assert res_6.json()["data"][1]["cpf"] == "33722248094"
        assert res_6.json()["data"][1]["nome"] == "João da Silva 2"
        assert res_6.json()["data"][1]["dataNascimento"] == "1985-06-15"
        assert res_6.json()["data"][1]["genero"] == 1.0
        assert res_6.json()["data"][1]["racaCor"] == 2.0
        assert res_6.json()["data"][1]["email"] == "joao.silva@email.com"
        assert res_6.json()["data"][1]["telefone"] is None
        assert res_6.json()["data"][1]["nomeSocial"] is None
        assert res_6.json()["data"][1]["logradouro"] == "Rua das Flores"
        assert res_6.json()["data"][1]["bairro"] == "Centro"
        assert res_6.json()["data"][1]["numero"] == "123"
        assert res_6.json()["data"][1]["cep"] == "01001000"
        assert res_6.json()["data"][1]["municipio"] == 2700409.0
        assert res_6.json()["data"][1]["uf"] == 27.0
        assert res_6.json()["data"][1]["codigoInstituicao"] == 6.0
        assert res_6.json()["data"][1]["cargaHoraria"] == 40.0
        assert res_6.json()["data"][1]["situacaoAtiva"] == True
        assert res_6.json()["data"][1]["dataIngresso"] == "2015-02-10"
        assert res_6.json()["data"][1]["dataFim"] is None
        assert res_6.json()["data"][1]["codigoFuncao"] == 2.0
        assert res_6.json()["data"][1]["matriculaRede"] == "56789"
        assert res_6.json()["data"][1]["tipoVinculo"] == 0.0
        assert res_6.json()["data"][1]["inep"] == "27014088"
        assert len(res_6.json()["data"][1]["tipoDeficiencia"]) == 3
        assert res_6.json()["data"][1]["tipoDeficiencia"][0] == 1.0
        assert res_6.json()["data"][1]["tipoDeficiencia"][1] == 2.0
        assert res_6.json()["data"][1]["tipoDeficiencia"][2] == 3.0
        assert len(res_6.json()["data"][1]["formacoesAcademicas"]) == 2
        assert res_6.json()["data"][1]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_6.json()["data"][1]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_6.json()["data"][1]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_6.json()["data"][1]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_6.json()["data"][1]["formacoesAcademicas"][0]["principal"] is None
        assert res_6.json()["data"][1]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_6.json()["data"][1]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_6.json()["data"][1]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_6.json()["data"][1]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_6.json()["data"][1]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_6.json()["data"][1]["formacoesAcademicas"][1]["principal"] is None
        assert res_6.json()["data"][1]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_6.json()["data"][2]["tipoEnsinoMedio"] == 2.0
        assert res_6.json()["data"][2]["nivelEscolaridade"] == 10.0
        assert res_6.json()["data"][2]["cpf"] == "31863200037"
        assert res_6.json()["data"][2]["nome"] == "João da Silva 2"
        assert res_6.json()["data"][2]["dataNascimento"] == "1985-06-15"
        assert res_6.json()["data"][2]["genero"] == 1.0
        assert res_6.json()["data"][2]["racaCor"] == 2.0
        assert res_6.json()["data"][2]["email"] == "joao.silva@email.com"
        assert res_6.json()["data"][2]["telefone"] is None
        assert res_6.json()["data"][2]["nomeSocial"] is None
        assert res_6.json()["data"][2]["logradouro"] == "Rua das Flores"
        assert res_6.json()["data"][2]["bairro"] == "Centro"
        assert res_6.json()["data"][2]["numero"] == "123"
        assert res_6.json()["data"][2]["cep"] == "01001000"
        assert res_6.json()["data"][2]["municipio"] == 2700409.0
        assert res_6.json()["data"][2]["uf"] == 27.0
        assert res_6.json()["data"][2]["codigoInstituicao"] == 6.0
        assert res_6.json()["data"][2]["cargaHoraria"] == 40.0
        assert res_6.json()["data"][2]["situacaoAtiva"] == True
        assert res_6.json()["data"][2]["dataIngresso"] == "2015-02-10"
        assert res_6.json()["data"][2]["dataFim"] is None
        assert res_6.json()["data"][2]["codigoFuncao"] == 2.0
        assert res_6.json()["data"][2]["matriculaRede"] == "56789"
        assert res_6.json()["data"][2]["tipoVinculo"] == 0.0
        assert res_6.json()["data"][2]["inep"] == "27014088"
        assert len(res_6.json()["data"][2]["tipoDeficiencia"]) == 3
        assert res_6.json()["data"][2]["tipoDeficiencia"][0] == 1.0
        assert res_6.json()["data"][2]["tipoDeficiencia"][1] == 2.0
        assert res_6.json()["data"][2]["tipoDeficiencia"][2] == 3.0
        assert len(res_6.json()["data"][2]["formacoesAcademicas"]) == 2
        assert res_6.json()["data"][2]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_6.json()["data"][2]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_6.json()["data"][2]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_6.json()["data"][2]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_6.json()["data"][2]["formacoesAcademicas"][0]["principal"] is None
        assert res_6.json()["data"][2]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_6.json()["data"][2]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_6.json()["data"][2]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_6.json()["data"][2]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_6.json()["data"][2]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_6.json()["data"][2]["formacoesAcademicas"][1]["principal"] is None
        assert res_6.json()["data"][2]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_6.json()["pagination"]["total"] == 3.0
        assert res_6.json()["pagination"]["count"] == 3.0
        assert res_6.json()["pagination"]["per_page"] == 503.0
        assert res_6.json()["pagination"]["current_page"] == 1.0
        assert res_6.json()["pagination"]["total_pages"] == 1.0
        assert res_6.json()["pagination"]["links"]["previous"] is None
        assert res_6.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> Response status 404 not defined for path '/v1/estudantes/validacao-cadastro'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_7 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/validacao-cadastro?" + 
                    "page=397&" + 
                    "cpf=oMxeIJLbBll5Zr",
                    headers=headers)
        
        assert res_7.status_code == 404
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == False
        assert res_7.json()["message"] == "Ocorreu um erro inesperado."
        assert res_7.json()["errors"]["message"] == "Nenhum dado encontrado"
    
    
    # Calls:
    # 1 - (500) GET:/v1/estudantes
    # 2 - (401) PATCH:/v1/estudantes/lote
    # 3 - (422) PATCH:/v1/estudantes/lote
    # 4 - (200) GET:/v1/profissionais
    # 5 - (400) GET:/v1/estudantes/lote/{id}/erros
    # 6 - (200) GET:/v1/profissionais/inep/{inep}
    # 7 - (201) POST:/v1/estudantes/lote
    # 8 - (400) GET:/v1/profissionais/lote/{id}
    # 9 - (404) GET:/v1/estudantes/solicitacoes-alteracoes
    # Found 9 potential faults. Type-codes: 100, 200
    # Using 2 examples:
    #   2025
    #   25
    @timeout_decorator.timeout(60)
    def test_19_with500(self):
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?" + 
                    "page=221&" + 
                    "per_page=10&" + 
                    "situacao_matricula=EVOMASTER&" + 
                    "ano_matricula=2024",
                    headers=headers)
        
        assert res_0.status_code == 500
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Ocorreu um erro."
        assert res_0.json()["errors"]["message"] == "Situação de matricula informada incorreta, possíveis valores: ATIVAS,INATIVAS"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. PATCH:/v1/estudantes/lote -> Response status 401 not defined for path '/v1/estudantes/lote'.
        headers = {}
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_41_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_1.status_code == 401
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Não autorizado"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_2.status_code == 422
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Não foi possível processar as informações."
        assert res_2.json()["errors"]["message"] == "JSON inválido."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?" + 
                    "page=633&" + 
                    "per_page=15",
                    headers=headers)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_3.json()["data"]) == 0
        assert res_3.json()["pagination"]["total"] == 3.0
        assert res_3.json()["pagination"]["count"] == 0.0
        assert res_3.json()["pagination"]["per_page"] == 15.0
        assert res_3.json()["pagination"]["current_page"] == 633.0
        assert res_3.json()["pagination"]["total_pages"] == 1.0
        assert res_3.json()["pagination"]["links"]["previous"] == 632.0
        assert res_3.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/24/erros",
                    headers=headers)
        
        assert res_4.status_code == 400
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "O ID fornecido não é um UUID válido. ID: 24"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/inep/32082231",
                    headers=headers)
        
        assert res_5.status_code == 200
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == True
        assert res_5.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_5.json()["data"]) == 0
        assert res_5.json()["pagination"]["total"] == 0.0
        assert res_5.json()["pagination"]["count"] == 0.0
        assert res_5.json()["pagination"]["per_page"] == 10.0
        assert res_5.json()["pagination"]["current_page"] == 1.0
        assert res_5.json()["pagination"]["total_pages"] == 1.0
        assert res_5.json()["pagination"]["links"]["previous"] is None
        assert res_5.json()["pagination"]["links"]["next"] is None
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpfResponsavel\": \"31547672153\", " + \
            " \"nomeMaeEstudante\": \"Ana Luiza Cavalcanti\", " + \
            " \"dataNascimento\": \"q8lSWOJ\", " + \
            " \"genero\": 42, " + \
            " \"racaCor\": 2, " + \
            " \"telefone\": \"11909420800\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 5 " + \
            " ], " + \
            " \"sexo\": \"1\", " + \
            " \"numeroNIS\": \"23002092254\", " + \
            " \"bairro\": \"São Matias\", " + \
            " \"numero\": \"4177\", " + \
            " \"cep\": \"60919195\", " + \
            " \"dataInicioMatricula\": \"2050-13-01\", " + \
            " \"serieAno\": 25, " + \
            " \"matriculaRede\": \"G8BMn2\", " + \
            " \"instituicao\": 480, " + \
            " \"inep\": 29481899, " + \
            " \"dataInicioPeriodoLetivo\": \"1914-09-01\", " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 9, " + \
            " \"estudanteIntegral\": 0, " + \
            " \"anoMatricula\": 2025 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_6 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_6.status_code == 201
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == True
        assert res_6.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id} -> Object instance has properties which are not allowed by the schema: ["success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_7 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/Y_7?incluir_objetos_processados=true",
                    headers=headers)
        
        assert res_7.status_code == 400
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == False
        assert res_7.json()["message"] == "O ID fornecido não é um UUID válido. ID: Y_7"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> Response status 404 not defined for path '/v1/estudantes/solicitacoes-alteracoes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_8 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/solicitacoes-alteracoes?" + 
                    "per_page=235&" + 
                    "cpfAtual=MxDHNN3w1r&" + 
                    "cpfNovo=28903599560",
                    headers=headers)
        
        assert res_8.status_code == 404
        assert "application/json" in res_8.headers["content-type"]
        assert res_8.json()["success"] == False
        assert res_8.json()["message"] == "Ocorreu um erro inesperado."
        assert res_8.json()["errors"]["message"] == "Nenhum dado encontrado"
    
    
    # Calls:
    # 1 - (404) GET:/v1/estudantes/validacao-cadastro
    # 2 - (200) GET:/v1/estudantes/{cpfNis}
    # 3 - (200) GET:/v1/estudantes/lote/{id}
    # 4 - (401) POST:/v1/estudantes/lote
    # 5 - (404) GET:/v1/profissionais/{cpf}
    # 6 - (401) GET:/v1/profissionais/lote/{id}/erros
    # 7 - (422) POST:/v1/profissionais
    # 8 - (200) GET:/v1/profissionais
    # 9 - (400) GET:/v1/profissionais/lote/{id}/erros
    # 10 - (500) GET:/v1/profissionais/lote/{id}
    # Found 9 potential faults. Type-codes: 100, 200
    # Using 4 examples:
    #   1
    #   123456789
    #   2014
    #   Universidade Federal do Rio de Janeiro
    @timeout_decorator.timeout(60)
    def test_20_with500(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> Response status 404 not defined for path '/v1/estudantes/validacao-cadastro'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/validacao-cadastro?" + 
                    "page=522&" + 
                    "per_page=10&" + 
                    "cpf=49459885012",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Ocorreu um erro inesperado."
        assert res_0.json()["errors"]["message"] == "Nenhum dado encontrado"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/{cpfNis} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/34049555360",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Dados obtidos com sucesso."
        assert res_1.json()["data"]["cpf"] == "34049555360"
        assert res_1.json()["data"]["nome"] == "Raul Arag\\u00e3o"
        assert res_1.json()["data"]["nomeSocial"] is None
        assert res_1.json()["data"]["numeroNIS"] is None
        assert res_1.json()["data"]["rg"] == "251380749"
        assert res_1.json()["data"]["orgaoEmissor"] == "SEDS"
        assert res_1.json()["data"]["cpfResponsavel"] == "12111123521"
        assert res_1.json()["data"]["nomeMaeEstudante"] == "Sra. Cec\\u00edlia da Cunha"
        assert res_1.json()["data"]["numeroNISResponsavel"] == "34049555360"
        assert res_1.json()["data"]["dataNascimento"] == "1922-04-17"
        assert res_1.json()["data"]["logradouro"] == "123 Sanchez Loaf Suite 897\\nTiffanyshire, VT 11009"
        assert res_1.json()["data"]["bairro"] == "Taquaril"
        assert res_1.json()["data"]["numero"] == "220"
        assert res_1.json()["data"]["cep"] == "69374543"
        assert res_1.json()["data"]["municipio"] == 2704302.0
        assert res_1.json()["data"]["certidaoNascimento"] == "2005060"
        assert res_1.json()["data"]["cnh"] is None
        assert res_1.json()["data"]["uf"] == 27.0
        assert res_1.json()["data"]["racaCor"] == 2.0
        assert len(res_1.json()["data"]["tipoDeficiencia"]) == 3
        assert res_1.json()["data"]["tipoDeficiencia"][0] == 5.0
        assert res_1.json()["data"]["tipoDeficiencia"][1] == 9.0
        assert res_1.json()["data"]["tipoDeficiencia"][2] == 10.0
        assert res_1.json()["data"]["genero"] == 1.0
        assert res_1.json()["data"]["telefone"] is None
        assert res_1.json()["data"]["email"] == "diogo19@example.net"
        assert res_1.json()["data"]["situacaoCadastroValidado"] == 4.0
        assert len(res_1.json()["data"]["matriculas"]) == 1
        assert res_1.json()["data"]["matriculas"][0]["codigoMatriculaSgp"] == 1112439.0
        assert res_1.json()["data"]["matriculas"][0]["codInstituicao"] == 6.0
        assert res_1.json()["data"]["matriculas"][0]["dataInicioMatricula"] == "2024-03-03"
        assert res_1.json()["data"]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_1.json()["data"]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_1.json()["data"]["matriculas"][0]["situacaoMatricula"] == True
        assert res_1.json()["data"]["matriculas"][0]["serieAno"] == 2.0
        assert res_1.json()["data"]["matriculas"][0]["etapaEnsinoConsolidado"] == "Educação Infantil"
        assert res_1.json()["data"]["matriculas"][0]["matriculaRede"] is None
        assert res_1.json()["data"]["matriculas"][0]["deletadaEm"] is None
        assert res_1.json()["data"]["matriculas"][0]["inep"] == "27014088"
        assert res_1.json()["data"]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_1.json()["data"]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_1.json()["data"]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_1.json()["data"]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_1.json()["data"]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_1.json()["data"]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_1.json()["data"]["matriculas"][0]["estudanteIntegral"] is None
        assert res_1.json()["data"]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_1.json()["data"]["matriculas"][0]["anoMatricula"] is None
        assert len(res_1.json()["data"]["outrasMatriculas"]) == 0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/0ccfafb2-9e78-41b4-bf46-c8894ec96b25?" + 
                    "page=233722067&" + 
                    "per_page=529",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["status_processamento"] == "Enviado"
        assert res_2.json()["message"] == "Lote recuperado com sucesso. ID: 0ccfafb2-9e78-41b4-bf46-c8894ec96b25"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes/lote -> Response status 401 not defined for path '/v1/estudantes/lote'.
        headers = {}
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpfResponsavel\": \"31907264698\", " + \
            " \"nomeMaeEstudante\": \"Marcela Ferreira\", " + \
            " \"racaCor\": 5, " + \
            " \"email\": \"hortencia.lovato.bittencourt@fake.com\", " + \
            " \"nomeSocial\": \"oZymDIPtU\", " + \
            " \"certidaoNascimento\": \"05278378675045012662672546125858\", " + \
            " \"cnh\": \"oMB\", " + \
            " \"logradouro\": \"Rua R. Christian Ferraz\", " + \
            " \"bairro\": \"São Gil\", " + \
            " \"cep\": \"EcigLb\", " + \
            " \"matriculaRede\": \"xwMoaf3Z1\", " + \
            " \"instituicao\": 8444, " + \
            " \"dataInicioPeriodoLetivo\": \"1964-10-31\", " + \
            " \"formaOrganizacaoTurma\": 431, " + \
            " \"anoMatricula\": 2024 " + \
            " }, " + \
            " { " + \
            " \"cpf\": \"93961372942\", " + \
            " \"nome\": \"U\", " + \
            " \"genero\": 4, " + \
            " \"email\": \"hortencia.matos@fake.com\", " + \
            " \"telefone\": \"3an\", " + \
            " \"nomeSocial\": \"YXWGpw\", " + \
            " \"numeroNIS\": \"SJ4U\", " + \
            " \"rg\": \"9228553719382042\", " + \
            " \"orgaoEmissor\": \"SSP-AL\", " + \
            " \"certidaoNascimento\": \"54593214021315299432497315304632\", " + \
            " \"numero\": \"\", " + \
            " \"cep\": \"76655231\", " + \
            " \"estudantePpl\": 2, " + \
            " \"matriculaRede\": \"xwMoaf3Z1\", " + \
            " \"estudanteAnoPeriodo\": 3 " + \
            " }, " + \
            " { " + \
            " \"cpfResponsavel\": \"85319335792\", " + \
            " \"numeroNISResponsavel\": \"98966545991\", " + \
            " \"nomeMaeEstudante\": \"Bianca Oliveira\", " + \
            " \"nome\": \"Emilly Melo\", " + \
            " \"dataNascimento\": \"2015-03-26\", " + \
            " \"racaCor\": 42, " + \
            " \"email\": \"hortencia.ortiz.filho@fake.com\", " + \
            " \"rg\": \"8460056028386446\", " + \
            " \"cnh\": \"MjU3q85lH5p\", " + \
            " \"bairro\": \"São das Dores\", " + \
            " \"cep\": \"alYPfFdT\", " + \
            " \"uf\": 42, " + \
            " \"estudantePpl\": 42, " + \
            " \"matriculaRede\": \"C4eFnwsN\", " + \
            " \"inep\": 41074106, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 2 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_3 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_3.status_code == 401
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "Não autorizado"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/13005176207",
                    headers=headers)
        
        assert res_4.status_code == 404
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "Nenhum profissional de educação encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id}/erros -> Response status 401 not defined for path '/v1/profissionais/lote/{id}/erros'.
        headers = {}
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/26/erros?per_page=15",
                    headers=headers)
        
        assert res_5.status_code == 401
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "Não autorizado"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"cpf\": \"33722248094\", " + \
            " \"dataNascimento\": \"1954-11-24\", " + \
            " \"email\": \"hortencia.gusmao.vale.jr@fake.com\", " + \
            " \"telefone\": \"11901377051\", " + \
            " \"logradouro\": \"Rua Rua Reis\", " + \
            " \"bairro\": \"São Pena\", " + \
            " \"numero\": \"342\", " + \
            " \"municipio\": 3304557, " + \
            " \"uf\": 24, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 1 " + \
            " }, " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 966, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " }, " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Rio de Janeiro\", " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"123456789\", " + \
            " \"dataFim\": \"1959-10-25\" " + \
            " } "
        headers['Accept'] = "application/json"
        res_6 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_6.status_code == 422
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == False
        assert res_6.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #1 ($nome) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_7 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?" + 
                    "page=299&" + 
                    "per_page=10",
                    headers=headers)
        
        assert res_7.status_code == 200
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == True
        assert res_7.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_7.json()["data"]) == 0
        assert res_7.json()["pagination"]["total"] == 3.0
        assert res_7.json()["pagination"]["count"] == 0.0
        assert res_7.json()["pagination"]["per_page"] == 10.0
        assert res_7.json()["pagination"]["current_page"] == 299.0
        assert res_7.json()["pagination"]["total_pages"] == 1.0
        assert res_7.json()["pagination"]["links"]["previous"] == 298.0
        assert res_7.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id}/erros -> Response status 400 not defined for path '/v1/profissionais/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_8 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/43/erros",
                    headers=headers)
        
        assert res_8.status_code == 400
        assert "application/json" in res_8.headers["content-type"]
        assert res_8.json()["success"] == False
        assert res_8.json()["message"] == "O ID fornecido não é um UUID válido. ID: 43"
        
        # Fault100. HTTP Status 500. GET:/v1/profissionais/lote/{id}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_9 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/c3277ead-238e-4f33-8252-316ed01af441?" + 
                    "page=918&" + 
                    "incluir_objetos_processados=false",
                    headers=headers)
        
        assert res_9.status_code == 500
        assert "application/json" in res_9.headers["content-type"]
        assert res_9.json()["success"] == False
        assert res_9.json()["message"] == "Não foi possível recuperar o lote. ID fornecido: c3277ead-238e-4f33-8252-316ed01af441 Nenhum lote correspondente foi encontrado."
    
    
    # Calls:
    # 1 - (200) GET:/v1/estudantes/lote
    # 2 - (400) GET:/v1/profissionais/lote/{id}/erros
    # 3 - (500) POST:/v1/estudantes/lote
    # 4 - (500) GET:/v1/estudantes
    # 5 - (500) GET:/v1/estudantes/lote/{id}
    # 6 - (500) GET:/v1/estudantes
    # 7 - (500) POST:/v1/estudantes
    # 8 - (200) GET:/v1/estudantes/lote
    # 9 - (400) GET:/v1/estudantes/lote/{id}/erros
    # 10 - (200) PATCH:/v1/estudantes/lote
    # Found 15 potential faults. Type-codes: 100, 200
    @timeout_decorator.timeout(60)
    def test_21_with500(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?per_page=121",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_0.json()["data"]) == 121
        assert res_0.json()["data"][0]["dataEnvio"] == "2025-05-03 23:54:34"
        assert res_0.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_0.json()["data"][1]["dataEnvio"] == "2025-05-03 23:54:23"
        assert res_0.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_0.json()["data"][2]["dataEnvio"] == "2025-05-03 23:52:42"
        assert res_0.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 118 elements. This limit of 3 elements can be increased in the configurations
        assert res_0.json()["pagination"]["total"] == 9466.0
        assert res_0.json()["pagination"]["count"] == 121.0
        assert res_0.json()["pagination"]["per_page"] == 121.0
        assert res_0.json()["pagination"]["current_page"] == 1.0
        assert res_0.json()["pagination"]["total_pages"] == 79.0
        assert res_0.json()["pagination"]["links"]["previous"] is None
        assert res_0.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id}/erros -> Response status 400 not defined for path '/v1/profissionais/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/27/erros?" + 
                    "page=421&" + 
                    "per_page=503",
                    headers=headers)
        
        assert res_1.status_code == 400
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "O ID fornecido não é um UUID válido. ID: 27"
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes/lote
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["errors"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_2.status_code == 500
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Ocorreu um erro."
        assert res_2.json()["errors"]["message"] == "JSON inválido."
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?" + 
                    "page=68&" + 
                    "situacao_matricula=EVOMASTER&" + 
                    "ano_matricula=108&" + 
                    "situacao_final=REPROVADAS",
                    headers=headers)
        
        assert res_3.status_code == 500
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "Ocorreu um erro."
        assert res_3.json()["errors"]["message"] == "Situação de matricula informada incorreta, possíveis valores: ATIVAS,INATIVAS"
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes/lote/{id}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/438e8158-bcac-4e96-9ef1-999ef67803b8?per_page=336",
                    headers=headers)
        
        assert res_4.status_code == 500
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "Não foi possível recuperar o lote. ID fornecido: 438e8158-bcac-4e96-9ef1-999ef67803b8 Nenhum lote correspondente foi encontrado."
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?" + 
                    "situacao_matricula=INATIVAS&" + 
                    "situacao_final=REPROVADAS",
                    headers=headers)
        
        assert res_5.status_code == 500
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "Ocorreu um erro inesperado."
        assert res_5.json()["errors"]["message"] == "O campo ano_matricula é obrigatório quando o campo situacao_final é informado."
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"numeroNISResponsavel\": \"25039972980\", " + \
            " \"nomeMaeEstudante\": \"Dr. Andressa Clarice Leon\", " + \
            " \"dataNascimento\": \"2005-12-14\", " + \
            " \"genero\": 42, " + \
            " \"nomeSocial\": \"test\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 944 " + \
            " ], " + \
            " \"sexo\": \"0\", " + \
            " \"cnh\": \"32405422558\", " + \
            " \"logradouro\": \"_j\", " + \
            " \"bairro\": \"São Burgos\", " + \
            " \"numero\": \"727\", " + \
            " \"municipio\": 2700409, " + \
            " \"uf\": 29, " + \
            " \"serieAno\": 27, " + \
            " \"dataInicioPeriodoLetivo\": \"2095-01-14\", " + \
            " \"formaOrganizacaoTurma\": 506, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 1 " + \
            " } "
        headers['Accept'] = "application/json"
        res_6 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_6.status_code == 500
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == False
        assert res_6.json()["message"] == "Ocorreu um erro."
        assert res_6.json()["errors"]["message"] == "O campo nome é obrigatório. (and 2 more errors)"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_7 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?per_page=922",
                    headers=headers)
        
        assert res_7.status_code == 200
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == True
        assert res_7.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_7.json()["data"]) == 922
        assert res_7.json()["data"][0]["dataEnvio"] == "2025-05-03 23:54:34"
        assert res_7.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_7.json()["data"][1]["dataEnvio"] == "2025-05-03 23:54:23"
        assert res_7.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_7.json()["data"][2]["dataEnvio"] == "2025-05-03 23:52:42"
        assert res_7.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 919 elements. This limit of 3 elements can be increased in the configurations
        assert res_7.json()["pagination"]["total"] == 9466.0
        assert res_7.json()["pagination"]["count"] == 922.0
        assert res_7.json()["pagination"]["per_page"] == 922.0
        assert res_7.json()["pagination"]["current_page"] == 1.0
        assert res_7.json()["pagination"]["total_pages"] == 11.0
        assert res_7.json()["pagination"]["links"]["previous"] is None
        assert res_7.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_8 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/yDzYOIL/erros?" + 
                    "page=468&" + 
                    "per_page=770",
                    headers=headers)
        
        assert res_8.status_code == 400
        assert "application/json" in res_8.headers["content-type"]
        assert res_8.json()["success"] == False
        assert res_8.json()["message"] == "O ID fornecido não é um UUID válido. ID: yDzYOIL"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_82_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_83_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_9 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_9.status_code == 200
        assert "application/json" in res_9.headers["content-type"]
        assert res_9.json()["success"] == True
        assert res_9.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_9.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
    
    
    # Calls:
    # 1 - (500) POST:/v1/estudantes
    # 2 - (200) GET:/v1/estudantes/validacao-cadastro
    # 3 - (400) GET:/v1/estudantes/lote/{id}
    # 4 - (200) GET:/v1/estudantes/inep/{inep}
    # 5 - (200) GET:/v1/estudantes/lote/{id}
    # 6 - (200) GET:/v1/estudantes/lote
    # Found 12 potential faults. Type-codes: 100, 200
    @timeout_decorator.timeout(60)
    def test_22_with500(self):
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpf\": \"69839641360\", " + \
            " \"genero\": 0, " + \
            " \"racaCor\": 1, " + \
            " \"telefone\": \"11909420800\", " + \
            " \"sexo\": \"0\", " + \
            " \"rg\": \"1190260057074409\", " + \
            " \"orgaoEmissor\": \"SSP-RS\", " + \
            " \"certidaoNascimento\": \"12967293447090359210118928213509\", " + \
            " \"cnh\": \"22723080095\", " + \
            " \"logradouro\": \"Alameda Amanda Junqueira\", " + \
            " \"bairro\": \"São Pacheco\", " + \
            " \"numero\": \"33\", " + \
            " \"cep\": \"83986379\", " + \
            " \"uf\": 24, " + \
            " \"estudantePpl\": 0, " + \
            " \"serieAno\": 45, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 7, " + \
            " \"estudanteIntegral\": 0, " + \
            " \"anoMatricula\": 2024 " + \
            " } "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_0.status_code == 500
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Ocorreu um erro."
        assert res_0.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/validacao-cadastro?cpf=34535377693",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Operação realizada com sucesso"
        assert len(res_1.json()["data"]) == 1
        assert res_1.json()["data"][0]["cpf"] == "34535377693"
        assert res_1.json()["data"][0]["numeroNIS"] == "11979328182"
        assert res_1.json()["data"][0]["situacaoCadastral"] == "Não autenticada"
        assert res_1.json()["data"][0]["situacaoCpf"] == "Testando o serviço de validação"
        assert res_1.json()["data"][0]["nome"] == "Trevor Hester"
        assert res_1.json()["data"][0]["nomeValidado"] == True
        assert res_1.json()["data"][0]["dataNascimento"] == "1968-02-26"
        assert res_1.json()["data"][0]["dataNascimentoValidada"] == False
        assert res_1.json()["data"][0]["nomeMaeEstudante"] == "Juan Mccullough"
        assert res_1.json()["data"][0]["nomeMaeEstudanteValidado"] == True
        assert res_1.json()["data"][0]["dataValidacaoCadastral"] == "2023-06-16 00:00:00"
        assert res_1.json()["pagination"]["total"] == 1.0
        assert res_1.json()["pagination"]["count"] == 1.0
        assert res_1.json()["pagination"]["per_page"] == 15.0
        assert res_1.json()["pagination"]["current_page"] == 1.0
        assert res_1.json()["pagination"]["total_pages"] == 1.0
        assert res_1.json()["pagination"]["links"]["previous"] is None
        assert res_1.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Object instance has properties which are not allowed by the schema: ["success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/mgonnB4ZE?incluir_objetos_processados=false",
                    headers=headers)
        
        assert res_2.status_code == 400
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "O ID fornecido não é um UUID válido. ID: mgonnB4ZE"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/inep/{inep} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/23140780?" + 
                    "page=1&" + 
                    "ano_matricula=2024&" + 
                    "situacao_final=APROVADAS",
                    headers=headers)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Estudantes obtidos com sucesso."
        assert len(res_3.json()["data"]) == 0
        assert res_3.json()["pagination"]["total"] == 0.0
        assert res_3.json()["pagination"]["count"] == 0.0
        assert res_3.json()["pagination"]["per_page"] == 10.0
        assert res_3.json()["pagination"]["current_page"] == 1.0
        assert res_3.json()["pagination"]["total_pages"] == 1.0
        assert res_3.json()["pagination"]["links"]["previous"] is None
        assert res_3.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/973f07c4-d7b6-4387-99b1-96b7643f13aa?" + 
                    "page=914&" + 
                    "per_page=235&" + 
                    "incluir_objetos_processados=false",
                    headers=headers)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["status_processamento"] == "Enviado"
        assert res_4.json()["message"] == "Lote recuperado com sucesso. ID: 973f07c4-d7b6-4387-99b1-96b7643f13aa"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers)
        
        assert res_5.status_code == 200
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == True
        assert res_5.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_5.json()["data"]) == 10
        assert res_5.json()["data"][0]["dataEnvio"] == "2025-05-03 23:42:13"
        assert res_5.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_5.json()["data"][1]["dataEnvio"] == "2025-05-03 23:41:26"
        assert res_5.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_5.json()["data"][2]["dataEnvio"] == "2025-05-03 23:41:10"
        assert res_5.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_5.json()["pagination"]["total"] == 9447.0
        assert res_5.json()["pagination"]["count"] == 10.0
        assert res_5.json()["pagination"]["per_page"] == 10.0
        assert res_5.json()["pagination"]["current_page"] == 1.0
        assert res_5.json()["pagination"]["total_pages"] == 945.0
        assert res_5.json()["pagination"]["links"]["previous"] is None
        assert res_5.json()["pagination"]["links"]["next"] == 2.0
    
    
    # Calls:
    # 1 - (201) POST:/v1/estudantes/lote
    # 2 - (200) GET:/v1/estudantes/inep/{inep}
    # 3 - (401) POST:/v1/profissionais
    # 4 - (500) GET:/v1/estudantes/inep/{inep}
    # 5 - (404) GET:/v1/estudantes/solicitacoes-alteracoes
    # 6 - (200) GET:/v1/estudantes/solicitacoes-alteracoes
    # Found 22 potential faults. Type-codes: 100, 200
    # Using 5 examples:
    #   1
    #   2010
    #   2014
    #   2025
    #   44
    @timeout_decorator.timeout(60)
    def test_23_with500(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpfResponsavel\": \"67233045437\", " + \
            " \"numeroNISResponsavel\": \"01786539281\", " + \
            " \"genero\": 5, " + \
            " \"racaCor\": 5, " + \
            " \"email\": \"hortencia.kamila.mares@fake.com\", " + \
            " \"numeroNIS\": \"53514338725\", " + \
            " \"rg\": \"4036154302154080\", " + \
            " \"bairro\": \"São Galhardo\", " + \
            " \"numero\": \"58\", " + \
            " \"cep\": \"f\", " + \
            " \"municipio\": 1302603, " + \
            " \"uf\": 35, " + \
            " \"estudantePpl\": 1, " + \
            " \"dataInicioMatricula\": \"2089-09-14\", " + \
            " \"serieAno\": 812, " + \
            " \"dataInicioPeriodoLetivo\": \"2033-01-18\", " + \
            " \"formaOrganizacaoTurma\": 690, " + \
            " \"estudanteAnoPeriodo\": 1 " + \
            " }, " + \
            " { " + \
            " \"cpfResponsavel\": \"79416664057\", " + \
            " \"numeroNISResponsavel\": \"mPcpirUao\", " + \
            " \"cpf\": \"23915205575\", " + \
            " \"genero\": 5, " + \
            " \"racaCor\": 5, " + \
            " \"telefone\": \"11933018135\", " + \
            " \"sexo\": \"4\", " + \
            " \"numeroNIS\": \"68187225971\", " + \
            " \"rg\": \"8814550691904791\", " + \
            " \"certidaoNascimento\": \"96097881329353056570675900241913\", " + \
            " \"cnh\": \"32405422558\", " + \
            " \"bairro\": \"São Carmona\", " + \
            " \"cep\": \"58577851\", " + \
            " \"uf\": 29, " + \
            " \"estudantePpl\": 2, " + \
            " \"matriculaRede\": \"56789\", " + \
            " \"instituicao\": 133959, " + \
            " \"inep\": 29479924, " + \
            " \"dataInicioPeriodoLetivo\": \"1953-08-24\", " + \
            " \"estudanteIntegral\": 1, " + \
            " \"anoMatricula\": 2024 " + \
            " }, " + \
            " { " + \
            " \"numeroNISResponsavel\": \"xEKvw9IIhSf\", " + \
            " \"nomeMaeEstudante\": \"Dr. César Datena\", " + \
            " \"nome\": \"Carlos Porto\", " + \
            " \"genero\": 5, " + \
            " \"telefone\": \"11942878677\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1 " + \
            " ], " + \
            " \"sexo\": \"4\", " + \
            " \"numeroNIS\": \"80550895358\", " + \
            " \"cnh\": \"38270300618\", " + \
            " \"logradouro\": \"Rua Rua Abreu\", " + \
            " \"bairro\": \"São Montenegro\", " + \
            " \"matriculaRede\": \"AdII6GCcUVA\", " + \
            " \"dataInicioPeriodoLetivo\": \"2074-11-29\", " + \
            " \"formaOrganizacaoTurma\": 1, " + \
            " \"estudanteAnoPeriodo\": 42, " + \
            " \"anoMatricula\": 2025 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/inep/{inep} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/VNaMOC?per_page=336",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Estudantes obtidos com sucesso."
        assert len(res_1.json()["data"]) == 0
        assert res_1.json()["pagination"]["total"] == 0.0
        assert res_1.json()["pagination"]["count"] == 0.0
        assert res_1.json()["pagination"]["per_page"] == 336.0
        assert res_1.json()["pagination"]["current_page"] == 1.0
        assert res_1.json()["pagination"]["total_pages"] == 1.0
        assert res_1.json()["pagination"]["links"]["previous"] is None
        assert res_1.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais -> Response status 401 not defined for path '/v1/profissionais'.
        headers = {}
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"tipoEnsinoMedio\": 768, " + \
            " \"dataNascimento\": \"1999-02-19\", " + \
            " \"genero\": 3, " + \
            " \"racaCor\": 5, " + \
            " \"email\": \"q5i\", " + \
            " \"sexo\": \"0\", " + \
            " \"logradouro\": \"\", " + \
            " \"bairro\": \"\", " + \
            " \"cep\": \"58590645\", " + \
            " \"municipio\": 1100940, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 1, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\", " + \
            " \"anoInicioFormacaoAcademica\": 2016, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6 " + \
            " }, " + \
            " { " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " }, " + \
            " { " + \
            " \"anoInicioFormacaoAcademica\": 2016, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " } " + \
            " ], " + \
            " \"inep\": 41082389, " + \
            " \"matriculaRede\": \"Teste Ricardo\", " + \
            " \"tipoVinculo\": 1, " + \
            " \"codigoFuncao\": 2, " + \
            " \"cargaHoraria\": 44 " + \
            " } "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_2.status_code == 401
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Não autorizado"
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes/inep/{inep}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/23125586?" + 
                    "situacao_matricula=EVOMASTER&" + 
                    "situacao_final=APROVADAS",
                    headers=headers)
        
        assert res_3.status_code == 500
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "Ocorreu um erro."
        assert res_3.json()["errors"]["message"] == "Situação de matricula informada incorreta, possíveis valores: ATIVAS,INATIVAS"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> Response status 404 not defined for path '/v1/estudantes/solicitacoes-alteracoes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/solicitacoes-alteracoes?" + 
                    "page=335&" + 
                    "per_page=258&" + 
                    "cpfNovo=56312237591",
                    headers=headers)
        
        assert res_4.status_code == 404
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "Ocorreu um erro inesperado."
        assert res_4.json()["errors"]["message"] == "Nenhum dado encontrado"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/3'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/4'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/5'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/6'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/7'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/8'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/9'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/10'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/11'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/12'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/13'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/14'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/solicitacoes-alteracoes",
                    headers=headers)
        
        assert res_5.status_code == 200
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == True
        assert res_5.json()["message"] == "Operação realizada com sucesso"
        assert len(res_5.json()["data"]) == 15
        assert res_5.json()["data"][0]["cpfAtual"] == "13213485179"
        assert res_5.json()["data"][0]["cpfNovo"] == "13213485179"
        assert res_5.json()["data"][0]["situacaoCpf"] is None
        assert res_5.json()["data"][0]["descricaoSituacaoCpf"] is None
        assert res_5.json()["data"][0]["tipoSituacaoCpf"] is None
        assert res_5.json()["data"][0]["nomeAtual"] == "Audrey Roob"
        assert res_5.json()["data"][0]["nomeNovo"] == "nome certo"
        assert res_5.json()["data"][0]["nomeValidado"] is None
        assert res_5.json()["data"][0]["dataNascimentoAtual"] == "2024-12-28"
        assert res_5.json()["data"][0]["dataNascimentoNovo"] == "2024-12-28"
        assert res_5.json()["data"][0]["dataNascimentoValidada"] is None
        assert res_5.json()["data"][0]["nomeMaeEstudanteAtual"] == "Teresa Harris IV"
        assert res_5.json()["data"][0]["nomeMaeEstudanteNovo"] == "Teresa Harris IV"
        assert res_5.json()["data"][0]["nomeMaeEstudanteValidado"] is None
        assert res_5.json()["data"][0]["dataValidacaoCadastral"] is None
        assert res_5.json()["data"][1]["cpfAtual"] == "49255179888"
        assert res_5.json()["data"][1]["cpfNovo"] == "02742633359"
        assert res_5.json()["data"][1]["situacaoCpf"] is None
        assert res_5.json()["data"][1]["descricaoSituacaoCpf"] is None
        assert res_5.json()["data"][1]["tipoSituacaoCpf"] is None
        assert res_5.json()["data"][1]["nomeAtual"] == "111"
        assert res_5.json()["data"][1]["nomeNovo"] == "111"
        assert res_5.json()["data"][1]["nomeValidado"] is None
        assert res_5.json()["data"][1]["dataNascimentoAtual"] == "2024-12-28"
        assert res_5.json()["data"][1]["dataNascimentoNovo"] == "2024-12-28"
        assert res_5.json()["data"][1]["dataNascimentoValidada"] is None
        assert res_5.json()["data"][1]["nomeMaeEstudanteAtual"] == "Valentina Rezende"
        assert res_5.json()["data"][1]["nomeMaeEstudanteNovo"] == "Valentina Rezende"
        assert res_5.json()["data"][1]["nomeMaeEstudanteValidado"] is None
        assert res_5.json()["data"][1]["dataValidacaoCadastral"] is None
        assert res_5.json()["data"][2]["cpfAtual"] == "49255179888"
        assert res_5.json()["data"][2]["cpfNovo"] == "02742633359"
        assert res_5.json()["data"][2]["situacaoCpf"] is None
        assert res_5.json()["data"][2]["descricaoSituacaoCpf"] is None
        assert res_5.json()["data"][2]["tipoSituacaoCpf"] is None
        assert res_5.json()["data"][2]["nomeAtual"] == "111"
        assert res_5.json()["data"][2]["nomeNovo"] == "111"
        assert res_5.json()["data"][2]["nomeValidado"] is None
        assert res_5.json()["data"][2]["dataNascimentoAtual"] == "2024-12-28"
        assert res_5.json()["data"][2]["dataNascimentoNovo"] == "2024-12-28"
        assert res_5.json()["data"][2]["dataNascimentoValidada"] is None
        assert res_5.json()["data"][2]["nomeMaeEstudanteAtual"] == "Valentina Rezende"
        assert res_5.json()["data"][2]["nomeMaeEstudanteNovo"] == "Valentina Rezende"
        assert res_5.json()["data"][2]["nomeMaeEstudanteValidado"] is None
        assert res_5.json()["data"][2]["dataValidacaoCadastral"] is None
        # Skipping assertions on the remaining 12 elements. This limit of 3 elements can be increased in the configurations
        assert res_5.json()["pagination"]["total"] == 72.0
        assert res_5.json()["pagination"]["count"] == 15.0
        assert res_5.json()["pagination"]["per_page"] == 15.0
        assert res_5.json()["pagination"]["current_page"] == 1.0
        assert res_5.json()["pagination"]["total_pages"] == 5.0
        assert res_5.json()["pagination"]["links"]["previous"] is None
        assert res_5.json()["pagination"]["links"]["next"] == 2.0
    
    
    # Calls:
    # 1 - (200) PATCH:/v1/estudantes/lote
    # 2 - (201) POST:/v1/estudantes/lote
    # 3 - (500) GET:/v1/estudantes/inep/{inep}
    # 4 - (200) PATCH:/v1/estudantes/lote
    # 5 - (201) POST:/v1/profissionais/lote
    # 6 - (400) GET:/v1/estudantes/lote/{id}/erros
    # 7 - (200) GET:/v1/estudantes
    # 8 - (500) GET:/v1/profissionais/lote/{id}
    # 9 - (404) GET:/v1/profissionais/{cpf}
    # 10 - (500) POST:/v1/estudantes
    # Found 7 potential faults. Type-codes: 100, 200
    # Using 2 examples:
    #   123456789
    #   2024
    @timeout_decorator.timeout(60)
    def test_24_with500(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_36_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_0.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpfResponsavel\": \"08123026056\", " + \
            " \"numeroNISResponsavel\": \"d\", " + \
            " \"cpf\": \"07309942442\", " + \
            " \"nome\": \"Eduardo Arag\\\u00e3o\", " + \
            " \"genero\": 1, " + \
            " \"nomeSocial\": \"RsOLwyuuUB3\", " + \
            " \"tipoDeficiencia\": [], " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"rg\": \"5225205364996555\", " + \
            " \"orgaoEmissor\": \"8OkQV\", " + \
            " \"cnh\": \"07206622586\", " + \
            " \"logradouro\": \"TF3FwdyXE\", " + \
            " \"cep\": \"47903083\", " + \
            " \"serieAno\": 44, " + \
            " \"instituicao\": 55672, " + \
            " \"inep\": 29191840, " + \
            " \"formaOrganizacaoTurma\": 2, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 2, " + \
            " \"estudanteIntegral\": 1 " + \
            " }, " + \
            " { " + \
            " \"cpfResponsavel\": \"82854102347\", " + \
            " \"cpf\": \"00640880142\", " + \
            " \"nome\": \"M\", " + \
            " \"genero\": 9, " + \
            " \"email\": \"hortencia.das.dores.filho@fake.com\", " + \
            " \"nomeSocial\": \"mV\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1 " + \
            " ], " + \
            " \"certidaoNascimento\": \"61822032343483434208473709164037\", " + \
            " \"cnh\": \"56267273661\", " + \
            " \"bairro\": \"São das Neves\", " + \
            " \"numero\": \"6620\", " + \
            " \"uf\": 27, " + \
            " \"dataInicioMatricula\": \"1964-10-13\", " + \
            " \"serieAno\": 44, " + \
            " \"instituicao\": 434, " + \
            " \"inep\": 29390109, " + \
            " \"dataInicioPeriodoLetivo\": \"2053-08-27\", " + \
            " \"estudanteAnoPeriodo\": 3 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_1.status_code == 201
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Operação realizada com sucesso"
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes/inep/{inep}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/33225605?" + 
                    "page=485&" + 
                    "per_page=503&" + 
                    "situacao_matricula=EVOMASTER&" + 
                    "situacao_final=APROVADAS",
                    headers=headers)
        
        assert res_2.status_code == 500
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Ocorreu um erro."
        assert res_2.json()["errors"]["message"] == "Situação de matricula informada incorreta, possíveis valores: ATIVAS,INATIVAS"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_37_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_38_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_39_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_40_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_3 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_3.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"nome\": \"W\", " + \
            " \"genero\": 6, " + \
            " \"racaCor\": 42, " + \
            " \"email\": \"la\", " + \
            " \"telefone\": \"11945225241\", " + \
            " \"nomeSocial\": \"A4yzmrb0EV\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 5, " + \
            " 9, " + \
            " 1, " + \
            " 712, " + \
            " 2 " + \
            " ], " + \
            " \"logradouro\": \"BD99G8kf\", " + \
            " \"cep\": \"5AK\", " + \
            " \"municipio\": 2928950, " + \
            " \"inep\": \"29193656\", " + \
            " \"matriculaRede\": \"7\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"dataFim\": \"2020-12-21\" " + \
            " }, " + \
            " { " + \
            " \"nome\": \"Sra. Vit\\\u00f3ria Cardoso\", " + \
            " \"dataNascimento\": \"1968-02-12\", " + \
            " \"email\": \"1w_tmyhoWoQRdFO\", " + \
            " \"telefone\": \"11909420800\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 47, " + \
            " 5 " + \
            " ], " + \
            " \"logradouro\": \"Rua Av. Marés\", " + \
            " \"municipio\": 4200705, " + \
            " \"inep\": 51038625, " + \
            " \"matriculaRede\": \"e2XouiaD2aNA 8\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataFim\": \"1990-11-00\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nome\": \"Davi Luiz Arag\\\u00e3o\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 778, " + \
            " 3 " + \
            " ], " + \
            " \"sexo\": \"5\", " + \
            " \"logradouro\": \"Rua Av. Cristiana Perez\", " + \
            " \"bairro\": \"São Salas\", " + \
            " \"numero\": \"1625\", " + \
            " \"cep\": \"60140400\", " + \
            " \"municipio\": 2700409, " + \
            " \"uf\": 424, " + \
            " \"matriculaRede\": \"123456789\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataFim\": \"1906-07-05\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_4 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_4.status_code == 201
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/43/erros?page=821",
                    headers=headers)
        
        assert res_5.status_code == 400
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "O ID fornecido não é um UUID válido. ID: 43"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_6 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?" + 
                    "page=994&" + 
                    "ano_matricula=2024&" + 
                    "situacao_final=REPROVADAS",
                    headers=headers)
        
        assert res_6.status_code == 200
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == True
        assert res_6.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_6.json()["data"]) == 0
        assert res_6.json()["pagination"]["total"] == 12.0
        assert res_6.json()["pagination"]["count"] == 0.0
        assert res_6.json()["pagination"]["per_page"] == 10.0
        assert res_6.json()["pagination"]["current_page"] == 994.0
        assert res_6.json()["pagination"]["total_pages"] == 2.0
        assert res_6.json()["pagination"]["links"]["previous"] == 993.0
        assert res_6.json()["pagination"]["links"]["next"] is None
        
        # Fault100. HTTP Status 500. GET:/v1/profissionais/lote/{id}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_7 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/fe65275c-c790-4560-a37d-34dcd43d524b?per_page=554",
                    headers=headers)
        
        assert res_7.status_code == 500
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == False
        assert res_7.json()["message"] == "Não foi possível recuperar o lote. ID fornecido: fe65275c-c790-4560-a37d-34dcd43d524b Nenhum lote correspondente foi encontrado."
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_8 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/43578454753",
                    headers=headers)
        
        assert res_8.status_code == 404
        assert "application/json" in res_8.headers["content-type"]
        assert res_8.json()["success"] == False
        assert res_8.json()["message"] == "Nenhum profissional de educação encontrado."
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"numeroNISResponsavel\": \"42489483688\", " + \
            " \"nomeMaeEstudante\": \"Jo\\\u00e3o Vitor Ribeiro\", " + \
            " \"nome\": \"Vinicius Rezende\", " + \
            " \"nomeSocial\": \"DKI9tH6t6WbZ\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 2, " + \
            " 949, " + \
            " 9, " + \
            " 2 " + \
            " ], " + \
            " \"sexo\": \"4\", " + \
            " \"numeroNIS\": \"70659377528\", " + \
            " \"certidaoNascimento\": \"IcbD1cbczZCR\", " + \
            " \"cnh\": \"07206622586\", " + \
            " \"bairro\": \"São Serrano\", " + \
            " \"numero\": \"2123\", " + \
            " \"cep\": \"76655231\", " + \
            " \"uf\": 35, " + \
            " \"estudantePpl\": 0, " + \
            " \"dataInicioMatricula\": \"1966-05-05\", " + \
            " \"inep\": 33004153, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 0, " + \
            " \"estudanteAnoPeriodo\": 3, " + \
            " \"estudanteIntegral\": 0 " + \
            " } "
        headers['Accept'] = "application/json"
        res_9 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_9.status_code == 500
        assert "application/json" in res_9.headers["content-type"]
        assert res_9.json()["success"] == False
        assert res_9.json()["message"] == "Ocorreu um erro."
        assert res_9.json()["errors"]["message"] == "O campo dataNascimento é obrigatório."
    
    
    # Calls:
    # 1 - (404) GET:/v1/estudantes/solicitacoes-alteracoes
    # 2 - (200) GET:/v1/profissionais/inep/{inep}
    # 3 - (422) POST:/v1/profissionais
    # 4 - (422) POST:/v1/profissionais
    # 5 - (200) GET:/v1/estudantes/lote/{id}
    # 6 - (500) GET:/v1/profissionais/lote/{id}
    # 7 - (200) GET:/v1/estudantes/validacao-cadastro
    # Found 23 potential faults. Type-codes: 100, 200
    # Using 3 examples:
    #   1
    #   2010
    #   Universidade Federal do Rio de Janeiro
    @timeout_decorator.timeout(60)
    def test_25_with500(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> Response status 404 not defined for path '/v1/estudantes/solicitacoes-alteracoes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/solicitacoes-alteracoes?" + 
                    "page=913&" + 
                    "per_page=426",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Ocorreu um erro inesperado."
        assert res_0.json()["errors"]["message"] == "Nenhum dado encontrado"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/inep/wbpHzpjFaOn?page=159",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_1.json()["data"]) == 0
        assert res_1.json()["pagination"]["total"] == 0.0
        assert res_1.json()["pagination"]["count"] == 0.0
        assert res_1.json()["pagination"]["per_page"] == 10.0
        assert res_1.json()["pagination"]["current_page"] == 159.0
        assert res_1.json()["pagination"]["total_pages"] == 1.0
        assert res_1.json()["pagination"]["links"]["previous"] == 158.0
        assert res_1.json()["pagination"]["links"]["next"] is None
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"nome\": \"Aaron Rico Jr.\", " + \
            " \"dataNascimento\": \"pPPMRW5\", " + \
            " \"telefone\": \"11945225241\", " + \
            " \"nomeSocial\": \"test\", " + \
            " \"cep\": \"57351322\", " + \
            " \"uf\": 921, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"anoInicioFormacaoAcademica\": 2016, " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " }, " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Rio de Janeiro\", " + \
            " \"anoInicioFormacaoAcademica\": 2016 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": -38047790, " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"jvjvjv1\", " + \
            " \"tipoVinculo\": 1, " + \
            " \"cargaHoraria\": 40 " + \
            " } "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_2.status_code == 422
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #10 ($tipoDeficiencia) must be of type array, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"tipoEnsinoMedio\": 32, " + \
            " \"dataNascimento\": \"2009-03-11\", " + \
            " \"genero\": 1, " + \
            " \"racaCor\": 42, " + \
            " \"nomeSocial\": \"YXWGpw\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1, " + \
            " 3 " + \
            " ], " + \
            " \"sexo\": \"5\", " + \
            " \"logradouro\": \"Rua R. Rafael\", " + \
            " \"numero\": \"790\", " + \
            " \"cep\": \"99533248\", " + \
            " \"municipio\": 2928950, " + \
            " \"uf\": 190, " + \
            " \"inep\": \"41076389\", " + \
            " \"dataIngresso\": \"1923-10-03\", " + \
            " \"dataFim\": \"1985-08-12\", " + \
            " \"cargaHoraria\": 40 " + \
            " } "
        headers['Accept'] = "application/json"
        res_3 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_3.status_code == 422
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #1 ($nome) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/697450d2-5913-455f-b0c5-542d8368f8be?per_page=554",
                    headers=headers)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["status_processamento"] == "Enviado"
        assert res_4.json()["message"] == "Lote recuperado com sucesso. ID: 697450d2-5913-455f-b0c5-542d8368f8be"
        
        # Fault100. HTTP Status 500. GET:/v1/profissionais/lote/{id}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/ba57e7a4-94ba-49df-8dbc-3230f60e567a?" + 
                    "page=151&" + 
                    "per_page=15&" + 
                    "incluir_objetos_processados=false",
                    headers=headers)
        
        assert res_5.status_code == 500
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "Não foi possível recuperar o lote. ID fornecido: ba57e7a4-94ba-49df-8dbc-3230f60e567a Nenhum lote correspondente foi encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/3'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/4'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/5'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/6'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/7'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/8'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/9'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/10'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/11'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/12'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/13'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/14'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_6 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/validacao-cadastro?page=914",
                    headers=headers)
        
        assert res_6.status_code == 200
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == True
        assert res_6.json()["message"] == "Operação realizada com sucesso"
        assert len(res_6.json()["data"]) == 15
        assert res_6.json()["data"][0]["cpf"] == "31164692372"
        assert res_6.json()["data"][0]["numeroNIS"] is None
        assert res_6.json()["data"][0]["situacaoCadastral"] == "Não autenticada"
        assert res_6.json()["data"][0]["situacaoCpf"] == "Ato de ofício, no interesse da administração tributária ou determinação judicial. Cada serviço público deverá definir qual situação cadastral será aceita"
        assert res_6.json()["data"][0]["nome"] == "Sra. Amanda Batista"
        assert res_6.json()["data"][0]["nomeValidado"] == False
        assert res_6.json()["data"][0]["dataNascimento"] == "1988-10-08"
        assert res_6.json()["data"][0]["dataNascimentoValidada"] == False
        assert res_6.json()["data"][0]["nomeMaeEstudante"] == "Leonardo Teles"
        assert res_6.json()["data"][0]["nomeMaeEstudanteValidado"] == False
        assert res_6.json()["data"][0]["dataValidacaoCadastral"] == "2025-05-01 21:31:57"
        assert res_6.json()["data"][1]["cpf"] == "14371763642"
        assert res_6.json()["data"][1]["numeroNIS"] == "25328435272"
        assert res_6.json()["data"][1]["situacaoCadastral"] == "Não autenticada"
        assert res_6.json()["data"][1]["situacaoCpf"] == "Quando não há inconsistência cadastral e não constar omissão de DIRPF"
        assert res_6.json()["data"][1]["nome"] == "Maria Alice da Cunha Jr."
        assert res_6.json()["data"][1]["nomeValidado"] == False
        assert res_6.json()["data"][1]["dataNascimento"] == "1972-08-05"
        assert res_6.json()["data"][1]["dataNascimentoValidada"] == False
        assert res_6.json()["data"][1]["nomeMaeEstudante"] == "Esther Palhares"
        assert res_6.json()["data"][1]["nomeMaeEstudanteValidado"] == False
        assert res_6.json()["data"][1]["dataValidacaoCadastral"] == "2025-05-01 21:40:01"
        assert res_6.json()["data"][2]["cpf"] == "64191301314"
        assert res_6.json()["data"][2]["numeroNIS"] == "14361466406"
        assert res_6.json()["data"][2]["situacaoCadastral"] == "Inexistente"
        assert res_6.json()["data"][2]["situacaoCpf"] == "CPF não encontrado na base do BCPF"
        assert res_6.json()["data"][2]["nome"] == "Igor Grotas"
        assert res_6.json()["data"][2]["nomeValidado"] == False
        assert res_6.json()["data"][2]["dataNascimento"] == "1987-04-20"
        assert res_6.json()["data"][2]["dataNascimentoValidada"] == False
        assert res_6.json()["data"][2]["nomeMaeEstudante"] == "Murilo Domingues"
        assert res_6.json()["data"][2]["nomeMaeEstudanteValidado"] == False
        assert res_6.json()["data"][2]["dataValidacaoCadastral"] == "2025-05-01 21:40:16"
        # Skipping assertions on the remaining 12 elements. This limit of 3 elements can be increased in the configurations
        assert res_6.json()["pagination"]["total"] == 54714.0
        assert res_6.json()["pagination"]["count"] == 15.0
        assert res_6.json()["pagination"]["per_page"] == 15.0
        assert res_6.json()["pagination"]["current_page"] == 914.0
        assert res_6.json()["pagination"]["total_pages"] == 3648.0
        assert res_6.json()["pagination"]["links"]["previous"] == 913.0
        assert res_6.json()["pagination"]["links"]["next"] == 915.0
    
    
    # Calls:
    # 1 - (200) GET:/v1/profissionais/lote
    # 2 - (500) GET:/v1/estudantes/inep/{inep}
    # 3 - (500) POST:/v1/estudantes
    # 4 - (500) GET:/v1/estudantes
    # 5 - (200) GET:/v1/profissionais
    # 6 - (500) GET:/v1/profissionais/lote/{id}
    # 7 - (422) POST:/v1/profissionais
    # 8 - (200) PATCH:/v1/estudantes/lote
    # Found 19 potential faults. Type-codes: 100, 200
    # Using 1 example:
    #   1
    @timeout_decorator.timeout(60)
    def test_26_with500(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/0/dataEnvio'] String "2025-05-01 00:20:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1/dataEnvio'] String "2025-05-01 00:17:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2/dataEnvio'] String "2025-05-01 00:15:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/3/dataEnvio'] String "2025-05-01 00:12:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/4/dataEnvio'] String "2025-05-01 00:08:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/5/dataEnvio'] String "2025-05-01 00:04:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/6/dataEnvio'] String "2025-05-01 00:03:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/7/dataEnvio'] String "2025-05-01 00:02:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/8/dataEnvio'] String "2025-05-01 00:02:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/9/dataEnvio'] String "2025-05-01 00:01:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote?page=237",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_0.json()["data"]) == 10
        assert res_0.json()["data"][0]["dataEnvio"] == "2025-05-01 00:20:55"
        assert res_0.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_0.json()["data"][1]["dataEnvio"] == "2025-05-01 00:17:12"
        assert res_0.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_0.json()["data"][2]["dataEnvio"] == "2025-05-01 00:15:43"
        assert res_0.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_0.json()["pagination"]["total"] == 2394.0
        assert res_0.json()["pagination"]["count"] == 10.0
        assert res_0.json()["pagination"]["per_page"] == 10.0
        assert res_0.json()["pagination"]["current_page"] == 237.0
        assert res_0.json()["pagination"]["total_pages"] == 240.0
        assert res_0.json()["pagination"]["links"]["previous"] == 236.0
        assert res_0.json()["pagination"]["links"]["next"] == 238.0
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes/inep/{inep}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/29191840?" + 
                    "situacao_matricula=INATIVAS&" + 
                    "situacao_final=REPROVADAS",
                    headers=headers)
        
        assert res_1.status_code == 500
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Não foi possível obter os estudantes."
        assert res_1.json()["errors"]["message"] == "O campo ano_matricula é obrigatório quando o campo situacao_final é informado."
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"09706146598\", " + \
            " \"numeroNISResponsavel\": \"28718814576\", " + \
            " \"cpf\": \"43351232306\", " + \
            " \"dataNascimento\": \"2006-01-15\", " + \
            " \"email\": \"adriele.correia.cordeiro@fake.com\", " + \
            " \"nomeSocial\": \"vYHSe9eaiB\", " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"certidaoNascimento\": \"11410282165039562707779487195376\", " + \
            " \"logradouro\": \"Rua Av. Cristiana Perez\", " + \
            " \"instituicao\": 136216, " + \
            " \"inep\": 558, " + \
            " \"dataInicioPeriodoLetivo\": \"1941-13-00\", " + \
            " \"formaOrganizacaoTurma\": 2, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 1, " + \
            " \"estudanteIntegral\": 0, " + \
            " \"anoMatricula\": 2024 " + \
            " } "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_2.status_code == 500
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Ocorreu um erro."
        assert res_2.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?" + 
                    "page=73&" + 
                    "per_page=336&" + 
                    "situacao_final=EVOMASTER",
                    headers=headers)
        
        assert res_3.status_code == 500
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "Ocorreu um erro inesperado."
        assert res_3.json()["errors"]["message"] == "O campo situacao_final é inválido."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?page=78",
                    headers=headers)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_4.json()["data"]) == 0
        assert res_4.json()["pagination"]["total"] == 3.0
        assert res_4.json()["pagination"]["count"] == 0.0
        assert res_4.json()["pagination"]["per_page"] == 10.0
        assert res_4.json()["pagination"]["current_page"] == 78.0
        assert res_4.json()["pagination"]["total_pages"] == 1.0
        assert res_4.json()["pagination"]["links"]["previous"] == 77.0
        assert res_4.json()["pagination"]["links"]["next"] is None
        
        # Fault100. HTTP Status 500. GET:/v1/profissionais/lote/{id}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/f2ab00a1-37c3-4eed-8388-223f90a82ad0?" + 
                    "page=527&" + 
                    "per_page=554&" + 
                    "incluir_objetos_processados=true",
                    headers=headers)
        
        assert res_5.status_code == 500
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "Não foi possível recuperar o lote. ID fornecido: f2ab00a1-37c3-4eed-8388-223f90a82ad0 Nenhum lote correspondente foi encontrado."
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"nome\": \"Agustina Velasques Queirós\", " + \
            " \"dataNascimento\": \"2008-10-13\", " + \
            " \"racaCor\": 3, " + \
            " \"email\": \"8sqdGT\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1, " + \
            " 3 " + \
            " ], " + \
            " \"sexo\": \"0\", " + \
            " \"uf\": 465, " + \
            " \"inep\": \"33008272\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 249, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 1, " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " } " + \
            " ], " + \
            " \"tipoVinculo\": 0, " + \
            " \"dataIngresso\": \"2075-01-18\", " + \
            " \"dataFim\": \"1993-09-02\" " + \
            " } "
        headers['Accept'] = "application/json"
        res_6 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_6.status_code == 422
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == False
        assert res_6.json()["message"] == "O campo tipoEnsinoMedio deve ser um número inteiro. (and 2 more errors)"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_56_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_57_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_58_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_59_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_60_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_7 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_7.status_code == 200
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == True
        assert res_7.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_7.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
    
    
    # Calls:
    # 1 - (200) GET:/v1/profissionais/lote
    # 2 - (200) GET:/v1/estudantes/lote
    # 3 - (201) POST:/v1/estudantes/lote
    # 4 - (500) GET:/v1/estudantes/inep/{inep}
    # 5 - (200) GET:/v1/estudantes/inep/{inep}
    # 6 - (200) PATCH:/v1/estudantes/lote
    # 7 - (400) GET:/v1/estudantes/lote/{id}/erros
    # 8 - (400) GET:/v1/profissionais/lote/{id}/erros
    # 9 - (500) POST:/v1/estudantes
    # 10 - (200) PATCH:/v1/estudantes/lote
    # Found 11 potential faults. Type-codes: 100, 200
    # Using 2 examples:
    #   2024
    #   25
    @timeout_decorator.timeout(60)
    def test_27_with500(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote?" + 
                    "page=46&" + 
                    "per_page=283",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_0.json()["data"]) == 0
        assert res_0.json()["pagination"]["total"] == 2394.0
        assert res_0.json()["pagination"]["count"] == 0.0
        assert res_0.json()["pagination"]["per_page"] == 283.0
        assert res_0.json()["pagination"]["current_page"] == 46.0
        assert res_0.json()["pagination"]["total_pages"] == 9.0
        assert res_0.json()["pagination"]["links"]["previous"] == 45.0
        assert res_0.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?page=1",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_1.json()["data"]) == 10
        assert res_1.json()["data"][0]["dataEnvio"] == "2025-05-04 00:00:42"
        assert res_1.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_1.json()["data"][1]["dataEnvio"] == "2025-05-04 00:00:23"
        assert res_1.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_1.json()["data"][2]["dataEnvio"] == "2025-05-04 00:00:05"
        assert res_1.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_1.json()["pagination"]["total"] == 9481.0
        assert res_1.json()["pagination"]["count"] == 10.0
        assert res_1.json()["pagination"]["per_page"] == 10.0
        assert res_1.json()["pagination"]["current_page"] == 1.0
        assert res_1.json()["pagination"]["total_pages"] == 949.0
        assert res_1.json()["pagination"]["links"]["previous"] is None
        assert res_1.json()["pagination"]["links"]["next"] == 2.0
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpfResponsavel\": \"13146814196\", " + \
            " \"genero\": 3, " + \
            " \"telefone\": \"11901377051\", " + \
            " \"numeroNIS\": \"73710887057\", " + \
            " \"rg\": \"4779426160817268\", " + \
            " \"orgaoEmissor\": \"8cgT4ODh\", " + \
            " \"certidaoNascimento\": \"92610812493477444832342171569287\", " + \
            " \"numero\": \"lx4G8p\", " + \
            " \"cep\": \"65112855\", " + \
            " \"municipio\": 3106200, " + \
            " \"estudantePpl\": 1, " + \
            " \"dataInicioMatricula\": \"1913-08-05\", " + \
            " \"matriculaRede\": \"xwMoaf3Z1\", " + \
            " \"instituicao\": 186018, " + \
            " \"formaOrganizacaoTurma\": 5, " + \
            " \"estudanteIntegral\": 0 " + \
            " }, " + \
            " { " + \
            " \"cpfResponsavel\": \"86421532969\", " + \
            " \"nome\": \"Paula Porteira\", " + \
            " \"telefone\": \"oeo\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 380, " + \
            " 9, " + \
            " 267, " + \
            " 3 " + \
            " ], " + \
            " \"numeroNIS\": \"LEV\", " + \
            " \"certidaoNascimento\": \"\", " + \
            " \"logradouro\": \"Rua Travessa Malena Valdez\", " + \
            " \"bairro\": \"São Salazar\", " + \
            " \"cep\": \"\", " + \
            " \"municipio\": 2408102, " + \
            " \"estudantePpl\": 2, " + \
            " \"dataInicioMatricula\": \"2042-13-08\", " + \
            " \"serieAno\": 6, " + \
            " \"matriculaRede\": \"h2ZAxiNDTE71wQ\", " + \
            " \"formaOrganizacaoTurma\": 6, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 662, " + \
            " \"estudanteAnoPeriodo\": 3, " + \
            " \"estudanteIntegral\": 42, " + \
            " \"anoMatricula\": 2024 " + \
            " }, " + \
            " { " + \
            " \"numeroNISResponsavel\": \"25235719284\", " + \
            " \"cpf\": \"14064786602\", " + \
            " \"dataNascimento\": \"1959-12-02\", " + \
            " \"genero\": 7, " + \
            " \"email\": \"RvXKzj\", " + \
            " \"nomeSocial\": \"RsOLwyuuUB3\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 10 " + \
            " ], " + \
            " \"numeroNIS\": \"96786204944\", " + \
            " \"rg\": \"9659787685903798\", " + \
            " \"orgaoEmissor\": \"v6GtF7g3fK\", " + \
            " \"certidaoNascimento\": \"73879466535850632434097422147045\", " + \
            " \"bairro\": \"São Benez\", " + \
            " \"cep\": \"72374815\", " + \
            " \"municipio\": 3123908, " + \
            " \"uf\": 13, " + \
            " \"instituicao\": 55956, " + \
            " \"inep\": 819, " + \
            " \"dataInicioPeriodoLetivo\": \"1961-08-12\", " + \
            " \"formaOrganizacaoTurma\": 4, " + \
            " \"estudanteIntegral\": 1 " + \
            " }, " + \
            " { " + \
            " \"cpf\": \"92958954013\", " + \
            " \"racaCor\": 2, " + \
            " \"email\": \"hortencia.ferminiano@fake.com\", " + \
            " \"telefone\": \"11949911257\", " + \
            " \"sexo\": \"4\", " + \
            " \"rg\": \"QKymbAg5zFCP\", " + \
            " \"orgaoEmissor\": \"SSP-RS\", " + \
            " \"numero\": \"24889\", " + \
            " \"cep\": \"11816112\", " + \
            " \"municipio\": 1714302, " + \
            " \"dataInicioMatricula\": \"2072-07-32\", " + \
            " \"matriculaRede\": \"jvjvjv1\", " + \
            " \"instituicao\": 185433, " + \
            " \"inep\": 33225605, " + \
            " \"dataInicioPeriodoLetivo\": \"1969-03-15\", " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 3 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_2.status_code == 201
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Operação realizada com sucesso"
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes/inep/{inep}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/29390109?" + 
                    "per_page=-332607673&" + 
                    "ano_matricula=2024&" + 
                    "situacao_final=EVOMASTER",
                    headers=headers)
        
        assert res_3.status_code == 500
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "Ocorreu um erro."
        assert res_3.json()["errors"]["message"] == "A quantidade máxima de registros por página é de 5000 registros."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/inep/{inep} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/12028479?" + 
                    "per_page=10&" + 
                    "ano_matricula=2024&" + 
                    "situacao_final=APROVADAS",
                    headers=headers)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Estudantes obtidos com sucesso."
        assert len(res_4.json()["data"]) == 0
        assert res_4.json()["pagination"]["total"] == 0.0
        assert res_4.json()["pagination"]["count"] == 0.0
        assert res_4.json()["pagination"]["per_page"] == 10.0
        assert res_4.json()["pagination"]["current_page"] == 1.0
        assert res_4.json()["pagination"]["total_pages"] == 1.0
        assert res_4.json()["pagination"]["links"]["previous"] is None
        assert res_4.json()["pagination"]["links"]["next"] is None
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_46_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_47_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_5 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_5.status_code == 200
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == True
        assert res_5.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_5.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_6 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/k0vNFJXFfL9/erros?" + 
                    "page=845&" + 
                    "per_page=235",
                    headers=headers)
        
        assert res_6.status_code == 400
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == False
        assert res_6.json()["message"] == "O ID fornecido não é um UUID válido. ID: k0vNFJXFfL9"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id}/erros -> Response status 400 not defined for path '/v1/profissionais/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_7 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/31/erros?page=1852715761",
                    headers=headers)
        
        assert res_7.status_code == 400
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == False
        assert res_7.json()["message"] == "O ID fornecido não é um UUID válido. ID: 31"
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpf\": \"18404357129\", " + \
            " \"nome\": \"Carlos Porto\", " + \
            " \"genero\": 7, " + \
            " \"racaCor\": 3, " + \
            " \"telefone\": \"11901377051\", " + \
            " \"rg\": \"9085097911462356\", " + \
            " \"orgaoEmissor\": \"DD_vgJvYG\", " + \
            " \"certidaoNascimento\": \"68861634312871582587174062642910\", " + \
            " \"cnh\": \"02767867935\", " + \
            " \"logradouro\": \"HduxE\", " + \
            " \"numero\": \"50\", " + \
            " \"cep\": \"38357115\", " + \
            " \"serieAno\": 25, " + \
            " \"instituicao\": 696, " + \
            " \"estudanteAnoPeriodo\": 42, " + \
            " \"estudanteIntegral\": 1, " + \
            " \"anoMatricula\": 2024 " + \
            " } "
        headers['Accept'] = "application/json"
        res_8 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_8.status_code == 500
        assert "application/json" in res_8.headers["content-type"]
        assert res_8.json()["success"] == False
        assert res_8.json()["message"] == "Ocorreu um erro."
        assert res_8.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_48_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_49_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_9 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_9.status_code == 200
        assert "application/json" in res_9.headers["content-type"]
        assert res_9.json()["success"] == True
        assert res_9.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_9.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
    
    
    # Calls:
    # 1 - (500) GET:/v1/estudantes/inep/{inep}
    # 2 - (200) GET:/v1/estudantes/solicitacoes-alteracoes
    # 3 - (500) POST:/v1/estudantes
    # Found 78 potential faults. Type-codes: 100, 200
    # Using 1 example:
    #   2024
    @timeout_decorator.timeout(60)
    def test_28_with500(self):
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes/inep/{inep}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/JUiMgQ7W?" + 
                    "per_page=533&" + 
                    "situacao_matricula=EVOMASTER&" + 
                    "ano_matricula=2024",
                    headers=headers)
        
        assert res_0.status_code == 500
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Ocorreu um erro."
        assert res_0.json()["errors"]["message"] == "Situação de matricula informada incorreta, possíveis valores: ATIVAS,INATIVAS"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/3'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/4'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/5'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/6'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/7'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/8'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/9'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/10'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/11'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/12'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/13'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/14'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/15'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/16'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/17'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/18'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/19'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/20'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/21'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/22'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/23'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/24'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/25'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/26'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/27'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/28'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/29'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/30'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/31'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/32'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/33'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/34'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/35'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/36'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/37'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/38'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/39'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/40'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/41'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/42'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/43'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/44'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/45'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/46'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/47'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/48'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/49'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/50'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/51'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/52'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/53'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/54'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/55'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/56'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/57'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/58'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/59'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/60'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/61'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/62'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/63'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/64'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/65'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/66'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/67'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/68'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/69'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/70'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/71'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/solicitacoes-alteracoes?per_page=-332607673",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Operação realizada com sucesso"
        assert len(res_1.json()["data"]) == 72
        assert res_1.json()["data"][0]["cpfAtual"] == "13213485179"
        assert res_1.json()["data"][0]["cpfNovo"] == "13213485179"
        assert res_1.json()["data"][0]["situacaoCpf"] is None
        assert res_1.json()["data"][0]["descricaoSituacaoCpf"] is None
        assert res_1.json()["data"][0]["tipoSituacaoCpf"] is None
        assert res_1.json()["data"][0]["nomeAtual"] == "Audrey Roob"
        assert res_1.json()["data"][0]["nomeNovo"] == "nome certo"
        assert res_1.json()["data"][0]["nomeValidado"] is None
        assert res_1.json()["data"][0]["dataNascimentoAtual"] == "2024-12-28"
        assert res_1.json()["data"][0]["dataNascimentoNovo"] == "2024-12-28"
        assert res_1.json()["data"][0]["dataNascimentoValidada"] is None
        assert res_1.json()["data"][0]["nomeMaeEstudanteAtual"] == "Teresa Harris IV"
        assert res_1.json()["data"][0]["nomeMaeEstudanteNovo"] == "Teresa Harris IV"
        assert res_1.json()["data"][0]["nomeMaeEstudanteValidado"] is None
        assert res_1.json()["data"][0]["dataValidacaoCadastral"] is None
        assert res_1.json()["data"][1]["cpfAtual"] == "49255179888"
        assert res_1.json()["data"][1]["cpfNovo"] == "02742633359"
        assert res_1.json()["data"][1]["situacaoCpf"] is None
        assert res_1.json()["data"][1]["descricaoSituacaoCpf"] is None
        assert res_1.json()["data"][1]["tipoSituacaoCpf"] is None
        assert res_1.json()["data"][1]["nomeAtual"] == "111"
        assert res_1.json()["data"][1]["nomeNovo"] == "111"
        assert res_1.json()["data"][1]["nomeValidado"] is None
        assert res_1.json()["data"][1]["dataNascimentoAtual"] == "2024-12-28"
        assert res_1.json()["data"][1]["dataNascimentoNovo"] == "2024-12-28"
        assert res_1.json()["data"][1]["dataNascimentoValidada"] is None
        assert res_1.json()["data"][1]["nomeMaeEstudanteAtual"] == "Valentina Rezende"
        assert res_1.json()["data"][1]["nomeMaeEstudanteNovo"] == "Valentina Rezende"
        assert res_1.json()["data"][1]["nomeMaeEstudanteValidado"] is None
        assert res_1.json()["data"][1]["dataValidacaoCadastral"] is None
        assert res_1.json()["data"][2]["cpfAtual"] == "49255179888"
        assert res_1.json()["data"][2]["cpfNovo"] == "02742633359"
        assert res_1.json()["data"][2]["situacaoCpf"] is None
        assert res_1.json()["data"][2]["descricaoSituacaoCpf"] is None
        assert res_1.json()["data"][2]["tipoSituacaoCpf"] is None
        assert res_1.json()["data"][2]["nomeAtual"] == "111"
        assert res_1.json()["data"][2]["nomeNovo"] == "111"
        assert res_1.json()["data"][2]["nomeValidado"] is None
        assert res_1.json()["data"][2]["dataNascimentoAtual"] == "2024-12-28"
        assert res_1.json()["data"][2]["dataNascimentoNovo"] == "2024-12-28"
        assert res_1.json()["data"][2]["dataNascimentoValidada"] is None
        assert res_1.json()["data"][2]["nomeMaeEstudanteAtual"] == "Valentina Rezende"
        assert res_1.json()["data"][2]["nomeMaeEstudanteNovo"] == "Valentina Rezende"
        assert res_1.json()["data"][2]["nomeMaeEstudanteValidado"] is None
        assert res_1.json()["data"][2]["dataValidacaoCadastral"] is None
        # Skipping assertions on the remaining 69 elements. This limit of 3 elements can be increased in the configurations
        assert res_1.json()["pagination"]["total"] == 72.0
        assert res_1.json()["pagination"]["count"] == 72.0
        assert res_1.json()["pagination"]["per_page"] == -3.32607673E8
        assert res_1.json()["pagination"]["current_page"] == 1.0
        assert res_1.json()["pagination"]["total_pages"] == 1.0
        assert res_1.json()["pagination"]["links"]["previous"] is None
        assert res_1.json()["pagination"]["links"]["next"] is None
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"67233045437\", " + \
            " \"numeroNISResponsavel\": \"A7ke2a2\", " + \
            " \"cpf\": \"XDhLuS7PaNY\", " + \
            " \"racaCor\": 1, " + \
            " \"telefone\": \"11969630845\", " + \
            " \"rg\": \"7054659090113849\", " + \
            " \"orgaoEmissor\": \"AzYF-XM\", " + \
            " \"cnh\": \"sM94mGRXJZ\", " + \
            " \"logradouro\": \"Rua Travessa Cruz\", " + \
            " \"bairro\": \"São Gomes\", " + \
            " \"numero\": \"876\", " + \
            " \"municipio\": 1100940, " + \
            " \"dataInicioMatricula\": \"1915-13-01\", " + \
            " \"matriculaRede\": \"G8BMn2\", " + \
            " \"inep\": 41065344, " + \
            " \"dataInicioPeriodoLetivo\": \"1987-03-04\", " + \
            " \"estudanteAnoPeriodo\": 1, " + \
            " \"estudanteIntegral\": 1, " + \
            " \"anoMatricula\": 2024 " + \
            " } "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_2.status_code == 500
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Ocorreu um erro."
        assert res_2.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório. (and 2 more errors)"
    
    
    # Calls:
    # 1 - (200) GET:/v1/estudantes/validacao-cadastro
    # 2 - (201) POST:/v1/estudantes/lote
    # 3 - (500) GET:/v1/estudantes
    # Found 239 potential faults. Type-codes: 100, 200
    # Using 1 example:
    #   2024
    @timeout_decorator.timeout(60)
    def test_29_with500(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/3'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/4'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/5'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/6'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/7'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/8'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/9'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/10'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/11'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/12'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/13'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/14'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/15'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/16'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/17'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/18'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/19'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/20'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/21'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/22'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/23'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/24'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/25'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/26'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/27'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/28'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/29'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/30'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/31'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/32'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/33'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/34'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/35'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/36'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/37'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/38'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/39'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/40'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/41'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/42'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/43'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/44'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/45'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/46'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/47'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/48'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/49'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/50'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/51'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/52'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/53'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/54'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/55'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/56'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/57'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/58'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/59'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/60'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/61'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/62'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/63'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/64'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/65'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/66'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/67'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/68'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/69'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/70'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/71'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/72'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/73'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/74'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/75'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/76'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/77'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/78'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/79'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/80'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/81'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/82'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/83'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/84'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/85'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/86'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/87'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/88'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/89'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/90'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/91'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/92'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/93'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/94'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/95'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/96'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/97'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/98'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/99'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/100'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/101'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/102'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/103'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/104'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/105'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/106'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/107'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/108'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/109'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/110'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/111'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/112'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/113'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/114'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/115'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/116'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/117'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/118'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/119'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/120'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/121'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/122'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/123'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/124'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/125'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/126'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/127'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/128'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/129'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/130'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/131'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/132'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/133'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/134'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/135'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/136'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/137'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/138'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/139'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/140'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/141'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/142'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/143'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/144'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/145'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/146'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/147'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/148'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/149'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/150'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/151'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/152'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/153'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/154'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/155'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/156'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/157'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/158'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/159'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/160'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/161'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/162'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/163'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/164'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/165'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/166'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/167'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/168'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/169'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/170'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/171'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/172'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/173'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/174'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/175'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/176'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/177'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/178'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/179'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/180'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/181'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/182'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/183'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/184'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/185'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/186'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/187'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/188'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/189'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/190'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/191'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/192'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/193'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/194'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/195'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/196'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/197'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/198'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/199'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/200'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/201'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/202'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/203'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/204'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/205'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/206'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/207'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/208'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/209'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/210'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/211'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/212'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/213'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/214'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/215'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/216'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/217'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/218'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/219'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/220'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/221'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/222'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/223'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/224'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/225'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/226'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/227'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/228'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/229'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/230'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/231'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/232'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/233'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/234'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/validacao-cadastro?per_page=235",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        assert len(res_0.json()["data"]) == 235
        assert res_0.json()["data"][0]["cpf"] == "99999701094"
        assert res_0.json()["data"][0]["numeroNIS"] is None
        assert res_0.json()["data"][0]["situacaoCadastral"] == "Autenticada"
        assert res_0.json()["data"][0]["situacaoCpf"] == "CPF não encontrado na base do BCPF"
        assert res_0.json()["data"][0]["nome"] == "Bryan  Chen"
        assert res_0.json()["data"][0]["nomeValidado"] == True
        assert res_0.json()["data"][0]["dataNascimento"] == "1956-01-11"
        assert res_0.json()["data"][0]["dataNascimentoValidada"] == True
        assert res_0.json()["data"][0]["nomeMaeEstudante"] == "Mr. Daniel Johnson DVM"
        assert res_0.json()["data"][0]["nomeMaeEstudanteValidado"] == True
        assert res_0.json()["data"][0]["dataValidacaoCadastral"] == "2025-03-11 01:39:26"
        assert res_0.json()["data"][1]["cpf"] == "34535377693"
        assert res_0.json()["data"][1]["numeroNIS"] == "11979328182"
        assert res_0.json()["data"][1]["situacaoCadastral"] == "Não autenticada"
        assert res_0.json()["data"][1]["situacaoCpf"] == "Testando o serviço de validação"
        assert res_0.json()["data"][1]["nome"] == "Trevor Hester"
        assert res_0.json()["data"][1]["nomeValidado"] == True
        assert res_0.json()["data"][1]["dataNascimento"] == "1968-02-26"
        assert res_0.json()["data"][1]["dataNascimentoValidada"] == False
        assert res_0.json()["data"][1]["nomeMaeEstudante"] == "Juan Mccullough"
        assert res_0.json()["data"][1]["nomeMaeEstudanteValidado"] == True
        assert res_0.json()["data"][1]["dataValidacaoCadastral"] == "2023-06-16 00:00:00"
        assert res_0.json()["data"][2]["cpf"] == "14064786602"
        assert res_0.json()["data"][2]["numeroNIS"] == "124112231"
        assert res_0.json()["data"][2]["situacaoCadastral"] == "Não autenticada"
        assert res_0.json()["data"][2]["situacaoCpf"] == "Quando há omissão de DIRPF em um dos últimos 5 exercícios"
        assert res_0.json()["data"][2]["nome"] == "Donald Jackson"
        assert res_0.json()["data"][2]["nomeValidado"] == False
        assert res_0.json()["data"][2]["dataNascimento"] == "1954-08-23"
        assert res_0.json()["data"][2]["dataNascimentoValidada"] == False
        assert res_0.json()["data"][2]["nomeMaeEstudante"] == "Timothy Garcia"
        assert res_0.json()["data"][2]["nomeMaeEstudanteValidado"] == True
        assert res_0.json()["data"][2]["dataValidacaoCadastral"] == "2024-04-23 00:00:00"
        # Skipping assertions on the remaining 232 elements. This limit of 3 elements can be increased in the configurations
        assert res_0.json()["pagination"]["total"] == 54714.0
        assert res_0.json()["pagination"]["count"] == 235.0
        assert res_0.json()["pagination"]["per_page"] == 235.0
        assert res_0.json()["pagination"]["current_page"] == 1.0
        assert res_0.json()["pagination"]["total_pages"] == 233.0
        assert res_0.json()["pagination"]["links"]["previous"] is None
        assert res_0.json()["pagination"]["links"]["next"] == 2.0
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpfResponsavel\": \"67037235911\", " + \
            " \"numeroNISResponsavel\": \"23701895020\", " + \
            " \"nomeMaeEstudante\": \"Bella Espinoza Sanches Sobrinho\", " + \
            " \"genero\": 8, " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"numeroNIS\": \"52544166836\", " + \
            " \"orgaoEmissor\": \"vC2a0H9Lv4\", " + \
            " \"cnh\": \"3333333\", " + \
            " \"logradouro\": \"Rua Largo Hernani Abreu\", " + \
            " \"numero\": \"\", " + \
            " \"cep\": \"65529797\", " + \
            " \"municipio\": 2700409, " + \
            " \"serieAno\": 58, " + \
            " \"matriculaRede\": \"56789\", " + \
            " \"instituicao\": 133981, " + \
            " \"inep\": 32029292, " + \
            " \"dataInicioPeriodoLetivo\": \"1930-00-20\", " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 894 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_1.status_code == 201
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Operação realizada com sucesso"
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?" + 
                    "ano_matricula=2024&" + 
                    "situacao_final=EVOMASTER",
                    headers=headers)
        
        assert res_2.status_code == 500
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Ocorreu um erro inesperado."
        assert res_2.json()["errors"]["message"] == "O campo situacao_final é inválido."
    
    
    # Calls:
    # 1 - (500) GET:/v1/estudantes/inep/{inep}
    # 2 - (200) GET:/v1/profissionais/lote
    # 3 - (201) POST:/v1/profissionais/lote
    # 4 - (404) GET:/v1/profissionais/{cpf}
    # 5 - (200) GET:/v1/estudantes/lote
    # 6 - (400) GET:/v1/profissionais/lote/{id}/erros
    # 7 - (400) GET:/v1/profissionais/lote/{id}/erros
    # 8 - (500) POST:/v1/estudantes
    # 9 - (201) POST:/v1/estudantes/lote
    # 10 - (200) GET:/v1/estudantes/lote
    # Found 295 potential faults. Type-codes: 100, 200
    # Using 3 examples:
    #   1
    #   2010
    #   2024
    @timeout_decorator.timeout(60)
    def test_30_with500(self):
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes/inep/{inep}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/f_aO9?" + 
                    "page=946&" + 
                    "per_page=1695202639&" + 
                    "situacao_matricula=EVOMASTER&" + 
                    "ano_matricula=2024",
                    headers=headers)
        
        assert res_0.status_code == 500
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Ocorreu um erro."
        assert res_0.json()["errors"]["message"] == "Situação de matricula informada incorreta, possíveis valores: ATIVAS,INATIVAS (and 1 more error)"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/0/dataEnvio'] String "2025-05-03 23:58:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1/dataEnvio'] String "2025-05-03 23:56:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2/dataEnvio'] String "2025-05-03 23:56:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/3/dataEnvio'] String "2025-05-03 23:56:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/4/dataEnvio'] String "2025-05-03 23:45:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/5/dataEnvio'] String "2025-05-03 23:45:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/6/dataEnvio'] String "2025-05-03 23:44:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/7/dataEnvio'] String "2025-05-03 23:40:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/8/dataEnvio'] String "2025-05-03 23:39:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/9/dataEnvio'] String "2025-05-03 23:38:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/10/dataEnvio'] String "2025-05-03 23:36:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/11/dataEnvio'] String "2025-05-03 23:35:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/12/dataEnvio'] String "2025-05-03 23:33:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/13/dataEnvio'] String "2025-05-03 23:28:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/14/dataEnvio'] String "2025-05-03 23:28:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/15/dataEnvio'] String "2025-05-03 23:25:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/16/dataEnvio'] String "2025-05-03 23:23:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/17/dataEnvio'] String "2025-05-03 23:22:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/18/dataEnvio'] String "2025-05-03 23:21:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/19/dataEnvio'] String "2025-05-03 23:19:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/20/dataEnvio'] String "2025-05-03 23:19:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/21/dataEnvio'] String "2025-05-03 23:19:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/22/dataEnvio'] String "2025-05-03 23:18:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/23/dataEnvio'] String "2025-05-03 23:18:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/24/dataEnvio'] String "2025-05-03 23:11:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/25/dataEnvio'] String "2025-05-03 23:11:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/26/dataEnvio'] String "2025-05-03 23:11:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/27/dataEnvio'] String "2025-05-03 23:10:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/28/dataEnvio'] String "2025-05-03 23:05:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/29/dataEnvio'] String "2025-05-03 23:04:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/30/dataEnvio'] String "2025-05-03 23:03:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/31/dataEnvio'] String "2025-05-03 23:03:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/32/dataEnvio'] String "2025-05-03 23:01:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/33/dataEnvio'] String "2025-05-03 23:01:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/34/dataEnvio'] String "2025-05-03 22:59:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/35/dataEnvio'] String "2025-05-03 22:57:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/36/dataEnvio'] String "2025-05-03 22:53:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/37/dataEnvio'] String "2025-05-03 22:51:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/38/dataEnvio'] String "2025-05-03 22:50:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/39/dataEnvio'] String "2025-05-03 22:50:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/40/dataEnvio'] String "2025-05-03 22:49:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/41/dataEnvio'] String "2025-05-03 22:49:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/42/dataEnvio'] String "2025-05-03 22:48:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/43/dataEnvio'] String "2025-05-03 22:48:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/44/dataEnvio'] String "2025-05-03 22:47:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/45/dataEnvio'] String "2025-05-03 22:44:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/46/dataEnvio'] String "2025-05-03 22:42:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/47/dataEnvio'] String "2025-05-03 22:40:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/48/dataEnvio'] String "2025-05-03 22:38:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/49/dataEnvio'] String "2025-05-03 22:37:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/50/dataEnvio'] String "2025-05-03 22:36:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/51/dataEnvio'] String "2025-05-03 22:35:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/52/dataEnvio'] String "2025-05-03 22:34:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/53/dataEnvio'] String "2025-05-03 22:34:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/54/dataEnvio'] String "2025-05-03 22:33:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/55/dataEnvio'] String "2025-05-03 22:31:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/56/dataEnvio'] String "2025-05-03 22:30:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/57/dataEnvio'] String "2025-05-03 22:29:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/58/dataEnvio'] String "2025-05-03 22:28:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/59/dataEnvio'] String "2025-05-03 22:25:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/60/dataEnvio'] String "2025-05-03 22:24:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/61/dataEnvio'] String "2025-05-03 22:23:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/62/dataEnvio'] String "2025-05-03 22:23:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/63/dataEnvio'] String "2025-05-03 22:23:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/64/dataEnvio'] String "2025-05-03 22:23:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/65/dataEnvio'] String "2025-05-03 22:23:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/66/dataEnvio'] String "2025-05-03 22:23:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/67/dataEnvio'] String "2025-05-03 22:23:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/68/dataEnvio'] String "2025-05-03 22:23:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/69/dataEnvio'] String "2025-05-03 22:23:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/70/dataEnvio'] String "2025-05-03 22:22:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/71/dataEnvio'] String "2025-05-03 22:21:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/72/dataEnvio'] String "2025-05-03 22:21:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/73/dataEnvio'] String "2025-05-03 22:21:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/74/dataEnvio'] String "2025-05-03 22:21:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/75/dataEnvio'] String "2025-05-03 22:21:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/76/dataEnvio'] String "2025-05-03 22:20:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/77/dataEnvio'] String "2025-05-03 22:20:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/78/dataEnvio'] String "2025-05-03 22:20:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/79/dataEnvio'] String "2025-05-03 22:20:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/80/dataEnvio'] String "2025-05-03 22:20:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/81/dataEnvio'] String "2025-05-03 22:20:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/82/dataEnvio'] String "2025-05-03 22:20:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/83/dataEnvio'] String "2025-05-03 22:19:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/84/dataEnvio'] String "2025-05-03 22:19:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/85/dataEnvio'] String "2025-05-03 22:19:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/86/dataEnvio'] String "2025-05-03 22:19:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/87/dataEnvio'] String "2025-05-03 22:19:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/88/dataEnvio'] String "2025-05-03 22:19:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/89/dataEnvio'] String "2025-05-03 22:18:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/90/dataEnvio'] String "2025-05-03 22:18:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/91/dataEnvio'] String "2025-05-03 22:15:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/92/dataEnvio'] String "2025-05-03 22:15:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/93/dataEnvio'] String "2025-05-03 22:13:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/94/dataEnvio'] String "2025-05-03 22:12:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/95/dataEnvio'] String "2025-05-03 22:12:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/96/dataEnvio'] String "2025-05-03 22:11:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/97/dataEnvio'] String "2025-05-03 22:11:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/98/dataEnvio'] String "2025-05-03 22:11:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/99/dataEnvio'] String "2025-05-03 22:11:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/100/dataEnvio'] String "2025-05-03 22:11:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/101/dataEnvio'] String "2025-05-03 22:10:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/102/dataEnvio'] String "2025-05-03 22:10:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/103/dataEnvio'] String "2025-05-03 22:10:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/104/dataEnvio'] String "2025-05-03 22:09:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/105/dataEnvio'] String "2025-05-03 22:09:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/106/dataEnvio'] String "2025-05-03 22:06:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/107/dataEnvio'] String "2025-05-03 22:05:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/108/dataEnvio'] String "2025-05-03 22:04:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/109/dataEnvio'] String "2025-05-03 22:04:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/110/dataEnvio'] String "2025-05-03 22:04:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/111/dataEnvio'] String "2025-05-03 22:04:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/112/dataEnvio'] String "2025-05-03 22:04:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/113/dataEnvio'] String "2025-05-03 22:04:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/114/dataEnvio'] String "2025-05-03 22:04:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/115/dataEnvio'] String "2025-05-03 22:03:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/116/dataEnvio'] String "2025-05-03 22:03:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/117/dataEnvio'] String "2025-05-03 22:03:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/118/dataEnvio'] String "2025-05-03 22:02:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/119/dataEnvio'] String "2025-05-03 22:01:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/120/dataEnvio'] String "2025-05-03 22:00:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/121/dataEnvio'] String "2025-05-03 21:59:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/122/dataEnvio'] String "2025-05-03 21:59:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/123/dataEnvio'] String "2025-05-03 21:59:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/124/dataEnvio'] String "2025-05-03 21:58:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/125/dataEnvio'] String "2025-05-03 21:57:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/126/dataEnvio'] String "2025-05-03 21:57:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/127/dataEnvio'] String "2025-05-03 21:56:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/128/dataEnvio'] String "2025-05-03 21:56:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/129/dataEnvio'] String "2025-05-03 21:56:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/130/dataEnvio'] String "2025-05-03 21:56:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/131/dataEnvio'] String "2025-05-03 21:56:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/132/dataEnvio'] String "2025-05-03 21:55:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/133/dataEnvio'] String "2025-05-03 21:55:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/134/dataEnvio'] String "2025-05-03 21:55:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/135/dataEnvio'] String "2025-05-03 21:55:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/136/dataEnvio'] String "2025-05-03 21:55:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/137/dataEnvio'] String "2025-05-03 21:55:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/138/dataEnvio'] String "2025-05-03 21:55:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/139/dataEnvio'] String "2025-05-03 21:55:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/140/dataEnvio'] String "2025-05-03 21:55:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/141/dataEnvio'] String "2025-05-03 21:55:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/142/dataEnvio'] String "2025-05-03 21:54:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/143/dataEnvio'] String "2025-05-03 21:54:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/144/dataEnvio'] String "2025-05-03 21:54:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/145/dataEnvio'] String "2025-05-03 21:54:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/146/dataEnvio'] String "2025-05-03 21:54:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/147/dataEnvio'] String "2025-05-03 21:54:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/148/dataEnvio'] String "2025-05-03 21:53:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/149/dataEnvio'] String "2025-05-03 21:53:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/150/dataEnvio'] String "2025-05-03 21:53:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/151/dataEnvio'] String "2025-05-03 21:53:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/152/dataEnvio'] String "2025-05-03 21:53:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/153/dataEnvio'] String "2025-05-03 21:52:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/154/dataEnvio'] String "2025-05-03 21:52:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/155/dataEnvio'] String "2025-05-03 21:51:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/156/dataEnvio'] String "2025-05-03 21:51:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/157/dataEnvio'] String "2025-05-03 21:51:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/158/dataEnvio'] String "2025-05-03 21:51:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/159/dataEnvio'] String "2025-05-03 21:51:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/160/dataEnvio'] String "2025-05-03 21:50:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/161/dataEnvio'] String "2025-05-03 21:49:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/162/dataEnvio'] String "2025-05-03 21:49:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/163/dataEnvio'] String "2025-05-03 21:49:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/164/dataEnvio'] String "2025-05-03 21:48:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/165/dataEnvio'] String "2025-05-03 21:46:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/166/dataEnvio'] String "2025-05-03 21:44:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/167/dataEnvio'] String "2025-05-03 21:43:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/168/dataEnvio'] String "2025-05-03 21:43:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/169/dataEnvio'] String "2025-05-03 21:42:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/170/dataEnvio'] String "2025-05-03 21:41:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/171/dataEnvio'] String "2025-05-03 21:40:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/172/dataEnvio'] String "2025-05-03 21:38:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/173/dataEnvio'] String "2025-05-03 21:38:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/174/dataEnvio'] String "2025-05-03 21:37:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/175/dataEnvio'] String "2025-05-03 21:37:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/176/dataEnvio'] String "2025-05-03 21:34:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/177/dataEnvio'] String "2025-05-03 21:28:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/178/dataEnvio'] String "2025-05-03 21:28:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/179/dataEnvio'] String "2025-05-03 21:25:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/180/dataEnvio'] String "2025-05-03 21:24:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/181/dataEnvio'] String "2025-05-03 21:24:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/182/dataEnvio'] String "2025-05-03 21:23:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/183/dataEnvio'] String "2025-05-03 21:23:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/184/dataEnvio'] String "2025-05-03 21:21:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/185/dataEnvio'] String "2025-05-03 21:20:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/186/dataEnvio'] String "2025-05-03 21:16:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/187/dataEnvio'] String "2025-05-03 21:16:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/188/dataEnvio'] String "2025-05-03 21:11:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/189/dataEnvio'] String "2025-05-03 21:11:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/190/dataEnvio'] String "2025-05-03 21:09:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/191/dataEnvio'] String "2025-05-03 21:09:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/192/dataEnvio'] String "2025-05-03 21:09:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/193/dataEnvio'] String "2025-05-03 21:06:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/194/dataEnvio'] String "2025-05-03 21:05:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/195/dataEnvio'] String "2025-05-03 21:05:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/196/dataEnvio'] String "2025-05-03 21:03:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/197/dataEnvio'] String "2025-05-03 21:03:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/198/dataEnvio'] String "2025-05-03 21:01:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/199/dataEnvio'] String "2025-05-03 20:59:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/200/dataEnvio'] String "2025-05-03 20:56:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/201/dataEnvio'] String "2025-05-03 20:55:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/202/dataEnvio'] String "2025-05-03 20:54:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/203/dataEnvio'] String "2025-05-03 20:54:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/204/dataEnvio'] String "2025-05-03 20:54:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/205/dataEnvio'] String "2025-05-03 20:52:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/206/dataEnvio'] String "2025-05-03 20:52:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/207/dataEnvio'] String "2025-05-03 20:51:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/208/dataEnvio'] String "2025-05-03 20:50:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/209/dataEnvio'] String "2025-05-03 20:50:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/210/dataEnvio'] String "2025-05-03 20:49:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/211/dataEnvio'] String "2025-05-03 20:47:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/212/dataEnvio'] String "2025-05-03 20:45:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/213/dataEnvio'] String "2025-05-03 20:42:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/214/dataEnvio'] String "2025-05-03 20:42:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/215/dataEnvio'] String "2025-05-03 20:41:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/216/dataEnvio'] String "2025-05-03 20:41:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/217/dataEnvio'] String "2025-05-03 20:40:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/218/dataEnvio'] String "2025-05-03 20:40:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/219/dataEnvio'] String "2025-05-03 20:38:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/220/dataEnvio'] String "2025-05-03 20:35:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/221/dataEnvio'] String "2025-05-03 20:30:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/222/dataEnvio'] String "2025-05-03 20:28:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/223/dataEnvio'] String "2025-05-03 20:25:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/224/dataEnvio'] String "2025-05-03 20:24:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/225/dataEnvio'] String "2025-05-03 20:24:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/226/dataEnvio'] String "2025-05-03 20:23:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/227/dataEnvio'] String "2025-05-03 20:21:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/228/dataEnvio'] String "2025-05-03 20:21:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/229/dataEnvio'] String "2025-05-03 20:16:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/230/dataEnvio'] String "2025-05-03 20:15:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/231/dataEnvio'] String "2025-05-03 20:14:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/232/dataEnvio'] String "2025-05-03 20:14:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/233/dataEnvio'] String "2025-05-03 20:13:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/234/dataEnvio'] String "2025-05-03 20:13:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/235/dataEnvio'] String "2025-05-03 20:11:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/236/dataEnvio'] String "2025-05-03 20:10:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/237/dataEnvio'] String "2025-05-03 20:10:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/238/dataEnvio'] String "2025-05-03 20:08:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/239/dataEnvio'] String "2025-05-03 20:08:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/240/dataEnvio'] String "2025-05-03 20:07:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/241/dataEnvio'] String "2025-05-03 20:05:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/242/dataEnvio'] String "2025-05-03 20:00:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/243/dataEnvio'] String "2025-05-03 19:59:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/244/dataEnvio'] String "2025-05-03 19:59:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/245/dataEnvio'] String "2025-05-03 19:59:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/246/dataEnvio'] String "2025-05-03 19:59:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/247/dataEnvio'] String "2025-05-03 19:59:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/248/dataEnvio'] String "2025-05-03 19:59:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/249/dataEnvio'] String "2025-05-03 19:59:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/250/dataEnvio'] String "2025-05-03 19:59:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/251/dataEnvio'] String "2025-05-03 19:59:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/252/dataEnvio'] String "2025-05-03 19:58:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/253/dataEnvio'] String "2025-05-03 19:58:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/254/dataEnvio'] String "2025-05-03 19:58:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/255/dataEnvio'] String "2025-05-03 19:58:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/256/dataEnvio'] String "2025-05-03 19:58:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/257/dataEnvio'] String "2025-05-03 19:58:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/258/dataEnvio'] String "2025-05-03 19:57:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/259/dataEnvio'] String "2025-05-03 19:57:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/260/dataEnvio'] String "2025-05-03 19:56:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/261/dataEnvio'] String "2025-05-03 19:56:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/262/dataEnvio'] String "2025-05-03 19:56:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/263/dataEnvio'] String "2025-05-03 19:56:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/264/dataEnvio'] String "2025-05-03 19:56:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/265/dataEnvio'] String "2025-05-03 19:56:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/266/dataEnvio'] String "2025-05-03 19:56:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/267/dataEnvio'] String "2025-05-03 19:56:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/268/dataEnvio'] String "2025-05-03 19:56:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/269/dataEnvio'] String "2025-05-03 19:55:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/270/dataEnvio'] String "2025-05-03 19:55:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/271/dataEnvio'] String "2025-05-03 19:55:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/272/dataEnvio'] String "2025-05-03 19:55:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/273/dataEnvio'] String "2025-05-03 19:55:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/274/dataEnvio'] String "2025-05-03 19:55:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/275/dataEnvio'] String "2025-05-03 19:55:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/276/dataEnvio'] String "2025-05-03 19:55:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/277/dataEnvio'] String "2025-05-03 19:55:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/278/dataEnvio'] String "2025-05-03 19:55:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/279/dataEnvio'] String "2025-05-03 19:54:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/280/dataEnvio'] String "2025-05-03 19:54:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/281/dataEnvio'] String "2025-05-03 19:54:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/282/dataEnvio'] String "2025-05-03 19:54:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote?per_page=283",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_1.json()["data"]) == 283
        assert res_1.json()["data"][0]["dataEnvio"] == "2025-05-03 23:58:26"
        assert res_1.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_1.json()["data"][1]["dataEnvio"] == "2025-05-03 23:56:49"
        assert res_1.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_1.json()["data"][2]["dataEnvio"] == "2025-05-03 23:56:33"
        assert res_1.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 280 elements. This limit of 3 elements can be increased in the configurations
        assert res_1.json()["pagination"]["total"] == 2393.0
        assert res_1.json()["pagination"]["count"] == 283.0
        assert res_1.json()["pagination"]["per_page"] == 283.0
        assert res_1.json()["pagination"]["current_page"] == 1.0
        assert res_1.json()["pagination"]["total_pages"] == 9.0
        assert res_1.json()["pagination"]["links"]["previous"] is None
        assert res_1.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"cpf\": \"34567894444\", " + \
            " \"dataNascimento\": \"1931-05-09\", " + \
            " \"genero\": 6, " + \
            " \"racaCor\": 2, " + \
            " \"email\": \"alonso.corona.filho@fake.com\", " + \
            " \"nomeSocial\": \"C9Wr\", " + \
            " \"sexo\": \"2\", " + \
            " \"cep\": \"9qJi\", " + \
            " \"uf\": 354, " + \
            " \"inep\": \"Qwac5GQGCC\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 351, " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 622, " + \
            " \"anoConclusaoFormacaoAcademica\": 286 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 1, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\" " + \
            " }, " + \
            " { " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " }, " + \
            " { " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"hbiS\", " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"1921-11-24\", " + \
            " \"dataFim\": \"1962-02-07\" " + \
            " }, " + \
            " { " + \
            " \"cpf\": \"67552657022\", " + \
            " \"nome\": \"Vicente Melo\", " + \
            " \"dataNascimento\": \"1946-09-22\", " + \
            " \"email\": \"alonso.corona.filho@fake.com\", " + \
            " \"nomeSocial\": \"RsOLwyuuUB3\", " + \
            " \"tipoDeficiencia\": [], " + \
            " \"bairro\": \"São Aragão\", " + \
            " \"numero\": \"15333\", " + \
            " \"cep\": \"28446164\", " + \
            " \"uf\": 11, " + \
            " \"inep\": 41086201, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoInicioFormacaoAcademica\": 2016 " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"xwMoaf3Z1\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"dataFim\": \"2086-02-13\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 1, " + \
            " \"cpf\": \"84745056087\", " + \
            " \"nome\": \"Juan Arag\\\u00e3o\", " + \
            " \"dataNascimento\": \"2016-06-15\", " + \
            " \"genero\": 9, " + \
            " \"logradouro\": \"Rua R. Joaquin\", " + \
            " \"uf\": 121, " + \
            " \"inep\": 41088352 " + \
            " }, " + \
            " { " + \
            " \"cpf\": \"06906991441\", " + \
            " \"nome\": \"Nicole Caldeira\", " + \
            " \"racaCor\": 4, " + \
            " \"nomeSocial\": \"jdEYfjYYG W\", " + \
            " \"numero\": \"30\", " + \
            " \"cep\": \"24821717\", " + \
            " \"municipio\": 4302352, " + \
            " \"uf\": 567, " + \
            " \"matriculaRede\": \"qkoBN\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"dataFim\": \"1994-07-11\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_2.status_code == 201
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Operação realizada com sucesso"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/15373355882",
                    headers=headers)
        
        assert res_3.status_code == 404
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "Nenhum profissional de educação encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_4.json()["data"]) == 10
        assert res_4.json()["data"][0]["dataEnvio"] == "2025-05-03 23:58:23"
        assert res_4.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_4.json()["data"][1]["dataEnvio"] == "2025-05-03 23:58:17"
        assert res_4.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_4.json()["data"][2]["dataEnvio"] == "2025-05-03 23:58:13"
        assert res_4.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_4.json()["pagination"]["total"] == 9477.0
        assert res_4.json()["pagination"]["count"] == 10.0
        assert res_4.json()["pagination"]["per_page"] == 10.0
        assert res_4.json()["pagination"]["current_page"] == 1.0
        assert res_4.json()["pagination"]["total_pages"] == 948.0
        assert res_4.json()["pagination"]["links"]["previous"] is None
        assert res_4.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id}/erros -> Response status 400 not defined for path '/v1/profissionais/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/11/erros?page=168",
                    headers=headers)
        
        assert res_5.status_code == 400
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "O ID fornecido não é um UUID válido. ID: 11"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id}/erros -> Response status 400 not defined for path '/v1/profissionais/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_6 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/31/erros",
                    headers=headers)
        
        assert res_6.status_code == 400
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == False
        assert res_6.json()["message"] == "O ID fornecido não é um UUID válido. ID: 31"
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"34494093793\", " + \
            " \"numeroNISResponsavel\": \"94285687121\", " + \
            " \"nome\": \"Ian Gon\\\u00e7alves\", " + \
            " \"dataNascimento\": \"1952-07-31\", " + \
            " \"racaCor\": 0, " + \
            " \"nomeSocial\": \"rRAEEBPUPdYf\", " + \
            " \"numeroNIS\": \"h3dC2ER0Z\", " + \
            " \"rg\": \"5780309590367413\", " + \
            " \"orgaoEmissor\": \"W3twGyZrdm\", " + \
            " \"certidaoNascimento\": \"07877301791109728584067706782051\", " + \
            " \"bairro\": \"São Vasques\", " + \
            " \"municipio\": 4302352, " + \
            " \"instituicao\": 6, " + \
            " \"dataInicioPeriodoLetivo\": \"1991-07-25\", " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 7, " + \
            " \"estudanteAnoPeriodo\": 3, " + \
            " \"anoMatricula\": 2024 " + \
            " } "
        headers['Accept'] = "application/json"
        res_7 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_7.status_code == 500
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == False
        assert res_7.json()["message"] == "Ocorreu um erro."
        assert res_7.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"numeroNISResponsavel\": \"20995148583\", " + \
            " \"dataNascimento\": \"JQ\", " + \
            " \"genero\": 6, " + \
            " \"email\": \"Qpy5wfqI5Q3_I0fy\", " + \
            " \"nomeSocial\": \"K4M5REPemK60\", " + \
            " \"sexo\": \"3\", " + \
            " \"orgaoEmissor\": \"vC2a0H9Lv4\", " + \
            " \"bairro\": \"São Toledo\", " + \
            " \"numero\": \"1340\", " + \
            " \"municipio\": 3304557, " + \
            " \"estudantePpl\": 0, " + \
            " \"dataInicioPeriodoLetivo\": \"2077-08-06\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_8 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_8.status_code == 201
        assert "application/json" in res_8.headers["content-type"]
        assert res_8.json()["success"] == True
        assert res_8.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> GET on path '/v1/estudantes/lote' defines a response schema but no response body found.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_9 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?per_page=-332607673",
                    headers=headers)
        
        assert res_9.status_code == 200
        # the response payload was too large, above the threshold of 1000000 bytes. No assertion on it is therefore generated.
    
    
    # Calls:
    # 1 - (404) GET:/v1/profissionais/{cpf}
    # 2 - (201) POST:/v1/estudantes/lote
    # 3 - (500) POST:/v1/estudantes
    # 4 - (200) GET:/v1/estudantes/inep/{inep}
    # 5 - (200) GET:/v1/estudantes/validacao-cadastro
    # Found 509 potential faults. Type-codes: 100, 200
    # Using 1 example:
    #   25
    @timeout_decorator.timeout(60)
    def test_31_with500(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/J",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Nenhum profissional de educação encontrado."
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpfResponsavel\": \"48405399283\", " + \
            " \"cpf\": \"87976683381\", " + \
            " \"nome\": \"IZZgM_fFFLHy\", " + \
            " \"dataNascimento\": \"1996-09-15\", " + \
            " \"genero\": 4, " + \
            " \"telefone\": \"3333333\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1, " + \
            " 2, " + \
            " 429, " + \
            " 701, " + \
            " 1 " + \
            " ], " + \
            " \"numeroNIS\": \"25372152746\", " + \
            " \"orgaoEmissor\": \"vC2a0H9Lv4\", " + \
            " \"certidaoNascimento\": \"373271505447\", " + \
            " \"bairro\": \"Centro\", " + \
            " \"numero\": \"1241\", " + \
            " \"cep\": \"60149506\", " + \
            " \"municipio\": 1302603, " + \
            " \"dataInicioMatricula\": \"1943-13-32\", " + \
            " \"serieAno\": 25, " + \
            " \"instituicao\": 94577, " + \
            " \"dataInicioPeriodoLetivo\": \"1940-00-17\", " + \
            " \"formaOrganizacaoTurma\": 6, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 550, " + \
            " \"estudanteAnoPeriodo\": 1, " + \
            " \"anoMatricula\": 2024 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_1.status_code == 201
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Operação realizada com sucesso"
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"59231438603\", " + \
            " \"numeroNISResponsavel\": \"11273745692\", " + \
            " \"cpf\": \"82572373297\", " + \
            " \"nome\": \"Deneval Taveira Jr.\", " + \
            " \"email\": \"RTT0VngF3Deo0O@example.com\", " + \
            " \"telefone\": \"3333333\", " + \
            " \"nomeSocial\": \"NjB\", " + \
            " \"sexo\": \"4\", " + \
            " \"rg\": \"np\", " + \
            " \"orgaoEmissor\": \"SSP-SP\", " + \
            " \"bairro\": \"tWf\", " + \
            " \"serieAno\": 26, " + \
            " \"matriculaRede\": \"7\", " + \
            " \"dataInicioPeriodoLetivo\": \"2018-01-32\", " + \
            " \"formaOrganizacaoTurma\": 1, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 0, " + \
            " \"estudanteAnoPeriodo\": 1, " + \
            " \"estudanteIntegral\": 1 " + \
            " } "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_2.status_code == 500
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Ocorreu um erro."
        assert res_2.json()["errors"]["message"] == "O campo nomeMaeEstudante é obrigatório."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/inep/{inep} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/26540720?situacao_matricula=INATIVAS",
                    headers=headers)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Estudantes obtidos com sucesso."
        assert len(res_3.json()["data"]) == 10
        assert res_3.json()["data"][0]["cpf"] == "90663948703"
        assert res_3.json()["data"][0]["nome"] == "5oVRNMR0"
        assert res_3.json()["data"][0]["nomeSocial"] == "IFAHvC2o0k87"
        assert res_3.json()["data"][0]["numeroNIS"] == "23237617829"
        assert res_3.json()["data"][0]["rg"] == "38220870"
        assert res_3.json()["data"][0]["orgaoEmissor"] == "ZHH"
        assert res_3.json()["data"][0]["cpfResponsavel"] == "95936602249"
        assert res_3.json()["data"][0]["nomeMaeEstudante"] == "iEXuWPd1"
        assert res_3.json()["data"][0]["numeroNISResponsavel"] == "32080211958"
        assert res_3.json()["data"][0]["dataNascimento"] == "2001-08-02"
        assert res_3.json()["data"][0]["logradouro"] == "F7ed8pF7pV9WGlR"
        assert res_3.json()["data"][0]["bairro"] == "sIdb OaroAt2"
        assert res_3.json()["data"][0]["numero"] == "899"
        assert res_3.json()["data"][0]["cep"] == "20727920"
        assert res_3.json()["data"][0]["municipio"] == 4200705.0
        assert res_3.json()["data"][0]["certidaoNascimento"] == "20013060923950491764"
        assert res_3.json()["data"][0]["cnh"] == "03251028466"
        assert res_3.json()["data"][0]["uf"] == 42.0
        assert res_3.json()["data"][0]["racaCor"] == 0.0
        assert len(res_3.json()["data"][0]["tipoDeficiencia"]) == 3
        assert res_3.json()["data"][0]["tipoDeficiencia"][0] == 1.0
        assert res_3.json()["data"][0]["tipoDeficiencia"][1] == 2.0
        assert res_3.json()["data"][0]["tipoDeficiencia"][2] == 3.0
        assert res_3.json()["data"][0]["genero"] == 3.0
        assert res_3.json()["data"][0]["telefone"] == "11992925090"
        assert res_3.json()["data"][0]["email"] == "1Ip1n0pz@example.com"
        assert res_3.json()["data"][0]["situacaoCadastroValidado"] == 4.0
        assert len(res_3.json()["data"][0]["matriculas"]) == 1
        assert res_3.json()["data"][0]["matriculas"][0]["codigoMatriculaSgp"] == 1.2878594E7
        assert res_3.json()["data"][0]["matriculas"][0]["codInstituicao"] == 81776.0
        assert res_3.json()["data"][0]["matriculas"][0]["dataInicioMatricula"] == "2024-11-30"
        assert res_3.json()["data"][0]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_3.json()["data"][0]["matriculas"][0]["dataFimOuAprovacao"] == "2024-12-27"
        assert res_3.json()["data"][0]["matriculas"][0]["situacaoMatricula"] == False
        assert res_3.json()["data"][0]["matriculas"][0]["serieAno"] == 45.0
        assert res_3.json()["data"][0]["matriculas"][0]["etapaEnsinoConsolidado"] == "EJA - Ensino Médio"
        assert res_3.json()["data"][0]["matriculas"][0]["matriculaRede"] == "C4eFnwsN"
        assert res_3.json()["data"][0]["matriculas"][0]["deletadaEm"] == "2025-01-27 10:00:02"
        assert res_3.json()["data"][0]["matriculas"][0]["inep"] == "26540720"
        assert res_3.json()["data"][0]["matriculas"][0]["estudanteSituacaoFinal"] == 1.0
        assert res_3.json()["data"][0]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_3.json()["data"][0]["matriculas"][0]["dataInicioPeriodoLetivo"] == "2024-11-20"
        assert res_3.json()["data"][0]["matriculas"][0]["formaOrganizacaoTurma"] == 3.0
        assert res_3.json()["data"][0]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] == 4.0
        assert res_3.json()["data"][0]["matriculas"][0]["estudanteAnoPeriodo"] == 1.0
        assert res_3.json()["data"][0]["matriculas"][0]["estudanteIntegral"] == False
        assert res_3.json()["data"][0]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_3.json()["data"][0]["matriculas"][0]["anoMatricula"] is None
        assert len(res_3.json()["data"][0]["outrasMatriculas"]) == 0
        assert res_3.json()["data"][1]["cpf"] == "67089268578"
        assert res_3.json()["data"][1]["nome"] == "6cc97vMeCP9KgSI"
        assert res_3.json()["data"][1]["nomeSocial"] == "rRAEEBPUPdYf"
        assert res_3.json()["data"][1]["numeroNIS"] == "30183310316"
        assert res_3.json()["data"][1]["rg"] == "53669048"
        assert res_3.json()["data"][1]["orgaoEmissor"] == "i4tf"
        assert res_3.json()["data"][1]["cpfResponsavel"] == "52008260631"
        assert res_3.json()["data"][1]["nomeMaeEstudante"] == "7aTq92Zi"
        assert res_3.json()["data"][1]["numeroNISResponsavel"] == "11273745692"
        assert res_3.json()["data"][1]["dataNascimento"] == "2008-10-29"
        assert res_3.json()["data"][1]["logradouro"] == "rWjgYPU1P8"
        assert res_3.json()["data"][1]["bairro"] == "G5tQ1ZJN0"
        assert res_3.json()["data"][1]["numero"] == "55"
        assert res_3.json()["data"][1]["cep"] == "19141821"
        assert res_3.json()["data"][1]["municipio"] == 4200705.0
        assert res_3.json()["data"][1]["certidaoNascimento"] == "373271505447"
        assert res_3.json()["data"][1]["cnh"] == "56267273661"
        assert res_3.json()["data"][1]["uf"] == 42.0
        assert res_3.json()["data"][1]["racaCor"] == 0.0
        assert len(res_3.json()["data"][1]["tipoDeficiencia"]) == 3
        assert res_3.json()["data"][1]["tipoDeficiencia"][0] == 1.0
        assert res_3.json()["data"][1]["tipoDeficiencia"][1] == 2.0
        assert res_3.json()["data"][1]["tipoDeficiencia"][2] == 3.0
        assert res_3.json()["data"][1]["genero"] == 4.0
        assert res_3.json()["data"][1]["telefone"] == "11969630845"
        assert res_3.json()["data"][1]["email"] == "RTT0VngF3Deo0O@example.com"
        assert res_3.json()["data"][1]["situacaoCadastroValidado"] == 4.0
        assert len(res_3.json()["data"][1]["matriculas"]) == 1
        assert res_3.json()["data"][1]["matriculas"][0]["codigoMatriculaSgp"] == 1.0202979E7
        assert res_3.json()["data"][1]["matriculas"][0]["codInstituicao"] == 81776.0
        assert res_3.json()["data"][1]["matriculas"][0]["dataInicioMatricula"] == "2021-10-19"
        assert res_3.json()["data"][1]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_3.json()["data"][1]["matriculas"][0]["dataFimOuAprovacao"] == "2024-11-08"
        assert res_3.json()["data"][1]["matriculas"][0]["situacaoMatricula"] == False
        assert res_3.json()["data"][1]["matriculas"][0]["serieAno"] == 34.0
        assert res_3.json()["data"][1]["matriculas"][0]["etapaEnsinoConsolidado"] == "Formação inicial continuada ou qualificação profissional (FIC)"
        assert res_3.json()["data"][1]["matriculas"][0]["matriculaRede"] == "AhMTo"
        assert res_3.json()["data"][1]["matriculas"][0]["deletadaEm"] == "2025-02-24 09:45:40"
        assert res_3.json()["data"][1]["matriculas"][0]["inep"] == "26540720"
        assert res_3.json()["data"][1]["matriculas"][0]["estudanteSituacaoFinal"] == 20.0
        assert res_3.json()["data"][1]["matriculas"][0]["dataConclusaoEnsinoMedio"] == "2024-11-08"
        assert res_3.json()["data"][1]["matriculas"][0]["dataInicioPeriodoLetivo"] == "2020-02-02"
        assert res_3.json()["data"][1]["matriculas"][0]["formaOrganizacaoTurma"] == 4.0
        assert res_3.json()["data"][1]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] == 2.0
        assert res_3.json()["data"][1]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_3.json()["data"][1]["matriculas"][0]["estudanteIntegral"] == True
        assert res_3.json()["data"][1]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_3.json()["data"][1]["matriculas"][0]["anoMatricula"] is None
        assert len(res_3.json()["data"][1]["outrasMatriculas"]) == 0
        assert res_3.json()["data"][2]["cpf"] == "07854824150"
        assert res_3.json()["data"][2]["nome"] == "7w9yAx"
        assert res_3.json()["data"][2]["nomeSocial"] == "vYHSe9eaiB"
        assert res_3.json()["data"][2]["numeroNIS"] == "29838719129"
        assert res_3.json()["data"][2]["rg"] == "46832988"
        assert res_3.json()["data"][2]["orgaoEmissor"] == "aXadOz"
        assert res_3.json()["data"][2]["cpfResponsavel"] == "82998245595"
        assert res_3.json()["data"][2]["nomeMaeEstudante"] == "9Gr1H8jwlNfiAIzbZKVz"
        assert res_3.json()["data"][2]["numeroNISResponsavel"] == "14906348587"
        assert res_3.json()["data"][2]["dataNascimento"] == "2009-04-24"
        assert res_3.json()["data"][2]["logradouro"] == "NtFZIaKwCXif45822KI23C1A0K"
        assert res_3.json()["data"][2]["bairro"] == "kM7158tASf8t7"
        assert res_3.json()["data"][2]["numero"] == "01"
        assert res_3.json()["data"][2]["cep"] == "61304351"
        assert res_3.json()["data"][2]["municipio"] == 4200705.0
        assert res_3.json()["data"][2]["certidaoNascimento"] == "05480540666936434"
        assert res_3.json()["data"][2]["cnh"] == "32405422558"
        assert res_3.json()["data"][2]["uf"] == 42.0
        assert res_3.json()["data"][2]["racaCor"] == 2.0
        assert len(res_3.json()["data"][2]["tipoDeficiencia"]) == 3
        assert res_3.json()["data"][2]["tipoDeficiencia"][0] == 1.0
        assert res_3.json()["data"][2]["tipoDeficiencia"][1] == 2.0
        assert res_3.json()["data"][2]["tipoDeficiencia"][2] == 3.0
        assert res_3.json()["data"][2]["genero"] == 1.0
        assert res_3.json()["data"][2]["telefone"] == "11951045305"
        assert res_3.json()["data"][2]["email"] == "Krh2PcoseRosd@example.com"
        assert res_3.json()["data"][2]["situacaoCadastroValidado"] == 4.0
        assert len(res_3.json()["data"][2]["matriculas"]) == 1
        assert res_3.json()["data"][2]["matriculas"][0]["codigoMatriculaSgp"] == 1.069876E7
        assert res_3.json()["data"][2]["matriculas"][0]["codInstituicao"] == 81776.0
        assert res_3.json()["data"][2]["matriculas"][0]["dataInicioMatricula"] == "2024-11-09"
        assert res_3.json()["data"][2]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_3.json()["data"][2]["matriculas"][0]["dataFimOuAprovacao"] == "2024-07-24"
        assert res_3.json()["data"][2]["matriculas"][0]["situacaoMatricula"] == False
        assert res_3.json()["data"][2]["matriculas"][0]["serieAno"] == 19.0
        assert res_3.json()["data"][2]["matriculas"][0]["etapaEnsinoConsolidado"] == "Ensino Fundamental (9 anos)"
        assert res_3.json()["data"][2]["matriculas"][0]["matriculaRede"] == "XAAc13c"
        assert res_3.json()["data"][2]["matriculas"][0]["deletadaEm"] == "2025-02-22 14:40:37"
        assert res_3.json()["data"][2]["matriculas"][0]["inep"] == "26540720"
        assert res_3.json()["data"][2]["matriculas"][0]["estudanteSituacaoFinal"] == 2.0
        assert res_3.json()["data"][2]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_3.json()["data"][2]["matriculas"][0]["dataInicioPeriodoLetivo"] == "2024-10-30"
        assert res_3.json()["data"][2]["matriculas"][0]["formaOrganizacaoTurma"] == 4.0
        assert res_3.json()["data"][2]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] == 9.0
        assert res_3.json()["data"][2]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_3.json()["data"][2]["matriculas"][0]["estudanteIntegral"] == True
        assert res_3.json()["data"][2]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_3.json()["data"][2]["matriculas"][0]["anoMatricula"] is None
        assert len(res_3.json()["data"][2]["outrasMatriculas"]) == 0
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_3.json()["pagination"]["total"] == 15.0
        assert res_3.json()["pagination"]["count"] == 10.0
        assert res_3.json()["pagination"]["per_page"] == 10.0
        assert res_3.json()["pagination"]["current_page"] == 1.0
        assert res_3.json()["pagination"]["total_pages"] == 2.0
        assert res_3.json()["pagination"]["links"]["previous"] is None
        assert res_3.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/3'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/4'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/5'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/6'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/7'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/8'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/9'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/10'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/11'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/12'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/13'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/14'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/15'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/16'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/17'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/18'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/19'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/20'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/21'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/22'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/23'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/24'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/25'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/26'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/27'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/28'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/29'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/30'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/31'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/32'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/33'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/34'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/35'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/36'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/37'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/38'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/39'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/40'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/41'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/42'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/43'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/44'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/45'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/46'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/47'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/48'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/49'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/50'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/51'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/52'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/53'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/54'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/55'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/56'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/57'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/58'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/59'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/60'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/61'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/62'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/63'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/64'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/65'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/66'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/67'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/68'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/69'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/70'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/71'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/72'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/73'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/74'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/75'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/76'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/77'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/78'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/79'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/80'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/81'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/82'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/83'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/84'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/85'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/86'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/87'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/88'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/89'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/90'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/91'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/92'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/93'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/94'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/95'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/96'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/97'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/98'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/99'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/100'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/101'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/102'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/103'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/104'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/105'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/106'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/107'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/108'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/109'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/110'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/111'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/112'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/113'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/114'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/115'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/116'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/117'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/118'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/119'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/120'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/121'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/122'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/123'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/124'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/125'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/126'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/127'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/128'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/129'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/130'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/131'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/132'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/133'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/134'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/135'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/136'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/137'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/138'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/139'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/140'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/141'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/142'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/143'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/144'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/145'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/146'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/147'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/148'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/149'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/150'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/151'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/152'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/153'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/154'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/155'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/156'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/157'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/158'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/159'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/160'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/161'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/162'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/163'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/164'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/165'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/166'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/167'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/168'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/169'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/170'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/171'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/172'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/173'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/174'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/175'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/176'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/177'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/178'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/179'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/180'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/181'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/182'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/183'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/184'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/185'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/186'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/187'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/188'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/189'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/190'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/191'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/192'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/193'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/194'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/195'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/196'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/197'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/198'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/199'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/200'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/201'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/202'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/203'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/204'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/205'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/206'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/207'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/208'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/209'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/210'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/211'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/212'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/213'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/214'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/215'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/216'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/217'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/218'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/219'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/220'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/221'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/222'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/223'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/224'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/225'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/226'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/227'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/228'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/229'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/230'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/231'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/232'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/233'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/234'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/235'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/236'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/237'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/238'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/239'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/240'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/241'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/242'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/243'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/244'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/245'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/246'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/247'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/248'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/249'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/250'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/251'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/252'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/253'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/254'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/255'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/256'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/257'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/258'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/259'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/260'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/261'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/262'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/263'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/264'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/265'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/266'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/267'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/268'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/269'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/270'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/271'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/272'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/273'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/274'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/275'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/276'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/277'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/278'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/279'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/280'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/281'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/282'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/283'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/284'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/285'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/286'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/287'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/288'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/289'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/290'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/291'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/292'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/293'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/294'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/295'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/296'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/297'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/298'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/299'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/300'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/301'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/302'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/303'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/304'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/305'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/306'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/307'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/308'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/309'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/310'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/311'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/312'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/313'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/314'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/315'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/316'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/317'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/318'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/319'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/320'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/321'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/322'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/323'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/324'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/325'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/326'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/327'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/328'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/329'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/330'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/331'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/332'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/333'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/334'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/335'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/336'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/337'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/338'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/339'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/340'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/341'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/342'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/343'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/344'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/345'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/346'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/347'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/348'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/349'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/350'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/351'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/352'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/353'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/354'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/355'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/356'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/357'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/358'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/359'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/360'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/361'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/362'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/363'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/364'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/365'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/366'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/367'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/368'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/369'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/370'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/371'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/372'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/373'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/374'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/375'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/376'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/377'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/378'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/379'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/380'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/381'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/382'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/383'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/384'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/385'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/386'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/387'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/388'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/389'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/390'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/391'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/392'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/393'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/394'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/395'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/396'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/397'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/398'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/399'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/400'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/401'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/402'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/403'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/404'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/405'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/406'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/407'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/408'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/409'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/410'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/411'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/412'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/413'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/414'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/415'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/416'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/417'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/418'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/419'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/420'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/421'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/422'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/423'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/424'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/425'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/426'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/427'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/428'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/429'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/430'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/431'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/432'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/433'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/434'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/435'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/436'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/437'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/438'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/439'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/440'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/441'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/442'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/443'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/444'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/445'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/446'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/447'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/448'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/449'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/450'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/451'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/452'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/453'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/454'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/455'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/456'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/457'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/458'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/459'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/460'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/461'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/462'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/463'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/464'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/465'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/466'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/467'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/468'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/469'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/470'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/471'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/472'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/473'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/474'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/475'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/476'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/477'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/478'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/479'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/480'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/481'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/482'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/483'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/484'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/485'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/486'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/487'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/488'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/489'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/490'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/491'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/492'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/493'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/494'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/495'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/496'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/497'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/498'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/499'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/500'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/501'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/502'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/validacao-cadastro?per_page=503",
                    headers=headers)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Operação realizada com sucesso"
        assert len(res_4.json()["data"]) == 503
        assert res_4.json()["data"][0]["cpf"] == "99999701094"
        assert res_4.json()["data"][0]["numeroNIS"] is None
        assert res_4.json()["data"][0]["situacaoCadastral"] == "Autenticada"
        assert res_4.json()["data"][0]["situacaoCpf"] == "CPF não encontrado na base do BCPF"
        assert res_4.json()["data"][0]["nome"] == "Bryan  Chen"
        assert res_4.json()["data"][0]["nomeValidado"] == True
        assert res_4.json()["data"][0]["dataNascimento"] == "1956-01-11"
        assert res_4.json()["data"][0]["dataNascimentoValidada"] == True
        assert res_4.json()["data"][0]["nomeMaeEstudante"] == "Mr. Daniel Johnson DVM"
        assert res_4.json()["data"][0]["nomeMaeEstudanteValidado"] == True
        assert res_4.json()["data"][0]["dataValidacaoCadastral"] == "2025-03-11 01:39:26"
        assert res_4.json()["data"][1]["cpf"] == "34535377693"
        assert res_4.json()["data"][1]["numeroNIS"] == "11979328182"
        assert res_4.json()["data"][1]["situacaoCadastral"] == "Não autenticada"
        assert res_4.json()["data"][1]["situacaoCpf"] == "Testando o serviço de validação"
        assert res_4.json()["data"][1]["nome"] == "Trevor Hester"
        assert res_4.json()["data"][1]["nomeValidado"] == True
        assert res_4.json()["data"][1]["dataNascimento"] == "1968-02-26"
        assert res_4.json()["data"][1]["dataNascimentoValidada"] == False
        assert res_4.json()["data"][1]["nomeMaeEstudante"] == "Juan Mccullough"
        assert res_4.json()["data"][1]["nomeMaeEstudanteValidado"] == True
        assert res_4.json()["data"][1]["dataValidacaoCadastral"] == "2023-06-16 00:00:00"
        assert res_4.json()["data"][2]["cpf"] == "14064786602"
        assert res_4.json()["data"][2]["numeroNIS"] == "124112231"
        assert res_4.json()["data"][2]["situacaoCadastral"] == "Não autenticada"
        assert res_4.json()["data"][2]["situacaoCpf"] == "Quando há omissão de DIRPF em um dos últimos 5 exercícios"
        assert res_4.json()["data"][2]["nome"] == "Donald Jackson"
        assert res_4.json()["data"][2]["nomeValidado"] == False
        assert res_4.json()["data"][2]["dataNascimento"] == "1954-08-23"
        assert res_4.json()["data"][2]["dataNascimentoValidada"] == False
        assert res_4.json()["data"][2]["nomeMaeEstudante"] == "Timothy Garcia"
        assert res_4.json()["data"][2]["nomeMaeEstudanteValidado"] == True
        assert res_4.json()["data"][2]["dataValidacaoCadastral"] == "2024-04-23 00:00:00"
        # Skipping assertions on the remaining 500 elements. This limit of 3 elements can be increased in the configurations
        assert res_4.json()["pagination"]["total"] == 54714.0
        assert res_4.json()["pagination"]["count"] == 503.0
        assert res_4.json()["pagination"]["per_page"] == 503.0
        assert res_4.json()["pagination"]["current_page"] == 1.0
        assert res_4.json()["pagination"]["total_pages"] == 109.0
        assert res_4.json()["pagination"]["links"]["previous"] is None
        assert res_4.json()["pagination"]["links"]["next"] == 2.0
    
    
    # Calls:
    # 1 - (200) GET:/v1/profissionais/lote
    # 2 - (400) GET:/v1/estudantes/lote/{id}/erros
    # 3 - (200) GET:/v1/profissionais/inep/{inep}
    # 4 - (201) POST:/v1/profissionais/lote
    # 5 - (500) GET:/v1/profissionais/lote/{id}
    # 6 - (500) GET:/v1/estudantes/inep/{inep}
    # 7 - (200) GET:/v1/profissionais
    # 8 - (201) POST:/v1/profissionais/lote
    # Found 498 potential faults. Type-codes: 100, 200
    # Using 6 examples:
    #   1
    #   123456789
    #   2014
    #   44
    #   5
    #   Universidade Federal do Rio de Janeiro
    @timeout_decorator.timeout(60)
    def test_32_with500(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/0/dataEnvio'] String "2025-05-03 23:59:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1/dataEnvio'] String "2025-05-03 23:58:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2/dataEnvio'] String "2025-05-03 23:56:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/3/dataEnvio'] String "2025-05-03 23:56:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/4/dataEnvio'] String "2025-05-03 23:56:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/5/dataEnvio'] String "2025-05-03 23:45:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/6/dataEnvio'] String "2025-05-03 23:45:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/7/dataEnvio'] String "2025-05-03 23:44:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/8/dataEnvio'] String "2025-05-03 23:40:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/9/dataEnvio'] String "2025-05-03 23:39:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/10/dataEnvio'] String "2025-05-03 23:38:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/11/dataEnvio'] String "2025-05-03 23:36:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/12/dataEnvio'] String "2025-05-03 23:35:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/13/dataEnvio'] String "2025-05-03 23:33:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/14/dataEnvio'] String "2025-05-03 23:28:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/15/dataEnvio'] String "2025-05-03 23:28:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/16/dataEnvio'] String "2025-05-03 23:25:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/17/dataEnvio'] String "2025-05-03 23:23:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/18/dataEnvio'] String "2025-05-03 23:22:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/19/dataEnvio'] String "2025-05-03 23:21:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/20/dataEnvio'] String "2025-05-03 23:19:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/21/dataEnvio'] String "2025-05-03 23:19:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/22/dataEnvio'] String "2025-05-03 23:19:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/23/dataEnvio'] String "2025-05-03 23:18:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/24/dataEnvio'] String "2025-05-03 23:18:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/25/dataEnvio'] String "2025-05-03 23:11:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/26/dataEnvio'] String "2025-05-03 23:11:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/27/dataEnvio'] String "2025-05-03 23:11:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/28/dataEnvio'] String "2025-05-03 23:10:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/29/dataEnvio'] String "2025-05-03 23:05:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/30/dataEnvio'] String "2025-05-03 23:04:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/31/dataEnvio'] String "2025-05-03 23:03:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/32/dataEnvio'] String "2025-05-03 23:03:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/33/dataEnvio'] String "2025-05-03 23:01:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/34/dataEnvio'] String "2025-05-03 23:01:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/35/dataEnvio'] String "2025-05-03 22:59:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/36/dataEnvio'] String "2025-05-03 22:57:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/37/dataEnvio'] String "2025-05-03 22:53:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/38/dataEnvio'] String "2025-05-03 22:51:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/39/dataEnvio'] String "2025-05-03 22:50:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/40/dataEnvio'] String "2025-05-03 22:50:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/41/dataEnvio'] String "2025-05-03 22:49:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/42/dataEnvio'] String "2025-05-03 22:49:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/43/dataEnvio'] String "2025-05-03 22:48:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/44/dataEnvio'] String "2025-05-03 22:48:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/45/dataEnvio'] String "2025-05-03 22:47:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/46/dataEnvio'] String "2025-05-03 22:44:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/47/dataEnvio'] String "2025-05-03 22:42:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/48/dataEnvio'] String "2025-05-03 22:40:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/49/dataEnvio'] String "2025-05-03 22:38:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/50/dataEnvio'] String "2025-05-03 22:37:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/51/dataEnvio'] String "2025-05-03 22:36:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/52/dataEnvio'] String "2025-05-03 22:35:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/53/dataEnvio'] String "2025-05-03 22:34:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/54/dataEnvio'] String "2025-05-03 22:34:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/55/dataEnvio'] String "2025-05-03 22:33:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/56/dataEnvio'] String "2025-05-03 22:31:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/57/dataEnvio'] String "2025-05-03 22:30:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/58/dataEnvio'] String "2025-05-03 22:29:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/59/dataEnvio'] String "2025-05-03 22:28:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/60/dataEnvio'] String "2025-05-03 22:25:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/61/dataEnvio'] String "2025-05-03 22:24:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/62/dataEnvio'] String "2025-05-03 22:23:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/63/dataEnvio'] String "2025-05-03 22:23:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/64/dataEnvio'] String "2025-05-03 22:23:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/65/dataEnvio'] String "2025-05-03 22:23:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/66/dataEnvio'] String "2025-05-03 22:23:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/67/dataEnvio'] String "2025-05-03 22:23:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/68/dataEnvio'] String "2025-05-03 22:23:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/69/dataEnvio'] String "2025-05-03 22:23:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/70/dataEnvio'] String "2025-05-03 22:23:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/71/dataEnvio'] String "2025-05-03 22:22:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/72/dataEnvio'] String "2025-05-03 22:21:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/73/dataEnvio'] String "2025-05-03 22:21:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/74/dataEnvio'] String "2025-05-03 22:21:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/75/dataEnvio'] String "2025-05-03 22:21:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/76/dataEnvio'] String "2025-05-03 22:21:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/77/dataEnvio'] String "2025-05-03 22:20:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/78/dataEnvio'] String "2025-05-03 22:20:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/79/dataEnvio'] String "2025-05-03 22:20:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/80/dataEnvio'] String "2025-05-03 22:20:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/81/dataEnvio'] String "2025-05-03 22:20:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/82/dataEnvio'] String "2025-05-03 22:20:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/83/dataEnvio'] String "2025-05-03 22:20:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/84/dataEnvio'] String "2025-05-03 22:19:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/85/dataEnvio'] String "2025-05-03 22:19:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/86/dataEnvio'] String "2025-05-03 22:19:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/87/dataEnvio'] String "2025-05-03 22:19:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/88/dataEnvio'] String "2025-05-03 22:19:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/89/dataEnvio'] String "2025-05-03 22:19:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/90/dataEnvio'] String "2025-05-03 22:18:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/91/dataEnvio'] String "2025-05-03 22:18:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/92/dataEnvio'] String "2025-05-03 22:15:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/93/dataEnvio'] String "2025-05-03 22:15:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/94/dataEnvio'] String "2025-05-03 22:13:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/95/dataEnvio'] String "2025-05-03 22:12:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/96/dataEnvio'] String "2025-05-03 22:12:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/97/dataEnvio'] String "2025-05-03 22:11:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/98/dataEnvio'] String "2025-05-03 22:11:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/99/dataEnvio'] String "2025-05-03 22:11:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/100/dataEnvio'] String "2025-05-03 22:11:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/101/dataEnvio'] String "2025-05-03 22:11:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/102/dataEnvio'] String "2025-05-03 22:10:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/103/dataEnvio'] String "2025-05-03 22:10:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/104/dataEnvio'] String "2025-05-03 22:10:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/105/dataEnvio'] String "2025-05-03 22:09:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/106/dataEnvio'] String "2025-05-03 22:09:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/107/dataEnvio'] String "2025-05-03 22:06:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/108/dataEnvio'] String "2025-05-03 22:05:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/109/dataEnvio'] String "2025-05-03 22:04:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/110/dataEnvio'] String "2025-05-03 22:04:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/111/dataEnvio'] String "2025-05-03 22:04:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/112/dataEnvio'] String "2025-05-03 22:04:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/113/dataEnvio'] String "2025-05-03 22:04:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/114/dataEnvio'] String "2025-05-03 22:04:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/115/dataEnvio'] String "2025-05-03 22:04:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/116/dataEnvio'] String "2025-05-03 22:03:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/117/dataEnvio'] String "2025-05-03 22:03:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/118/dataEnvio'] String "2025-05-03 22:03:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/119/dataEnvio'] String "2025-05-03 22:02:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/120/dataEnvio'] String "2025-05-03 22:01:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/121/dataEnvio'] String "2025-05-03 22:00:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/122/dataEnvio'] String "2025-05-03 21:59:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/123/dataEnvio'] String "2025-05-03 21:59:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/124/dataEnvio'] String "2025-05-03 21:59:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/125/dataEnvio'] String "2025-05-03 21:58:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/126/dataEnvio'] String "2025-05-03 21:57:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/127/dataEnvio'] String "2025-05-03 21:57:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/128/dataEnvio'] String "2025-05-03 21:56:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/129/dataEnvio'] String "2025-05-03 21:56:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/130/dataEnvio'] String "2025-05-03 21:56:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/131/dataEnvio'] String "2025-05-03 21:56:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/132/dataEnvio'] String "2025-05-03 21:56:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/133/dataEnvio'] String "2025-05-03 21:55:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/134/dataEnvio'] String "2025-05-03 21:55:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/135/dataEnvio'] String "2025-05-03 21:55:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/136/dataEnvio'] String "2025-05-03 21:55:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/137/dataEnvio'] String "2025-05-03 21:55:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/138/dataEnvio'] String "2025-05-03 21:55:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/139/dataEnvio'] String "2025-05-03 21:55:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/140/dataEnvio'] String "2025-05-03 21:55:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/141/dataEnvio'] String "2025-05-03 21:55:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/142/dataEnvio'] String "2025-05-03 21:55:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/143/dataEnvio'] String "2025-05-03 21:54:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/144/dataEnvio'] String "2025-05-03 21:54:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/145/dataEnvio'] String "2025-05-03 21:54:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/146/dataEnvio'] String "2025-05-03 21:54:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/147/dataEnvio'] String "2025-05-03 21:54:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/148/dataEnvio'] String "2025-05-03 21:54:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/149/dataEnvio'] String "2025-05-03 21:53:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/150/dataEnvio'] String "2025-05-03 21:53:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/151/dataEnvio'] String "2025-05-03 21:53:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/152/dataEnvio'] String "2025-05-03 21:53:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/153/dataEnvio'] String "2025-05-03 21:53:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/154/dataEnvio'] String "2025-05-03 21:52:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/155/dataEnvio'] String "2025-05-03 21:52:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/156/dataEnvio'] String "2025-05-03 21:51:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/157/dataEnvio'] String "2025-05-03 21:51:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/158/dataEnvio'] String "2025-05-03 21:51:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/159/dataEnvio'] String "2025-05-03 21:51:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/160/dataEnvio'] String "2025-05-03 21:51:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/161/dataEnvio'] String "2025-05-03 21:50:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/162/dataEnvio'] String "2025-05-03 21:49:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/163/dataEnvio'] String "2025-05-03 21:49:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/164/dataEnvio'] String "2025-05-03 21:49:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/165/dataEnvio'] String "2025-05-03 21:48:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/166/dataEnvio'] String "2025-05-03 21:46:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/167/dataEnvio'] String "2025-05-03 21:44:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/168/dataEnvio'] String "2025-05-03 21:43:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/169/dataEnvio'] String "2025-05-03 21:43:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/170/dataEnvio'] String "2025-05-03 21:42:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/171/dataEnvio'] String "2025-05-03 21:41:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/172/dataEnvio'] String "2025-05-03 21:40:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/173/dataEnvio'] String "2025-05-03 21:38:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/174/dataEnvio'] String "2025-05-03 21:38:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/175/dataEnvio'] String "2025-05-03 21:37:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/176/dataEnvio'] String "2025-05-03 21:37:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/177/dataEnvio'] String "2025-05-03 21:34:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/178/dataEnvio'] String "2025-05-03 21:28:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/179/dataEnvio'] String "2025-05-03 21:28:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/180/dataEnvio'] String "2025-05-03 21:25:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/181/dataEnvio'] String "2025-05-03 21:24:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/182/dataEnvio'] String "2025-05-03 21:24:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/183/dataEnvio'] String "2025-05-03 21:23:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/184/dataEnvio'] String "2025-05-03 21:23:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/185/dataEnvio'] String "2025-05-03 21:21:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/186/dataEnvio'] String "2025-05-03 21:20:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/187/dataEnvio'] String "2025-05-03 21:16:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/188/dataEnvio'] String "2025-05-03 21:16:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/189/dataEnvio'] String "2025-05-03 21:11:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/190/dataEnvio'] String "2025-05-03 21:11:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/191/dataEnvio'] String "2025-05-03 21:09:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/192/dataEnvio'] String "2025-05-03 21:09:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/193/dataEnvio'] String "2025-05-03 21:09:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/194/dataEnvio'] String "2025-05-03 21:06:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/195/dataEnvio'] String "2025-05-03 21:05:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/196/dataEnvio'] String "2025-05-03 21:05:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/197/dataEnvio'] String "2025-05-03 21:03:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/198/dataEnvio'] String "2025-05-03 21:03:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/199/dataEnvio'] String "2025-05-03 21:01:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/200/dataEnvio'] String "2025-05-03 20:59:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/201/dataEnvio'] String "2025-05-03 20:56:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/202/dataEnvio'] String "2025-05-03 20:55:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/203/dataEnvio'] String "2025-05-03 20:54:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/204/dataEnvio'] String "2025-05-03 20:54:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/205/dataEnvio'] String "2025-05-03 20:54:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/206/dataEnvio'] String "2025-05-03 20:52:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/207/dataEnvio'] String "2025-05-03 20:52:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/208/dataEnvio'] String "2025-05-03 20:51:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/209/dataEnvio'] String "2025-05-03 20:50:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/210/dataEnvio'] String "2025-05-03 20:50:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/211/dataEnvio'] String "2025-05-03 20:49:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/212/dataEnvio'] String "2025-05-03 20:47:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/213/dataEnvio'] String "2025-05-03 20:45:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/214/dataEnvio'] String "2025-05-03 20:42:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/215/dataEnvio'] String "2025-05-03 20:42:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/216/dataEnvio'] String "2025-05-03 20:41:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/217/dataEnvio'] String "2025-05-03 20:41:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/218/dataEnvio'] String "2025-05-03 20:40:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/219/dataEnvio'] String "2025-05-03 20:40:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/220/dataEnvio'] String "2025-05-03 20:38:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/221/dataEnvio'] String "2025-05-03 20:35:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/222/dataEnvio'] String "2025-05-03 20:30:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/223/dataEnvio'] String "2025-05-03 20:28:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/224/dataEnvio'] String "2025-05-03 20:25:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/225/dataEnvio'] String "2025-05-03 20:24:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/226/dataEnvio'] String "2025-05-03 20:24:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/227/dataEnvio'] String "2025-05-03 20:23:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/228/dataEnvio'] String "2025-05-03 20:21:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/229/dataEnvio'] String "2025-05-03 20:21:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/230/dataEnvio'] String "2025-05-03 20:16:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/231/dataEnvio'] String "2025-05-03 20:15:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/232/dataEnvio'] String "2025-05-03 20:14:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/233/dataEnvio'] String "2025-05-03 20:14:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/234/dataEnvio'] String "2025-05-03 20:13:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/235/dataEnvio'] String "2025-05-03 20:13:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/236/dataEnvio'] String "2025-05-03 20:11:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/237/dataEnvio'] String "2025-05-03 20:10:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/238/dataEnvio'] String "2025-05-03 20:10:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/239/dataEnvio'] String "2025-05-03 20:08:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/240/dataEnvio'] String "2025-05-03 20:08:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/241/dataEnvio'] String "2025-05-03 20:07:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/242/dataEnvio'] String "2025-05-03 20:05:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/243/dataEnvio'] String "2025-05-03 20:00:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/244/dataEnvio'] String "2025-05-03 19:59:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/245/dataEnvio'] String "2025-05-03 19:59:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/246/dataEnvio'] String "2025-05-03 19:59:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/247/dataEnvio'] String "2025-05-03 19:59:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/248/dataEnvio'] String "2025-05-03 19:59:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/249/dataEnvio'] String "2025-05-03 19:59:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/250/dataEnvio'] String "2025-05-03 19:59:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/251/dataEnvio'] String "2025-05-03 19:59:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/252/dataEnvio'] String "2025-05-03 19:59:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/253/dataEnvio'] String "2025-05-03 19:58:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/254/dataEnvio'] String "2025-05-03 19:58:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/255/dataEnvio'] String "2025-05-03 19:58:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/256/dataEnvio'] String "2025-05-03 19:58:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/257/dataEnvio'] String "2025-05-03 19:58:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/258/dataEnvio'] String "2025-05-03 19:58:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/259/dataEnvio'] String "2025-05-03 19:57:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/260/dataEnvio'] String "2025-05-03 19:57:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/261/dataEnvio'] String "2025-05-03 19:56:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/262/dataEnvio'] String "2025-05-03 19:56:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/263/dataEnvio'] String "2025-05-03 19:56:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/264/dataEnvio'] String "2025-05-03 19:56:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/265/dataEnvio'] String "2025-05-03 19:56:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/266/dataEnvio'] String "2025-05-03 19:56:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/267/dataEnvio'] String "2025-05-03 19:56:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/268/dataEnvio'] String "2025-05-03 19:56:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/269/dataEnvio'] String "2025-05-03 19:56:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/270/dataEnvio'] String "2025-05-03 19:55:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/271/dataEnvio'] String "2025-05-03 19:55:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/272/dataEnvio'] String "2025-05-03 19:55:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/273/dataEnvio'] String "2025-05-03 19:55:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/274/dataEnvio'] String "2025-05-03 19:55:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/275/dataEnvio'] String "2025-05-03 19:55:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/276/dataEnvio'] String "2025-05-03 19:55:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/277/dataEnvio'] String "2025-05-03 19:55:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/278/dataEnvio'] String "2025-05-03 19:55:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/279/dataEnvio'] String "2025-05-03 19:55:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/280/dataEnvio'] String "2025-05-03 19:54:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/281/dataEnvio'] String "2025-05-03 19:54:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/282/dataEnvio'] String "2025-05-03 19:54:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/283/dataEnvio'] String "2025-05-03 19:54:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/284/dataEnvio'] String "2025-05-03 19:54:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/285/dataEnvio'] String "2025-05-03 19:51:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/286/dataEnvio'] String "2025-05-03 19:51:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/287/dataEnvio'] String "2025-05-03 19:51:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/288/dataEnvio'] String "2025-05-03 19:51:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/289/dataEnvio'] String "2025-05-03 19:49:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/290/dataEnvio'] String "2025-05-03 19:49:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/291/dataEnvio'] String "2025-05-03 19:49:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/292/dataEnvio'] String "2025-05-03 19:48:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/293/dataEnvio'] String "2025-05-03 19:47:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/294/dataEnvio'] String "2025-05-03 19:47:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/295/dataEnvio'] String "2025-05-03 19:47:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/296/dataEnvio'] String "2025-05-03 19:47:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/297/dataEnvio'] String "2025-05-03 19:47:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/298/dataEnvio'] String "2025-05-03 19:46:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/299/dataEnvio'] String "2025-05-03 19:46:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/300/dataEnvio'] String "2025-05-03 19:46:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/301/dataEnvio'] String "2025-05-03 19:45:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/302/dataEnvio'] String "2025-05-03 19:45:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/303/dataEnvio'] String "2025-05-03 19:45:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/304/dataEnvio'] String "2025-05-03 19:44:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/305/dataEnvio'] String "2025-05-03 19:44:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/306/dataEnvio'] String "2025-05-03 19:44:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/307/dataEnvio'] String "2025-05-03 19:44:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/308/dataEnvio'] String "2025-05-03 19:44:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/309/dataEnvio'] String "2025-05-03 19:44:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/310/dataEnvio'] String "2025-05-03 19:44:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/311/dataEnvio'] String "2025-05-03 19:44:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/312/dataEnvio'] String "2025-05-03 19:44:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/313/dataEnvio'] String "2025-05-03 19:43:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/314/dataEnvio'] String "2025-05-03 19:42:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/315/dataEnvio'] String "2025-05-03 19:42:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/316/dataEnvio'] String "2025-05-03 19:41:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/317/dataEnvio'] String "2025-05-03 19:41:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/318/dataEnvio'] String "2025-05-03 19:41:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/319/dataEnvio'] String "2025-05-03 19:41:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/320/dataEnvio'] String "2025-05-03 19:41:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/321/dataEnvio'] String "2025-05-03 19:41:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/322/dataEnvio'] String "2025-05-03 19:41:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/323/dataEnvio'] String "2025-05-03 19:41:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/324/dataEnvio'] String "2025-05-03 19:41:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/325/dataEnvio'] String "2025-05-03 19:40:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/326/dataEnvio'] String "2025-05-03 19:40:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/327/dataEnvio'] String "2025-05-03 19:40:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/328/dataEnvio'] String "2025-05-03 19:40:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/329/dataEnvio'] String "2025-05-03 19:40:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/330/dataEnvio'] String "2025-05-03 19:40:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/331/dataEnvio'] String "2025-05-03 19:40:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/332/dataEnvio'] String "2025-05-03 19:39:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/333/dataEnvio'] String "2025-05-03 19:39:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/334/dataEnvio'] String "2025-05-03 19:39:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/335/dataEnvio'] String "2025-05-03 19:38:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/336/dataEnvio'] String "2025-05-03 19:38:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/337/dataEnvio'] String "2025-05-03 19:38:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/338/dataEnvio'] String "2025-05-03 19:36:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/339/dataEnvio'] String "2025-05-03 19:36:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/340/dataEnvio'] String "2025-05-03 19:35:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/341/dataEnvio'] String "2025-05-03 19:35:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/342/dataEnvio'] String "2025-05-03 19:35:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/343/dataEnvio'] String "2025-05-03 19:35:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/344/dataEnvio'] String "2025-05-03 19:35:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/345/dataEnvio'] String "2025-05-03 19:35:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/346/dataEnvio'] String "2025-05-03 19:35:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/347/dataEnvio'] String "2025-05-03 19:35:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/348/dataEnvio'] String "2025-05-03 19:35:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/349/dataEnvio'] String "2025-05-03 19:34:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/350/dataEnvio'] String "2025-05-03 19:34:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/351/dataEnvio'] String "2025-05-03 19:34:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/352/dataEnvio'] String "2025-05-03 19:33:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/353/dataEnvio'] String "2025-05-03 19:33:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/354/dataEnvio'] String "2025-05-03 19:33:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/355/dataEnvio'] String "2025-05-03 19:32:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/356/dataEnvio'] String "2025-05-03 19:31:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/357/dataEnvio'] String "2025-05-03 19:31:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/358/dataEnvio'] String "2025-05-03 19:31:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/359/dataEnvio'] String "2025-05-03 19:31:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/360/dataEnvio'] String "2025-05-03 19:31:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/361/dataEnvio'] String "2025-05-03 19:31:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/362/dataEnvio'] String "2025-05-03 19:30:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/363/dataEnvio'] String "2025-05-03 19:30:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/364/dataEnvio'] String "2025-05-03 19:30:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/365/dataEnvio'] String "2025-05-03 19:30:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/366/dataEnvio'] String "2025-05-03 19:29:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/367/dataEnvio'] String "2025-05-03 19:29:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/368/dataEnvio'] String "2025-05-03 19:29:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/369/dataEnvio'] String "2025-05-03 19:28:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/370/dataEnvio'] String "2025-05-03 19:27:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/371/dataEnvio'] String "2025-05-03 19:27:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/372/dataEnvio'] String "2025-05-03 19:27:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/373/dataEnvio'] String "2025-05-03 19:27:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/374/dataEnvio'] String "2025-05-03 19:27:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/375/dataEnvio'] String "2025-05-03 19:27:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/376/dataEnvio'] String "2025-05-03 19:27:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/377/dataEnvio'] String "2025-05-03 19:27:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/378/dataEnvio'] String "2025-05-03 19:26:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/379/dataEnvio'] String "2025-05-03 19:26:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/380/dataEnvio'] String "2025-05-03 19:25:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/381/dataEnvio'] String "2025-05-03 19:25:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/382/dataEnvio'] String "2025-05-03 19:25:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/383/dataEnvio'] String "2025-05-03 19:25:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/384/dataEnvio'] String "2025-05-03 19:25:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/385/dataEnvio'] String "2025-05-03 19:25:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/386/dataEnvio'] String "2025-05-03 19:24:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/387/dataEnvio'] String "2025-05-03 19:24:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/388/dataEnvio'] String "2025-05-03 19:23:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/389/dataEnvio'] String "2025-05-03 19:23:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/390/dataEnvio'] String "2025-05-03 19:23:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/391/dataEnvio'] String "2025-05-03 19:23:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/392/dataEnvio'] String "2025-05-03 19:23:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/393/dataEnvio'] String "2025-05-03 19:23:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/394/dataEnvio'] String "2025-05-03 19:21:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/395/dataEnvio'] String "2025-05-03 19:20:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/396/dataEnvio'] String "2025-05-03 19:18:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/397/dataEnvio'] String "2025-05-03 19:17:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/398/dataEnvio'] String "2025-05-03 19:16:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/399/dataEnvio'] String "2025-05-03 19:11:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/400/dataEnvio'] String "2025-05-03 19:10:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/401/dataEnvio'] String "2025-05-03 19:08:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/402/dataEnvio'] String "2025-05-03 19:07:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/403/dataEnvio'] String "2025-05-03 19:05:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/404/dataEnvio'] String "2025-05-03 19:03:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/405/dataEnvio'] String "2025-05-03 19:01:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/406/dataEnvio'] String "2025-05-03 19:00:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/407/dataEnvio'] String "2025-05-03 19:00:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/408/dataEnvio'] String "2025-05-03 18:59:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/409/dataEnvio'] String "2025-05-03 18:58:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/410/dataEnvio'] String "2025-05-03 18:57:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/411/dataEnvio'] String "2025-05-03 18:56:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/412/dataEnvio'] String "2025-05-03 18:54:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/413/dataEnvio'] String "2025-05-03 18:51:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/414/dataEnvio'] String "2025-05-03 18:50:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/415/dataEnvio'] String "2025-05-03 18:47:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/416/dataEnvio'] String "2025-05-03 18:46:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/417/dataEnvio'] String "2025-05-03 18:45:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/418/dataEnvio'] String "2025-05-03 18:44:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/419/dataEnvio'] String "2025-05-03 18:43:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/420/dataEnvio'] String "2025-05-03 18:41:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/421/dataEnvio'] String "2025-05-03 18:41:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/422/dataEnvio'] String "2025-05-03 18:40:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/423/dataEnvio'] String "2025-05-03 18:35:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/424/dataEnvio'] String "2025-05-03 18:35:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/425/dataEnvio'] String "2025-05-03 18:34:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/426/dataEnvio'] String "2025-05-03 18:32:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/427/dataEnvio'] String "2025-05-03 18:31:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/428/dataEnvio'] String "2025-05-03 18:31:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/429/dataEnvio'] String "2025-05-03 18:29:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/430/dataEnvio'] String "2025-05-03 18:29:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/431/dataEnvio'] String "2025-05-03 18:27:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/432/dataEnvio'] String "2025-05-03 11:35:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/433/dataEnvio'] String "2025-05-03 11:34:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/434/dataEnvio'] String "2025-05-03 11:33:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/435/dataEnvio'] String "2025-05-03 11:33:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/436/dataEnvio'] String "2025-05-03 11:32:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/437/dataEnvio'] String "2025-05-03 11:31:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/438/dataEnvio'] String "2025-05-03 11:30:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/439/dataEnvio'] String "2025-05-03 11:28:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/440/dataEnvio'] String "2025-05-03 11:27:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/441/dataEnvio'] String "2025-05-03 11:27:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/442/dataEnvio'] String "2025-05-03 11:26:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/443/dataEnvio'] String "2025-05-03 11:26:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/444/dataEnvio'] String "2025-05-03 11:25:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/445/dataEnvio'] String "2025-05-03 11:24:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/446/dataEnvio'] String "2025-05-03 11:24:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/447/dataEnvio'] String "2025-05-03 11:22:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/448/dataEnvio'] String "2025-05-03 11:20:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/449/dataEnvio'] String "2025-05-03 11:20:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/450/dataEnvio'] String "2025-05-03 11:19:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/451/dataEnvio'] String "2025-05-03 11:16:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/452/dataEnvio'] String "2025-05-03 11:16:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/453/dataEnvio'] String "2025-05-03 11:15:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/454/dataEnvio'] String "2025-05-03 11:15:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/455/dataEnvio'] String "2025-05-03 11:14:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/456/dataEnvio'] String "2025-05-03 11:14:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/457/dataEnvio'] String "2025-05-03 11:14:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/458/dataEnvio'] String "2025-05-03 11:13:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/459/dataEnvio'] String "2025-05-03 11:13:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/460/dataEnvio'] String "2025-05-03 11:12:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/461/dataEnvio'] String "2025-05-03 11:10:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/462/dataEnvio'] String "2025-05-03 11:10:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/463/dataEnvio'] String "2025-05-03 11:10:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/464/dataEnvio'] String "2025-05-03 11:09:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/465/dataEnvio'] String "2025-05-03 11:09:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/466/dataEnvio'] String "2025-05-03 11:09:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/467/dataEnvio'] String "2025-05-03 11:09:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/468/dataEnvio'] String "2025-05-03 11:09:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/469/dataEnvio'] String "2025-05-03 11:09:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/470/dataEnvio'] String "2025-05-03 11:08:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/471/dataEnvio'] String "2025-05-03 11:08:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/472/dataEnvio'] String "2025-05-03 11:07:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/473/dataEnvio'] String "2025-05-03 11:07:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/474/dataEnvio'] String "2025-05-03 11:07:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/475/dataEnvio'] String "2025-05-03 11:07:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/476/dataEnvio'] String "2025-05-03 11:07:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/477/dataEnvio'] String "2025-05-03 11:07:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/478/dataEnvio'] String "2025-05-03 11:07:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/479/dataEnvio'] String "2025-05-03 11:07:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/480/dataEnvio'] String "2025-05-03 11:07:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/481/dataEnvio'] String "2025-05-03 11:07:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/482/dataEnvio'] String "2025-05-03 11:07:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/483/dataEnvio'] String "2025-05-03 11:07:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/484/dataEnvio'] String "2025-05-03 11:06:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/485/dataEnvio'] String "2025-05-03 11:06:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/486/dataEnvio'] String "2025-05-03 11:06:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote?" + 
                    "page=1&" + 
                    "per_page=487",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_0.json()["data"]) == 487
        assert res_0.json()["data"][0]["dataEnvio"] == "2025-05-03 23:59:19"
        assert res_0.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_0.json()["data"][1]["dataEnvio"] == "2025-05-03 23:58:26"
        assert res_0.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_0.json()["data"][2]["dataEnvio"] == "2025-05-03 23:56:49"
        assert res_0.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 484 elements. This limit of 3 elements can be increased in the configurations
        assert res_0.json()["pagination"]["total"] == 2394.0
        assert res_0.json()["pagination"]["count"] == 487.0
        assert res_0.json()["pagination"]["per_page"] == 487.0
        assert res_0.json()["pagination"]["current_page"] == 1.0
        assert res_0.json()["pagination"]["total_pages"] == 5.0
        assert res_0.json()["pagination"]["links"]["previous"] is None
        assert res_0.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/31/erros?per_page=143",
                    headers=headers)
        
        assert res_1.status_code == 400
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "O ID fornecido não é um UUID válido. ID: 31"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/inep/16005074?page=61",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_2.json()["data"]) == 0
        assert res_2.json()["pagination"]["total"] == 0.0
        assert res_2.json()["pagination"]["count"] == 0.0
        assert res_2.json()["pagination"]["per_page"] == 10.0
        assert res_2.json()["pagination"]["current_page"] == 61.0
        assert res_2.json()["pagination"]["total_pages"] == 1.0
        assert res_2.json()["pagination"]["links"]["previous"] == 60.0
        assert res_2.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"nivelEscolaridade\": 5, " + \
            " \"nome\": \"Aaron Pontes Bittencourt Filho\", " + \
            " \"genero\": 42, " + \
            " \"racaCor\": 42, " + \
            " \"email\": \"aaron.paes.gusmao@fake.com\", " + \
            " \"nomeSocial\": \"358F\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 9, " + \
            " 2, " + \
            " 9 " + \
            " ], " + \
            " \"sexo\": \"2\", " + \
            " \"bairro\": \"São Grego\", " + \
            " \"numero\": \"l\", " + \
            " \"cep\": \"10059260\", " + \
            " \"municipio\": 1100940, " + \
            " \"uf\": 118, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"fXi3snPA5\", " + \
            " \"anoConclusaoFormacaoAcademica\": 919 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"anoInicioFormacaoAcademica\": 2016 " + \
            " }, " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\" " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"123456789\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataFim\": \"2012-12-01\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nome\": \"Aaron Pedrosa Jr.\", " + \
            " \"dataNascimento\": \"2005-03-05\", " + \
            " \"genero\": 6, " + \
            " \"nomeSocial\": \"IFAHvC2o0k87\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 5, " + \
            " 10, " + \
            " 490, " + \
            " 2 " + \
            " ], " + \
            " \"sexo\": \"1\", " + \
            " \"numero\": \"w\", " + \
            " \"cep\": \"44865097\", " + \
            " \"municipio\": 279, " + \
            " \"uf\": 53, " + \
            " \"inep\": \"35001582\", " + \
            " \"matriculaRede\": \"56789\", " + \
            " \"codigoFuncao\": 1, " + \
            " \"dataFim\": \"2054-07-12\", " + \
            " \"cargaHoraria\": 40 " + \
            " }, " + \
            " { " + \
            " \"racaCor\": 3, " + \
            " \"email\": \"aaron.rezende.salas@fake.com\", " + \
            " \"telefone\": \"11969630845\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 10 " + \
            " ], " + \
            " \"numero\": \"421\", " + \
            " \"cep\": \"74966100\", " + \
            " \"inep\": 351, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"anoConclusaoFormacaoAcademica\": 406 " + \
            " }, " + \
            " { " + \
            " \"anoInicioFormacaoAcademica\": 2016, " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Rio de Janeiro\", " + \
            " \"anoInicioFormacaoAcademica\": 657, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " } " + \
            " ], " + \
            " \"dataFim\": \"1965-02-24\", " + \
            " \"cargaHoraria\": 44 " + \
            " }, " + \
            " { " + \
            " \"cpf\": \"59253172541\", " + \
            " \"genero\": 42, " + \
            " \"racaCor\": 5, " + \
            " \"telefone\": \"11951045305\", " + \
            " \"sexo\": \"3\", " + \
            " \"numero\": \"49\", " + \
            " \"municipio\": 4312757, " + \
            " \"inep\": 41136225, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Brasil\" " + \
            " }, " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoInicioFormacaoAcademica\": 578 " + \
            " } " + \
            " ], " + \
            " \"dataIngresso\": \"2067-01-14\", " + \
            " \"dataFim\": \"2002-01-28\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_3 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_3.status_code == 201
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Operação realizada com sucesso"
        
        # Fault100. HTTP Status 500. GET:/v1/profissionais/lote/{id}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/7cf9f990-8ba4-44be-a0e3-3b290d664aa8?page=162",
                    headers=headers)
        
        assert res_4.status_code == 500
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "Não foi possível recuperar o lote. ID fornecido: 7cf9f990-8ba4-44be-a0e3-3b290d664aa8 Nenhum lote correspondente foi encontrado."
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes/inep/{inep}
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/41078179?situacao_final=APROVADAS",
                    headers=headers)
        
        assert res_5.status_code == 500
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "Não foi possível obter os estudantes."
        assert res_5.json()["errors"]["message"] == "O campo ano_matricula é obrigatório quando o campo situacao_final é informado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_6 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?" + 
                    "page=40&" + 
                    "per_page=529",
                    headers=headers)
        
        assert res_6.status_code == 200
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == True
        assert res_6.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_6.json()["data"]) == 0
        assert res_6.json()["pagination"]["total"] == 3.0
        assert res_6.json()["pagination"]["count"] == 0.0
        assert res_6.json()["pagination"]["per_page"] == 529.0
        assert res_6.json()["pagination"]["current_page"] == 40.0
        assert res_6.json()["pagination"]["total_pages"] == 1.0
        assert res_6.json()["pagination"]["links"]["previous"] == 39.0
        assert res_6.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"cpf\": \"H8_yvU\", " + \
            " \"genero\": 5, " + \
            " \"email\": \"aaron.padrao.zamana.filho@fake.com\", " + \
            " \"nomeSocial\": \"test\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 3, " + \
            " 9, " + \
            " 3, " + \
            " 9, " + \
            " 5 " + \
            " ], " + \
            " \"logradouro\": \"Rua Largo Eliane Corona\", " + \
            " \"bairro\": \"São Paz\", " + \
            " \"numero\": \"1064\", " + \
            " \"cep\": \"19990876\", " + \
            " \"municipio\": 4312757, " + \
            " \"uf\": 33, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 1, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6, " + \
            " \"anoInicioFormacaoAcademica\": 2016, " + \
            " \"anoConclusaoFormacaoAcademica\": 640 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"UM0FLOeXlIfc\", " + \
            " \"anoInicioFormacaoAcademica\": 2016, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Rio de Janeiro\", " + \
            " \"anoInicioFormacaoAcademica\": 307 " + \
            " } " + \
            " ], " + \
            " \"inep\": 32078625, " + \
            " \"tipoVinculo\": 169, " + \
            " \"codigoFuncao\": 1, " + \
            " \"dataIngresso\": \"2000-12-31\", " + \
            " \"dataFim\": \"1934-00-01\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_7 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_7.status_code == 201
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == True
        assert res_7.json()["message"] == "Operação realizada com sucesso"
    
    
    # Calls:
    # 1 - (500) GET:/v1/estudantes
    # 2 - (200) GET:/v1/estudantes/lote/{id}
    # 3 - (200) GET:/v1/profissionais/lote
    # 4 - (500) POST:/v1/estudantes
    # 5 - (201) POST:/v1/profissionais/lote
    # Found 561 potential faults. Type-codes: 100, 200
    # Using 5 examples:
    #   1
    #   2014
    #   44
    #   5
    #   Universidade Federal do Rio de Janeiro
    @timeout_decorator.timeout(60)
    def test_33_with500(self):
        
        # Fault100. HTTP Status 500. GET:/v1/estudantes
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?" + 
                    "situacao_matricula=EVOMASTER&" + 
                    "ano_matricula=244&" + 
                    "situacao_final=REPROVADAS",
                    headers=headers)
        
        assert res_0.status_code == 500
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Ocorreu um erro."
        assert res_0.json()["errors"]["message"] == "Situação de matricula informada incorreta, possíveis valores: ATIVAS,INATIVAS"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/e6c5c5ba-0544-4561-a151-f154941c0667?" + 
                    "page=885&" + 
                    "per_page=260",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["status_processamento"] == "Enviado"
        assert res_1.json()["message"] == "Lote recuperado com sucesso. ID: e6c5c5ba-0544-4561-a151-f154941c0667"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/0/dataEnvio'] String "2025-05-03 23:44:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1/dataEnvio'] String "2025-05-03 23:40:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2/dataEnvio'] String "2025-05-03 23:39:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/3/dataEnvio'] String "2025-05-03 23:38:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/4/dataEnvio'] String "2025-05-03 23:36:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/5/dataEnvio'] String "2025-05-03 23:35:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/6/dataEnvio'] String "2025-05-03 23:33:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/7/dataEnvio'] String "2025-05-03 23:28:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/8/dataEnvio'] String "2025-05-03 23:28:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/9/dataEnvio'] String "2025-05-03 23:25:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/10/dataEnvio'] String "2025-05-03 23:23:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/11/dataEnvio'] String "2025-05-03 23:22:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/12/dataEnvio'] String "2025-05-03 23:21:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/13/dataEnvio'] String "2025-05-03 23:19:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/14/dataEnvio'] String "2025-05-03 23:19:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/15/dataEnvio'] String "2025-05-03 23:19:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/16/dataEnvio'] String "2025-05-03 23:18:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/17/dataEnvio'] String "2025-05-03 23:18:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/18/dataEnvio'] String "2025-05-03 23:11:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/19/dataEnvio'] String "2025-05-03 23:11:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/20/dataEnvio'] String "2025-05-03 23:11:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/21/dataEnvio'] String "2025-05-03 23:10:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/22/dataEnvio'] String "2025-05-03 23:05:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/23/dataEnvio'] String "2025-05-03 23:04:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/24/dataEnvio'] String "2025-05-03 23:03:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/25/dataEnvio'] String "2025-05-03 23:03:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/26/dataEnvio'] String "2025-05-03 23:01:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/27/dataEnvio'] String "2025-05-03 23:01:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/28/dataEnvio'] String "2025-05-03 22:59:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/29/dataEnvio'] String "2025-05-03 22:57:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/30/dataEnvio'] String "2025-05-03 22:53:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/31/dataEnvio'] String "2025-05-03 22:51:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/32/dataEnvio'] String "2025-05-03 22:50:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/33/dataEnvio'] String "2025-05-03 22:50:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/34/dataEnvio'] String "2025-05-03 22:49:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/35/dataEnvio'] String "2025-05-03 22:49:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/36/dataEnvio'] String "2025-05-03 22:48:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/37/dataEnvio'] String "2025-05-03 22:48:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/38/dataEnvio'] String "2025-05-03 22:47:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/39/dataEnvio'] String "2025-05-03 22:44:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/40/dataEnvio'] String "2025-05-03 22:42:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/41/dataEnvio'] String "2025-05-03 22:40:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/42/dataEnvio'] String "2025-05-03 22:38:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/43/dataEnvio'] String "2025-05-03 22:37:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/44/dataEnvio'] String "2025-05-03 22:36:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/45/dataEnvio'] String "2025-05-03 22:35:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/46/dataEnvio'] String "2025-05-03 22:34:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/47/dataEnvio'] String "2025-05-03 22:34:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/48/dataEnvio'] String "2025-05-03 22:33:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/49/dataEnvio'] String "2025-05-03 22:31:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/50/dataEnvio'] String "2025-05-03 22:30:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/51/dataEnvio'] String "2025-05-03 22:29:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/52/dataEnvio'] String "2025-05-03 22:28:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/53/dataEnvio'] String "2025-05-03 22:25:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/54/dataEnvio'] String "2025-05-03 22:24:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/55/dataEnvio'] String "2025-05-03 22:23:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/56/dataEnvio'] String "2025-05-03 22:23:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/57/dataEnvio'] String "2025-05-03 22:23:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/58/dataEnvio'] String "2025-05-03 22:23:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/59/dataEnvio'] String "2025-05-03 22:23:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/60/dataEnvio'] String "2025-05-03 22:23:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/61/dataEnvio'] String "2025-05-03 22:23:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/62/dataEnvio'] String "2025-05-03 22:23:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/63/dataEnvio'] String "2025-05-03 22:23:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/64/dataEnvio'] String "2025-05-03 22:22:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/65/dataEnvio'] String "2025-05-03 22:21:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/66/dataEnvio'] String "2025-05-03 22:21:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/67/dataEnvio'] String "2025-05-03 22:21:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/68/dataEnvio'] String "2025-05-03 22:21:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/69/dataEnvio'] String "2025-05-03 22:21:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/70/dataEnvio'] String "2025-05-03 22:20:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/71/dataEnvio'] String "2025-05-03 22:20:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/72/dataEnvio'] String "2025-05-03 22:20:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/73/dataEnvio'] String "2025-05-03 22:20:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/74/dataEnvio'] String "2025-05-03 22:20:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/75/dataEnvio'] String "2025-05-03 22:20:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/76/dataEnvio'] String "2025-05-03 22:20:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/77/dataEnvio'] String "2025-05-03 22:19:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/78/dataEnvio'] String "2025-05-03 22:19:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/79/dataEnvio'] String "2025-05-03 22:19:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/80/dataEnvio'] String "2025-05-03 22:19:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/81/dataEnvio'] String "2025-05-03 22:19:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/82/dataEnvio'] String "2025-05-03 22:19:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/83/dataEnvio'] String "2025-05-03 22:18:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/84/dataEnvio'] String "2025-05-03 22:18:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/85/dataEnvio'] String "2025-05-03 22:15:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/86/dataEnvio'] String "2025-05-03 22:15:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/87/dataEnvio'] String "2025-05-03 22:13:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/88/dataEnvio'] String "2025-05-03 22:12:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/89/dataEnvio'] String "2025-05-03 22:12:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/90/dataEnvio'] String "2025-05-03 22:11:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/91/dataEnvio'] String "2025-05-03 22:11:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/92/dataEnvio'] String "2025-05-03 22:11:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/93/dataEnvio'] String "2025-05-03 22:11:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/94/dataEnvio'] String "2025-05-03 22:11:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/95/dataEnvio'] String "2025-05-03 22:10:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/96/dataEnvio'] String "2025-05-03 22:10:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/97/dataEnvio'] String "2025-05-03 22:10:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/98/dataEnvio'] String "2025-05-03 22:09:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/99/dataEnvio'] String "2025-05-03 22:09:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/100/dataEnvio'] String "2025-05-03 22:06:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/101/dataEnvio'] String "2025-05-03 22:05:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/102/dataEnvio'] String "2025-05-03 22:04:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/103/dataEnvio'] String "2025-05-03 22:04:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/104/dataEnvio'] String "2025-05-03 22:04:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/105/dataEnvio'] String "2025-05-03 22:04:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/106/dataEnvio'] String "2025-05-03 22:04:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/107/dataEnvio'] String "2025-05-03 22:04:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/108/dataEnvio'] String "2025-05-03 22:04:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/109/dataEnvio'] String "2025-05-03 22:03:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/110/dataEnvio'] String "2025-05-03 22:03:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/111/dataEnvio'] String "2025-05-03 22:03:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/112/dataEnvio'] String "2025-05-03 22:02:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/113/dataEnvio'] String "2025-05-03 22:01:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/114/dataEnvio'] String "2025-05-03 22:00:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/115/dataEnvio'] String "2025-05-03 21:59:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/116/dataEnvio'] String "2025-05-03 21:59:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/117/dataEnvio'] String "2025-05-03 21:59:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/118/dataEnvio'] String "2025-05-03 21:58:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/119/dataEnvio'] String "2025-05-03 21:57:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/120/dataEnvio'] String "2025-05-03 21:57:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/121/dataEnvio'] String "2025-05-03 21:56:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/122/dataEnvio'] String "2025-05-03 21:56:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/123/dataEnvio'] String "2025-05-03 21:56:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/124/dataEnvio'] String "2025-05-03 21:56:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/125/dataEnvio'] String "2025-05-03 21:56:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/126/dataEnvio'] String "2025-05-03 21:55:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/127/dataEnvio'] String "2025-05-03 21:55:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/128/dataEnvio'] String "2025-05-03 21:55:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/129/dataEnvio'] String "2025-05-03 21:55:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/130/dataEnvio'] String "2025-05-03 21:55:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/131/dataEnvio'] String "2025-05-03 21:55:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/132/dataEnvio'] String "2025-05-03 21:55:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/133/dataEnvio'] String "2025-05-03 21:55:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/134/dataEnvio'] String "2025-05-03 21:55:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/135/dataEnvio'] String "2025-05-03 21:55:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/136/dataEnvio'] String "2025-05-03 21:54:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/137/dataEnvio'] String "2025-05-03 21:54:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/138/dataEnvio'] String "2025-05-03 21:54:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/139/dataEnvio'] String "2025-05-03 21:54:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/140/dataEnvio'] String "2025-05-03 21:54:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/141/dataEnvio'] String "2025-05-03 21:54:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/142/dataEnvio'] String "2025-05-03 21:53:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/143/dataEnvio'] String "2025-05-03 21:53:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/144/dataEnvio'] String "2025-05-03 21:53:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/145/dataEnvio'] String "2025-05-03 21:53:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/146/dataEnvio'] String "2025-05-03 21:53:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/147/dataEnvio'] String "2025-05-03 21:52:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/148/dataEnvio'] String "2025-05-03 21:52:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/149/dataEnvio'] String "2025-05-03 21:51:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/150/dataEnvio'] String "2025-05-03 21:51:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/151/dataEnvio'] String "2025-05-03 21:51:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/152/dataEnvio'] String "2025-05-03 21:51:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/153/dataEnvio'] String "2025-05-03 21:51:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/154/dataEnvio'] String "2025-05-03 21:50:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/155/dataEnvio'] String "2025-05-03 21:49:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/156/dataEnvio'] String "2025-05-03 21:49:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/157/dataEnvio'] String "2025-05-03 21:49:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/158/dataEnvio'] String "2025-05-03 21:48:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/159/dataEnvio'] String "2025-05-03 21:46:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/160/dataEnvio'] String "2025-05-03 21:44:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/161/dataEnvio'] String "2025-05-03 21:43:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/162/dataEnvio'] String "2025-05-03 21:43:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/163/dataEnvio'] String "2025-05-03 21:42:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/164/dataEnvio'] String "2025-05-03 21:41:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/165/dataEnvio'] String "2025-05-03 21:40:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/166/dataEnvio'] String "2025-05-03 21:38:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/167/dataEnvio'] String "2025-05-03 21:38:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/168/dataEnvio'] String "2025-05-03 21:37:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/169/dataEnvio'] String "2025-05-03 21:37:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/170/dataEnvio'] String "2025-05-03 21:34:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/171/dataEnvio'] String "2025-05-03 21:28:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/172/dataEnvio'] String "2025-05-03 21:28:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/173/dataEnvio'] String "2025-05-03 21:25:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/174/dataEnvio'] String "2025-05-03 21:24:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/175/dataEnvio'] String "2025-05-03 21:24:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/176/dataEnvio'] String "2025-05-03 21:23:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/177/dataEnvio'] String "2025-05-03 21:23:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/178/dataEnvio'] String "2025-05-03 21:21:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/179/dataEnvio'] String "2025-05-03 21:20:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/180/dataEnvio'] String "2025-05-03 21:16:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/181/dataEnvio'] String "2025-05-03 21:16:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/182/dataEnvio'] String "2025-05-03 21:11:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/183/dataEnvio'] String "2025-05-03 21:11:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/184/dataEnvio'] String "2025-05-03 21:09:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/185/dataEnvio'] String "2025-05-03 21:09:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/186/dataEnvio'] String "2025-05-03 21:09:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/187/dataEnvio'] String "2025-05-03 21:06:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/188/dataEnvio'] String "2025-05-03 21:05:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/189/dataEnvio'] String "2025-05-03 21:05:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/190/dataEnvio'] String "2025-05-03 21:03:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/191/dataEnvio'] String "2025-05-03 21:03:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/192/dataEnvio'] String "2025-05-03 21:01:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/193/dataEnvio'] String "2025-05-03 20:59:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/194/dataEnvio'] String "2025-05-03 20:56:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/195/dataEnvio'] String "2025-05-03 20:55:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/196/dataEnvio'] String "2025-05-03 20:54:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/197/dataEnvio'] String "2025-05-03 20:54:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/198/dataEnvio'] String "2025-05-03 20:54:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/199/dataEnvio'] String "2025-05-03 20:52:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/200/dataEnvio'] String "2025-05-03 20:52:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/201/dataEnvio'] String "2025-05-03 20:51:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/202/dataEnvio'] String "2025-05-03 20:50:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/203/dataEnvio'] String "2025-05-03 20:50:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/204/dataEnvio'] String "2025-05-03 20:49:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/205/dataEnvio'] String "2025-05-03 20:47:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/206/dataEnvio'] String "2025-05-03 20:45:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/207/dataEnvio'] String "2025-05-03 20:42:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/208/dataEnvio'] String "2025-05-03 20:42:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/209/dataEnvio'] String "2025-05-03 20:41:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/210/dataEnvio'] String "2025-05-03 20:41:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/211/dataEnvio'] String "2025-05-03 20:40:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/212/dataEnvio'] String "2025-05-03 20:40:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/213/dataEnvio'] String "2025-05-03 20:38:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/214/dataEnvio'] String "2025-05-03 20:35:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/215/dataEnvio'] String "2025-05-03 20:30:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/216/dataEnvio'] String "2025-05-03 20:28:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/217/dataEnvio'] String "2025-05-03 20:25:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/218/dataEnvio'] String "2025-05-03 20:24:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/219/dataEnvio'] String "2025-05-03 20:24:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/220/dataEnvio'] String "2025-05-03 20:23:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/221/dataEnvio'] String "2025-05-03 20:21:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/222/dataEnvio'] String "2025-05-03 20:21:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/223/dataEnvio'] String "2025-05-03 20:16:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/224/dataEnvio'] String "2025-05-03 20:15:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/225/dataEnvio'] String "2025-05-03 20:14:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/226/dataEnvio'] String "2025-05-03 20:14:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/227/dataEnvio'] String "2025-05-03 20:13:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/228/dataEnvio'] String "2025-05-03 20:13:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/229/dataEnvio'] String "2025-05-03 20:11:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/230/dataEnvio'] String "2025-05-03 20:10:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/231/dataEnvio'] String "2025-05-03 20:10:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/232/dataEnvio'] String "2025-05-03 20:08:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/233/dataEnvio'] String "2025-05-03 20:08:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/234/dataEnvio'] String "2025-05-03 20:07:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/235/dataEnvio'] String "2025-05-03 20:05:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/236/dataEnvio'] String "2025-05-03 20:00:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/237/dataEnvio'] String "2025-05-03 19:59:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/238/dataEnvio'] String "2025-05-03 19:59:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/239/dataEnvio'] String "2025-05-03 19:59:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/240/dataEnvio'] String "2025-05-03 19:59:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/241/dataEnvio'] String "2025-05-03 19:59:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/242/dataEnvio'] String "2025-05-03 19:59:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/243/dataEnvio'] String "2025-05-03 19:59:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/244/dataEnvio'] String "2025-05-03 19:59:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/245/dataEnvio'] String "2025-05-03 19:59:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/246/dataEnvio'] String "2025-05-03 19:58:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/247/dataEnvio'] String "2025-05-03 19:58:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/248/dataEnvio'] String "2025-05-03 19:58:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/249/dataEnvio'] String "2025-05-03 19:58:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/250/dataEnvio'] String "2025-05-03 19:58:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/251/dataEnvio'] String "2025-05-03 19:58:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/252/dataEnvio'] String "2025-05-03 19:57:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/253/dataEnvio'] String "2025-05-03 19:57:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/254/dataEnvio'] String "2025-05-03 19:56:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/255/dataEnvio'] String "2025-05-03 19:56:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/256/dataEnvio'] String "2025-05-03 19:56:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/257/dataEnvio'] String "2025-05-03 19:56:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/258/dataEnvio'] String "2025-05-03 19:56:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/259/dataEnvio'] String "2025-05-03 19:56:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/260/dataEnvio'] String "2025-05-03 19:56:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/261/dataEnvio'] String "2025-05-03 19:56:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/262/dataEnvio'] String "2025-05-03 19:56:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/263/dataEnvio'] String "2025-05-03 19:55:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/264/dataEnvio'] String "2025-05-03 19:55:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/265/dataEnvio'] String "2025-05-03 19:55:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/266/dataEnvio'] String "2025-05-03 19:55:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/267/dataEnvio'] String "2025-05-03 19:55:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/268/dataEnvio'] String "2025-05-03 19:55:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/269/dataEnvio'] String "2025-05-03 19:55:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/270/dataEnvio'] String "2025-05-03 19:55:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/271/dataEnvio'] String "2025-05-03 19:55:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/272/dataEnvio'] String "2025-05-03 19:55:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/273/dataEnvio'] String "2025-05-03 19:54:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/274/dataEnvio'] String "2025-05-03 19:54:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/275/dataEnvio'] String "2025-05-03 19:54:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/276/dataEnvio'] String "2025-05-03 19:54:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/277/dataEnvio'] String "2025-05-03 19:54:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/278/dataEnvio'] String "2025-05-03 19:51:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/279/dataEnvio'] String "2025-05-03 19:51:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/280/dataEnvio'] String "2025-05-03 19:51:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/281/dataEnvio'] String "2025-05-03 19:51:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/282/dataEnvio'] String "2025-05-03 19:49:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/283/dataEnvio'] String "2025-05-03 19:49:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/284/dataEnvio'] String "2025-05-03 19:49:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/285/dataEnvio'] String "2025-05-03 19:48:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/286/dataEnvio'] String "2025-05-03 19:47:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/287/dataEnvio'] String "2025-05-03 19:47:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/288/dataEnvio'] String "2025-05-03 19:47:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/289/dataEnvio'] String "2025-05-03 19:47:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/290/dataEnvio'] String "2025-05-03 19:47:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/291/dataEnvio'] String "2025-05-03 19:46:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/292/dataEnvio'] String "2025-05-03 19:46:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/293/dataEnvio'] String "2025-05-03 19:46:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/294/dataEnvio'] String "2025-05-03 19:45:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/295/dataEnvio'] String "2025-05-03 19:45:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/296/dataEnvio'] String "2025-05-03 19:45:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/297/dataEnvio'] String "2025-05-03 19:44:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/298/dataEnvio'] String "2025-05-03 19:44:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/299/dataEnvio'] String "2025-05-03 19:44:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/300/dataEnvio'] String "2025-05-03 19:44:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/301/dataEnvio'] String "2025-05-03 19:44:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/302/dataEnvio'] String "2025-05-03 19:44:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/303/dataEnvio'] String "2025-05-03 19:44:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/304/dataEnvio'] String "2025-05-03 19:44:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/305/dataEnvio'] String "2025-05-03 19:44:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/306/dataEnvio'] String "2025-05-03 19:43:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/307/dataEnvio'] String "2025-05-03 19:42:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/308/dataEnvio'] String "2025-05-03 19:42:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/309/dataEnvio'] String "2025-05-03 19:41:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/310/dataEnvio'] String "2025-05-03 19:41:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/311/dataEnvio'] String "2025-05-03 19:41:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/312/dataEnvio'] String "2025-05-03 19:41:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/313/dataEnvio'] String "2025-05-03 19:41:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/314/dataEnvio'] String "2025-05-03 19:41:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/315/dataEnvio'] String "2025-05-03 19:41:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/316/dataEnvio'] String "2025-05-03 19:41:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/317/dataEnvio'] String "2025-05-03 19:41:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/318/dataEnvio'] String "2025-05-03 19:40:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/319/dataEnvio'] String "2025-05-03 19:40:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/320/dataEnvio'] String "2025-05-03 19:40:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/321/dataEnvio'] String "2025-05-03 19:40:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/322/dataEnvio'] String "2025-05-03 19:40:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/323/dataEnvio'] String "2025-05-03 19:40:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/324/dataEnvio'] String "2025-05-03 19:40:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/325/dataEnvio'] String "2025-05-03 19:39:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/326/dataEnvio'] String "2025-05-03 19:39:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/327/dataEnvio'] String "2025-05-03 19:39:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/328/dataEnvio'] String "2025-05-03 19:38:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/329/dataEnvio'] String "2025-05-03 19:38:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/330/dataEnvio'] String "2025-05-03 19:38:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/331/dataEnvio'] String "2025-05-03 19:36:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/332/dataEnvio'] String "2025-05-03 19:36:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/333/dataEnvio'] String "2025-05-03 19:35:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/334/dataEnvio'] String "2025-05-03 19:35:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/335/dataEnvio'] String "2025-05-03 19:35:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/336/dataEnvio'] String "2025-05-03 19:35:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/337/dataEnvio'] String "2025-05-03 19:35:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/338/dataEnvio'] String "2025-05-03 19:35:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/339/dataEnvio'] String "2025-05-03 19:35:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/340/dataEnvio'] String "2025-05-03 19:35:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/341/dataEnvio'] String "2025-05-03 19:35:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/342/dataEnvio'] String "2025-05-03 19:34:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/343/dataEnvio'] String "2025-05-03 19:34:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/344/dataEnvio'] String "2025-05-03 19:34:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/345/dataEnvio'] String "2025-05-03 19:33:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/346/dataEnvio'] String "2025-05-03 19:33:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/347/dataEnvio'] String "2025-05-03 19:33:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/348/dataEnvio'] String "2025-05-03 19:32:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/349/dataEnvio'] String "2025-05-03 19:31:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/350/dataEnvio'] String "2025-05-03 19:31:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/351/dataEnvio'] String "2025-05-03 19:31:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/352/dataEnvio'] String "2025-05-03 19:31:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/353/dataEnvio'] String "2025-05-03 19:31:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/354/dataEnvio'] String "2025-05-03 19:31:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/355/dataEnvio'] String "2025-05-03 19:30:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/356/dataEnvio'] String "2025-05-03 19:30:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/357/dataEnvio'] String "2025-05-03 19:30:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/358/dataEnvio'] String "2025-05-03 19:30:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/359/dataEnvio'] String "2025-05-03 19:29:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/360/dataEnvio'] String "2025-05-03 19:29:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/361/dataEnvio'] String "2025-05-03 19:29:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/362/dataEnvio'] String "2025-05-03 19:28:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/363/dataEnvio'] String "2025-05-03 19:27:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/364/dataEnvio'] String "2025-05-03 19:27:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/365/dataEnvio'] String "2025-05-03 19:27:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/366/dataEnvio'] String "2025-05-03 19:27:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/367/dataEnvio'] String "2025-05-03 19:27:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/368/dataEnvio'] String "2025-05-03 19:27:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/369/dataEnvio'] String "2025-05-03 19:27:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/370/dataEnvio'] String "2025-05-03 19:27:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/371/dataEnvio'] String "2025-05-03 19:26:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/372/dataEnvio'] String "2025-05-03 19:26:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/373/dataEnvio'] String "2025-05-03 19:25:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/374/dataEnvio'] String "2025-05-03 19:25:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/375/dataEnvio'] String "2025-05-03 19:25:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/376/dataEnvio'] String "2025-05-03 19:25:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/377/dataEnvio'] String "2025-05-03 19:25:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/378/dataEnvio'] String "2025-05-03 19:25:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/379/dataEnvio'] String "2025-05-03 19:24:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/380/dataEnvio'] String "2025-05-03 19:24:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/381/dataEnvio'] String "2025-05-03 19:23:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/382/dataEnvio'] String "2025-05-03 19:23:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/383/dataEnvio'] String "2025-05-03 19:23:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/384/dataEnvio'] String "2025-05-03 19:23:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/385/dataEnvio'] String "2025-05-03 19:23:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/386/dataEnvio'] String "2025-05-03 19:23:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/387/dataEnvio'] String "2025-05-03 19:21:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/388/dataEnvio'] String "2025-05-03 19:20:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/389/dataEnvio'] String "2025-05-03 19:18:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/390/dataEnvio'] String "2025-05-03 19:17:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/391/dataEnvio'] String "2025-05-03 19:16:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/392/dataEnvio'] String "2025-05-03 19:11:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/393/dataEnvio'] String "2025-05-03 19:10:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/394/dataEnvio'] String "2025-05-03 19:08:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/395/dataEnvio'] String "2025-05-03 19:07:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/396/dataEnvio'] String "2025-05-03 19:05:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/397/dataEnvio'] String "2025-05-03 19:03:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/398/dataEnvio'] String "2025-05-03 19:01:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/399/dataEnvio'] String "2025-05-03 19:00:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/400/dataEnvio'] String "2025-05-03 19:00:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/401/dataEnvio'] String "2025-05-03 18:59:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/402/dataEnvio'] String "2025-05-03 18:58:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/403/dataEnvio'] String "2025-05-03 18:57:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/404/dataEnvio'] String "2025-05-03 18:56:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/405/dataEnvio'] String "2025-05-03 18:54:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/406/dataEnvio'] String "2025-05-03 18:51:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/407/dataEnvio'] String "2025-05-03 18:50:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/408/dataEnvio'] String "2025-05-03 18:47:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/409/dataEnvio'] String "2025-05-03 18:46:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/410/dataEnvio'] String "2025-05-03 18:45:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/411/dataEnvio'] String "2025-05-03 18:44:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/412/dataEnvio'] String "2025-05-03 18:43:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/413/dataEnvio'] String "2025-05-03 18:41:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/414/dataEnvio'] String "2025-05-03 18:41:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/415/dataEnvio'] String "2025-05-03 18:40:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/416/dataEnvio'] String "2025-05-03 18:35:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/417/dataEnvio'] String "2025-05-03 18:35:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/418/dataEnvio'] String "2025-05-03 18:34:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/419/dataEnvio'] String "2025-05-03 18:32:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/420/dataEnvio'] String "2025-05-03 18:31:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/421/dataEnvio'] String "2025-05-03 18:31:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/422/dataEnvio'] String "2025-05-03 18:29:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/423/dataEnvio'] String "2025-05-03 18:29:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/424/dataEnvio'] String "2025-05-03 18:27:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/425/dataEnvio'] String "2025-05-03 11:35:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/426/dataEnvio'] String "2025-05-03 11:34:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/427/dataEnvio'] String "2025-05-03 11:33:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/428/dataEnvio'] String "2025-05-03 11:33:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/429/dataEnvio'] String "2025-05-03 11:32:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/430/dataEnvio'] String "2025-05-03 11:31:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/431/dataEnvio'] String "2025-05-03 11:30:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/432/dataEnvio'] String "2025-05-03 11:28:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/433/dataEnvio'] String "2025-05-03 11:27:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/434/dataEnvio'] String "2025-05-03 11:27:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/435/dataEnvio'] String "2025-05-03 11:26:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/436/dataEnvio'] String "2025-05-03 11:26:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/437/dataEnvio'] String "2025-05-03 11:25:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/438/dataEnvio'] String "2025-05-03 11:24:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/439/dataEnvio'] String "2025-05-03 11:24:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/440/dataEnvio'] String "2025-05-03 11:22:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/441/dataEnvio'] String "2025-05-03 11:20:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/442/dataEnvio'] String "2025-05-03 11:20:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/443/dataEnvio'] String "2025-05-03 11:19:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/444/dataEnvio'] String "2025-05-03 11:16:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/445/dataEnvio'] String "2025-05-03 11:16:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/446/dataEnvio'] String "2025-05-03 11:15:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/447/dataEnvio'] String "2025-05-03 11:15:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/448/dataEnvio'] String "2025-05-03 11:14:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/449/dataEnvio'] String "2025-05-03 11:14:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/450/dataEnvio'] String "2025-05-03 11:14:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/451/dataEnvio'] String "2025-05-03 11:13:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/452/dataEnvio'] String "2025-05-03 11:13:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/453/dataEnvio'] String "2025-05-03 11:12:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/454/dataEnvio'] String "2025-05-03 11:10:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/455/dataEnvio'] String "2025-05-03 11:10:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/456/dataEnvio'] String "2025-05-03 11:10:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/457/dataEnvio'] String "2025-05-03 11:09:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/458/dataEnvio'] String "2025-05-03 11:09:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/459/dataEnvio'] String "2025-05-03 11:09:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/460/dataEnvio'] String "2025-05-03 11:09:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/461/dataEnvio'] String "2025-05-03 11:09:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/462/dataEnvio'] String "2025-05-03 11:09:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/463/dataEnvio'] String "2025-05-03 11:08:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/464/dataEnvio'] String "2025-05-03 11:08:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/465/dataEnvio'] String "2025-05-03 11:07:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/466/dataEnvio'] String "2025-05-03 11:07:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/467/dataEnvio'] String "2025-05-03 11:07:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/468/dataEnvio'] String "2025-05-03 11:07:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/469/dataEnvio'] String "2025-05-03 11:07:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/470/dataEnvio'] String "2025-05-03 11:07:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/471/dataEnvio'] String "2025-05-03 11:07:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/472/dataEnvio'] String "2025-05-03 11:07:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/473/dataEnvio'] String "2025-05-03 11:07:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/474/dataEnvio'] String "2025-05-03 11:07:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/475/dataEnvio'] String "2025-05-03 11:07:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/476/dataEnvio'] String "2025-05-03 11:07:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/477/dataEnvio'] String "2025-05-03 11:06:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/478/dataEnvio'] String "2025-05-03 11:06:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/479/dataEnvio'] String "2025-05-03 11:06:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/480/dataEnvio'] String "2025-05-03 11:05:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/481/dataEnvio'] String "2025-05-03 11:04:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/482/dataEnvio'] String "2025-05-03 11:02:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/483/dataEnvio'] String "2025-05-03 11:01:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/484/dataEnvio'] String "2025-05-03 11:01:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/485/dataEnvio'] String "2025-05-03 11:00:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/486/dataEnvio'] String "2025-05-03 11:00:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/487/dataEnvio'] String "2025-05-03 10:59:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/488/dataEnvio'] String "2025-05-03 10:59:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/489/dataEnvio'] String "2025-05-03 10:59:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/490/dataEnvio'] String "2025-05-03 10:59:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/491/dataEnvio'] String "2025-05-03 10:58:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/492/dataEnvio'] String "2025-05-03 10:58:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/493/dataEnvio'] String "2025-05-03 10:58:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/494/dataEnvio'] String "2025-05-03 10:57:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/495/dataEnvio'] String "2025-05-03 10:57:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/496/dataEnvio'] String "2025-05-03 10:57:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/497/dataEnvio'] String "2025-05-03 10:57:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/498/dataEnvio'] String "2025-05-03 10:57:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/499/dataEnvio'] String "2025-05-03 10:57:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/500/dataEnvio'] String "2025-05-03 10:57:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/501/dataEnvio'] String "2025-05-03 10:56:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/502/dataEnvio'] String "2025-05-03 10:55:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/503/dataEnvio'] String "2025-05-03 10:55:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/504/dataEnvio'] String "2025-05-03 10:55:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/505/dataEnvio'] String "2025-05-03 10:54:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/506/dataEnvio'] String "2025-05-03 10:53:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/507/dataEnvio'] String "2025-05-03 10:53:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/508/dataEnvio'] String "2025-05-03 10:53:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/509/dataEnvio'] String "2025-05-03 10:53:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/510/dataEnvio'] String "2025-05-03 10:53:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/511/dataEnvio'] String "2025-05-03 10:53:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/512/dataEnvio'] String "2025-05-03 10:53:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/513/dataEnvio'] String "2025-05-03 10:52:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/514/dataEnvio'] String "2025-05-03 10:52:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/515/dataEnvio'] String "2025-05-03 10:52:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/516/dataEnvio'] String "2025-05-03 10:52:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/517/dataEnvio'] String "2025-05-03 10:52:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/518/dataEnvio'] String "2025-05-03 10:52:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/519/dataEnvio'] String "2025-05-03 10:52:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/520/dataEnvio'] String "2025-05-03 10:52:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/521/dataEnvio'] String "2025-05-03 10:50:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/522/dataEnvio'] String "2025-05-03 10:48:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/523/dataEnvio'] String "2025-05-03 10:47:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/524/dataEnvio'] String "2025-05-03 10:47:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/525/dataEnvio'] String "2025-05-03 10:46:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/526/dataEnvio'] String "2025-05-03 10:45:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/527/dataEnvio'] String "2025-05-03 10:43:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/528/dataEnvio'] String "2025-05-03 10:41:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/529/dataEnvio'] String "2025-05-03 10:40:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/530/dataEnvio'] String "2025-05-03 10:38:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/531/dataEnvio'] String "2025-05-03 10:35:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/532/dataEnvio'] String "2025-05-03 10:34:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/533/dataEnvio'] String "2025-05-03 10:32:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/534/dataEnvio'] String "2025-05-03 10:29:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/535/dataEnvio'] String "2025-05-03 10:27:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/536/dataEnvio'] String "2025-05-03 10:25:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/537/dataEnvio'] String "2025-05-03 10:24:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/538/dataEnvio'] String "2025-05-03 10:21:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/539/dataEnvio'] String "2025-05-03 10:20:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/540/dataEnvio'] String "2025-05-03 10:19:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/541/dataEnvio'] String "2025-05-03 10:17:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/542/dataEnvio'] String "2025-05-03 10:15:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/543/dataEnvio'] String "2025-05-03 10:14:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/544/dataEnvio'] String "2025-05-03 10:13:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/545/dataEnvio'] String "2025-05-03 10:12:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/546/dataEnvio'] String "2025-05-03 10:10:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/547/dataEnvio'] String "2025-05-03 10:08:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/548/dataEnvio'] String "2025-05-03 10:05:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/549/dataEnvio'] String "2025-05-03 10:02:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/550/dataEnvio'] String "2025-05-03 10:01:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/551/dataEnvio'] String "2025-05-03 09:59:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/552/dataEnvio'] String "2025-05-03 09:59:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/553/dataEnvio'] String "2025-05-03 09:55:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote?" + 
                    "page=-1907254869&" + 
                    "per_page=554",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_2.json()["data"]) == 554
        assert res_2.json()["data"][0]["dataEnvio"] == "2025-05-03 23:44:33"
        assert res_2.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_2.json()["data"][1]["dataEnvio"] == "2025-05-03 23:40:05"
        assert res_2.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_2.json()["data"][2]["dataEnvio"] == "2025-05-03 23:39:53"
        assert res_2.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 551 elements. This limit of 3 elements can be increased in the configurations
        assert res_2.json()["pagination"]["total"] == 2387.0
        assert res_2.json()["pagination"]["count"] == 554.0
        assert res_2.json()["pagination"]["per_page"] == 554.0
        assert res_2.json()["pagination"]["current_page"] == 1.0
        assert res_2.json()["pagination"]["total_pages"] == 5.0
        assert res_2.json()["pagination"]["links"]["previous"] is None
        assert res_2.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault100. HTTP Status 500. POST:/v1/estudantes
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 500 not defined for path '/v1/estudantes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"70001662589\", " + \
            " \"numeroNISResponsavel\": \"Z7fFfC4XeC\", " + \
            " \"nomeMaeEstudante\": \"Kauê Soeira\", " + \
            " \"genero\": 0, " + \
            " \"nomeSocial\": \"JI4VVndhpT6j7\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1 " + \
            " ], " + \
            " \"sexo\": \"2\", " + \
            " \"rg\": \"7054659090113849\", " + \
            " \"orgaoEmissor\": \"SSP-RN\", " + \
            " \"certidaoNascimento\": \"68714451812549540820647697557761\", " + \
            " \"cnh\": \"22723080095\", " + \
            " \"logradouro\": \"Rua Avenida Wellington\", " + \
            " \"cep\": \"36293289\", " + \
            " \"municipio\": 823, " + \
            " \"dataInicioPeriodoLetivo\": \"1953-05-14\", " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 3, " + \
            " \"estudanteAnoPeriodo\": 42, " + \
            " \"estudanteIntegral\": 1 " + \
            " } "
        headers['Accept'] = "application/json"
        res_3 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_3.status_code == 500
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "Ocorreu um erro."
        assert res_3.json()["errors"]["message"] == "O campo numeroNISResponsavel deve ser numérico. (and 1 more error)"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"genero\": 42, " + \
            " \"telefone\": \"3333333\", " + \
            " \"bairro\": \"São Amaral\", " + \
            " \"uf\": 27, " + \
            " \"inep\": 593, " + \
            " \"matriculaRede\": \"qyWPbnYsup9Y\", " + \
            " \"codigoFuncao\": 293, " + \
            " \"cargaHoraria\": 44 " + \
            " }, " + \
            " { " + \
            " \"cpf\": \"tH1\", " + \
            " \"nome\": \"Joana da Rocha Jr.\", " + \
            " \"dataNascimento\": \"KEXeB7V\", " + \
            " \"racaCor\": 1, " + \
            " \"email\": \"hortencia.lovato.bittencourt@fake.com\", " + \
            " \"sexo\": \"1\", " + \
            " \"cep\": \"39380303\", " + \
            " \"inep\": \"32051328\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataFim\": \"2086-10-08\" " + \
            " }, " + \
            " { " + \
            " \"nivelEscolaridade\": 5, " + \
            " \"cpf\": \"33215297345\", " + \
            " \"racaCor\": 5, " + \
            " \"sexo\": \"0\", " + \
            " \"cep\": \"26712429\", " + \
            " \"inep\": \"52017354\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 796, " + \
            " \"anoInicioFormacaoAcademica\": 2016 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 1, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Rio de Janeiro\" " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"jSowHhs\", " + \
            " \"dataIngresso\": \"2007-08-28\", " + \
            " \"dataFim\": \"2020-13-12\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_4 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_4.status_code == 201
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Operação realizada com sucesso"
    
    
    # Calls:
    # (200) GET:/v1/estudantes/{cpfNis}
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_34(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/{cpfNis} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/83094711812",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Dados obtidos com sucesso."
        assert res_0.json()["data"]["cpf"] == "83094711812"
        assert res_0.json()["data"]["nome"] == "Aaron Pacheco Sobrinho"
        assert res_0.json()["data"]["nomeSocial"] is None
        assert res_0.json()["data"]["numeroNIS"] == "11846006435"
        assert res_0.json()["data"]["rg"] == "1494169924207742"
        assert res_0.json()["data"]["orgaoEmissor"] == "SSP-SP"
        assert res_0.json()["data"]["cpfResponsavel"] == "36331397965"
        assert res_0.json()["data"]["nomeMaeEstudante"] == "Betina de Souza das Neves"
        assert res_0.json()["data"]["numeroNISResponsavel"] == "72040562422"
        assert res_0.json()["data"]["dataNascimento"] == "2006-01-11"
        assert res_0.json()["data"]["logradouro"] == "Rua R. Emanuel Correia"
        assert res_0.json()["data"]["bairro"] == "São Saraiva"
        assert res_0.json()["data"]["numero"] == "36"
        assert res_0.json()["data"]["cep"] == "56302557"
        assert res_0.json()["data"]["municipio"] == 3550308.0
        assert res_0.json()["data"]["certidaoNascimento"] == "58205339768161368510700844829608"
        assert res_0.json()["data"]["cnh"] is None
        assert res_0.json()["data"]["uf"] == 35.0
        assert res_0.json()["data"]["racaCor"] == 0.0
        assert len(res_0.json()["data"]["tipoDeficiencia"]) == 0
        assert res_0.json()["data"]["genero"] == 0.0
        assert res_0.json()["data"]["telefone"] is None
        assert res_0.json()["data"]["email"] is None
        assert res_0.json()["data"]["situacaoCadastroValidado"] is None
        assert len(res_0.json()["data"]["matriculas"]) == 1
        assert res_0.json()["data"]["matriculas"][0]["codigoMatriculaSgp"] == 7535032.0
        assert res_0.json()["data"]["matriculas"][0]["codInstituicao"] == 133959.0
        assert res_0.json()["data"]["matriculas"][0]["dataInicioMatricula"] == "2024-01-01"
        assert res_0.json()["data"]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_0.json()["data"]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_0.json()["data"]["matriculas"][0]["situacaoMatricula"] == True
        assert res_0.json()["data"]["matriculas"][0]["serieAno"] == 45.0
        assert res_0.json()["data"]["matriculas"][0]["etapaEnsinoConsolidado"] == "EJA - Ensino Médio"
        assert res_0.json()["data"]["matriculas"][0]["matriculaRede"] is None
        assert res_0.json()["data"]["matriculas"][0]["deletadaEm"] is None
        assert res_0.json()["data"]["matriculas"][0]["inep"] == "32049480"
        assert res_0.json()["data"]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_0.json()["data"]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_0.json()["data"]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_0.json()["data"]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_0.json()["data"]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_0.json()["data"]["matriculas"][0]["estudanteAnoPeriodo"] == 1.0
        assert res_0.json()["data"]["matriculas"][0]["estudanteIntegral"] is None
        assert res_0.json()["data"]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_0.json()["data"]["matriculas"][0]["anoMatricula"] is None
        assert len(res_0.json()["data"]["outrasMatriculas"]) == 0
    
    
    # Calls:
    # (200) GET:/v1/profissionais/lote
    # Found 2 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_35(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote?" + 
                    "page=62&" + 
                    "per_page=503",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_0.json()["data"]) == 0
        assert res_0.json()["pagination"]["total"] == 2389.0
        assert res_0.json()["pagination"]["count"] == 0.0
        assert res_0.json()["pagination"]["per_page"] == 503.0
        assert res_0.json()["pagination"]["current_page"] == 62.0
        assert res_0.json()["pagination"]["total_pages"] == 5.0
        assert res_0.json()["pagination"]["links"]["previous"] == 61.0
        assert res_0.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # (200) GET:/v1/profissionais
    # Found 5 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_36(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?per_page=922",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_0.json()["data"]) == 3
        assert res_0.json()["data"][0]["tipoEnsinoMedio"] == 2.0
        assert res_0.json()["data"][0]["nivelEscolaridade"] == 10.0
        assert res_0.json()["data"][0]["cpf"] == "43839402000"
        assert res_0.json()["data"][0]["nome"] == "João da Silva 2"
        assert res_0.json()["data"][0]["dataNascimento"] == "1985-06-15"
        assert res_0.json()["data"][0]["genero"] == 1.0
        assert res_0.json()["data"][0]["racaCor"] == 2.0
        assert res_0.json()["data"][0]["email"] == "joao.silva@email.com"
        assert res_0.json()["data"][0]["telefone"] is None
        assert res_0.json()["data"][0]["nomeSocial"] is None
        assert res_0.json()["data"][0]["logradouro"] == "Rua das Flores"
        assert res_0.json()["data"][0]["bairro"] == "Centro"
        assert res_0.json()["data"][0]["numero"] == "123"
        assert res_0.json()["data"][0]["cep"] == "01001000"
        assert res_0.json()["data"][0]["municipio"] == 2700409.0
        assert res_0.json()["data"][0]["uf"] == 27.0
        assert res_0.json()["data"][0]["codigoInstituicao"] == 6.0
        assert res_0.json()["data"][0]["cargaHoraria"] == 40.0
        assert res_0.json()["data"][0]["situacaoAtiva"] == True
        assert res_0.json()["data"][0]["dataIngresso"] == "2015-02-10"
        assert res_0.json()["data"][0]["dataFim"] is None
        assert res_0.json()["data"][0]["codigoFuncao"] == 2.0
        assert res_0.json()["data"][0]["matriculaRede"] == "56789"
        assert res_0.json()["data"][0]["tipoVinculo"] == 0.0
        assert res_0.json()["data"][0]["inep"] == "27014088"
        assert len(res_0.json()["data"][0]["tipoDeficiencia"]) == 3
        assert res_0.json()["data"][0]["tipoDeficiencia"][0] == 1.0
        assert res_0.json()["data"][0]["tipoDeficiencia"][1] == 2.0
        assert res_0.json()["data"][0]["tipoDeficiencia"][2] == 3.0
        assert len(res_0.json()["data"][0]["formacoesAcademicas"]) == 2
        assert res_0.json()["data"][0]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_0.json()["data"][0]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_0.json()["data"][0]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_0.json()["data"][0]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_0.json()["data"][0]["formacoesAcademicas"][0]["principal"] is None
        assert res_0.json()["data"][0]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_0.json()["data"][0]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_0.json()["data"][0]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_0.json()["data"][0]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_0.json()["data"][0]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_0.json()["data"][0]["formacoesAcademicas"][1]["principal"] is None
        assert res_0.json()["data"][0]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_0.json()["data"][1]["tipoEnsinoMedio"] == 2.0
        assert res_0.json()["data"][1]["nivelEscolaridade"] == 10.0
        assert res_0.json()["data"][1]["cpf"] == "33722248094"
        assert res_0.json()["data"][1]["nome"] == "João da Silva 2"
        assert res_0.json()["data"][1]["dataNascimento"] == "1985-06-15"
        assert res_0.json()["data"][1]["genero"] == 1.0
        assert res_0.json()["data"][1]["racaCor"] == 2.0
        assert res_0.json()["data"][1]["email"] == "joao.silva@email.com"
        assert res_0.json()["data"][1]["telefone"] is None
        assert res_0.json()["data"][1]["nomeSocial"] is None
        assert res_0.json()["data"][1]["logradouro"] == "Rua das Flores"
        assert res_0.json()["data"][1]["bairro"] == "Centro"
        assert res_0.json()["data"][1]["numero"] == "123"
        assert res_0.json()["data"][1]["cep"] == "01001000"
        assert res_0.json()["data"][1]["municipio"] == 2700409.0
        assert res_0.json()["data"][1]["uf"] == 27.0
        assert res_0.json()["data"][1]["codigoInstituicao"] == 6.0
        assert res_0.json()["data"][1]["cargaHoraria"] == 40.0
        assert res_0.json()["data"][1]["situacaoAtiva"] == True
        assert res_0.json()["data"][1]["dataIngresso"] == "2015-02-10"
        assert res_0.json()["data"][1]["dataFim"] is None
        assert res_0.json()["data"][1]["codigoFuncao"] == 2.0
        assert res_0.json()["data"][1]["matriculaRede"] == "56789"
        assert res_0.json()["data"][1]["tipoVinculo"] == 0.0
        assert res_0.json()["data"][1]["inep"] == "27014088"
        assert len(res_0.json()["data"][1]["tipoDeficiencia"]) == 3
        assert res_0.json()["data"][1]["tipoDeficiencia"][0] == 1.0
        assert res_0.json()["data"][1]["tipoDeficiencia"][1] == 2.0
        assert res_0.json()["data"][1]["tipoDeficiencia"][2] == 3.0
        assert len(res_0.json()["data"][1]["formacoesAcademicas"]) == 2
        assert res_0.json()["data"][1]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_0.json()["data"][1]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_0.json()["data"][1]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_0.json()["data"][1]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_0.json()["data"][1]["formacoesAcademicas"][0]["principal"] is None
        assert res_0.json()["data"][1]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_0.json()["data"][1]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_0.json()["data"][1]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_0.json()["data"][1]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_0.json()["data"][1]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_0.json()["data"][1]["formacoesAcademicas"][1]["principal"] is None
        assert res_0.json()["data"][1]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_0.json()["data"][2]["tipoEnsinoMedio"] == 2.0
        assert res_0.json()["data"][2]["nivelEscolaridade"] == 10.0
        assert res_0.json()["data"][2]["cpf"] == "31863200037"
        assert res_0.json()["data"][2]["nome"] == "João da Silva 2"
        assert res_0.json()["data"][2]["dataNascimento"] == "1985-06-15"
        assert res_0.json()["data"][2]["genero"] == 1.0
        assert res_0.json()["data"][2]["racaCor"] == 2.0
        assert res_0.json()["data"][2]["email"] == "joao.silva@email.com"
        assert res_0.json()["data"][2]["telefone"] is None
        assert res_0.json()["data"][2]["nomeSocial"] is None
        assert res_0.json()["data"][2]["logradouro"] == "Rua das Flores"
        assert res_0.json()["data"][2]["bairro"] == "Centro"
        assert res_0.json()["data"][2]["numero"] == "123"
        assert res_0.json()["data"][2]["cep"] == "01001000"
        assert res_0.json()["data"][2]["municipio"] == 2700409.0
        assert res_0.json()["data"][2]["uf"] == 27.0
        assert res_0.json()["data"][2]["codigoInstituicao"] == 6.0
        assert res_0.json()["data"][2]["cargaHoraria"] == 40.0
        assert res_0.json()["data"][2]["situacaoAtiva"] == True
        assert res_0.json()["data"][2]["dataIngresso"] == "2015-02-10"
        assert res_0.json()["data"][2]["dataFim"] is None
        assert res_0.json()["data"][2]["codigoFuncao"] == 2.0
        assert res_0.json()["data"][2]["matriculaRede"] == "56789"
        assert res_0.json()["data"][2]["tipoVinculo"] == 0.0
        assert res_0.json()["data"][2]["inep"] == "27014088"
        assert len(res_0.json()["data"][2]["tipoDeficiencia"]) == 3
        assert res_0.json()["data"][2]["tipoDeficiencia"][0] == 1.0
        assert res_0.json()["data"][2]["tipoDeficiencia"][1] == 2.0
        assert res_0.json()["data"][2]["tipoDeficiencia"][2] == 3.0
        assert len(res_0.json()["data"][2]["formacoesAcademicas"]) == 2
        assert res_0.json()["data"][2]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_0.json()["data"][2]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_0.json()["data"][2]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_0.json()["data"][2]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_0.json()["data"][2]["formacoesAcademicas"][0]["principal"] is None
        assert res_0.json()["data"][2]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_0.json()["data"][2]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_0.json()["data"][2]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_0.json()["data"][2]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_0.json()["data"][2]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_0.json()["data"][2]["formacoesAcademicas"][1]["principal"] is None
        assert res_0.json()["data"][2]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_0.json()["pagination"]["total"] == 3.0
        assert res_0.json()["pagination"]["count"] == 3.0
        assert res_0.json()["pagination"]["per_page"] == 922.0
        assert res_0.json()["pagination"]["current_page"] == 1.0
        assert res_0.json()["pagination"]["total_pages"] == 1.0
        assert res_0.json()["pagination"]["links"]["previous"] is None
        assert res_0.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # 1 - (404) GET:/v1/profissionais/{cpf}
    # 2 - (200) GET:/v1/profissionais/lote
    # Found 2 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_37(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/68682757141",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Nenhum profissional de educação encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote?" + 
                    "page=579&" + 
                    "per_page=260",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_1.json()["data"]) == 0
        assert res_1.json()["pagination"]["total"] == 2389.0
        assert res_1.json()["pagination"]["count"] == 0.0
        assert res_1.json()["pagination"]["per_page"] == 260.0
        assert res_1.json()["pagination"]["current_page"] == 579.0
        assert res_1.json()["pagination"]["total_pages"] == 10.0
        assert res_1.json()["pagination"]["links"]["previous"] == 578.0
        assert res_1.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # 1 - (404) GET:/v1/profissionais/{cpf}
    # 2 - (422) POST:/v1/profissionais/lote
    # 3 - (200) GET:/v1/profissionais
    # Found 5 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_38(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/47183001712",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Nenhum profissional de educação encontrado."
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_1.status_code == 422
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "JSON inválido."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?per_page=235",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_2.json()["data"]) == 3
        assert res_2.json()["data"][0]["tipoEnsinoMedio"] == 2.0
        assert res_2.json()["data"][0]["nivelEscolaridade"] == 10.0
        assert res_2.json()["data"][0]["cpf"] == "43839402000"
        assert res_2.json()["data"][0]["nome"] == "João da Silva 2"
        assert res_2.json()["data"][0]["dataNascimento"] == "1985-06-15"
        assert res_2.json()["data"][0]["genero"] == 1.0
        assert res_2.json()["data"][0]["racaCor"] == 2.0
        assert res_2.json()["data"][0]["email"] == "joao.silva@email.com"
        assert res_2.json()["data"][0]["telefone"] is None
        assert res_2.json()["data"][0]["nomeSocial"] is None
        assert res_2.json()["data"][0]["logradouro"] == "Rua das Flores"
        assert res_2.json()["data"][0]["bairro"] == "Centro"
        assert res_2.json()["data"][0]["numero"] == "123"
        assert res_2.json()["data"][0]["cep"] == "01001000"
        assert res_2.json()["data"][0]["municipio"] == 2700409.0
        assert res_2.json()["data"][0]["uf"] == 27.0
        assert res_2.json()["data"][0]["codigoInstituicao"] == 6.0
        assert res_2.json()["data"][0]["cargaHoraria"] == 40.0
        assert res_2.json()["data"][0]["situacaoAtiva"] == True
        assert res_2.json()["data"][0]["dataIngresso"] == "2015-02-10"
        assert res_2.json()["data"][0]["dataFim"] is None
        assert res_2.json()["data"][0]["codigoFuncao"] == 2.0
        assert res_2.json()["data"][0]["matriculaRede"] == "56789"
        assert res_2.json()["data"][0]["tipoVinculo"] == 0.0
        assert res_2.json()["data"][0]["inep"] == "27014088"
        assert len(res_2.json()["data"][0]["tipoDeficiencia"]) == 3
        assert res_2.json()["data"][0]["tipoDeficiencia"][0] == 1.0
        assert res_2.json()["data"][0]["tipoDeficiencia"][1] == 2.0
        assert res_2.json()["data"][0]["tipoDeficiencia"][2] == 3.0
        assert len(res_2.json()["data"][0]["formacoesAcademicas"]) == 2
        assert res_2.json()["data"][0]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_2.json()["data"][0]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_2.json()["data"][0]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_2.json()["data"][0]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_2.json()["data"][0]["formacoesAcademicas"][0]["principal"] is None
        assert res_2.json()["data"][0]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_2.json()["data"][0]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_2.json()["data"][0]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_2.json()["data"][0]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_2.json()["data"][0]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_2.json()["data"][0]["formacoesAcademicas"][1]["principal"] is None
        assert res_2.json()["data"][0]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_2.json()["data"][1]["tipoEnsinoMedio"] == 2.0
        assert res_2.json()["data"][1]["nivelEscolaridade"] == 10.0
        assert res_2.json()["data"][1]["cpf"] == "33722248094"
        assert res_2.json()["data"][1]["nome"] == "João da Silva 2"
        assert res_2.json()["data"][1]["dataNascimento"] == "1985-06-15"
        assert res_2.json()["data"][1]["genero"] == 1.0
        assert res_2.json()["data"][1]["racaCor"] == 2.0
        assert res_2.json()["data"][1]["email"] == "joao.silva@email.com"
        assert res_2.json()["data"][1]["telefone"] is None
        assert res_2.json()["data"][1]["nomeSocial"] is None
        assert res_2.json()["data"][1]["logradouro"] == "Rua das Flores"
        assert res_2.json()["data"][1]["bairro"] == "Centro"
        assert res_2.json()["data"][1]["numero"] == "123"
        assert res_2.json()["data"][1]["cep"] == "01001000"
        assert res_2.json()["data"][1]["municipio"] == 2700409.0
        assert res_2.json()["data"][1]["uf"] == 27.0
        assert res_2.json()["data"][1]["codigoInstituicao"] == 6.0
        assert res_2.json()["data"][1]["cargaHoraria"] == 40.0
        assert res_2.json()["data"][1]["situacaoAtiva"] == True
        assert res_2.json()["data"][1]["dataIngresso"] == "2015-02-10"
        assert res_2.json()["data"][1]["dataFim"] is None
        assert res_2.json()["data"][1]["codigoFuncao"] == 2.0
        assert res_2.json()["data"][1]["matriculaRede"] == "56789"
        assert res_2.json()["data"][1]["tipoVinculo"] == 0.0
        assert res_2.json()["data"][1]["inep"] == "27014088"
        assert len(res_2.json()["data"][1]["tipoDeficiencia"]) == 3
        assert res_2.json()["data"][1]["tipoDeficiencia"][0] == 1.0
        assert res_2.json()["data"][1]["tipoDeficiencia"][1] == 2.0
        assert res_2.json()["data"][1]["tipoDeficiencia"][2] == 3.0
        assert len(res_2.json()["data"][1]["formacoesAcademicas"]) == 2
        assert res_2.json()["data"][1]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_2.json()["data"][1]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_2.json()["data"][1]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_2.json()["data"][1]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_2.json()["data"][1]["formacoesAcademicas"][0]["principal"] is None
        assert res_2.json()["data"][1]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_2.json()["data"][1]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_2.json()["data"][1]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_2.json()["data"][1]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_2.json()["data"][1]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_2.json()["data"][1]["formacoesAcademicas"][1]["principal"] is None
        assert res_2.json()["data"][1]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_2.json()["data"][2]["tipoEnsinoMedio"] == 2.0
        assert res_2.json()["data"][2]["nivelEscolaridade"] == 10.0
        assert res_2.json()["data"][2]["cpf"] == "31863200037"
        assert res_2.json()["data"][2]["nome"] == "João da Silva 2"
        assert res_2.json()["data"][2]["dataNascimento"] == "1985-06-15"
        assert res_2.json()["data"][2]["genero"] == 1.0
        assert res_2.json()["data"][2]["racaCor"] == 2.0
        assert res_2.json()["data"][2]["email"] == "joao.silva@email.com"
        assert res_2.json()["data"][2]["telefone"] is None
        assert res_2.json()["data"][2]["nomeSocial"] is None
        assert res_2.json()["data"][2]["logradouro"] == "Rua das Flores"
        assert res_2.json()["data"][2]["bairro"] == "Centro"
        assert res_2.json()["data"][2]["numero"] == "123"
        assert res_2.json()["data"][2]["cep"] == "01001000"
        assert res_2.json()["data"][2]["municipio"] == 2700409.0
        assert res_2.json()["data"][2]["uf"] == 27.0
        assert res_2.json()["data"][2]["codigoInstituicao"] == 6.0
        assert res_2.json()["data"][2]["cargaHoraria"] == 40.0
        assert res_2.json()["data"][2]["situacaoAtiva"] == True
        assert res_2.json()["data"][2]["dataIngresso"] == "2015-02-10"
        assert res_2.json()["data"][2]["dataFim"] is None
        assert res_2.json()["data"][2]["codigoFuncao"] == 2.0
        assert res_2.json()["data"][2]["matriculaRede"] == "56789"
        assert res_2.json()["data"][2]["tipoVinculo"] == 0.0
        assert res_2.json()["data"][2]["inep"] == "27014088"
        assert len(res_2.json()["data"][2]["tipoDeficiencia"]) == 3
        assert res_2.json()["data"][2]["tipoDeficiencia"][0] == 1.0
        assert res_2.json()["data"][2]["tipoDeficiencia"][1] == 2.0
        assert res_2.json()["data"][2]["tipoDeficiencia"][2] == 3.0
        assert len(res_2.json()["data"][2]["formacoesAcademicas"]) == 2
        assert res_2.json()["data"][2]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_2.json()["data"][2]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_2.json()["data"][2]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_2.json()["data"][2]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_2.json()["data"][2]["formacoesAcademicas"][0]["principal"] is None
        assert res_2.json()["data"][2]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_2.json()["data"][2]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_2.json()["data"][2]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_2.json()["data"][2]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_2.json()["data"][2]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_2.json()["data"][2]["formacoesAcademicas"][1]["principal"] is None
        assert res_2.json()["data"][2]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_2.json()["pagination"]["total"] == 3.0
        assert res_2.json()["pagination"]["count"] == 3.0
        assert res_2.json()["pagination"]["per_page"] == 235.0
        assert res_2.json()["pagination"]["current_page"] == 1.0
        assert res_2.json()["pagination"]["total_pages"] == 1.0
        assert res_2.json()["pagination"]["links"]["previous"] is None
        assert res_2.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # 1 - (200) GET:/v1/profissionais/lote
    # 2 - (201) POST:/v1/estudantes/lote
    # Found 12 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_39(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/0/dataEnvio'] String "2025-05-03 23:45:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1/dataEnvio'] String "2025-05-03 23:45:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2/dataEnvio'] String "2025-05-03 23:44:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/3/dataEnvio'] String "2025-05-03 23:40:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/4/dataEnvio'] String "2025-05-03 23:39:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/5/dataEnvio'] String "2025-05-03 23:38:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/6/dataEnvio'] String "2025-05-03 23:36:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/7/dataEnvio'] String "2025-05-03 23:35:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/8/dataEnvio'] String "2025-05-03 23:33:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/9/dataEnvio'] String "2025-05-03 23:28:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_0.json()["data"]) == 10
        assert res_0.json()["data"][0]["dataEnvio"] == "2025-05-03 23:45:41"
        assert res_0.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_0.json()["data"][1]["dataEnvio"] == "2025-05-03 23:45:09"
        assert res_0.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_0.json()["data"][2]["dataEnvio"] == "2025-05-03 23:44:33"
        assert res_0.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_0.json()["pagination"]["total"] == 2389.0
        assert res_0.json()["pagination"]["count"] == 10.0
        assert res_0.json()["pagination"]["per_page"] == 10.0
        assert res_0.json()["pagination"]["current_page"] == 1.0
        assert res_0.json()["pagination"]["total_pages"] == 239.0
        assert res_0.json()["pagination"]["links"]["previous"] is None
        assert res_0.json()["pagination"]["links"]["next"] == 2.0
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpfResponsavel\": \"82854102347\", " + \
            " \"nomeMaeEstudante\": \"Dra. Ana Vitória Teles\", " + \
            " \"nome\": \"Pablo Novaes\", " + \
            " \"genero\": 4, " + \
            " \"nomeSocial\": \"IFAHvC2o0k87\", " + \
            " \"sexo\": \"3\", " + \
            " \"numeroNIS\": \"07073405342\", " + \
            " \"orgaoEmissor\": \"SSP-SP\", " + \
            " \"certidaoNascimento\": \"92610812493477444832342171569287\", " + \
            " \"logradouro\": \"Rua Travessa Lia\", " + \
            " \"bairro\": \"GvY\", " + \
            " \"numero\": \"30\", " + \
            " \"municipio\": 1302603, " + \
            " \"matriculaRede\": \"qyWPbnYsup9Y\", " + \
            " \"instituicao\": 336, " + \
            " \"dataInicioPeriodoLetivo\": \"1970-04-04\", " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 7, " + \
            " \"estudanteIntegral\": 42 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_1.status_code == 201
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Operação realizada com sucesso"
    
    
    # Calls:
    # 1 - (200) GET:/v1/estudantes/{cpfNis}
    # 2 - (200) GET:/v1/profissionais/inep/{inep}
    # 3 - (200) GET:/v1/estudantes/lote
    # Found 6 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_40(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/{cpfNis} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/01772155934",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Dados obtidos com sucesso."
        assert res_0.json()["data"]["cpf"] == "01772155934"
        assert res_0.json()["data"]["nome"] == "Dr. João Felipe da Paz"
        assert res_0.json()["data"]["nomeSocial"] is None
        assert res_0.json()["data"]["numeroNIS"] is None
        assert res_0.json()["data"]["rg"] == "685241701"
        assert res_0.json()["data"]["orgaoEmissor"] == "SEDS"
        assert res_0.json()["data"]["cpfResponsavel"] == "12111123521"
        assert res_0.json()["data"]["nomeMaeEstudante"] == "Luiza Araújo"
        assert res_0.json()["data"]["numeroNISResponsavel"] == "01772155934"
        assert res_0.json()["data"]["dataNascimento"] == "1954-12-10"
        assert res_0.json()["data"]["logradouro"] == "USCGC Rodriguez\nFPO AA 90987"
        assert res_0.json()["data"]["bairro"] == "Cinquentenário"
        assert res_0.json()["data"]["numero"] == "220"
        assert res_0.json()["data"]["cep"] == "59521201"
        assert res_0.json()["data"]["municipio"] == 2704302.0
        assert res_0.json()["data"]["certidaoNascimento"] == "2005060"
        assert res_0.json()["data"]["cnh"] is None
        assert res_0.json()["data"]["uf"] == 27.0
        assert res_0.json()["data"]["racaCor"] == 0.0
        assert len(res_0.json()["data"]["tipoDeficiencia"]) == 3
        assert res_0.json()["data"]["tipoDeficiencia"][0] == 5.0
        assert res_0.json()["data"]["tipoDeficiencia"][1] == 9.0
        assert res_0.json()["data"]["tipoDeficiencia"][2] == 10.0
        assert res_0.json()["data"]["genero"] == 0.0
        assert res_0.json()["data"]["telefone"] is None
        assert res_0.json()["data"]["email"] == "azevedoclarice@example.com"
        assert res_0.json()["data"]["situacaoCadastroValidado"] == 3.0
        assert len(res_0.json()["data"]["matriculas"]) == 1
        assert res_0.json()["data"]["matriculas"][0]["codigoMatriculaSgp"] == 1113408.0
        assert res_0.json()["data"]["matriculas"][0]["codInstituicao"] == 6.0
        assert res_0.json()["data"]["matriculas"][0]["dataInicioMatricula"] == "2024-03-03"
        assert res_0.json()["data"]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_0.json()["data"]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_0.json()["data"]["matriculas"][0]["situacaoMatricula"] == True
        assert res_0.json()["data"]["matriculas"][0]["serieAno"] == 2.0
        assert res_0.json()["data"]["matriculas"][0]["etapaEnsinoConsolidado"] == "Educação Infantil"
        assert res_0.json()["data"]["matriculas"][0]["matriculaRede"] is None
        assert res_0.json()["data"]["matriculas"][0]["deletadaEm"] is None
        assert res_0.json()["data"]["matriculas"][0]["inep"] == "27014088"
        assert res_0.json()["data"]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_0.json()["data"]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_0.json()["data"]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_0.json()["data"]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_0.json()["data"]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_0.json()["data"]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_0.json()["data"]["matriculas"][0]["estudanteIntegral"] is None
        assert res_0.json()["data"]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_0.json()["data"]["matriculas"][0]["anoMatricula"] is None
        assert len(res_0.json()["data"]["outrasMatriculas"]) == 0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/inep/29436842",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_1.json()["data"]) == 0
        assert res_1.json()["pagination"]["total"] == 0.0
        assert res_1.json()["pagination"]["count"] == 0.0
        assert res_1.json()["pagination"]["per_page"] == 10.0
        assert res_1.json()["pagination"]["current_page"] == 1.0
        assert res_1.json()["pagination"]["total_pages"] == 1.0
        assert res_1.json()["pagination"]["links"]["previous"] is None
        assert res_1.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?" + 
                    "page=519&" + 
                    "per_page=529",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_2.json()["data"]) == 0
        assert res_2.json()["pagination"]["total"] == 9455.0
        assert res_2.json()["pagination"]["count"] == 0.0
        assert res_2.json()["pagination"]["per_page"] == 529.0
        assert res_2.json()["pagination"]["current_page"] == 519.0
        assert res_2.json()["pagination"]["total_pages"] == 18.0
        assert res_2.json()["pagination"]["links"]["previous"] == 518.0
        assert res_2.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # 1 - (404) GET:/v1/profissionais/{cpf}
    # 2 - (400) GET:/v1/estudantes/lote/{id}/erros
    # 3 - (200) GET:/v1/estudantes/inep/{inep}
    # Found 2 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_41(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/69649482105",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Nenhum profissional de educação encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/42/erros?page=14",
                    headers=headers)
        
        assert res_1.status_code == 400
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "O ID fornecido não é um UUID válido. ID: 42"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/inep/{inep} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/32033443?" + 
                    "page=990&" + 
                    "ano_matricula=2024&" + 
                    "situacao_final=APROVADAS",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Estudantes obtidos com sucesso."
        assert len(res_2.json()["data"]) == 0
        assert res_2.json()["pagination"]["total"] == 0.0
        assert res_2.json()["pagination"]["count"] == 0.0
        assert res_2.json()["pagination"]["per_page"] == 10.0
        assert res_2.json()["pagination"]["current_page"] == 990.0
        assert res_2.json()["pagination"]["total_pages"] == 1.0
        assert res_2.json()["pagination"]["links"]["previous"] == 989.0
        assert res_2.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # 1 - (201) POST:/v1/profissionais/lote
    # 2 - (404) GET:/v1/estudantes/solicitacoes-alteracoes
    # 3 - (200) GET:/v1/estudantes/validacao-cadastro
    # Found 6 potential faults of type-code 200
    # Using 2 examples:
    #   1
    #   44
    @timeout_decorator.timeout(60)
    def test_42(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"genero\": 4, " + \
            " \"racaCor\": 2, " + \
            " \"email\": \"hortencia.padilha.cervantes@fake.com\", " + \
            " \"nomeSocial\": \"5PN_\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 606, " + \
            " 5, " + \
            " 2 " + \
            " ], " + \
            " \"logradouro\": \"Rua Largo Walter Valentin\", " + \
            " \"numero\": \"DRSJzU\", " + \
            " \"cep\": \"72838565\", " + \
            " \"municipio\": 2700409, " + \
            " \"inep\": \"27610099\", " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataFim\": \"1906-00-07\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 1, " + \
            " \"cpf\": \"80821183850\", " + \
            " \"dataNascimento\": \"1960-05-21\", " + \
            " \"genero\": 8, " + \
            " \"nomeSocial\": \"vYHSe9eaiB\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 10 " + \
            " ], " + \
            " \"bairro\": \"São Flores\", " + \
            " \"municipio\": 758, " + \
            " \"inep\": \"29382017\", " + \
            " \"formacoesAcademicas\": [], " + \
            " \"tipoVinculo\": 805, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"2067-03-12\", " + \
            " \"dataFim\": \"2033-00-24\", " + \
            " \"cargaHoraria\": 40 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nome\": \"Maria Clara Brum\", " + \
            " \"dataNascimento\": \"V7kTLrdCBlCe2\", " + \
            " \"racaCor\": 1, " + \
            " \"sexo\": \"4\", " + \
            " \"logradouro\": \"Rua Avenida Galindo\", " + \
            " \"uf\": 25, " + \
            " \"inep\": 41123913, " + \
            " \"matriculaRede\": \"Teste Ricardo\", " + \
            " \"dataIngresso\": \"2010-09-26\", " + \
            " \"dataFim\": \"1908-03-11\", " + \
            " \"cargaHoraria\": 44 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> Response status 404 not defined for path '/v1/estudantes/solicitacoes-alteracoes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/solicitacoes-alteracoes?" + 
                    "page=465&" + 
                    "per_page=283&" + 
                    "cpfNovo=30311393721",
                    headers=headers)
        
        assert res_1.status_code == 404
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Ocorreu um erro inesperado."
        assert res_1.json()["errors"]["message"] == "Nenhum dado encontrado"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/validacao-cadastro?" + 
                    "per_page=416&" + 
                    "cpf=17781648200",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Operação realizada com sucesso"
        assert len(res_2.json()["data"]) == 1
        assert res_2.json()["data"][0]["cpf"] == "17781648200"
        assert res_2.json()["data"][0]["numeroNIS"] == "66386603257"
        assert res_2.json()["data"][0]["situacaoCadastral"] == "Inexistente"
        assert res_2.json()["data"][0]["situacaoCpf"] == "CPF não encontrado na base do BCPF"
        assert res_2.json()["data"][0]["nome"] == "Ana Beatriz Carvalheira"
        assert res_2.json()["data"][0]["nomeValidado"] == False
        assert res_2.json()["data"][0]["dataNascimento"] == "1995-06-04"
        assert res_2.json()["data"][0]["dataNascimentoValidada"] == False
        assert res_2.json()["data"][0]["nomeMaeEstudante"] == "Vitória Moura Filho"
        assert res_2.json()["data"][0]["nomeMaeEstudanteValidado"] == False
        assert res_2.json()["data"][0]["dataValidacaoCadastral"] == "2025-05-01 16:39:41"
        assert res_2.json()["pagination"]["total"] == 1.0
        assert res_2.json()["pagination"]["count"] == 1.0
        assert res_2.json()["pagination"]["per_page"] == 416.0
        assert res_2.json()["pagination"]["current_page"] == 1.0
        assert res_2.json()["pagination"]["total_pages"] == 1.0
        assert res_2.json()["pagination"]["links"]["previous"] is None
        assert res_2.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # 1 - (404) GET:/v1/estudantes/{cpfNis}
    # 2 - (200) GET:/v1/estudantes/lote/{id}
    # 3 - (201) POST:/v1/estudantes/lote
    # 4 - (200) GET:/v1/profissionais/inep/{inep}
    # 5 - (200) GET:/v1/profissionais/inep/{inep}
    # Found 5 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_43(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/nsRMl78Eho",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Nenhum estudante encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/5eaed873-53dc-440c-ac4a-d613768d1c40?" + 
                    "per_page=426&" + 
                    "incluir_objetos_processados=false",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["status_processamento"] == "Enviado"
        assert res_1.json()["message"] == "Lote recuperado com sucesso. ID: 5eaed873-53dc-440c-ac4a-d613768d1c40"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"numeroNISResponsavel\": \"08238334860\", " + \
            " \"cpf\": \"25537802651\", " + \
            " \"racaCor\": 0, " + \
            " \"telefone\": \"11992925090\", " + \
            " \"numeroNIS\": \"eMZyf\", " + \
            " \"rg\": \"6188840554867225\", " + \
            " \"cnh\": \"66973837108\", " + \
            " \"logradouro\": \"qdZ1v\", " + \
            " \"numero\": \"8735\", " + \
            " \"cep\": \"51783377\", " + \
            " \"municipio\": 2700409, " + \
            " \"uf\": 26, " + \
            " \"dataInicioMatricula\": \"1941-06-02\", " + \
            " \"serieAno\": 44, " + \
            " \"matriculaRede\": \"jBIfwvdi6\", " + \
            " \"instituicao\": 28146, " + \
            " \"formaOrganizacaoTurma\": 1, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 104, " + \
            " \"estudanteAnoPeriodo\": 1, " + \
            " \"estudanteIntegral\": 42, " + \
            " \"anoMatricula\": 2024 " + \
            " }, " + \
            " { " + \
            " \"cpfResponsavel\": \"79610623190\", " + \
            " \"nome\": \"AFGcUOU\", " + \
            " \"racaCor\": 1, " + \
            " \"email\": \"hortencia.goncalves.franco.neto@fake.com\", " + \
            " \"nomeSocial\": \"pCifpRBMCpY\", " + \
            " \"sexo\": \"4\", " + \
            " \"certidaoNascimento\": \"51720868201807136232683002874958\", " + \
            " \"logradouro\": \"vSro7Yt\", " + \
            " \"numero\": \"ds3fio\", " + \
            " \"cep\": \"16244205\", " + \
            " \"municipio\": 1100940, " + \
            " \"uf\": 32, " + \
            " \"matriculaRede\": \"XAAc13c\", " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 0, " + \
            " \"estudanteAnoPeriodo\": 3, " + \
            " \"anoMatricula\": 2024 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_2.status_code == 201
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/inep/41082389",
                    headers=headers)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_3.json()["data"]) == 0
        assert res_3.json()["pagination"]["total"] == 0.0
        assert res_3.json()["pagination"]["count"] == 0.0
        assert res_3.json()["pagination"]["per_page"] == 10.0
        assert res_3.json()["pagination"]["current_page"] == 1.0
        assert res_3.json()["pagination"]["total_pages"] == 1.0
        assert res_3.json()["pagination"]["links"]["previous"] is None
        assert res_3.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/inep/41144180?" + 
                    "page=148&" + 
                    "per_page=529",
                    headers=headers)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_4.json()["data"]) == 0
        assert res_4.json()["pagination"]["total"] == 0.0
        assert res_4.json()["pagination"]["count"] == 0.0
        assert res_4.json()["pagination"]["per_page"] == 529.0
        assert res_4.json()["pagination"]["current_page"] == 148.0
        assert res_4.json()["pagination"]["total_pages"] == 1.0
        assert res_4.json()["pagination"]["links"]["previous"] == 147.0
        assert res_4.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # 1 - (401) GET:/v1/profissionais
    # 2 - (200) GET:/v1/estudantes/lote
    # 3 - (200) GET:/v1/profissionais/inep/{inep}
    # 4 - (401) GET:/v1/estudantes/lote/{id}
    # 5 - (404) GET:/v1/estudantes/solicitacoes-alteracoes
    # Found 8 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_44(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> Response status 401 not defined for path '/v1/profissionais'.
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?" + 
                    "page=1&" + 
                    "per_page=15",
                    headers=headers)
        
        assert res_0.status_code == 401
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não autorizado"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?per_page=754",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_1.json()["data"]) == 754
        assert res_1.json()["data"][0]["dataEnvio"] == "2025-05-03 23:47:43"
        assert res_1.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_1.json()["data"][1]["dataEnvio"] == "2025-05-03 23:46:34"
        assert res_1.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_1.json()["data"][2]["dataEnvio"] == "2025-05-03 23:46:30"
        assert res_1.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 751 elements. This limit of 3 elements can be increased in the configurations
        assert res_1.json()["pagination"]["total"] == 9454.0
        assert res_1.json()["pagination"]["count"] == 754.0
        assert res_1.json()["pagination"]["per_page"] == 754.0
        assert res_1.json()["pagination"]["current_page"] == 1.0
        assert res_1.json()["pagination"]["total_pages"] == 13.0
        assert res_1.json()["pagination"]["links"]["previous"] is None
        assert res_1.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/inep/bmf9g3CCE",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_2.json()["data"]) == 0
        assert res_2.json()["pagination"]["total"] == 0.0
        assert res_2.json()["pagination"]["count"] == 0.0
        assert res_2.json()["pagination"]["per_page"] == 10.0
        assert res_2.json()["pagination"]["current_page"] == 1.0
        assert res_2.json()["pagination"]["total_pages"] == 1.0
        assert res_2.json()["pagination"]["links"]["previous"] is None
        assert res_2.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Response status 401 not defined for path '/v1/estudantes/lote/{id}'.
        headers = {}
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/0bDEL9EOf50D2",
                    headers=headers)
        
        assert res_3.status_code == 401
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "Não autorizado"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> Response status 404 not defined for path '/v1/estudantes/solicitacoes-alteracoes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/solicitacoes-alteracoes?" + 
                    "per_page=10&" + 
                    "cpfAtual=66803815404",
                    headers=headers)
        
        assert res_4.status_code == 404
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "Ocorreu um erro inesperado."
        assert res_4.json()["errors"]["message"] == "Nenhum dado encontrado"
    
    
    # Calls:
    # 1 - (200) GET:/v1/estudantes/lote
    # 2 - (200) GET:/v1/profissionais
    # 3 - (400) GET:/v1/estudantes/lote/{id}/erros
    # 4 - (200) GET:/v1/estudantes/{cpfNis}
    # 5 - (401) POST:/v1/estudantes
    # Found 11 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_45(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?" + 
                    "page=552&" + 
                    "per_page=529",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_0.json()["data"]) == 0
        assert res_0.json()["pagination"]["total"] == 9488.0
        assert res_0.json()["pagination"]["count"] == 0.0
        assert res_0.json()["pagination"]["per_page"] == 529.0
        assert res_0.json()["pagination"]["current_page"] == 552.0
        assert res_0.json()["pagination"]["total_pages"] == 18.0
        assert res_0.json()["pagination"]["links"]["previous"] == 551.0
        assert res_0.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?per_page=416",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_1.json()["data"]) == 3
        assert res_1.json()["data"][0]["tipoEnsinoMedio"] == 2.0
        assert res_1.json()["data"][0]["nivelEscolaridade"] == 10.0
        assert res_1.json()["data"][0]["cpf"] == "43839402000"
        assert res_1.json()["data"][0]["nome"] == "João da Silva 2"
        assert res_1.json()["data"][0]["dataNascimento"] == "1985-06-15"
        assert res_1.json()["data"][0]["genero"] == 1.0
        assert res_1.json()["data"][0]["racaCor"] == 2.0
        assert res_1.json()["data"][0]["email"] == "joao.silva@email.com"
        assert res_1.json()["data"][0]["telefone"] is None
        assert res_1.json()["data"][0]["nomeSocial"] is None
        assert res_1.json()["data"][0]["logradouro"] == "Rua das Flores"
        assert res_1.json()["data"][0]["bairro"] == "Centro"
        assert res_1.json()["data"][0]["numero"] == "123"
        assert res_1.json()["data"][0]["cep"] == "01001000"
        assert res_1.json()["data"][0]["municipio"] == 2700409.0
        assert res_1.json()["data"][0]["uf"] == 27.0
        assert res_1.json()["data"][0]["codigoInstituicao"] == 6.0
        assert res_1.json()["data"][0]["cargaHoraria"] == 40.0
        assert res_1.json()["data"][0]["situacaoAtiva"] == True
        assert res_1.json()["data"][0]["dataIngresso"] == "2015-02-10"
        assert res_1.json()["data"][0]["dataFim"] is None
        assert res_1.json()["data"][0]["codigoFuncao"] == 2.0
        assert res_1.json()["data"][0]["matriculaRede"] == "56789"
        assert res_1.json()["data"][0]["tipoVinculo"] == 0.0
        assert res_1.json()["data"][0]["inep"] == "27014088"
        assert len(res_1.json()["data"][0]["tipoDeficiencia"]) == 3
        assert res_1.json()["data"][0]["tipoDeficiencia"][0] == 1.0
        assert res_1.json()["data"][0]["tipoDeficiencia"][1] == 2.0
        assert res_1.json()["data"][0]["tipoDeficiencia"][2] == 3.0
        assert len(res_1.json()["data"][0]["formacoesAcademicas"]) == 2
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["principal"] is None
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["principal"] is None
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][1]["tipoEnsinoMedio"] == 2.0
        assert res_1.json()["data"][1]["nivelEscolaridade"] == 10.0
        assert res_1.json()["data"][1]["cpf"] == "33722248094"
        assert res_1.json()["data"][1]["nome"] == "João da Silva 2"
        assert res_1.json()["data"][1]["dataNascimento"] == "1985-06-15"
        assert res_1.json()["data"][1]["genero"] == 1.0
        assert res_1.json()["data"][1]["racaCor"] == 2.0
        assert res_1.json()["data"][1]["email"] == "joao.silva@email.com"
        assert res_1.json()["data"][1]["telefone"] is None
        assert res_1.json()["data"][1]["nomeSocial"] is None
        assert res_1.json()["data"][1]["logradouro"] == "Rua das Flores"
        assert res_1.json()["data"][1]["bairro"] == "Centro"
        assert res_1.json()["data"][1]["numero"] == "123"
        assert res_1.json()["data"][1]["cep"] == "01001000"
        assert res_1.json()["data"][1]["municipio"] == 2700409.0
        assert res_1.json()["data"][1]["uf"] == 27.0
        assert res_1.json()["data"][1]["codigoInstituicao"] == 6.0
        assert res_1.json()["data"][1]["cargaHoraria"] == 40.0
        assert res_1.json()["data"][1]["situacaoAtiva"] == True
        assert res_1.json()["data"][1]["dataIngresso"] == "2015-02-10"
        assert res_1.json()["data"][1]["dataFim"] is None
        assert res_1.json()["data"][1]["codigoFuncao"] == 2.0
        assert res_1.json()["data"][1]["matriculaRede"] == "56789"
        assert res_1.json()["data"][1]["tipoVinculo"] == 0.0
        assert res_1.json()["data"][1]["inep"] == "27014088"
        assert len(res_1.json()["data"][1]["tipoDeficiencia"]) == 3
        assert res_1.json()["data"][1]["tipoDeficiencia"][0] == 1.0
        assert res_1.json()["data"][1]["tipoDeficiencia"][1] == 2.0
        assert res_1.json()["data"][1]["tipoDeficiencia"][2] == 3.0
        assert len(res_1.json()["data"][1]["formacoesAcademicas"]) == 2
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["principal"] is None
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["principal"] is None
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][2]["tipoEnsinoMedio"] == 2.0
        assert res_1.json()["data"][2]["nivelEscolaridade"] == 10.0
        assert res_1.json()["data"][2]["cpf"] == "31863200037"
        assert res_1.json()["data"][2]["nome"] == "João da Silva 2"
        assert res_1.json()["data"][2]["dataNascimento"] == "1985-06-15"
        assert res_1.json()["data"][2]["genero"] == 1.0
        assert res_1.json()["data"][2]["racaCor"] == 2.0
        assert res_1.json()["data"][2]["email"] == "joao.silva@email.com"
        assert res_1.json()["data"][2]["telefone"] is None
        assert res_1.json()["data"][2]["nomeSocial"] is None
        assert res_1.json()["data"][2]["logradouro"] == "Rua das Flores"
        assert res_1.json()["data"][2]["bairro"] == "Centro"
        assert res_1.json()["data"][2]["numero"] == "123"
        assert res_1.json()["data"][2]["cep"] == "01001000"
        assert res_1.json()["data"][2]["municipio"] == 2700409.0
        assert res_1.json()["data"][2]["uf"] == 27.0
        assert res_1.json()["data"][2]["codigoInstituicao"] == 6.0
        assert res_1.json()["data"][2]["cargaHoraria"] == 40.0
        assert res_1.json()["data"][2]["situacaoAtiva"] == True
        assert res_1.json()["data"][2]["dataIngresso"] == "2015-02-10"
        assert res_1.json()["data"][2]["dataFim"] is None
        assert res_1.json()["data"][2]["codigoFuncao"] == 2.0
        assert res_1.json()["data"][2]["matriculaRede"] == "56789"
        assert res_1.json()["data"][2]["tipoVinculo"] == 0.0
        assert res_1.json()["data"][2]["inep"] == "27014088"
        assert len(res_1.json()["data"][2]["tipoDeficiencia"]) == 3
        assert res_1.json()["data"][2]["tipoDeficiencia"][0] == 1.0
        assert res_1.json()["data"][2]["tipoDeficiencia"][1] == 2.0
        assert res_1.json()["data"][2]["tipoDeficiencia"][2] == 3.0
        assert len(res_1.json()["data"][2]["formacoesAcademicas"]) == 2
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["principal"] is None
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["principal"] is None
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_1.json()["pagination"]["total"] == 3.0
        assert res_1.json()["pagination"]["count"] == 3.0
        assert res_1.json()["pagination"]["per_page"] == 416.0
        assert res_1.json()["pagination"]["current_page"] == 1.0
        assert res_1.json()["pagination"]["total_pages"] == 1.0
        assert res_1.json()["pagination"]["links"]["previous"] is None
        assert res_1.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/wVI/erros?" + 
                    "page=424&" + 
                    "per_page=260",
                    headers=headers)
        
        assert res_2.status_code == 400
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "O ID fornecido não é um UUID válido. ID: wVI"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/{cpfNis} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/16678021355",
                    headers=headers)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Dados obtidos com sucesso."
        assert res_3.json()["data"]["cpf"] == "16678021355"
        assert res_3.json()["data"]["nome"] == "Ana Beatriz da Bandeira"
        assert res_3.json()["data"]["nomeSocial"] is None
        assert res_3.json()["data"]["numeroNIS"] == "53438523173"
        assert res_3.json()["data"]["rg"] == "90916893617281977773"
        assert res_3.json()["data"]["orgaoEmissor"] == "eiDV-Vk"
        assert res_3.json()["data"]["cpfResponsavel"] == "97210850007"
        assert res_3.json()["data"]["nomeMaeEstudante"] == "João Pedro Palhares"
        assert res_3.json()["data"]["numeroNISResponsavel"] == "47765807822"
        assert res_3.json()["data"]["dataNascimento"] == "1963-11-19"
        assert res_3.json()["data"]["logradouro"] == "Rua Eduardo Nunes"
        assert res_3.json()["data"]["bairro"] == "Bairro cum"
        assert res_3.json()["data"]["numero"] == "159"
        assert res_3.json()["data"]["cep"] == "72375885"
        assert res_3.json()["data"]["municipio"] == 2414209.0
        assert res_3.json()["data"]["certidaoNascimento"] == "23500381775865039273640031123875"
        assert res_3.json()["data"]["cnh"] == "49398737363"
        assert res_3.json()["data"]["uf"] == 32.0
        assert res_3.json()["data"]["racaCor"] == 1.0
        assert len(res_3.json()["data"]["tipoDeficiencia"]) == 3
        assert res_3.json()["data"]["tipoDeficiencia"][0] == 5.0
        assert res_3.json()["data"]["tipoDeficiencia"][1] == 9.0
        assert res_3.json()["data"]["tipoDeficiencia"][2] == 10.0
        assert res_3.json()["data"]["genero"] == 3.0
        assert res_3.json()["data"]["telefone"] is None
        assert res_3.json()["data"]["email"] is None
        assert res_3.json()["data"]["situacaoCadastroValidado"] == 4.0
        assert len(res_3.json()["data"]["matriculas"]) == 1
        assert res_3.json()["data"]["matriculas"][0]["codigoMatriculaSgp"] == 1226240.0
        assert res_3.json()["data"]["matriculas"][0]["codInstituicao"] == 223381.0
        assert res_3.json()["data"]["matriculas"][0]["dataInicioMatricula"] == "2001-03-01"
        assert res_3.json()["data"]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_3.json()["data"]["matriculas"][0]["dataFimOuAprovacao"] == "1997-09-25"
        assert res_3.json()["data"]["matriculas"][0]["situacaoMatricula"] == False
        assert res_3.json()["data"]["matriculas"][0]["serieAno"] == 48.0
        assert res_3.json()["data"]["matriculas"][0]["etapaEnsinoConsolidado"] == "EJA - Ensino Médio"
        assert res_3.json()["data"]["matriculas"][0]["matriculaRede"] is None
        assert res_3.json()["data"]["matriculas"][0]["deletadaEm"] == "2024-05-02 21:06:25"
        assert res_3.json()["data"]["matriculas"][0]["inep"] == "27610099"
        assert res_3.json()["data"]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_3.json()["data"]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_3.json()["data"]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_3.json()["data"]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_3.json()["data"]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_3.json()["data"]["matriculas"][0]["estudanteAnoPeriodo"] == 1.0
        assert res_3.json()["data"]["matriculas"][0]["estudanteIntegral"] is None
        assert res_3.json()["data"]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_3.json()["data"]["matriculas"][0]["anoMatricula"] is None
        assert len(res_3.json()["data"]["outrasMatriculas"]) == 0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/estudantes -> Response status 401 not defined for path '/v1/estudantes'.
        headers = {}
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"cpfResponsavel\": \"08553676285\", " + \
            " \"numeroNISResponsavel\": \"79998395832\", " + \
            " \"cpf\": \"84148138792\", " + \
            " \"dataNascimento\": \"1971-11-13\", " + \
            " \"genero\": 7, " + \
            " \"racaCor\": 1, " + \
            " \"telefone\": \"11949911257\", " + \
            " \"nomeSocial\": \"ux\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 3, " + \
            " 2, " + \
            " 3, " + \
            " 5, " + \
            " 10 " + \
            " ], " + \
            " \"numeroNIS\": \"95747336414\", " + \
            " \"certidaoNascimento\": \"W_7NO\", " + \
            " \"cnh\": \"32405422558\", " + \
            " \"logradouro\": \"Rua R. Adriele\", " + \
            " \"bairro\": \"ZNSlW39oa6\", " + \
            " \"numero\": \"13195\", " + \
            " \"inep\": 319, " + \
            " \"formaOrganizacaoTurma\": 286, " + \
            " \"anoMatricula\": 2024 " + \
            " } "
        headers['Accept'] = "application/json"
        res_4 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes",
                    headers=headers, data=body)
        
        assert res_4.status_code == 401
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # 1 - (200) GET:/v1/estudantes/lote
    # 2 - (200) GET:/v1/profissionais/lote
    # 3 - (200) GET:/v1/profissionais
    # Found 17 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_46(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?page=222",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_0.json()["data"]) == 10
        assert res_0.json()["data"][0]["dataEnvio"] == "2025-05-02 20:19:24"
        assert res_0.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_0.json()["data"][1]["dataEnvio"] == "2025-05-02 20:19:19"
        assert res_0.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_0.json()["data"][2]["dataEnvio"] == "2025-05-02 20:18:55"
        assert res_0.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_0.json()["pagination"]["total"] == 9454.0
        assert res_0.json()["pagination"]["count"] == 10.0
        assert res_0.json()["pagination"]["per_page"] == 10.0
        assert res_0.json()["pagination"]["current_page"] == 222.0
        assert res_0.json()["pagination"]["total_pages"] == 946.0
        assert res_0.json()["pagination"]["links"]["previous"] == 221.0
        assert res_0.json()["pagination"]["links"]["next"] == 223.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/0/dataEnvio'] String "2025-05-03 23:45:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1/dataEnvio'] String "2025-05-03 23:45:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2/dataEnvio'] String "2025-05-03 23:44:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/3/dataEnvio'] String "2025-05-03 23:40:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/4/dataEnvio'] String "2025-05-03 23:39:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/5/dataEnvio'] String "2025-05-03 23:38:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/6/dataEnvio'] String "2025-05-03 23:36:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/7/dataEnvio'] String "2025-05-03 23:35:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/8/dataEnvio'] String "2025-05-03 23:33:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/9/dataEnvio'] String "2025-05-03 23:28:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_1.json()["data"]) == 10
        assert res_1.json()["data"][0]["dataEnvio"] == "2025-05-03 23:45:41"
        assert res_1.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_1.json()["data"][1]["dataEnvio"] == "2025-05-03 23:45:09"
        assert res_1.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_1.json()["data"][2]["dataEnvio"] == "2025-05-03 23:44:33"
        assert res_1.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_1.json()["pagination"]["total"] == 2389.0
        assert res_1.json()["pagination"]["count"] == 10.0
        assert res_1.json()["pagination"]["per_page"] == 10.0
        assert res_1.json()["pagination"]["current_page"] == 1.0
        assert res_1.json()["pagination"]["total_pages"] == 239.0
        assert res_1.json()["pagination"]["links"]["previous"] is None
        assert res_1.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?" + 
                    "page=80&" + 
                    "per_page=554",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_2.json()["data"]) == 0
        assert res_2.json()["pagination"]["total"] == 3.0
        assert res_2.json()["pagination"]["count"] == 0.0
        assert res_2.json()["pagination"]["per_page"] == 554.0
        assert res_2.json()["pagination"]["current_page"] == 80.0
        assert res_2.json()["pagination"]["total_pages"] == 1.0
        assert res_2.json()["pagination"]["links"]["previous"] == 79.0
        assert res_2.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # 1 - (201) POST:/v1/estudantes/lote
    # 2 - (200) PATCH:/v1/estudantes/lote
    # 3 - (404) GET:/v1/estudantes/{cpfNis}
    # 4 - (200) GET:/v1/profissionais
    # 5 - (200) PATCH:/v1/estudantes/lote
    # 6 - (404) GET:/v1/profissionais/{cpf}
    # 7 - (404) GET:/v1/estudantes/{cpfNis}
    # 8 - (200) GET:/v1/profissionais/lote
    # 9 - (400) GET:/v1/profissionais/lote/{id}/erros
    # Found 8 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_47(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpfResponsavel\": \"82998245595\", " + \
            " \"numeroNISResponsavel\": \"UI\", " + \
            " \"genero\": 5, " + \
            " \"racaCor\": 1, " + \
            " \"email\": \"Krh2PcoseRosd@example.com\", " + \
            " \"nomeSocial\": \"jdEYfjYYG W\", " + \
            " \"sexo\": \"2\", " + \
            " \"cnh\": \"74266683856\", " + \
            " \"logradouro\": \"Rua Largo Ávila\", " + \
            " \"bairro\": \"eglJEKR C4MWk\", " + \
            " \"numero\": \"01\", " + \
            " \"cep\": \"15015010\", " + \
            " \"municipio\": 1714302, " + \
            " \"uf\": 4, " + \
            " \"dataInicioMatricula\": \"2019-09-27\", " + \
            " \"matriculaRede\": \"56789\", " + \
            " \"inep\": 513, " + \
            " \"estudanteIntegral\": 0 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_30_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_31_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_32_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_1.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/I0a9",
                    headers=headers)
        
        assert res_2.status_code == 404
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Nenhum estudante encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?page=-1027191979",
                    headers=headers)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_3.json()["data"]) == 3
        assert res_3.json()["data"][0]["tipoEnsinoMedio"] == 2.0
        assert res_3.json()["data"][0]["nivelEscolaridade"] == 10.0
        assert res_3.json()["data"][0]["cpf"] == "43839402000"
        assert res_3.json()["data"][0]["nome"] == "João da Silva 2"
        assert res_3.json()["data"][0]["dataNascimento"] == "1985-06-15"
        assert res_3.json()["data"][0]["genero"] == 1.0
        assert res_3.json()["data"][0]["racaCor"] == 2.0
        assert res_3.json()["data"][0]["email"] == "joao.silva@email.com"
        assert res_3.json()["data"][0]["telefone"] is None
        assert res_3.json()["data"][0]["nomeSocial"] is None
        assert res_3.json()["data"][0]["logradouro"] == "Rua das Flores"
        assert res_3.json()["data"][0]["bairro"] == "Centro"
        assert res_3.json()["data"][0]["numero"] == "123"
        assert res_3.json()["data"][0]["cep"] == "01001000"
        assert res_3.json()["data"][0]["municipio"] == 2700409.0
        assert res_3.json()["data"][0]["uf"] == 27.0
        assert res_3.json()["data"][0]["codigoInstituicao"] == 6.0
        assert res_3.json()["data"][0]["cargaHoraria"] == 40.0
        assert res_3.json()["data"][0]["situacaoAtiva"] == True
        assert res_3.json()["data"][0]["dataIngresso"] == "2015-02-10"
        assert res_3.json()["data"][0]["dataFim"] is None
        assert res_3.json()["data"][0]["codigoFuncao"] == 2.0
        assert res_3.json()["data"][0]["matriculaRede"] == "56789"
        assert res_3.json()["data"][0]["tipoVinculo"] == 0.0
        assert res_3.json()["data"][0]["inep"] == "27014088"
        assert len(res_3.json()["data"][0]["tipoDeficiencia"]) == 3
        assert res_3.json()["data"][0]["tipoDeficiencia"][0] == 1.0
        assert res_3.json()["data"][0]["tipoDeficiencia"][1] == 2.0
        assert res_3.json()["data"][0]["tipoDeficiencia"][2] == 3.0
        assert len(res_3.json()["data"][0]["formacoesAcademicas"]) == 2
        assert res_3.json()["data"][0]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_3.json()["data"][0]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_3.json()["data"][0]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_3.json()["data"][0]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_3.json()["data"][0]["formacoesAcademicas"][0]["principal"] is None
        assert res_3.json()["data"][0]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_3.json()["data"][0]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_3.json()["data"][0]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_3.json()["data"][0]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_3.json()["data"][0]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_3.json()["data"][0]["formacoesAcademicas"][1]["principal"] is None
        assert res_3.json()["data"][0]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_3.json()["data"][1]["tipoEnsinoMedio"] == 2.0
        assert res_3.json()["data"][1]["nivelEscolaridade"] == 10.0
        assert res_3.json()["data"][1]["cpf"] == "33722248094"
        assert res_3.json()["data"][1]["nome"] == "João da Silva 2"
        assert res_3.json()["data"][1]["dataNascimento"] == "1985-06-15"
        assert res_3.json()["data"][1]["genero"] == 1.0
        assert res_3.json()["data"][1]["racaCor"] == 2.0
        assert res_3.json()["data"][1]["email"] == "joao.silva@email.com"
        assert res_3.json()["data"][1]["telefone"] is None
        assert res_3.json()["data"][1]["nomeSocial"] is None
        assert res_3.json()["data"][1]["logradouro"] == "Rua das Flores"
        assert res_3.json()["data"][1]["bairro"] == "Centro"
        assert res_3.json()["data"][1]["numero"] == "123"
        assert res_3.json()["data"][1]["cep"] == "01001000"
        assert res_3.json()["data"][1]["municipio"] == 2700409.0
        assert res_3.json()["data"][1]["uf"] == 27.0
        assert res_3.json()["data"][1]["codigoInstituicao"] == 6.0
        assert res_3.json()["data"][1]["cargaHoraria"] == 40.0
        assert res_3.json()["data"][1]["situacaoAtiva"] == True
        assert res_3.json()["data"][1]["dataIngresso"] == "2015-02-10"
        assert res_3.json()["data"][1]["dataFim"] is None
        assert res_3.json()["data"][1]["codigoFuncao"] == 2.0
        assert res_3.json()["data"][1]["matriculaRede"] == "56789"
        assert res_3.json()["data"][1]["tipoVinculo"] == 0.0
        assert res_3.json()["data"][1]["inep"] == "27014088"
        assert len(res_3.json()["data"][1]["tipoDeficiencia"]) == 3
        assert res_3.json()["data"][1]["tipoDeficiencia"][0] == 1.0
        assert res_3.json()["data"][1]["tipoDeficiencia"][1] == 2.0
        assert res_3.json()["data"][1]["tipoDeficiencia"][2] == 3.0
        assert len(res_3.json()["data"][1]["formacoesAcademicas"]) == 2
        assert res_3.json()["data"][1]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_3.json()["data"][1]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_3.json()["data"][1]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_3.json()["data"][1]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_3.json()["data"][1]["formacoesAcademicas"][0]["principal"] is None
        assert res_3.json()["data"][1]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_3.json()["data"][1]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_3.json()["data"][1]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_3.json()["data"][1]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_3.json()["data"][1]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_3.json()["data"][1]["formacoesAcademicas"][1]["principal"] is None
        assert res_3.json()["data"][1]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_3.json()["data"][2]["tipoEnsinoMedio"] == 2.0
        assert res_3.json()["data"][2]["nivelEscolaridade"] == 10.0
        assert res_3.json()["data"][2]["cpf"] == "31863200037"
        assert res_3.json()["data"][2]["nome"] == "João da Silva 2"
        assert res_3.json()["data"][2]["dataNascimento"] == "1985-06-15"
        assert res_3.json()["data"][2]["genero"] == 1.0
        assert res_3.json()["data"][2]["racaCor"] == 2.0
        assert res_3.json()["data"][2]["email"] == "joao.silva@email.com"
        assert res_3.json()["data"][2]["telefone"] is None
        assert res_3.json()["data"][2]["nomeSocial"] is None
        assert res_3.json()["data"][2]["logradouro"] == "Rua das Flores"
        assert res_3.json()["data"][2]["bairro"] == "Centro"
        assert res_3.json()["data"][2]["numero"] == "123"
        assert res_3.json()["data"][2]["cep"] == "01001000"
        assert res_3.json()["data"][2]["municipio"] == 2700409.0
        assert res_3.json()["data"][2]["uf"] == 27.0
        assert res_3.json()["data"][2]["codigoInstituicao"] == 6.0
        assert res_3.json()["data"][2]["cargaHoraria"] == 40.0
        assert res_3.json()["data"][2]["situacaoAtiva"] == True
        assert res_3.json()["data"][2]["dataIngresso"] == "2015-02-10"
        assert res_3.json()["data"][2]["dataFim"] is None
        assert res_3.json()["data"][2]["codigoFuncao"] == 2.0
        assert res_3.json()["data"][2]["matriculaRede"] == "56789"
        assert res_3.json()["data"][2]["tipoVinculo"] == 0.0
        assert res_3.json()["data"][2]["inep"] == "27014088"
        assert len(res_3.json()["data"][2]["tipoDeficiencia"]) == 3
        assert res_3.json()["data"][2]["tipoDeficiencia"][0] == 1.0
        assert res_3.json()["data"][2]["tipoDeficiencia"][1] == 2.0
        assert res_3.json()["data"][2]["tipoDeficiencia"][2] == 3.0
        assert len(res_3.json()["data"][2]["formacoesAcademicas"]) == 2
        assert res_3.json()["data"][2]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_3.json()["data"][2]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_3.json()["data"][2]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_3.json()["data"][2]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_3.json()["data"][2]["formacoesAcademicas"][0]["principal"] is None
        assert res_3.json()["data"][2]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_3.json()["data"][2]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_3.json()["data"][2]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_3.json()["data"][2]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_3.json()["data"][2]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_3.json()["data"][2]["formacoesAcademicas"][1]["principal"] is None
        assert res_3.json()["data"][2]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_3.json()["pagination"]["total"] == 3.0
        assert res_3.json()["pagination"]["count"] == 3.0
        assert res_3.json()["pagination"]["per_page"] == 10.0
        assert res_3.json()["pagination"]["current_page"] == 1.0
        assert res_3.json()["pagination"]["total_pages"] == 1.0
        assert res_3.json()["pagination"]["links"]["previous"] is None
        assert res_3.json()["pagination"]["links"]["next"] is None
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_33_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_34_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_35_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_4 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_4.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/82329860545",
                    headers=headers)
        
        assert res_5.status_code == 404
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "Nenhum profissional de educação encontrado."
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_6 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/AF",
                    headers=headers)
        
        assert res_6.status_code == 404
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == False
        assert res_6.json()["message"] == "Nenhum estudante encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_7 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote?page=365",
                    headers=headers)
        
        assert res_7.status_code == 200
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == True
        assert res_7.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_7.json()["data"]) == 0
        assert res_7.json()["pagination"]["total"] == 2389.0
        assert res_7.json()["pagination"]["count"] == 0.0
        assert res_7.json()["pagination"]["per_page"] == 10.0
        assert res_7.json()["pagination"]["current_page"] == 365.0
        assert res_7.json()["pagination"]["total_pages"] == 239.0
        assert res_7.json()["pagination"]["links"]["previous"] == 364.0
        assert res_7.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id}/erros -> Response status 400 not defined for path '/v1/profissionais/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_8 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/33/erros?" + 
                    "page=570&" + 
                    "per_page=691",
                    headers=headers)
        
        assert res_8.status_code == 400
        assert "application/json" in res_8.headers["content-type"]
        assert res_8.json()["success"] == False
        assert res_8.json()["message"] == "O ID fornecido não é um UUID válido. ID: 33"
    
    
    # Calls:
    # 1 - (200) GET:/v1/profissionais/lote
    # 2 - (400) GET:/v1/estudantes/lote/{id}/erros
    # 3 - (400) GET:/v1/profissionais/lote/{id}/erros
    # 4 - (200) GET:/v1/estudantes/solicitacoes-alteracoes
    # Found 18 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_48(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote?" + 
                    "page=202&" + 
                    "per_page=336",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_0.json()["data"]) == 0
        assert res_0.json()["pagination"]["total"] == 2389.0
        assert res_0.json()["pagination"]["count"] == 0.0
        assert res_0.json()["pagination"]["per_page"] == 336.0
        assert res_0.json()["pagination"]["current_page"] == 202.0
        assert res_0.json()["pagination"]["total_pages"] == 8.0
        assert res_0.json()["pagination"]["links"]["previous"] == 201.0
        assert res_0.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/l/erros?per_page=-332607673",
                    headers=headers)
        
        assert res_1.status_code == 400
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "O ID fornecido não é um UUID válido. ID: l"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id}/erros -> Response status 400 not defined for path '/v1/profissionais/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/24/erros?per_page=47",
                    headers=headers)
        
        assert res_2.status_code == 400
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "O ID fornecido não é um UUID válido. ID: 24"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/3'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/4'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/5'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/6'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/7'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/8'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/9'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/10'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/solicitacoes-alteracoes?cpfAtual=02227254270",
                    headers=headers)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Operação realizada com sucesso"
        assert len(res_3.json()["data"]) == 11
        assert res_3.json()["data"][0]["cpfAtual"] == "02227254270"
        assert res_3.json()["data"][0]["cpfNovo"] == "02227254270"
        assert res_3.json()["data"][0]["situacaoCpf"] is None
        assert res_3.json()["data"][0]["descricaoSituacaoCpf"] is None
        assert res_3.json()["data"][0]["tipoSituacaoCpf"] is None
        assert res_3.json()["data"][0]["nomeAtual"] == "Stacey Thiel"
        assert res_3.json()["data"][0]["nomeNovo"] == "Roderick Reilly"
        assert res_3.json()["data"][0]["nomeValidado"] is None
        assert res_3.json()["data"][0]["dataNascimentoAtual"] == "2024-12-28"
        assert res_3.json()["data"][0]["dataNascimentoNovo"] == "2024-12-28"
        assert res_3.json()["data"][0]["dataNascimentoValidada"] is None
        assert res_3.json()["data"][0]["nomeMaeEstudanteAtual"] == "Dr. Woodrow Hauck"
        assert res_3.json()["data"][0]["nomeMaeEstudanteNovo"] == "Dr. Woodrow Hauck"
        assert res_3.json()["data"][0]["nomeMaeEstudanteValidado"] is None
        assert res_3.json()["data"][0]["dataValidacaoCadastral"] is None
        assert res_3.json()["data"][1]["cpfAtual"] == "02227254270"
        assert res_3.json()["data"][1]["cpfNovo"] == "02227254270"
        assert res_3.json()["data"][1]["situacaoCpf"] is None
        assert res_3.json()["data"][1]["descricaoSituacaoCpf"] is None
        assert res_3.json()["data"][1]["tipoSituacaoCpf"] is None
        assert res_3.json()["data"][1]["nomeAtual"] == "Stacey Thiel"
        assert res_3.json()["data"][1]["nomeNovo"] == "Stacey Thiel"
        assert res_3.json()["data"][1]["nomeValidado"] is None
        assert res_3.json()["data"][1]["dataNascimentoAtual"] == "2024-12-28"
        assert res_3.json()["data"][1]["dataNascimentoNovo"] == "1991-12-29"
        assert res_3.json()["data"][1]["dataNascimentoValidada"] is None
        assert res_3.json()["data"][1]["nomeMaeEstudanteAtual"] == "Dr. Woodrow Hauck"
        assert res_3.json()["data"][1]["nomeMaeEstudanteNovo"] == "Dr. Woodrow Hauck"
        assert res_3.json()["data"][1]["nomeMaeEstudanteValidado"] is None
        assert res_3.json()["data"][1]["dataValidacaoCadastral"] is None
        assert res_3.json()["data"][2]["cpfAtual"] == "02227254270"
        assert res_3.json()["data"][2]["cpfNovo"] == "02227254270"
        assert res_3.json()["data"][2]["situacaoCpf"] is None
        assert res_3.json()["data"][2]["descricaoSituacaoCpf"] is None
        assert res_3.json()["data"][2]["tipoSituacaoCpf"] is None
        assert res_3.json()["data"][2]["nomeAtual"] == "Stacey Thiel"
        assert res_3.json()["data"][2]["nomeNovo"] == "Emily Fisher"
        assert res_3.json()["data"][2]["nomeValidado"] is None
        assert res_3.json()["data"][2]["dataNascimentoAtual"] == "2024-12-28"
        assert res_3.json()["data"][2]["dataNascimentoNovo"] == "2024-12-28"
        assert res_3.json()["data"][2]["dataNascimentoValidada"] is None
        assert res_3.json()["data"][2]["nomeMaeEstudanteAtual"] == "Dr. Woodrow Hauck"
        assert res_3.json()["data"][2]["nomeMaeEstudanteNovo"] == "Dr. Woodrow Hauck"
        assert res_3.json()["data"][2]["nomeMaeEstudanteValidado"] is None
        assert res_3.json()["data"][2]["dataValidacaoCadastral"] is None
        # Skipping assertions on the remaining 8 elements. This limit of 3 elements can be increased in the configurations
        assert res_3.json()["pagination"]["total"] == 11.0
        assert res_3.json()["pagination"]["count"] == 11.0
        assert res_3.json()["pagination"]["per_page"] == 15.0
        assert res_3.json()["pagination"]["current_page"] == 1.0
        assert res_3.json()["pagination"]["total_pages"] == 1.0
        assert res_3.json()["pagination"]["links"]["previous"] is None
        assert res_3.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # 1 - (400) GET:/v1/profissionais/lote/{id}/erros
    # 2 - (400) GET:/v1/estudantes/lote/{id}/erros
    # 3 - (200) GET:/v1/estudantes/{cpfNis}
    # 4 - (200) GET:/v1/estudantes/inep/{inep}
    # 5 - (200) GET:/v1/profissionais/inep/{inep}
    # 6 - (201) POST:/v1/estudantes/lote
    # Found 6 potential faults of type-code 200
    # Using 1 example:
    #   2024
    @timeout_decorator.timeout(60)
    def test_49(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id}/erros -> Response status 400 not defined for path '/v1/profissionais/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/31/erros?per_page=554",
                    headers=headers)
        
        assert res_0.status_code == 400
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "O ID fornecido não é um UUID válido. ID: 31"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/27/erros?page=47",
                    headers=headers)
        
        assert res_1.status_code == 400
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "O ID fornecido não é um UUID válido. ID: 27"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/{cpfNis} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/17781648200",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Dados obtidos com sucesso."
        assert res_2.json()["data"]["cpf"] == "17781648200"
        assert res_2.json()["data"]["nome"] == "Ana Beatriz Carvalheira"
        assert res_2.json()["data"]["nomeSocial"] is None
        assert res_2.json()["data"]["numeroNIS"] == "66386603257"
        assert res_2.json()["data"]["rg"] == "34087713277583530252"
        assert res_2.json()["data"]["orgaoEmissor"] == "GFEb-IQ"
        assert res_2.json()["data"]["cpfResponsavel"] == "97820945632"
        assert res_2.json()["data"]["nomeMaeEstudante"] == "Vitória Moura Filho"
        assert res_2.json()["data"]["numeroNISResponsavel"] == "06360088385"
        assert res_2.json()["data"]["dataNascimento"] == "1995-06-04"
        assert res_2.json()["data"]["logradouro"] == "Alameda Amanda Junqueira"
        assert res_2.json()["data"]["bairro"] == "Bairro aut"
        assert res_2.json()["data"]["numero"] == "464"
        assert res_2.json()["data"]["cep"] == "09780872"
        assert res_2.json()["data"]["municipio"] == 3123908.0
        assert res_2.json()["data"]["certidaoNascimento"] == "03178787783773700189716608188342"
        assert res_2.json()["data"]["cnh"] == "21896014138"
        assert res_2.json()["data"]["uf"] == 32.0
        assert res_2.json()["data"]["racaCor"] == 2.0
        assert len(res_2.json()["data"]["tipoDeficiencia"]) == 3
        assert res_2.json()["data"]["tipoDeficiencia"][0] == 5.0
        assert res_2.json()["data"]["tipoDeficiencia"][1] == 9.0
        assert res_2.json()["data"]["tipoDeficiencia"][2] == 10.0
        assert res_2.json()["data"]["genero"] == 1.0
        assert res_2.json()["data"]["telefone"] is None
        assert res_2.json()["data"]["email"] is None
        assert res_2.json()["data"]["situacaoCadastroValidado"] == 4.0
        assert len(res_2.json()["data"]["matriculas"]) == 1
        assert res_2.json()["data"]["matriculas"][0]["codigoMatriculaSgp"] == 1226248.0
        assert res_2.json()["data"]["matriculas"][0]["codInstituicao"] == 223381.0
        assert res_2.json()["data"]["matriculas"][0]["dataInicioMatricula"] == "1987-09-12"
        assert res_2.json()["data"]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_2.json()["data"]["matriculas"][0]["dataFimOuAprovacao"] == "1999-10-13"
        assert res_2.json()["data"]["matriculas"][0]["situacaoMatricula"] == False
        assert res_2.json()["data"]["matriculas"][0]["serieAno"] == 21.0
        assert res_2.json()["data"]["matriculas"][0]["etapaEnsinoConsolidado"] == "Ensino Fundamental (9 anos)"
        assert res_2.json()["data"]["matriculas"][0]["matriculaRede"] is None
        assert res_2.json()["data"]["matriculas"][0]["deletadaEm"] == "2024-05-02 21:06:47"
        assert res_2.json()["data"]["matriculas"][0]["inep"] == "27610099"
        assert res_2.json()["data"]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_2.json()["data"]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_2.json()["data"]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_2.json()["data"]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_2.json()["data"]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_2.json()["data"]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_2.json()["data"]["matriculas"][0]["estudanteIntegral"] is None
        assert res_2.json()["data"]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_2.json()["data"]["matriculas"][0]["anoMatricula"] is None
        assert len(res_2.json()["data"]["outrasMatriculas"]) == 0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/inep/{inep} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/29182034?" + 
                    "page=404&" + 
                    "situacao_matricula=ATIVAS&" + 
                    "ano_matricula=2024",
                    headers=headers)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Estudantes obtidos com sucesso."
        assert len(res_3.json()["data"]) == 0
        assert res_3.json()["pagination"]["total"] == 2500.0
        assert res_3.json()["pagination"]["count"] == 0.0
        assert res_3.json()["pagination"]["per_page"] == 10.0
        assert res_3.json()["pagination"]["current_page"] == 404.0
        assert res_3.json()["pagination"]["total_pages"] == 250.0
        assert res_3.json()["pagination"]["links"]["previous"] == 403.0
        assert res_3.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/inep/41134419?" + 
                    "page=356&" + 
                    "per_page=260",
                    headers=headers)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_4.json()["data"]) == 0
        assert res_4.json()["pagination"]["total"] == 0.0
        assert res_4.json()["pagination"]["count"] == 0.0
        assert res_4.json()["pagination"]["per_page"] == 260.0
        assert res_4.json()["pagination"]["current_page"] == 356.0
        assert res_4.json()["pagination"]["total_pages"] == 1.0
        assert res_4.json()["pagination"]["links"]["previous"] == 355.0
        assert res_4.json()["pagination"]["links"]["next"] is None
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"numeroNISResponsavel\": \"72697879280\", " + \
            " \"nomeMaeEstudante\": \"Laís Nunes\", " + \
            " \"genero\": 8, " + \
            " \"racaCor\": 5, " + \
            " \"tipoDeficiencia\": [ " + \
            " 10, " + \
            " 10 " + \
            " ], " + \
            " \"sexo\": \"2\", " + \
            " \"rg\": \"JqSu\", " + \
            " \"logradouro\": \"Rua Av. Solano\", " + \
            " \"numero\": \"56\", " + \
            " \"municipio\": 1100940, " + \
            " \"estudantePpl\": 0, " + \
            " \"serieAno\": 7, " + \
            " \"matriculaRede\": \"4U3yEimdg5VM\", " + \
            " \"instituicao\": 135699, " + \
            " \"dataInicioPeriodoLetivo\": \"1956-07-23\", " + \
            " \"formaOrganizacaoTurma\": 5, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 790, " + \
            " \"estudanteIntegral\": 42, " + \
            " \"anoMatricula\": 2024 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_5 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_5.status_code == 201
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == True
        assert res_5.json()["message"] == "Operação realizada com sucesso"
    
    
    # Calls:
    # 1 - (404) GET:/v1/profissionais/{cpf}
    # 2 - (200) GET:/v1/estudantes/lote
    # 3 - (200) GET:/v1/estudantes/inep/{inep}
    # 4 - (200) GET:/v1/profissionais/lote/{id}
    # 5 - (200) GET:/v1/profissionais/inep/{inep}
    # Found 7 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_50(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/12961118220",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Nenhum profissional de educação encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?page=768",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_1.json()["data"]) == 10
        assert res_1.json()["data"][0]["dataEnvio"] == "2025-01-25 16:49:59"
        assert res_1.json()["data"][0]["status_processamento"] == "Processado com erro"
        assert res_1.json()["data"][1]["dataEnvio"] == "2025-01-25 16:48:48"
        assert res_1.json()["data"][1]["status_processamento"] == "Processado com erro"
        assert res_1.json()["data"][2]["dataEnvio"] == "2025-01-25 16:48:27"
        assert res_1.json()["data"][2]["status_processamento"] == "Processado com erro"
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_1.json()["pagination"]["total"] == 9457.0
        assert res_1.json()["pagination"]["count"] == 10.0
        assert res_1.json()["pagination"]["per_page"] == 10.0
        assert res_1.json()["pagination"]["current_page"] == 768.0
        assert res_1.json()["pagination"]["total_pages"] == 946.0
        assert res_1.json()["pagination"]["links"]["previous"] == 767.0
        assert res_1.json()["pagination"]["links"]["next"] == 769.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/inep/{inep} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/41384733?page=721",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Estudantes obtidos com sucesso."
        assert len(res_2.json()["data"]) == 0
        assert res_2.json()["pagination"]["total"] == 2500.0
        assert res_2.json()["pagination"]["count"] == 0.0
        assert res_2.json()["pagination"]["per_page"] == 10.0
        assert res_2.json()["pagination"]["current_page"] == 721.0
        assert res_2.json()["pagination"]["total_pages"] == 250.0
        assert res_2.json()["pagination"]["links"]["previous"] == 720.0
        assert res_2.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id} -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/784f5101-0d10-4b8b-879c-aede39bca12b?" + 
                    "per_page=283&" + 
                    "incluir_objetos_processados=false",
                    headers=headers)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["status_processamento"] == "Enviado"
        assert res_3.json()["message"] == "Lote recuperado com sucesso. ID: 784f5101-0d10-4b8b-879c-aede39bca12b"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/inep/26540720?per_page=503",
                    headers=headers)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_4.json()["data"]) == 0
        assert res_4.json()["pagination"]["total"] == 0.0
        assert res_4.json()["pagination"]["count"] == 0.0
        assert res_4.json()["pagination"]["per_page"] == 503.0
        assert res_4.json()["pagination"]["current_page"] == 1.0
        assert res_4.json()["pagination"]["total_pages"] == 1.0
        assert res_4.json()["pagination"]["links"]["previous"] is None
        assert res_4.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # 1 - (401) GET:/v1/estudantes/validacao-cadastro
    # 2 - (200) GET:/v1/profissionais
    # 3 - (200) GET:/v1/estudantes/inep/{inep}
    # 4 - (200) PATCH:/v1/estudantes/lote
    # 5 - (400) GET:/v1/estudantes/lote/{id}/erros
    # 6 - (200) GET:/v1/estudantes/lote/{id}
    # 7 - (200) GET:/v1/estudantes/lote/{id}
    # Found 10 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_51(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> Response status 401 not defined for path '/v1/estudantes/validacao-cadastro'.
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/validacao-cadastro?cpf=99983170884",
                    headers=headers)
        
        assert res_0.status_code == 401
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não autorizado"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?per_page=283",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_1.json()["data"]) == 3
        assert res_1.json()["data"][0]["tipoEnsinoMedio"] == 2.0
        assert res_1.json()["data"][0]["nivelEscolaridade"] == 10.0
        assert res_1.json()["data"][0]["cpf"] == "43839402000"
        assert res_1.json()["data"][0]["nome"] == "João da Silva 2"
        assert res_1.json()["data"][0]["dataNascimento"] == "1985-06-15"
        assert res_1.json()["data"][0]["genero"] == 1.0
        assert res_1.json()["data"][0]["racaCor"] == 2.0
        assert res_1.json()["data"][0]["email"] == "joao.silva@email.com"
        assert res_1.json()["data"][0]["telefone"] is None
        assert res_1.json()["data"][0]["nomeSocial"] is None
        assert res_1.json()["data"][0]["logradouro"] == "Rua das Flores"
        assert res_1.json()["data"][0]["bairro"] == "Centro"
        assert res_1.json()["data"][0]["numero"] == "123"
        assert res_1.json()["data"][0]["cep"] == "01001000"
        assert res_1.json()["data"][0]["municipio"] == 2700409.0
        assert res_1.json()["data"][0]["uf"] == 27.0
        assert res_1.json()["data"][0]["codigoInstituicao"] == 6.0
        assert res_1.json()["data"][0]["cargaHoraria"] == 40.0
        assert res_1.json()["data"][0]["situacaoAtiva"] == True
        assert res_1.json()["data"][0]["dataIngresso"] == "2015-02-10"
        assert res_1.json()["data"][0]["dataFim"] is None
        assert res_1.json()["data"][0]["codigoFuncao"] == 2.0
        assert res_1.json()["data"][0]["matriculaRede"] == "56789"
        assert res_1.json()["data"][0]["tipoVinculo"] == 0.0
        assert res_1.json()["data"][0]["inep"] == "27014088"
        assert len(res_1.json()["data"][0]["tipoDeficiencia"]) == 3
        assert res_1.json()["data"][0]["tipoDeficiencia"][0] == 1.0
        assert res_1.json()["data"][0]["tipoDeficiencia"][1] == 2.0
        assert res_1.json()["data"][0]["tipoDeficiencia"][2] == 3.0
        assert len(res_1.json()["data"][0]["formacoesAcademicas"]) == 2
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["principal"] is None
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["principal"] is None
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][1]["tipoEnsinoMedio"] == 2.0
        assert res_1.json()["data"][1]["nivelEscolaridade"] == 10.0
        assert res_1.json()["data"][1]["cpf"] == "33722248094"
        assert res_1.json()["data"][1]["nome"] == "João da Silva 2"
        assert res_1.json()["data"][1]["dataNascimento"] == "1985-06-15"
        assert res_1.json()["data"][1]["genero"] == 1.0
        assert res_1.json()["data"][1]["racaCor"] == 2.0
        assert res_1.json()["data"][1]["email"] == "joao.silva@email.com"
        assert res_1.json()["data"][1]["telefone"] is None
        assert res_1.json()["data"][1]["nomeSocial"] is None
        assert res_1.json()["data"][1]["logradouro"] == "Rua das Flores"
        assert res_1.json()["data"][1]["bairro"] == "Centro"
        assert res_1.json()["data"][1]["numero"] == "123"
        assert res_1.json()["data"][1]["cep"] == "01001000"
        assert res_1.json()["data"][1]["municipio"] == 2700409.0
        assert res_1.json()["data"][1]["uf"] == 27.0
        assert res_1.json()["data"][1]["codigoInstituicao"] == 6.0
        assert res_1.json()["data"][1]["cargaHoraria"] == 40.0
        assert res_1.json()["data"][1]["situacaoAtiva"] == True
        assert res_1.json()["data"][1]["dataIngresso"] == "2015-02-10"
        assert res_1.json()["data"][1]["dataFim"] is None
        assert res_1.json()["data"][1]["codigoFuncao"] == 2.0
        assert res_1.json()["data"][1]["matriculaRede"] == "56789"
        assert res_1.json()["data"][1]["tipoVinculo"] == 0.0
        assert res_1.json()["data"][1]["inep"] == "27014088"
        assert len(res_1.json()["data"][1]["tipoDeficiencia"]) == 3
        assert res_1.json()["data"][1]["tipoDeficiencia"][0] == 1.0
        assert res_1.json()["data"][1]["tipoDeficiencia"][1] == 2.0
        assert res_1.json()["data"][1]["tipoDeficiencia"][2] == 3.0
        assert len(res_1.json()["data"][1]["formacoesAcademicas"]) == 2
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["principal"] is None
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["principal"] is None
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][2]["tipoEnsinoMedio"] == 2.0
        assert res_1.json()["data"][2]["nivelEscolaridade"] == 10.0
        assert res_1.json()["data"][2]["cpf"] == "31863200037"
        assert res_1.json()["data"][2]["nome"] == "João da Silva 2"
        assert res_1.json()["data"][2]["dataNascimento"] == "1985-06-15"
        assert res_1.json()["data"][2]["genero"] == 1.0
        assert res_1.json()["data"][2]["racaCor"] == 2.0
        assert res_1.json()["data"][2]["email"] == "joao.silva@email.com"
        assert res_1.json()["data"][2]["telefone"] is None
        assert res_1.json()["data"][2]["nomeSocial"] is None
        assert res_1.json()["data"][2]["logradouro"] == "Rua das Flores"
        assert res_1.json()["data"][2]["bairro"] == "Centro"
        assert res_1.json()["data"][2]["numero"] == "123"
        assert res_1.json()["data"][2]["cep"] == "01001000"
        assert res_1.json()["data"][2]["municipio"] == 2700409.0
        assert res_1.json()["data"][2]["uf"] == 27.0
        assert res_1.json()["data"][2]["codigoInstituicao"] == 6.0
        assert res_1.json()["data"][2]["cargaHoraria"] == 40.0
        assert res_1.json()["data"][2]["situacaoAtiva"] == True
        assert res_1.json()["data"][2]["dataIngresso"] == "2015-02-10"
        assert res_1.json()["data"][2]["dataFim"] is None
        assert res_1.json()["data"][2]["codigoFuncao"] == 2.0
        assert res_1.json()["data"][2]["matriculaRede"] == "56789"
        assert res_1.json()["data"][2]["tipoVinculo"] == 0.0
        assert res_1.json()["data"][2]["inep"] == "27014088"
        assert len(res_1.json()["data"][2]["tipoDeficiencia"]) == 3
        assert res_1.json()["data"][2]["tipoDeficiencia"][0] == 1.0
        assert res_1.json()["data"][2]["tipoDeficiencia"][1] == 2.0
        assert res_1.json()["data"][2]["tipoDeficiencia"][2] == 3.0
        assert len(res_1.json()["data"][2]["formacoesAcademicas"]) == 2
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["principal"] is None
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["principal"] is None
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_1.json()["pagination"]["total"] == 3.0
        assert res_1.json()["pagination"]["count"] == 3.0
        assert res_1.json()["pagination"]["per_page"] == 283.0
        assert res_1.json()["pagination"]["current_page"] == 1.0
        assert res_1.json()["pagination"]["total_pages"] == 1.0
        assert res_1.json()["pagination"]["links"]["previous"] is None
        assert res_1.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/inep/{inep} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/uRIHgyi?" + 
                    "situacao_matricula=ATIVAS&" + 
                    "ano_matricula=121",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Estudantes obtidos com sucesso."
        assert len(res_2.json()["data"]) == 0
        assert res_2.json()["pagination"]["total"] == 0.0
        assert res_2.json()["pagination"]["count"] == 0.0
        assert res_2.json()["pagination"]["per_page"] == 10.0
        assert res_2.json()["pagination"]["current_page"] == 1.0
        assert res_2.json()["pagination"]["total_pages"] == 1.0
        assert res_2.json()["pagination"]["links"]["previous"] is None
        assert res_2.json()["pagination"]["links"]["next"] is None
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_84_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_85_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_3 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_3.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/25/erros?page=-1146128977",
                    headers=headers)
        
        assert res_4.status_code == 400
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "O ID fornecido não é um UUID válido. ID: 25"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/b815c1fa-f23d-4025-a186-fd08d942f836?page=-311337722",
                    headers=headers)
        
        assert res_5.status_code == 200
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == True
        assert res_5.json()["status_processamento"] == "Enviado"
        assert res_5.json()["message"] == "Lote recuperado com sucesso. ID: b815c1fa-f23d-4025-a186-fd08d942f836"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_6 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/e7875170-a664-4078-836c-334224379b64?" + 
                    "per_page=922&" + 
                    "incluir_objetos_processados=true",
                    headers=headers)
        
        assert res_6.status_code == 200
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == True
        assert res_6.json()["status_processamento"] == "Enviado"
        assert res_6.json()["message"] == "Lote recuperado com sucesso. ID: e7875170-a664-4078-836c-334224379b64"
    
    
    # Calls:
    # 1 - (200) GET:/v1/profissionais
    # 2 - (400) GET:/v1/profissionais/lote/{id}
    # 3 - (200) GET:/v1/profissionais/lote/{id}
    # 4 - (200) GET:/v1/estudantes/inep/{inep}
    # 5 - (200) GET:/v1/profissionais/inep/{inep}
    # 6 - (200) PATCH:/v1/estudantes/lote
    # 7 - (400) GET:/v1/profissionais/lote/{id}
    # 8 - (200) PATCH:/v1/estudantes/lote
    # 9 - (400) GET:/v1/estudantes/lote/{id}
    # 10 - (200) GET:/v1/profissionais/lote/{id}
    # Found 10 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_52(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?" + 
                    "page=639&" + 
                    "per_page=10",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_0.json()["data"]) == 0
        assert res_0.json()["pagination"]["total"] == 3.0
        assert res_0.json()["pagination"]["count"] == 0.0
        assert res_0.json()["pagination"]["per_page"] == 10.0
        assert res_0.json()["pagination"]["current_page"] == 639.0
        assert res_0.json()["pagination"]["total_pages"] == 1.0
        assert res_0.json()["pagination"]["links"]["previous"] == 638.0
        assert res_0.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id} -> Object instance has properties which are not allowed by the schema: ["success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/v?" + 
                    "page=93&" + 
                    "per_page=260",
                    headers=headers)
        
        assert res_1.status_code == 400
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "O ID fornecido não é um UUID válido. ID: v"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id} -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/cddcbf32-0714-4bac-a18a-043e1a9f1e9c?" + 
                    "page=320&" + 
                    "per_page=96",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["status_processamento"] == "Enviado"
        assert res_2.json()["message"] == "Lote recuperado com sucesso. ID: cddcbf32-0714-4bac-a18a-043e1a9f1e9c"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/inep/{inep} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/32053673",
                    headers=headers)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Estudantes obtidos com sucesso."
        assert len(res_3.json()["data"]) == 10
        assert res_3.json()["data"][0]["cpf"] == "13441727762"
        assert res_3.json()["data"][0]["nome"] == "Adriana Leal Fernandes"
        assert res_3.json()["data"][0]["nomeSocial"] is None
        assert res_3.json()["data"][0]["numeroNIS"] == "78262128914"
        assert res_3.json()["data"][0]["rg"] == "8010948644983946"
        assert res_3.json()["data"][0]["orgaoEmissor"] == "SSP-SP"
        assert res_3.json()["data"][0]["cpfResponsavel"] == "75914231183"
        assert res_3.json()["data"][0]["nomeMaeEstudante"] == "Stefany Vega Furtado Neto"
        assert res_3.json()["data"][0]["numeroNISResponsavel"] == "58976177600"
        assert res_3.json()["data"][0]["dataNascimento"] == "2005-01-21"
        assert res_3.json()["data"][0]["logradouro"] == "Rua Av. Hernani"
        assert res_3.json()["data"][0]["bairro"] == "São Chaves"
        assert res_3.json()["data"][0]["numero"] == "8750"
        assert res_3.json()["data"][0]["cep"] == "55994772"
        assert res_3.json()["data"][0]["municipio"] == 3550308.0
        assert res_3.json()["data"][0]["certidaoNascimento"] == "29350434141705522656913911339928"
        assert res_3.json()["data"][0]["cnh"] is None
        assert res_3.json()["data"][0]["uf"] == 35.0
        assert res_3.json()["data"][0]["racaCor"] == 0.0
        assert len(res_3.json()["data"][0]["tipoDeficiencia"]) == 0
        assert res_3.json()["data"][0]["genero"] == 4.0
        assert res_3.json()["data"][0]["telefone"] is None
        assert res_3.json()["data"][0]["email"] == "adriana.leal.fernandes@fake.com"
        assert res_3.json()["data"][0]["situacaoCadastroValidado"] is None
        assert len(res_3.json()["data"][0]["matriculas"]) == 1
        assert res_3.json()["data"][0]["matriculas"][0]["codigoMatriculaSgp"] == 8441565.0
        assert res_3.json()["data"][0]["matriculas"][0]["codInstituicao"] == 134070.0
        assert res_3.json()["data"][0]["matriculas"][0]["dataInicioMatricula"] == "2024-01-01"
        assert res_3.json()["data"][0]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_3.json()["data"][0]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_3.json()["data"][0]["matriculas"][0]["situacaoMatricula"] == True
        assert res_3.json()["data"][0]["matriculas"][0]["serieAno"] == 45.0
        assert res_3.json()["data"][0]["matriculas"][0]["etapaEnsinoConsolidado"] == "EJA - Ensino Médio"
        assert res_3.json()["data"][0]["matriculas"][0]["matriculaRede"] is None
        assert res_3.json()["data"][0]["matriculas"][0]["deletadaEm"] is None
        assert res_3.json()["data"][0]["matriculas"][0]["inep"] == "32053673"
        assert res_3.json()["data"][0]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_3.json()["data"][0]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_3.json()["data"][0]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_3.json()["data"][0]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_3.json()["data"][0]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_3.json()["data"][0]["matriculas"][0]["estudanteAnoPeriodo"] == 1.0
        assert res_3.json()["data"][0]["matriculas"][0]["estudanteIntegral"] is None
        assert res_3.json()["data"][0]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_3.json()["data"][0]["matriculas"][0]["anoMatricula"] is None
        assert len(res_3.json()["data"][0]["outrasMatriculas"]) == 0
        assert res_3.json()["data"][1]["cpf"] == "17099333305"
        assert res_3.json()["data"][1]["nome"] == "Adriano Cauan Barros"
        assert res_3.json()["data"][1]["nomeSocial"] is None
        assert res_3.json()["data"][1]["numeroNIS"] == "26001258013"
        assert res_3.json()["data"][1]["rg"] == "2327399082285120"
        assert res_3.json()["data"][1]["orgaoEmissor"] == "SSP-SP"
        assert res_3.json()["data"][1]["cpfResponsavel"] == "67128706909"
        assert res_3.json()["data"][1]["nomeMaeEstudante"] == "Srta. Ingrid Mayara Benites Jr."
        assert res_3.json()["data"][1]["numeroNISResponsavel"] == "74473407969"
        assert res_3.json()["data"][1]["dataNascimento"] == "2010-09-18"
        assert res_3.json()["data"][1]["logradouro"] == "Rua Av. Vieira"
        assert res_3.json()["data"][1]["bairro"] == "São Faria"
        assert res_3.json()["data"][1]["numero"] == "20"
        assert res_3.json()["data"][1]["cep"] == "28147541"
        assert res_3.json()["data"][1]["municipio"] == 3550308.0
        assert res_3.json()["data"][1]["certidaoNascimento"] == "14258418312249065943718925362512"
        assert res_3.json()["data"][1]["cnh"] is None
        assert res_3.json()["data"][1]["uf"] == 35.0
        assert res_3.json()["data"][1]["racaCor"] == 1.0
        assert len(res_3.json()["data"][1]["tipoDeficiencia"]) == 0
        assert res_3.json()["data"][1]["genero"] == 4.0
        assert res_3.json()["data"][1]["telefone"] is None
        assert res_3.json()["data"][1]["email"] == "adriano.cauan.barros@fake.com"
        assert res_3.json()["data"][1]["situacaoCadastroValidado"] is None
        assert len(res_3.json()["data"][1]["matriculas"]) == 1
        assert res_3.json()["data"][1]["matriculas"][0]["codigoMatriculaSgp"] == 8440646.0
        assert res_3.json()["data"][1]["matriculas"][0]["codInstituicao"] == 134070.0
        assert res_3.json()["data"][1]["matriculas"][0]["dataInicioMatricula"] == "2024-01-01"
        assert res_3.json()["data"][1]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_3.json()["data"][1]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_3.json()["data"][1]["matriculas"][0]["situacaoMatricula"] == True
        assert res_3.json()["data"][1]["matriculas"][0]["serieAno"] == 26.0
        assert res_3.json()["data"][1]["matriculas"][0]["etapaEnsinoConsolidado"] == "Ensino Médio"
        assert res_3.json()["data"][1]["matriculas"][0]["matriculaRede"] is None
        assert res_3.json()["data"][1]["matriculas"][0]["deletadaEm"] is None
        assert res_3.json()["data"][1]["matriculas"][0]["inep"] == "32053673"
        assert res_3.json()["data"][1]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_3.json()["data"][1]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_3.json()["data"][1]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_3.json()["data"][1]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_3.json()["data"][1]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_3.json()["data"][1]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_3.json()["data"][1]["matriculas"][0]["estudanteIntegral"] is None
        assert res_3.json()["data"][1]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_3.json()["data"][1]["matriculas"][0]["anoMatricula"] is None
        assert len(res_3.json()["data"][1]["outrasMatriculas"]) == 0
        assert res_3.json()["data"][2]["cpf"] == "73994774004"
        assert res_3.json()["data"][2]["nome"] == "Adriano de Oliveira Neto"
        assert res_3.json()["data"][2]["nomeSocial"] is None
        assert res_3.json()["data"][2]["numeroNIS"] == "79612014902"
        assert res_3.json()["data"][2]["rg"] == "3233444997086268"
        assert res_3.json()["data"][2]["orgaoEmissor"] == "SSP-SP"
        assert res_3.json()["data"][2]["cpfResponsavel"] == "92757224042"
        assert res_3.json()["data"][2]["nomeMaeEstudante"] == "Dr. Irene Dominato"
        assert res_3.json()["data"][2]["numeroNISResponsavel"] == "50756434811"
        assert res_3.json()["data"][2]["dataNascimento"] == "2009-04-24"
        assert res_3.json()["data"][2]["logradouro"] == "Rua Largo Bernardo Grego"
        assert res_3.json()["data"][2]["bairro"] == "São da Cruz"
        assert res_3.json()["data"][2]["numero"] == "5"
        assert res_3.json()["data"][2]["cep"] == "20257054"
        assert res_3.json()["data"][2]["municipio"] == 3550308.0
        assert res_3.json()["data"][2]["certidaoNascimento"] == "14990651925674888873311258911931"
        assert res_3.json()["data"][2]["cnh"] is None
        assert res_3.json()["data"][2]["uf"] == 35.0
        assert res_3.json()["data"][2]["racaCor"] == 1.0
        assert len(res_3.json()["data"][2]["tipoDeficiencia"]) == 0
        assert res_3.json()["data"][2]["genero"] == 4.0
        assert res_3.json()["data"][2]["telefone"] is None
        assert res_3.json()["data"][2]["email"] == "adriano.de.oliveira.neto@fake.com"
        assert res_3.json()["data"][2]["situacaoCadastroValidado"] is None
        assert len(res_3.json()["data"][2]["matriculas"]) == 1
        assert res_3.json()["data"][2]["matriculas"][0]["codigoMatriculaSgp"] == 7647639.0
        assert res_3.json()["data"][2]["matriculas"][0]["codInstituicao"] == 134070.0
        assert res_3.json()["data"][2]["matriculas"][0]["dataInicioMatricula"] == "2024-01-01"
        assert res_3.json()["data"][2]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_3.json()["data"][2]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_3.json()["data"][2]["matriculas"][0]["situacaoMatricula"] == True
        assert res_3.json()["data"][2]["matriculas"][0]["serieAno"] == 45.0
        assert res_3.json()["data"][2]["matriculas"][0]["etapaEnsinoConsolidado"] == "EJA - Ensino Médio"
        assert res_3.json()["data"][2]["matriculas"][0]["matriculaRede"] is None
        assert res_3.json()["data"][2]["matriculas"][0]["deletadaEm"] is None
        assert res_3.json()["data"][2]["matriculas"][0]["inep"] == "32053673"
        assert res_3.json()["data"][2]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_3.json()["data"][2]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_3.json()["data"][2]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_3.json()["data"][2]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_3.json()["data"][2]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_3.json()["data"][2]["matriculas"][0]["estudanteAnoPeriodo"] == 1.0
        assert res_3.json()["data"][2]["matriculas"][0]["estudanteIntegral"] is None
        assert res_3.json()["data"][2]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_3.json()["data"][2]["matriculas"][0]["anoMatricula"] is None
        assert len(res_3.json()["data"][2]["outrasMatriculas"]) == 0
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_3.json()["pagination"]["total"] == 1000.0
        assert res_3.json()["pagination"]["count"] == 10.0
        assert res_3.json()["pagination"]["per_page"] == 10.0
        assert res_3.json()["pagination"]["current_page"] == 1.0
        assert res_3.json()["pagination"]["total_pages"] == 100.0
        assert res_3.json()["pagination"]["links"]["previous"] is None
        assert res_3.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/inep/29481899?page=538",
                    headers=headers)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_4.json()["data"]) == 0
        assert res_4.json()["pagination"]["total"] == 0.0
        assert res_4.json()["pagination"]["count"] == 0.0
        assert res_4.json()["pagination"]["per_page"] == 10.0
        assert res_4.json()["pagination"]["current_page"] == 538.0
        assert res_4.json()["pagination"]["total_pages"] == 1.0
        assert res_4.json()["pagination"]["links"]["previous"] == 537.0
        assert res_4.json()["pagination"]["links"]["next"] is None
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_43_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_44_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_5 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_5.status_code == 200
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == True
        assert res_5.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_5.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id} -> Object instance has properties which are not allowed by the schema: ["success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_6 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/m?" + 
                    "page=830&" + 
                    "per_page=879&" + 
                    "incluir_objetos_processados=true",
                    headers=headers)
        
        assert res_6.status_code == 400
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == False
        assert res_6.json()["message"] == "O ID fornecido não é um UUID válido. ID: m"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_45_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_7 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_7.status_code == 200
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == True
        assert res_7.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_7.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Object instance has properties which are not allowed by the schema: ["success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_8 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/BI?" + 
                    "page=730&" + 
                    "per_page=10",
                    headers=headers)
        
        assert res_8.status_code == 400
        assert "application/json" in res_8.headers["content-type"]
        assert res_8.json()["success"] == False
        assert res_8.json()["message"] == "O ID fornecido não é um UUID válido. ID: BI"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id} -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_9 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/eb9b5f9d-9fae-4acb-ac4a-20af9a7b3f2e?per_page=737",
                    headers=headers)
        
        assert res_9.status_code == 200
        assert "application/json" in res_9.headers["content-type"]
        assert res_9.json()["success"] == True
        assert res_9.json()["status_processamento"] == "Enviado"
        assert res_9.json()["message"] == "Lote recuperado com sucesso. ID: eb9b5f9d-9fae-4acb-ac4a-20af9a7b3f2e"
    
    
    # Calls:
    # 1 - (401) GET:/v1/estudantes/validacao-cadastro
    # 2 - (200) GET:/v1/profissionais
    # 3 - (201) POST:/v1/estudantes/lote
    # 4 - (401) GET:/v1/profissionais/lote
    # 5 - (200) GET:/v1/estudantes
    # 6 - (400) GET:/v1/profissionais/lote/{id}
    # 7 - (200) PATCH:/v1/estudantes/lote
    # 8 - (200) GET:/v1/estudantes
    # 9 - (422) POST:/v1/profissionais
    # Found 10 potential faults of type-code 200
    # Using 1 example:
    #   25
    @timeout_decorator.timeout(60)
    def test_53(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> Response status 401 not defined for path '/v1/estudantes/validacao-cadastro'.
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/validacao-cadastro?per_page=10",
                    headers=headers)
        
        assert res_0.status_code == 401
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não autorizado"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_1.json()["data"]) == 3
        assert res_1.json()["data"][0]["tipoEnsinoMedio"] == 2.0
        assert res_1.json()["data"][0]["nivelEscolaridade"] == 10.0
        assert res_1.json()["data"][0]["cpf"] == "43839402000"
        assert res_1.json()["data"][0]["nome"] == "João da Silva 2"
        assert res_1.json()["data"][0]["dataNascimento"] == "1985-06-15"
        assert res_1.json()["data"][0]["genero"] == 1.0
        assert res_1.json()["data"][0]["racaCor"] == 2.0
        assert res_1.json()["data"][0]["email"] == "joao.silva@email.com"
        assert res_1.json()["data"][0]["telefone"] is None
        assert res_1.json()["data"][0]["nomeSocial"] is None
        assert res_1.json()["data"][0]["logradouro"] == "Rua das Flores"
        assert res_1.json()["data"][0]["bairro"] == "Centro"
        assert res_1.json()["data"][0]["numero"] == "123"
        assert res_1.json()["data"][0]["cep"] == "01001000"
        assert res_1.json()["data"][0]["municipio"] == 2700409.0
        assert res_1.json()["data"][0]["uf"] == 27.0
        assert res_1.json()["data"][0]["codigoInstituicao"] == 6.0
        assert res_1.json()["data"][0]["cargaHoraria"] == 40.0
        assert res_1.json()["data"][0]["situacaoAtiva"] == True
        assert res_1.json()["data"][0]["dataIngresso"] == "2015-02-10"
        assert res_1.json()["data"][0]["dataFim"] is None
        assert res_1.json()["data"][0]["codigoFuncao"] == 2.0
        assert res_1.json()["data"][0]["matriculaRede"] == "56789"
        assert res_1.json()["data"][0]["tipoVinculo"] == 0.0
        assert res_1.json()["data"][0]["inep"] == "27014088"
        assert len(res_1.json()["data"][0]["tipoDeficiencia"]) == 3
        assert res_1.json()["data"][0]["tipoDeficiencia"][0] == 1.0
        assert res_1.json()["data"][0]["tipoDeficiencia"][1] == 2.0
        assert res_1.json()["data"][0]["tipoDeficiencia"][2] == 3.0
        assert len(res_1.json()["data"][0]["formacoesAcademicas"]) == 2
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["principal"] is None
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["principal"] is None
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][1]["tipoEnsinoMedio"] == 2.0
        assert res_1.json()["data"][1]["nivelEscolaridade"] == 10.0
        assert res_1.json()["data"][1]["cpf"] == "33722248094"
        assert res_1.json()["data"][1]["nome"] == "João da Silva 2"
        assert res_1.json()["data"][1]["dataNascimento"] == "1985-06-15"
        assert res_1.json()["data"][1]["genero"] == 1.0
        assert res_1.json()["data"][1]["racaCor"] == 2.0
        assert res_1.json()["data"][1]["email"] == "joao.silva@email.com"
        assert res_1.json()["data"][1]["telefone"] is None
        assert res_1.json()["data"][1]["nomeSocial"] is None
        assert res_1.json()["data"][1]["logradouro"] == "Rua das Flores"
        assert res_1.json()["data"][1]["bairro"] == "Centro"
        assert res_1.json()["data"][1]["numero"] == "123"
        assert res_1.json()["data"][1]["cep"] == "01001000"
        assert res_1.json()["data"][1]["municipio"] == 2700409.0
        assert res_1.json()["data"][1]["uf"] == 27.0
        assert res_1.json()["data"][1]["codigoInstituicao"] == 6.0
        assert res_1.json()["data"][1]["cargaHoraria"] == 40.0
        assert res_1.json()["data"][1]["situacaoAtiva"] == True
        assert res_1.json()["data"][1]["dataIngresso"] == "2015-02-10"
        assert res_1.json()["data"][1]["dataFim"] is None
        assert res_1.json()["data"][1]["codigoFuncao"] == 2.0
        assert res_1.json()["data"][1]["matriculaRede"] == "56789"
        assert res_1.json()["data"][1]["tipoVinculo"] == 0.0
        assert res_1.json()["data"][1]["inep"] == "27014088"
        assert len(res_1.json()["data"][1]["tipoDeficiencia"]) == 3
        assert res_1.json()["data"][1]["tipoDeficiencia"][0] == 1.0
        assert res_1.json()["data"][1]["tipoDeficiencia"][1] == 2.0
        assert res_1.json()["data"][1]["tipoDeficiencia"][2] == 3.0
        assert len(res_1.json()["data"][1]["formacoesAcademicas"]) == 2
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["principal"] is None
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["principal"] is None
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][2]["tipoEnsinoMedio"] == 2.0
        assert res_1.json()["data"][2]["nivelEscolaridade"] == 10.0
        assert res_1.json()["data"][2]["cpf"] == "31863200037"
        assert res_1.json()["data"][2]["nome"] == "João da Silva 2"
        assert res_1.json()["data"][2]["dataNascimento"] == "1985-06-15"
        assert res_1.json()["data"][2]["genero"] == 1.0
        assert res_1.json()["data"][2]["racaCor"] == 2.0
        assert res_1.json()["data"][2]["email"] == "joao.silva@email.com"
        assert res_1.json()["data"][2]["telefone"] is None
        assert res_1.json()["data"][2]["nomeSocial"] is None
        assert res_1.json()["data"][2]["logradouro"] == "Rua das Flores"
        assert res_1.json()["data"][2]["bairro"] == "Centro"
        assert res_1.json()["data"][2]["numero"] == "123"
        assert res_1.json()["data"][2]["cep"] == "01001000"
        assert res_1.json()["data"][2]["municipio"] == 2700409.0
        assert res_1.json()["data"][2]["uf"] == 27.0
        assert res_1.json()["data"][2]["codigoInstituicao"] == 6.0
        assert res_1.json()["data"][2]["cargaHoraria"] == 40.0
        assert res_1.json()["data"][2]["situacaoAtiva"] == True
        assert res_1.json()["data"][2]["dataIngresso"] == "2015-02-10"
        assert res_1.json()["data"][2]["dataFim"] is None
        assert res_1.json()["data"][2]["codigoFuncao"] == 2.0
        assert res_1.json()["data"][2]["matriculaRede"] == "56789"
        assert res_1.json()["data"][2]["tipoVinculo"] == 0.0
        assert res_1.json()["data"][2]["inep"] == "27014088"
        assert len(res_1.json()["data"][2]["tipoDeficiencia"]) == 3
        assert res_1.json()["data"][2]["tipoDeficiencia"][0] == 1.0
        assert res_1.json()["data"][2]["tipoDeficiencia"][1] == 2.0
        assert res_1.json()["data"][2]["tipoDeficiencia"][2] == 3.0
        assert len(res_1.json()["data"][2]["formacoesAcademicas"]) == 2
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["principal"] is None
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["principal"] is None
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_1.json()["pagination"]["total"] == 3.0
        assert res_1.json()["pagination"]["count"] == 3.0
        assert res_1.json()["pagination"]["per_page"] == 10.0
        assert res_1.json()["pagination"]["current_page"] == 1.0
        assert res_1.json()["pagination"]["total_pages"] == 1.0
        assert res_1.json()["pagination"]["links"]["previous"] is None
        assert res_1.json()["pagination"]["links"]["next"] is None
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"numeroNISResponsavel\": \"123\", " + \
            " \"cpf\": \"31863200037\", " + \
            " \"dataNascimento\": \"1985-06-15\", " + \
            " \"genero\": 4, " + \
            " \"racaCor\": 3, " + \
            " \"nomeSocial\": \"João da Silva 2\", " + \
            " \"orgaoEmissor\": \"\", " + \
            " \"cnh\": \"XZTGMUfyke\", " + \
            " \"bairro\": \"Centro\", " + \
            " \"numero\": \"123\", " + \
            " \"cep\": \"01001000\", " + \
            " \"municipio\": 2700409, " + \
            " \"dataInicioMatricula\": \"1980-04-26\", " + \
            " \"serieAno\": 932, " + \
            " \"matriculaRede\": \"3hhzb7VoG8T7\", " + \
            " \"estudanteAnoPeriodo\": 42, " + \
            " \"anoMatricula\": 392 " + \
            " }, " + \
            " { " + \
            " \"cpfResponsavel\": \"43839402000\", " + \
            " \"numeroNISResponsavel\": \"123\", " + \
            " \"nomeMaeEstudante\": \"7F6ap\", " + \
            " \"cpf\": \"31863200037\", " + \
            " \"nome\": \"João da Silva 2\", " + \
            " \"racaCor\": 4, " + \
            " \"telefone\": \"A\", " + \
            " \"nomeSocial\": \"\", " + \
            " \"sexo\": \"5\", " + \
            " \"orgaoEmissor\": \"x6_wH3csS\", " + \
            " \"certidaoNascimento\": \"iZC\", " + \
            " \"logradouro\": \"Rua das Flores\", " + \
            " \"bairro\": \"13bRpfw_UJInC\", " + \
            " \"uf\": -975807927, " + \
            " \"estudantePpl\": 1, " + \
            " \"serieAno\": 25, " + \
            " \"matriculaRede\": \"\", " + \
            " \"inep\": 27014088, " + \
            " \"dataInicioPeriodoLetivo\": \"2093-03-24\", " + \
            " \"formaOrganizacaoTurma\": 277, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 439, " + \
            " \"estudanteAnoPeriodo\": 2 " + \
            " }, " + \
            " { " + \
            " \"dataNascimento\": \"1985-06-15\", " + \
            " \"racaCor\": 1, " + \
            " \"tipoDeficiencia\": [], " + \
            " \"sexo\": \"0\", " + \
            " \"numeroNIS\": \"123\", " + \
            " \"rg\": \"mN8iwNxdufY\", " + \
            " \"orgaoEmissor\": \"NjsS24kv\", " + \
            " \"certidaoNascimento\": \"u\", " + \
            " \"cnh\": \"31863200037\", " + \
            " \"logradouro\": \"Rua das Flores\", " + \
            " \"uf\": 27, " + \
            " \"estudantePpl\": 2, " + \
            " \"dataInicioMatricula\": \"2073-05-16\", " + \
            " \"instituicao\": 840, " + \
            " \"inep\": 27014088, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 112, " + \
            " \"estudanteAnoPeriodo\": 42, " + \
            " \"estudanteIntegral\": 0 " + \
            " }, " + \
            " { " + \
            " \"genero\": 6, " + \
            " \"racaCor\": 5, " + \
            " \"nomeSocial\": \"João da Silva 2\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 2 " + \
            " ], " + \
            " \"numeroNIS\": \"123\", " + \
            " \"orgaoEmissor\": \"\", " + \
            " \"certidaoNascimento\": \"ypCrp81ow7_qWCGP\", " + \
            " \"cep\": \"\", " + \
            " \"municipio\": 2700409, " + \
            " \"estudantePpl\": 0, " + \
            " \"instituicao\": 421, " + \
            " \"formaOrganizacaoTurma\": 461, " + \
            " \"estudanteAnoPeriodo\": 2 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_2.status_code == 201
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> Response status 401 not defined for path '/v1/profissionais/lote'.
        headers = {}
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers)
        
        assert res_3.status_code == 401
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "Não autorizado"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?" + 
                    "page=1&" + 
                    "per_page=10",
                    headers=headers)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_4.json()["data"]) == 10
        assert res_4.json()["data"][0]["cpf"] == "49255179888"
        assert res_4.json()["data"][0]["nome"] == "111"
        assert res_4.json()["data"][0]["nomeSocial"] == "test"
        assert res_4.json()["data"][0]["numeroNIS"] is None
        assert res_4.json()["data"][0]["rg"] == "22307981"
        assert res_4.json()["data"][0]["orgaoEmissor"] == "SSP"
        assert res_4.json()["data"][0]["cpfResponsavel"] == "48405399283"
        assert res_4.json()["data"][0]["nomeMaeEstudante"] == "Valentina Rezende"
        assert res_4.json()["data"][0]["numeroNISResponsavel"] == "64668522654"
        assert res_4.json()["data"][0]["dataNascimento"] == "2024-12-28"
        assert res_4.json()["data"][0]["logradouro"] == "Rua teste"
        assert res_4.json()["data"][0]["bairro"] == "Santa Lucia"
        assert res_4.json()["data"][0]["numero"] == "220"
        assert res_4.json()["data"][0]["cep"] == "57018780"
        assert res_4.json()["data"][0]["municipio"] == 1100940.0
        assert res_4.json()["data"][0]["certidaoNascimento"] == "33333333"
        assert res_4.json()["data"][0]["cnh"] == "3333333"
        assert res_4.json()["data"][0]["uf"] == 11.0
        assert res_4.json()["data"][0]["racaCor"] == 3.0
        assert len(res_4.json()["data"][0]["tipoDeficiencia"]) == 3
        assert res_4.json()["data"][0]["tipoDeficiencia"][0] == 1.0
        assert res_4.json()["data"][0]["tipoDeficiencia"][1] == 2.0
        assert res_4.json()["data"][0]["tipoDeficiencia"][2] == 3.0
        assert res_4.json()["data"][0]["genero"] == 3.0
        assert res_4.json()["data"][0]["telefone"] == "3333333"
        assert res_4.json()["data"][0]["email"] == "AFTER-TWO@AFTER-TWO.com"
        assert res_4.json()["data"][0]["situacaoCadastroValidado"] == 3.0
        assert len(res_4.json()["data"][0]["matriculas"]) == 1
        assert res_4.json()["data"][0]["matriculas"][0]["codigoMatriculaSgp"] == 1733024.0
        assert res_4.json()["data"][0]["matriculas"][0]["codInstituicao"] == 7259.0
        assert res_4.json()["data"][0]["matriculas"][0]["dataInicioMatricula"] == "2024-09-28"
        assert res_4.json()["data"][0]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_4.json()["data"][0]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_4.json()["data"][0]["matriculas"][0]["situacaoMatricula"] == True
        assert res_4.json()["data"][0]["matriculas"][0]["serieAno"] == 74.0
        assert res_4.json()["data"][0]["matriculas"][0]["etapaEnsinoConsolidado"] == "Formação inicial continuada ou qualificação profissional (FIC)"
        assert res_4.json()["data"][0]["matriculas"][0]["matriculaRede"] == "Teste Ricardo"
        assert res_4.json()["data"][0]["matriculas"][0]["deletadaEm"] is None
        assert res_4.json()["data"][0]["matriculas"][0]["inep"] == "12005037"
        assert res_4.json()["data"][0]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_4.json()["data"][0]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_4.json()["data"][0]["matriculas"][0]["dataInicioPeriodoLetivo"] == "2024-09-28"
        assert res_4.json()["data"][0]["matriculas"][0]["formaOrganizacaoTurma"] == 1.0
        assert res_4.json()["data"][0]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] == 0.0
        assert res_4.json()["data"][0]["matriculas"][0]["estudanteAnoPeriodo"] == 1.0
        assert res_4.json()["data"][0]["matriculas"][0]["estudanteIntegral"] == True
        assert res_4.json()["data"][0]["matriculas"][0]["dataAtivacaoMatricula"] == "2024-09-27 00:00:00"
        assert res_4.json()["data"][0]["matriculas"][0]["anoMatricula"] == 2024.0
        assert len(res_4.json()["data"][0]["outrasMatriculas"]) == 0
        assert res_4.json()["data"][1]["cpf"] == "67089268578"
        assert res_4.json()["data"][1]["nome"] == "6cc97vMeCP9KgSI"
        assert res_4.json()["data"][1]["nomeSocial"] == "rRAEEBPUPdYf"
        assert res_4.json()["data"][1]["numeroNIS"] == "30183310316"
        assert res_4.json()["data"][1]["rg"] == "53669048"
        assert res_4.json()["data"][1]["orgaoEmissor"] == "i4tf"
        assert res_4.json()["data"][1]["cpfResponsavel"] == "52008260631"
        assert res_4.json()["data"][1]["nomeMaeEstudante"] == "7aTq92Zi"
        assert res_4.json()["data"][1]["numeroNISResponsavel"] == "11273745692"
        assert res_4.json()["data"][1]["dataNascimento"] == "2008-10-29"
        assert res_4.json()["data"][1]["logradouro"] == "rWjgYPU1P8"
        assert res_4.json()["data"][1]["bairro"] == "G5tQ1ZJN0"
        assert res_4.json()["data"][1]["numero"] == "55"
        assert res_4.json()["data"][1]["cep"] == "19141821"
        assert res_4.json()["data"][1]["municipio"] == 4200705.0
        assert res_4.json()["data"][1]["certidaoNascimento"] == "373271505447"
        assert res_4.json()["data"][1]["cnh"] == "56267273661"
        assert res_4.json()["data"][1]["uf"] == 42.0
        assert res_4.json()["data"][1]["racaCor"] == 0.0
        assert len(res_4.json()["data"][1]["tipoDeficiencia"]) == 3
        assert res_4.json()["data"][1]["tipoDeficiencia"][0] == 1.0
        assert res_4.json()["data"][1]["tipoDeficiencia"][1] == 2.0
        assert res_4.json()["data"][1]["tipoDeficiencia"][2] == 3.0
        assert res_4.json()["data"][1]["genero"] == 4.0
        assert res_4.json()["data"][1]["telefone"] == "11969630845"
        assert res_4.json()["data"][1]["email"] == "RTT0VngF3Deo0O@example.com"
        assert res_4.json()["data"][1]["situacaoCadastroValidado"] == 4.0
        assert len(res_4.json()["data"][1]["matriculas"]) == 1
        assert res_4.json()["data"][1]["matriculas"][0]["codigoMatriculaSgp"] == 1.020298E7
        assert res_4.json()["data"][1]["matriculas"][0]["codInstituicao"] == 81776.0
        assert res_4.json()["data"][1]["matriculas"][0]["dataInicioMatricula"] == "2024-02-19"
        assert res_4.json()["data"][1]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_4.json()["data"][1]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_4.json()["data"][1]["matriculas"][0]["situacaoMatricula"] == True
        assert res_4.json()["data"][1]["matriculas"][0]["serieAno"] == 71.0
        assert res_4.json()["data"][1]["matriculas"][0]["etapaEnsinoConsolidado"] == "EJA - Ensino Médio"
        assert res_4.json()["data"][1]["matriculas"][0]["matriculaRede"] == "jvjvjv1"
        assert res_4.json()["data"][1]["matriculas"][0]["deletadaEm"] is None
        assert res_4.json()["data"][1]["matriculas"][0]["inep"] == "26540720"
        assert res_4.json()["data"][1]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_4.json()["data"][1]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_4.json()["data"][1]["matriculas"][0]["dataInicioPeriodoLetivo"] == "2024-01-29"
        assert res_4.json()["data"][1]["matriculas"][0]["formaOrganizacaoTurma"] == 1.0
        assert res_4.json()["data"][1]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] == 3.0
        assert res_4.json()["data"][1]["matriculas"][0]["estudanteAnoPeriodo"] == 3.0
        assert res_4.json()["data"][1]["matriculas"][0]["estudanteIntegral"] == True
        assert res_4.json()["data"][1]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_4.json()["data"][1]["matriculas"][0]["anoMatricula"] == 2024.0
        assert len(res_4.json()["data"][1]["outrasMatriculas"]) == 0
        assert res_4.json()["data"][2]["cpf"] == "81601036620"
        assert res_4.json()["data"][2]["nome"] == "7nCcq XDiMfCbaJ0cFs"
        assert res_4.json()["data"][2]["nomeSocial"] == "YXWGpw"
        assert res_4.json()["data"][2]["numeroNIS"] == "34442480673"
        assert res_4.json()["data"][2]["rg"] == "21577661"
        assert res_4.json()["data"][2]["orgaoEmissor"] == "vC2a0H9Lv4"
        assert res_4.json()["data"][2]["cpfResponsavel"] == "85307915250"
        assert res_4.json()["data"][2]["nomeMaeEstudante"] == "uoUPQKkc8iCGVq2wAS1"
        assert res_4.json()["data"][2]["numeroNISResponsavel"] == "27296692788"
        assert res_4.json()["data"][2]["dataNascimento"] == "1998-08-08"
        assert res_4.json()["data"][2]["logradouro"] == "01PKhhqGroyvggLAFUEoOHr3Q0KI"
        assert res_4.json()["data"][2]["bairro"] == "nL4bOxhpEiU2PjnP"
        assert res_4.json()["data"][2]["numero"] == "02"
        assert res_4.json()["data"][2]["cep"] == "76984525"
        assert res_4.json()["data"][2]["municipio"] == 4200705.0
        assert res_4.json()["data"][2]["certidaoNascimento"] == "3679215604607"
        assert res_4.json()["data"][2]["cnh"] == "02342004738"
        assert res_4.json()["data"][2]["uf"] == 42.0
        assert res_4.json()["data"][2]["racaCor"] == 2.0
        assert len(res_4.json()["data"][2]["tipoDeficiencia"]) == 3
        assert res_4.json()["data"][2]["tipoDeficiencia"][0] == 1.0
        assert res_4.json()["data"][2]["tipoDeficiencia"][1] == 2.0
        assert res_4.json()["data"][2]["tipoDeficiencia"][2] == 3.0
        assert res_4.json()["data"][2]["genero"] == 3.0
        assert res_4.json()["data"][2]["telefone"] == "11949911257"
        assert res_4.json()["data"][2]["email"] == "4mphnZDvXrC@example.com"
        assert res_4.json()["data"][2]["situacaoCadastroValidado"] == 4.0
        assert len(res_4.json()["data"][2]["matriculas"]) == 1
        assert res_4.json()["data"][2]["matriculas"][0]["codigoMatriculaSgp"] == 1.0202989E7
        assert res_4.json()["data"][2]["matriculas"][0]["codInstituicao"] == 81776.0
        assert res_4.json()["data"][2]["matriculas"][0]["dataInicioMatricula"] == "2024-11-01"
        assert res_4.json()["data"][2]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_4.json()["data"][2]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_4.json()["data"][2]["matriculas"][0]["situacaoMatricula"] == True
        assert res_4.json()["data"][2]["matriculas"][0]["serieAno"] == 58.0
        assert res_4.json()["data"][2]["matriculas"][0]["etapaEnsinoConsolidado"] == "Educação de Jovens e Adultos (EJA) - Fundamental"
        assert res_4.json()["data"][2]["matriculas"][0]["matriculaRede"] == "e2XouiaD2aNA 8"
        assert res_4.json()["data"][2]["matriculas"][0]["deletadaEm"] is None
        assert res_4.json()["data"][2]["matriculas"][0]["inep"] == "26540720"
        assert res_4.json()["data"][2]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_4.json()["data"][2]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_4.json()["data"][2]["matriculas"][0]["dataInicioPeriodoLetivo"] == "2024-10-22"
        assert res_4.json()["data"][2]["matriculas"][0]["formaOrganizacaoTurma"] == 6.0
        assert res_4.json()["data"][2]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] == 4.0
        assert res_4.json()["data"][2]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_4.json()["data"][2]["matriculas"][0]["estudanteIntegral"] == False
        assert res_4.json()["data"][2]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_4.json()["data"][2]["matriculas"][0]["anoMatricula"] is None
        assert len(res_4.json()["data"][2]["outrasMatriculas"]) == 0
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_4.json()["pagination"]["total"] == 598780.0
        assert res_4.json()["pagination"]["count"] == 10.0
        assert res_4.json()["pagination"]["per_page"] == 10.0
        assert res_4.json()["pagination"]["current_page"] == 1.0
        assert res_4.json()["pagination"]["total_pages"] == 59878.0
        assert res_4.json()["pagination"]["links"]["previous"] is None
        assert res_4.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id} -> Object instance has properties which are not allowed by the schema: ["success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/ELDzl4d8Rssgb?" + 
                    "page=1&" + 
                    "per_page=208",
                    headers=headers)
        
        assert res_5.status_code == 400
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "O ID fornecido não é um UUID válido. ID: ELDzl4d8Rssgb"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_24_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_25_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_26_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_27_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_28_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_6 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_6.status_code == 200
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == True
        assert res_6.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_6.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_7 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes?" + 
                    "page=32&" + 
                    "per_page=10&" + 
                    "ano_matricula=433&" + 
                    "situacao_final=REPROVADAS",
                    headers=headers)
        
        assert res_7.status_code == 200
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == True
        assert res_7.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_7.json()["data"]) == 0
        assert res_7.json()["pagination"]["total"] == 0.0
        assert res_7.json()["pagination"]["count"] == 0.0
        assert res_7.json()["pagination"]["per_page"] == 10.0
        assert res_7.json()["pagination"]["current_page"] == 32.0
        assert res_7.json()["pagination"]["total_pages"] == 0.0
        assert res_7.json()["pagination"]["links"]["previous"] == 31.0
        assert res_7.json()["pagination"]["links"]["next"] is None
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"dataNascimento\": \"0V4uTq6tLYTBB6L5\", " + \
            " \"email\": \"EBHu7BugX3PUCbJF\", " + \
            " \"telefone\": \"_4\", " + \
            " \"nomeSocial\": \"IaKqXmWWnjwH\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 2, " + \
            " 3, " + \
            " 917, " + \
            " 1, " + \
            " 329 " + \
            " ], " + \
            " \"logradouro\": \"Rua das Flores\", " + \
            " \"bairro\": \"Centro\", " + \
            " \"numero\": \"5\", " + \
            " \"cep\": \"01001000\", " + \
            " \"uf\": 27, " + \
            " \"inep\": \"27014088\", " + \
            " \"matriculaRede\": \"56789\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"1910-09-05\", " + \
            " \"cargaHoraria\": 339 " + \
            " } "
        headers['Accept'] = "application/json"
        res_8 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_8.status_code == 422
        assert "application/json" in res_8.headers["content-type"]
        assert res_8.json()["success"] == False
        assert res_8.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #1 ($nome) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
    
    
    # Calls:
    # 1 - (201) POST:/v1/profissionais/lote
    # 2 - (200) GET:/v1/profissionais
    # 3 - (422) POST:/v1/profissionais
    # 4 - (200) GET:/v1/estudantes/validacao-cadastro
    # 5 - (404) GET:/v1/estudantes/solicitacoes-alteracoes
    # 6 - (201) POST:/v1/profissionais/lote
    # 7 - (200) GET:/v1/profissionais/lote
    # 8 - (200) GET:/v1/estudantes/{cpfNis}
    # 9 - (200) GET:/v1/estudantes/inep/{inep}
    # Found 26 potential faults of type-code 200
    # Using 4 examples:
    #   1
    #   2010
    #   2014
    #   Universidade Federal do Rio de Janeiro
    @timeout_decorator.timeout(60)
    def test_54(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"dataNascimento\": \"2003-02-13\", " + \
            " \"email\": \"hortencia.de.freitas.delgado.jr@fake.com\", " + \
            " \"nomeSocial\": \"pCifpRBMCpY\", " + \
            " \"sexo\": \"1\", " + \
            " \"bairro\": \"5BGA3ZPP\", " + \
            " \"cep\": \"\", " + \
            " \"dataFim\": \"2078-13-07\" " + \
            " }, " + \
            " { " + \
            " \"nome\": \"Lara Jesus\", " + \
            " \"email\": \"4ntHO\", " + \
            " \"telefone\": \"11949911257\", " + \
            " \"nomeSocial\": \"YXWGpw\", " + \
            " \"sexo\": \"3\", " + \
            " \"cep\": \"58577851\", " + \
            " \"municipio\": 2408102, " + \
            " \"matriculaRede\": \"qkoBN\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 1, " + \
            " \"dataFim\": \"2006-01-23\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 997, " + \
            " \"nome\": \"Mirella Cunha\", " + \
            " \"telefone\": \"11933018135\", " + \
            " \"nomeSocial\": \"vYHSe9eaiB\", " + \
            " \"sexo\": \"4\", " + \
            " \"numero\": \"n1k\", " + \
            " \"cep\": \"fy7\", " + \
            " \"inep\": \"12034290\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 7, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 824, " + \
            " \"anoInicioFormacaoAcademica\": 2010 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 616, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"G8BMn2\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?per_page=260",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_1.json()["data"]) == 3
        assert res_1.json()["data"][0]["tipoEnsinoMedio"] == 2.0
        assert res_1.json()["data"][0]["nivelEscolaridade"] == 10.0
        assert res_1.json()["data"][0]["cpf"] == "43839402000"
        assert res_1.json()["data"][0]["nome"] == "João da Silva 2"
        assert res_1.json()["data"][0]["dataNascimento"] == "1985-06-15"
        assert res_1.json()["data"][0]["genero"] == 1.0
        assert res_1.json()["data"][0]["racaCor"] == 2.0
        assert res_1.json()["data"][0]["email"] == "joao.silva@email.com"
        assert res_1.json()["data"][0]["telefone"] is None
        assert res_1.json()["data"][0]["nomeSocial"] is None
        assert res_1.json()["data"][0]["logradouro"] == "Rua das Flores"
        assert res_1.json()["data"][0]["bairro"] == "Centro"
        assert res_1.json()["data"][0]["numero"] == "123"
        assert res_1.json()["data"][0]["cep"] == "01001000"
        assert res_1.json()["data"][0]["municipio"] == 2700409.0
        assert res_1.json()["data"][0]["uf"] == 27.0
        assert res_1.json()["data"][0]["codigoInstituicao"] == 6.0
        assert res_1.json()["data"][0]["cargaHoraria"] == 40.0
        assert res_1.json()["data"][0]["situacaoAtiva"] == True
        assert res_1.json()["data"][0]["dataIngresso"] == "2015-02-10"
        assert res_1.json()["data"][0]["dataFim"] is None
        assert res_1.json()["data"][0]["codigoFuncao"] == 2.0
        assert res_1.json()["data"][0]["matriculaRede"] == "56789"
        assert res_1.json()["data"][0]["tipoVinculo"] == 0.0
        assert res_1.json()["data"][0]["inep"] == "27014088"
        assert len(res_1.json()["data"][0]["tipoDeficiencia"]) == 3
        assert res_1.json()["data"][0]["tipoDeficiencia"][0] == 1.0
        assert res_1.json()["data"][0]["tipoDeficiencia"][1] == 2.0
        assert res_1.json()["data"][0]["tipoDeficiencia"][2] == 3.0
        assert len(res_1.json()["data"][0]["formacoesAcademicas"]) == 2
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["principal"] is None
        assert res_1.json()["data"][0]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["principal"] is None
        assert res_1.json()["data"][0]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][1]["tipoEnsinoMedio"] == 2.0
        assert res_1.json()["data"][1]["nivelEscolaridade"] == 10.0
        assert res_1.json()["data"][1]["cpf"] == "33722248094"
        assert res_1.json()["data"][1]["nome"] == "João da Silva 2"
        assert res_1.json()["data"][1]["dataNascimento"] == "1985-06-15"
        assert res_1.json()["data"][1]["genero"] == 1.0
        assert res_1.json()["data"][1]["racaCor"] == 2.0
        assert res_1.json()["data"][1]["email"] == "joao.silva@email.com"
        assert res_1.json()["data"][1]["telefone"] is None
        assert res_1.json()["data"][1]["nomeSocial"] is None
        assert res_1.json()["data"][1]["logradouro"] == "Rua das Flores"
        assert res_1.json()["data"][1]["bairro"] == "Centro"
        assert res_1.json()["data"][1]["numero"] == "123"
        assert res_1.json()["data"][1]["cep"] == "01001000"
        assert res_1.json()["data"][1]["municipio"] == 2700409.0
        assert res_1.json()["data"][1]["uf"] == 27.0
        assert res_1.json()["data"][1]["codigoInstituicao"] == 6.0
        assert res_1.json()["data"][1]["cargaHoraria"] == 40.0
        assert res_1.json()["data"][1]["situacaoAtiva"] == True
        assert res_1.json()["data"][1]["dataIngresso"] == "2015-02-10"
        assert res_1.json()["data"][1]["dataFim"] is None
        assert res_1.json()["data"][1]["codigoFuncao"] == 2.0
        assert res_1.json()["data"][1]["matriculaRede"] == "56789"
        assert res_1.json()["data"][1]["tipoVinculo"] == 0.0
        assert res_1.json()["data"][1]["inep"] == "27014088"
        assert len(res_1.json()["data"][1]["tipoDeficiencia"]) == 3
        assert res_1.json()["data"][1]["tipoDeficiencia"][0] == 1.0
        assert res_1.json()["data"][1]["tipoDeficiencia"][1] == 2.0
        assert res_1.json()["data"][1]["tipoDeficiencia"][2] == 3.0
        assert len(res_1.json()["data"][1]["formacoesAcademicas"]) == 2
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["principal"] is None
        assert res_1.json()["data"][1]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["principal"] is None
        assert res_1.json()["data"][1]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][2]["tipoEnsinoMedio"] == 2.0
        assert res_1.json()["data"][2]["nivelEscolaridade"] == 10.0
        assert res_1.json()["data"][2]["cpf"] == "31863200037"
        assert res_1.json()["data"][2]["nome"] == "João da Silva 2"
        assert res_1.json()["data"][2]["dataNascimento"] == "1985-06-15"
        assert res_1.json()["data"][2]["genero"] == 1.0
        assert res_1.json()["data"][2]["racaCor"] == 2.0
        assert res_1.json()["data"][2]["email"] == "joao.silva@email.com"
        assert res_1.json()["data"][2]["telefone"] is None
        assert res_1.json()["data"][2]["nomeSocial"] is None
        assert res_1.json()["data"][2]["logradouro"] == "Rua das Flores"
        assert res_1.json()["data"][2]["bairro"] == "Centro"
        assert res_1.json()["data"][2]["numero"] == "123"
        assert res_1.json()["data"][2]["cep"] == "01001000"
        assert res_1.json()["data"][2]["municipio"] == 2700409.0
        assert res_1.json()["data"][2]["uf"] == 27.0
        assert res_1.json()["data"][2]["codigoInstituicao"] == 6.0
        assert res_1.json()["data"][2]["cargaHoraria"] == 40.0
        assert res_1.json()["data"][2]["situacaoAtiva"] == True
        assert res_1.json()["data"][2]["dataIngresso"] == "2015-02-10"
        assert res_1.json()["data"][2]["dataFim"] is None
        assert res_1.json()["data"][2]["codigoFuncao"] == 2.0
        assert res_1.json()["data"][2]["matriculaRede"] == "56789"
        assert res_1.json()["data"][2]["tipoVinculo"] == 0.0
        assert res_1.json()["data"][2]["inep"] == "27014088"
        assert len(res_1.json()["data"][2]["tipoDeficiencia"]) == 3
        assert res_1.json()["data"][2]["tipoDeficiencia"][0] == 1.0
        assert res_1.json()["data"][2]["tipoDeficiencia"][1] == 2.0
        assert res_1.json()["data"][2]["tipoDeficiencia"][2] == 3.0
        assert len(res_1.json()["data"][2]["formacoesAcademicas"]) == 2
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["principal"] is None
        assert res_1.json()["data"][2]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["principal"] is None
        assert res_1.json()["data"][2]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_1.json()["pagination"]["total"] == 3.0
        assert res_1.json()["pagination"]["count"] == 3.0
        assert res_1.json()["pagination"]["per_page"] == 260.0
        assert res_1.json()["pagination"]["current_page"] == 1.0
        assert res_1.json()["pagination"]["total_pages"] == 1.0
        assert res_1.json()["pagination"]["links"]["previous"] is None
        assert res_1.json()["pagination"]["links"]["next"] is None
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"nome\": \"yGazLZKFivu\", " + \
            " \"email\": \"hortencia.fernandes.alves@fake.com\", " + \
            " \"nomeSocial\": \"vYHSe9eaiB\", " + \
            " \"tipoDeficiencia\": [], " + \
            " \"bairro\": \"São Carrara\", " + \
            " \"numero\": \"13431\", " + \
            " \"cep\": \"54958697\", " + \
            " \"municipio\": 4314902, " + \
            " \"uf\": 11, " + \
            " \"inep\": 23131802, " + \
            " \"dataIngresso\": \"1903-05-05\", " + \
            " \"dataFim\": \"1905-03-31\" " + \
            " } "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_2.status_code == 422
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #2 ($dataNascimento) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/validacao-cadastro?cpf=16063486801",
                    headers=headers)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Operação realizada com sucesso"
        assert len(res_3.json()["data"]) == 1
        assert res_3.json()["data"][0]["cpf"] == "16063486801"
        assert res_3.json()["data"][0]["numeroNIS"] is None
        assert res_3.json()["data"][0]["situacaoCadastral"] == "Não autenticada"
        assert res_3.json()["data"][0]["situacaoCpf"] == "Quando não há inconsistência cadastral e não constar omissão de DIRPF"
        assert res_3.json()["data"][0]["nome"] == "Pedro Henrique Ribeiro"
        assert res_3.json()["data"][0]["nomeValidado"] == False
        assert res_3.json()["data"][0]["dataNascimento"] == "1976-08-09"
        assert res_3.json()["data"][0]["dataNascimentoValidada"] == False
        assert res_3.json()["data"][0]["nomeMaeEstudante"] == "Sr. Augusto Pinto"
        assert res_3.json()["data"][0]["nomeMaeEstudanteValidado"] == False
        assert res_3.json()["data"][0]["dataValidacaoCadastral"] == "2020-09-14 00:00:00"
        assert res_3.json()["pagination"]["total"] == 1.0
        assert res_3.json()["pagination"]["count"] == 1.0
        assert res_3.json()["pagination"]["per_page"] == 15.0
        assert res_3.json()["pagination"]["current_page"] == 1.0
        assert res_3.json()["pagination"]["total_pages"] == 1.0
        assert res_3.json()["pagination"]["links"]["previous"] is None
        assert res_3.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> Response status 404 not defined for path '/v1/estudantes/solicitacoes-alteracoes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/solicitacoes-alteracoes?" + 
                    "page=684&" + 
                    "cpfNovo=lu",
                    headers=headers)
        
        assert res_4.status_code == 404
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "Ocorreu um erro inesperado."
        assert res_4.json()["errors"]["message"] == "Nenhum dado encontrado"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpf\": \"74969599521\", " + \
            " \"racaCor\": 4, " + \
            " \"email\": \"hortencia.godoi.de.freitas.neto@fake.com\", " + \
            " \"telefone\": \"11945225241\", " + \
            " \"sexo\": \"4\", " + \
            " \"logradouro\": \"Rua Travessa Heloise\", " + \
            " \"numero\": \"75445\", " + \
            " \"uf\": 43, " + \
            " \"inep\": 41113381, " + \
            " \"tipoVinculo\": -1969879132, " + \
            " \"dataFim\": \"2048-02-00\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"cpf\": \"71120922488\", " + \
            " \"dataNascimento\": \"1942-04-03\", " + \
            " \"email\": \"hortencia.irene.sales@fake.com\", " + \
            " \"telefone\": \"kXORLvLJPkx\", " + \
            " \"numero\": \"\", " + \
            " \"municipio\": 631, " + \
            " \"inep\": \"XLlGEGwbxlNyw1R\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"dataIngresso\": \"2005-10-12\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"racaCor\": 0, " + \
            " \"email\": \"thPsIxZ\", " + \
            " \"telefone\": \"Ah6n_\", " + \
            " \"nomeSocial\": \"test\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 9 " + \
            " ], " + \
            " \"logradouro\": \"Rua Largo Hernani Abreu\", " + \
            " \"bairro\": \"São Vasques\", " + \
            " \"numero\": \"495\", " + \
            " \"inep\": \"D\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 913, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Rio de Janeiro\", " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 359, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 147 " + \
            " } " + \
            " ], " + \
            " \"tipoVinculo\": 1, " + \
            " \"codigoFuncao\": 1, " + \
            " \"dataIngresso\": \"1976-10-13\", " + \
            " \"dataFim\": \"1906-10-12\", " + \
            " \"cargaHoraria\": 796106096 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_5 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_5.status_code == 201
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == True
        assert res_5.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/0/dataEnvio'] String "2025-05-03 23:56:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1/dataEnvio'] String "2025-05-03 23:56:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2/dataEnvio'] String "2025-05-03 23:56:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/3/dataEnvio'] String "2025-05-03 23:45:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/4/dataEnvio'] String "2025-05-03 23:45:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/5/dataEnvio'] String "2025-05-03 23:44:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/6/dataEnvio'] String "2025-05-03 23:40:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/7/dataEnvio'] String "2025-05-03 23:39:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/8/dataEnvio'] String "2025-05-03 23:38:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/9/dataEnvio'] String "2025-05-03 23:36:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_6 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote?per_page=10",
                    headers=headers)
        
        assert res_6.status_code == 200
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == True
        assert res_6.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_6.json()["data"]) == 10
        assert res_6.json()["data"][0]["dataEnvio"] == "2025-05-03 23:56:49"
        assert res_6.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_6.json()["data"][1]["dataEnvio"] == "2025-05-03 23:56:33"
        assert res_6.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_6.json()["data"][2]["dataEnvio"] == "2025-05-03 23:56:25"
        assert res_6.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_6.json()["pagination"]["total"] == 2392.0
        assert res_6.json()["pagination"]["count"] == 10.0
        assert res_6.json()["pagination"]["per_page"] == 10.0
        assert res_6.json()["pagination"]["current_page"] == 1.0
        assert res_6.json()["pagination"]["total_pages"] == 240.0
        assert res_6.json()["pagination"]["links"]["previous"] is None
        assert res_6.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/{cpfNis} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_7 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/41787776107",
                    headers=headers)
        
        assert res_7.status_code == 200
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == True
        assert res_7.json()["message"] == "Dados obtidos com sucesso."
        assert res_7.json()["data"]["cpf"] == "41787776107"
        assert res_7.json()["data"]["nome"] == "Vicente Moraes"
        assert res_7.json()["data"]["nomeSocial"] is None
        assert res_7.json()["data"]["numeroNIS"] is None
        assert res_7.json()["data"]["rg"] == "167028352"
        assert res_7.json()["data"]["orgaoEmissor"] == "SEDS"
        assert res_7.json()["data"]["cpfResponsavel"] == "12111123521"
        assert res_7.json()["data"]["nomeMaeEstudante"] == "Sra. Mariana da Concei\\u00e7\\u00e3o"
        assert res_7.json()["data"]["numeroNISResponsavel"] == "41787776107"
        assert res_7.json()["data"]["dataNascimento"] == "1915-05-11"
        assert res_7.json()["data"]["logradouro"] == "329 Diane Ville Apt. 505\\nNorth Eric, DE 09011"
        assert res_7.json()["data"]["bairro"] == "Gutierrez"
        assert res_7.json()["data"]["numero"] == "220"
        assert res_7.json()["data"]["cep"] == "70360279"
        assert res_7.json()["data"]["municipio"] == 2704302.0
        assert res_7.json()["data"]["certidaoNascimento"] == "2005060"
        assert res_7.json()["data"]["cnh"] is None
        assert res_7.json()["data"]["uf"] == 27.0
        assert res_7.json()["data"]["racaCor"] == 1.0
        assert len(res_7.json()["data"]["tipoDeficiencia"]) == 3
        assert res_7.json()["data"]["tipoDeficiencia"][0] == 5.0
        assert res_7.json()["data"]["tipoDeficiencia"][1] == 9.0
        assert res_7.json()["data"]["tipoDeficiencia"][2] == 10.0
        assert res_7.json()["data"]["genero"] == 0.0
        assert res_7.json()["data"]["telefone"] is None
        assert res_7.json()["data"]["email"] == "da-matajoao@example.com"
        assert res_7.json()["data"]["situacaoCadastroValidado"] == 4.0
        assert len(res_7.json()["data"]["matriculas"]) == 1
        assert res_7.json()["data"]["matriculas"][0]["codigoMatriculaSgp"] == 1112496.0
        assert res_7.json()["data"]["matriculas"][0]["codInstituicao"] == 6.0
        assert res_7.json()["data"]["matriculas"][0]["dataInicioMatricula"] == "2024-03-03"
        assert res_7.json()["data"]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_7.json()["data"]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_7.json()["data"]["matriculas"][0]["situacaoMatricula"] == True
        assert res_7.json()["data"]["matriculas"][0]["serieAno"] == 2.0
        assert res_7.json()["data"]["matriculas"][0]["etapaEnsinoConsolidado"] == "Educação Infantil"
        assert res_7.json()["data"]["matriculas"][0]["matriculaRede"] is None
        assert res_7.json()["data"]["matriculas"][0]["deletadaEm"] is None
        assert res_7.json()["data"]["matriculas"][0]["inep"] == "27014088"
        assert res_7.json()["data"]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_7.json()["data"]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_7.json()["data"]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_7.json()["data"]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_7.json()["data"]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_7.json()["data"]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_7.json()["data"]["matriculas"][0]["estudanteIntegral"] is None
        assert res_7.json()["data"]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_7.json()["data"]["matriculas"][0]["anoMatricula"] is None
        assert len(res_7.json()["data"]["outrasMatriculas"]) == 0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/inep/{inep} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_8 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/41532074?situacao_matricula=INATIVAS",
                    headers=headers)
        
        assert res_8.status_code == 200
        assert "application/json" in res_8.headers["content-type"]
        assert res_8.json()["success"] == True
        assert res_8.json()["message"] == "Estudantes obtidos com sucesso."
        assert len(res_8.json()["data"]) == 0
        assert res_8.json()["pagination"]["total"] == 0.0
        assert res_8.json()["pagination"]["count"] == 0.0
        assert res_8.json()["pagination"]["per_page"] == 10.0
        assert res_8.json()["pagination"]["current_page"] == 1.0
        assert res_8.json()["pagination"]["total_pages"] == 1.0
        assert res_8.json()["pagination"]["links"]["previous"] is None
        assert res_8.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # 1 - (200) GET:/v1/profissionais/lote
    # 2 - (200) GET:/v1/profissionais
    # 3 - (200) GET:/v1/profissionais/inep/{inep}
    # 4 - (404) GET:/v1/profissionais/{cpf}
    # 5 - (200) GET:/v1/estudantes/lote/{id}
    # 6 - (400) GET:/v1/estudantes/lote/{id}
    # 7 - (422) POST:/v1/profissionais
    # 8 - (400) GET:/v1/profissionais/lote/{id}/erros
    # 9 - (200) PATCH:/v1/estudantes/lote
    # 10 - (200) GET:/v1/estudantes/lote
    # Found 15 potential faults of type-code 200
    # Using 2 examples:
    #   1
    #   2014
    @timeout_decorator.timeout(60)
    def test_55(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote?" + 
                    "page=929&" + 
                    "per_page=10",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_0.json()["data"]) == 0
        assert res_0.json()["pagination"]["total"] == 2389.0
        assert res_0.json()["pagination"]["count"] == 0.0
        assert res_0.json()["pagination"]["per_page"] == 10.0
        assert res_0.json()["pagination"]["current_page"] == 929.0
        assert res_0.json()["pagination"]["total_pages"] == 239.0
        assert res_0.json()["pagination"]["links"]["previous"] == 928.0
        assert res_0.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?" + 
                    "page=333&" + 
                    "per_page=96",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_1.json()["data"]) == 0
        assert res_1.json()["pagination"]["total"] == 3.0
        assert res_1.json()["pagination"]["count"] == 0.0
        assert res_1.json()["pagination"]["per_page"] == 96.0
        assert res_1.json()["pagination"]["current_page"] == 333.0
        assert res_1.json()["pagination"]["total_pages"] == 1.0
        assert res_1.json()["pagination"]["links"]["previous"] == 332.0
        assert res_1.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/inep/27014088",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_2.json()["data"]) == 3
        assert res_2.json()["data"][0]["tipoEnsinoMedio"] == 2.0
        assert res_2.json()["data"][0]["nivelEscolaridade"] == 10.0
        assert res_2.json()["data"][0]["cpf"] == "43839402000"
        assert res_2.json()["data"][0]["nome"] == "João da Silva 2"
        assert res_2.json()["data"][0]["dataNascimento"] == "1985-06-15"
        assert res_2.json()["data"][0]["genero"] == 1.0
        assert res_2.json()["data"][0]["racaCor"] == 2.0
        assert res_2.json()["data"][0]["email"] == "joao.silva@email.com"
        assert res_2.json()["data"][0]["telefone"] is None
        assert res_2.json()["data"][0]["nomeSocial"] is None
        assert res_2.json()["data"][0]["logradouro"] == "Rua das Flores"
        assert res_2.json()["data"][0]["bairro"] == "Centro"
        assert res_2.json()["data"][0]["numero"] == "123"
        assert res_2.json()["data"][0]["cep"] == "01001000"
        assert res_2.json()["data"][0]["municipio"] == 2700409.0
        assert res_2.json()["data"][0]["uf"] == 27.0
        assert res_2.json()["data"][0]["codigoInstituicao"] == 6.0
        assert res_2.json()["data"][0]["cargaHoraria"] == 40.0
        assert res_2.json()["data"][0]["situacaoAtiva"] == True
        assert res_2.json()["data"][0]["dataIngresso"] == "2015-02-10"
        assert res_2.json()["data"][0]["dataFim"] is None
        assert res_2.json()["data"][0]["codigoFuncao"] == 2.0
        assert res_2.json()["data"][0]["matriculaRede"] == "56789"
        assert res_2.json()["data"][0]["tipoVinculo"] == 0.0
        assert res_2.json()["data"][0]["inep"] == "27014088"
        assert len(res_2.json()["data"][0]["tipoDeficiencia"]) == 3
        assert res_2.json()["data"][0]["tipoDeficiencia"][0] == 1.0
        assert res_2.json()["data"][0]["tipoDeficiencia"][1] == 2.0
        assert res_2.json()["data"][0]["tipoDeficiencia"][2] == 3.0
        assert len(res_2.json()["data"][0]["formacoesAcademicas"]) == 2
        assert res_2.json()["data"][0]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_2.json()["data"][0]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_2.json()["data"][0]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_2.json()["data"][0]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_2.json()["data"][0]["formacoesAcademicas"][0]["principal"] is None
        assert res_2.json()["data"][0]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_2.json()["data"][0]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_2.json()["data"][0]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_2.json()["data"][0]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_2.json()["data"][0]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_2.json()["data"][0]["formacoesAcademicas"][1]["principal"] is None
        assert res_2.json()["data"][0]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_2.json()["data"][1]["tipoEnsinoMedio"] == 2.0
        assert res_2.json()["data"][1]["nivelEscolaridade"] == 10.0
        assert res_2.json()["data"][1]["cpf"] == "33722248094"
        assert res_2.json()["data"][1]["nome"] == "João da Silva 2"
        assert res_2.json()["data"][1]["dataNascimento"] == "1985-06-15"
        assert res_2.json()["data"][1]["genero"] == 1.0
        assert res_2.json()["data"][1]["racaCor"] == 2.0
        assert res_2.json()["data"][1]["email"] == "joao.silva@email.com"
        assert res_2.json()["data"][1]["telefone"] is None
        assert res_2.json()["data"][1]["nomeSocial"] is None
        assert res_2.json()["data"][1]["logradouro"] == "Rua das Flores"
        assert res_2.json()["data"][1]["bairro"] == "Centro"
        assert res_2.json()["data"][1]["numero"] == "123"
        assert res_2.json()["data"][1]["cep"] == "01001000"
        assert res_2.json()["data"][1]["municipio"] == 2700409.0
        assert res_2.json()["data"][1]["uf"] == 27.0
        assert res_2.json()["data"][1]["codigoInstituicao"] == 6.0
        assert res_2.json()["data"][1]["cargaHoraria"] == 40.0
        assert res_2.json()["data"][1]["situacaoAtiva"] == True
        assert res_2.json()["data"][1]["dataIngresso"] == "2015-02-10"
        assert res_2.json()["data"][1]["dataFim"] is None
        assert res_2.json()["data"][1]["codigoFuncao"] == 2.0
        assert res_2.json()["data"][1]["matriculaRede"] == "56789"
        assert res_2.json()["data"][1]["tipoVinculo"] == 0.0
        assert res_2.json()["data"][1]["inep"] == "27014088"
        assert len(res_2.json()["data"][1]["tipoDeficiencia"]) == 3
        assert res_2.json()["data"][1]["tipoDeficiencia"][0] == 1.0
        assert res_2.json()["data"][1]["tipoDeficiencia"][1] == 2.0
        assert res_2.json()["data"][1]["tipoDeficiencia"][2] == 3.0
        assert len(res_2.json()["data"][1]["formacoesAcademicas"]) == 2
        assert res_2.json()["data"][1]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_2.json()["data"][1]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_2.json()["data"][1]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_2.json()["data"][1]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_2.json()["data"][1]["formacoesAcademicas"][0]["principal"] is None
        assert res_2.json()["data"][1]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_2.json()["data"][1]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_2.json()["data"][1]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_2.json()["data"][1]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_2.json()["data"][1]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_2.json()["data"][1]["formacoesAcademicas"][1]["principal"] is None
        assert res_2.json()["data"][1]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_2.json()["data"][2]["tipoEnsinoMedio"] == 2.0
        assert res_2.json()["data"][2]["nivelEscolaridade"] == 10.0
        assert res_2.json()["data"][2]["cpf"] == "31863200037"
        assert res_2.json()["data"][2]["nome"] == "João da Silva 2"
        assert res_2.json()["data"][2]["dataNascimento"] == "1985-06-15"
        assert res_2.json()["data"][2]["genero"] == 1.0
        assert res_2.json()["data"][2]["racaCor"] == 2.0
        assert res_2.json()["data"][2]["email"] == "joao.silva@email.com"
        assert res_2.json()["data"][2]["telefone"] is None
        assert res_2.json()["data"][2]["nomeSocial"] is None
        assert res_2.json()["data"][2]["logradouro"] == "Rua das Flores"
        assert res_2.json()["data"][2]["bairro"] == "Centro"
        assert res_2.json()["data"][2]["numero"] == "123"
        assert res_2.json()["data"][2]["cep"] == "01001000"
        assert res_2.json()["data"][2]["municipio"] == 2700409.0
        assert res_2.json()["data"][2]["uf"] == 27.0
        assert res_2.json()["data"][2]["codigoInstituicao"] == 6.0
        assert res_2.json()["data"][2]["cargaHoraria"] == 40.0
        assert res_2.json()["data"][2]["situacaoAtiva"] == True
        assert res_2.json()["data"][2]["dataIngresso"] == "2015-02-10"
        assert res_2.json()["data"][2]["dataFim"] is None
        assert res_2.json()["data"][2]["codigoFuncao"] == 2.0
        assert res_2.json()["data"][2]["matriculaRede"] == "56789"
        assert res_2.json()["data"][2]["tipoVinculo"] == 0.0
        assert res_2.json()["data"][2]["inep"] == "27014088"
        assert len(res_2.json()["data"][2]["tipoDeficiencia"]) == 3
        assert res_2.json()["data"][2]["tipoDeficiencia"][0] == 1.0
        assert res_2.json()["data"][2]["tipoDeficiencia"][1] == 2.0
        assert res_2.json()["data"][2]["tipoDeficiencia"][2] == 3.0
        assert len(res_2.json()["data"][2]["formacoesAcademicas"]) == 2
        assert res_2.json()["data"][2]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_2.json()["data"][2]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_2.json()["data"][2]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_2.json()["data"][2]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_2.json()["data"][2]["formacoesAcademicas"][0]["principal"] is None
        assert res_2.json()["data"][2]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_2.json()["data"][2]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_2.json()["data"][2]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_2.json()["data"][2]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_2.json()["data"][2]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_2.json()["data"][2]["formacoesAcademicas"][1]["principal"] is None
        assert res_2.json()["data"][2]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_2.json()["pagination"]["total"] == 3.0
        assert res_2.json()["pagination"]["count"] == 3.0
        assert res_2.json()["pagination"]["per_page"] == 10.0
        assert res_2.json()["pagination"]["current_page"] == 1.0
        assert res_2.json()["pagination"]["total_pages"] == 1.0
        assert res_2.json()["pagination"]["links"]["previous"] is None
        assert res_2.json()["pagination"]["links"]["next"] is None
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/uT7",
                    headers=headers)
        
        assert res_3.status_code == 404
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "Nenhum profissional de educação encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/c641e92d-32f9-4ded-a42d-f3ca48283af3?" + 
                    "page=709&" + 
                    "incluir_objetos_processados=true",
                    headers=headers)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["status_processamento"] == "Enviado"
        assert res_4.json()["message"] == "Lote recuperado com sucesso. ID: c641e92d-32f9-4ded-a42d-f3ca48283af3"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Object instance has properties which are not allowed by the schema: ["success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/ui?" + 
                    "per_page=503&" + 
                    "incluir_objetos_processados=false",
                    headers=headers)
        
        assert res_5.status_code == 400
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "O ID fornecido não é um UUID válido. ID: ui"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"cpf\": \"kYPaBwH6SZw\", " + \
            " \"nome\": \"João da Silva 2\", " + \
            " \"dataNascimento\": \"LMBI\", " + \
            " \"racaCor\": 2, " + \
            " \"nomeSocial\": \"João da Silva 2\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 3, " + \
            " 3, " + \
            " 2, " + \
            " -2038665124 " + \
            " ], " + \
            " \"logradouro\": \"Rua das Flores\", " + \
            " \"numero\": \"tq\", " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"ANhW9jvnG\" " + \
            " }, " + \
            " { " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 6, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 1, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 325, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"XMoe6i\", " + \
            " \"anoInicioFormacaoAcademica\": 2016, " + \
            " \"anoConclusaoFormacaoAcademica\": 2021 " + \
            " } " + \
            " ], " + \
            " \"inep\": 263, " + \
            " \"tipoVinculo\": 706, " + \
            " \"dataIngresso\": \"1952-00-20\", " + \
            " \"dataFim\": \"2055-12-03\" " + \
            " } "
        headers['Accept'] = "application/json"
        res_6 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_6.status_code == 422
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == False
        assert res_6.json()["message"] == "O campo nivelEscolaridade deve estar entre 1 e 10."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id}/erros -> Response status 400 not defined for path '/v1/profissionais/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_7 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/27/erros?page=878",
                    headers=headers)
        
        assert res_7.status_code == 400
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == False
        assert res_7.json()["message"] == "O ID fornecido não é um UUID válido. ID: 27"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_22_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_23_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_8 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_8.status_code == 200
        assert "application/json" in res_8.headers["content-type"]
        assert res_8.json()["success"] == True
        assert res_8.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_8.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_9 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?per_page=260",
                    headers=headers)
        
        assert res_9.status_code == 200
        assert "application/json" in res_9.headers["content-type"]
        assert res_9.json()["success"] == True
        assert res_9.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_9.json()["data"]) == 260
        assert res_9.json()["data"][0]["dataEnvio"] == "2025-05-03 23:49:10"
        assert res_9.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_9.json()["data"][1]["dataEnvio"] == "2025-05-03 23:47:43"
        assert res_9.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_9.json()["data"][2]["dataEnvio"] == "2025-05-03 23:46:34"
        assert res_9.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 257 elements. This limit of 3 elements can be increased in the configurations
        assert res_9.json()["pagination"]["total"] == 9455.0
        assert res_9.json()["pagination"]["count"] == 260.0
        assert res_9.json()["pagination"]["per_page"] == 260.0
        assert res_9.json()["pagination"]["current_page"] == 1.0
        assert res_9.json()["pagination"]["total_pages"] == 37.0
        assert res_9.json()["pagination"]["links"]["previous"] is None
        assert res_9.json()["pagination"]["links"]["next"] == 2.0
    
    
    # Calls:
    # (200) GET:/v1/estudantes/solicitacoes-alteracoes
    # Found 75 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_56(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/3'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/4'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/5'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/6'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/7'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/8'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/9'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/10'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/11'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/12'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/13'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/14'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/15'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/16'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/17'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/18'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/19'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/20'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/21'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/22'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/23'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/24'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/25'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/26'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/27'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/28'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/29'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/30'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/31'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/32'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/33'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/34'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/35'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/36'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/37'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/38'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/39'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/40'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/41'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/42'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/43'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/44'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/45'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/46'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/47'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/48'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/49'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/50'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/51'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/52'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/53'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/54'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/55'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/56'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/57'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/58'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/59'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/60'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/61'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/62'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/63'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/64'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/65'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/66'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/67'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/68'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/69'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/70'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/71'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/solicitacoes-alteracoes?per_page=770",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        assert len(res_0.json()["data"]) == 72
        assert res_0.json()["data"][0]["cpfAtual"] == "13213485179"
        assert res_0.json()["data"][0]["cpfNovo"] == "13213485179"
        assert res_0.json()["data"][0]["situacaoCpf"] is None
        assert res_0.json()["data"][0]["descricaoSituacaoCpf"] is None
        assert res_0.json()["data"][0]["tipoSituacaoCpf"] is None
        assert res_0.json()["data"][0]["nomeAtual"] == "Audrey Roob"
        assert res_0.json()["data"][0]["nomeNovo"] == "nome certo"
        assert res_0.json()["data"][0]["nomeValidado"] is None
        assert res_0.json()["data"][0]["dataNascimentoAtual"] == "2024-12-28"
        assert res_0.json()["data"][0]["dataNascimentoNovo"] == "2024-12-28"
        assert res_0.json()["data"][0]["dataNascimentoValidada"] is None
        assert res_0.json()["data"][0]["nomeMaeEstudanteAtual"] == "Teresa Harris IV"
        assert res_0.json()["data"][0]["nomeMaeEstudanteNovo"] == "Teresa Harris IV"
        assert res_0.json()["data"][0]["nomeMaeEstudanteValidado"] is None
        assert res_0.json()["data"][0]["dataValidacaoCadastral"] is None
        assert res_0.json()["data"][1]["cpfAtual"] == "49255179888"
        assert res_0.json()["data"][1]["cpfNovo"] == "02742633359"
        assert res_0.json()["data"][1]["situacaoCpf"] is None
        assert res_0.json()["data"][1]["descricaoSituacaoCpf"] is None
        assert res_0.json()["data"][1]["tipoSituacaoCpf"] is None
        assert res_0.json()["data"][1]["nomeAtual"] == "111"
        assert res_0.json()["data"][1]["nomeNovo"] == "111"
        assert res_0.json()["data"][1]["nomeValidado"] is None
        assert res_0.json()["data"][1]["dataNascimentoAtual"] == "2024-12-28"
        assert res_0.json()["data"][1]["dataNascimentoNovo"] == "2024-12-28"
        assert res_0.json()["data"][1]["dataNascimentoValidada"] is None
        assert res_0.json()["data"][1]["nomeMaeEstudanteAtual"] == "Valentina Rezende"
        assert res_0.json()["data"][1]["nomeMaeEstudanteNovo"] == "Valentina Rezende"
        assert res_0.json()["data"][1]["nomeMaeEstudanteValidado"] is None
        assert res_0.json()["data"][1]["dataValidacaoCadastral"] is None
        assert res_0.json()["data"][2]["cpfAtual"] == "49255179888"
        assert res_0.json()["data"][2]["cpfNovo"] == "02742633359"
        assert res_0.json()["data"][2]["situacaoCpf"] is None
        assert res_0.json()["data"][2]["descricaoSituacaoCpf"] is None
        assert res_0.json()["data"][2]["tipoSituacaoCpf"] is None
        assert res_0.json()["data"][2]["nomeAtual"] == "111"
        assert res_0.json()["data"][2]["nomeNovo"] == "111"
        assert res_0.json()["data"][2]["nomeValidado"] is None
        assert res_0.json()["data"][2]["dataNascimentoAtual"] == "2024-12-28"
        assert res_0.json()["data"][2]["dataNascimentoNovo"] == "2024-12-28"
        assert res_0.json()["data"][2]["dataNascimentoValidada"] is None
        assert res_0.json()["data"][2]["nomeMaeEstudanteAtual"] == "Valentina Rezende"
        assert res_0.json()["data"][2]["nomeMaeEstudanteNovo"] == "Valentina Rezende"
        assert res_0.json()["data"][2]["nomeMaeEstudanteValidado"] is None
        assert res_0.json()["data"][2]["dataValidacaoCadastral"] is None
        # Skipping assertions on the remaining 69 elements. This limit of 3 elements can be increased in the configurations
        assert res_0.json()["pagination"]["total"] == 72.0
        assert res_0.json()["pagination"]["count"] == 72.0
        assert res_0.json()["pagination"]["per_page"] == 770.0
        assert res_0.json()["pagination"]["current_page"] == 1.0
        assert res_0.json()["pagination"]["total_pages"] == 1.0
        assert res_0.json()["pagination"]["links"]["previous"] is None
        assert res_0.json()["pagination"]["links"]["next"] is None
    
    
    # Calls:
    # (200) GET:/v1/profissionais/lote
    # Found 98 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_57(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/0/dataEnvio'] String "2025-05-03 23:45:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1/dataEnvio'] String "2025-05-03 23:45:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2/dataEnvio'] String "2025-05-03 23:44:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/3/dataEnvio'] String "2025-05-03 23:40:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/4/dataEnvio'] String "2025-05-03 23:39:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/5/dataEnvio'] String "2025-05-03 23:38:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/6/dataEnvio'] String "2025-05-03 23:36:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/7/dataEnvio'] String "2025-05-03 23:35:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/8/dataEnvio'] String "2025-05-03 23:33:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/9/dataEnvio'] String "2025-05-03 23:28:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/10/dataEnvio'] String "2025-05-03 23:28:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/11/dataEnvio'] String "2025-05-03 23:25:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/12/dataEnvio'] String "2025-05-03 23:23:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/13/dataEnvio'] String "2025-05-03 23:22:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/14/dataEnvio'] String "2025-05-03 23:21:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/15/dataEnvio'] String "2025-05-03 23:19:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/16/dataEnvio'] String "2025-05-03 23:19:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/17/dataEnvio'] String "2025-05-03 23:19:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/18/dataEnvio'] String "2025-05-03 23:18:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/19/dataEnvio'] String "2025-05-03 23:18:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/20/dataEnvio'] String "2025-05-03 23:11:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/21/dataEnvio'] String "2025-05-03 23:11:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/22/dataEnvio'] String "2025-05-03 23:11:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/23/dataEnvio'] String "2025-05-03 23:10:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/24/dataEnvio'] String "2025-05-03 23:05:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/25/dataEnvio'] String "2025-05-03 23:04:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/26/dataEnvio'] String "2025-05-03 23:03:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/27/dataEnvio'] String "2025-05-03 23:03:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/28/dataEnvio'] String "2025-05-03 23:01:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/29/dataEnvio'] String "2025-05-03 23:01:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/30/dataEnvio'] String "2025-05-03 22:59:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/31/dataEnvio'] String "2025-05-03 22:57:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/32/dataEnvio'] String "2025-05-03 22:53:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/33/dataEnvio'] String "2025-05-03 22:51:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/34/dataEnvio'] String "2025-05-03 22:50:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/35/dataEnvio'] String "2025-05-03 22:50:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/36/dataEnvio'] String "2025-05-03 22:49:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/37/dataEnvio'] String "2025-05-03 22:49:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/38/dataEnvio'] String "2025-05-03 22:48:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/39/dataEnvio'] String "2025-05-03 22:48:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/40/dataEnvio'] String "2025-05-03 22:47:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/41/dataEnvio'] String "2025-05-03 22:44:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/42/dataEnvio'] String "2025-05-03 22:42:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/43/dataEnvio'] String "2025-05-03 22:40:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/44/dataEnvio'] String "2025-05-03 22:38:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/45/dataEnvio'] String "2025-05-03 22:37:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/46/dataEnvio'] String "2025-05-03 22:36:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/47/dataEnvio'] String "2025-05-03 22:35:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/48/dataEnvio'] String "2025-05-03 22:34:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/49/dataEnvio'] String "2025-05-03 22:34:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/50/dataEnvio'] String "2025-05-03 22:33:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/51/dataEnvio'] String "2025-05-03 22:31:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/52/dataEnvio'] String "2025-05-03 22:30:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/53/dataEnvio'] String "2025-05-03 22:29:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/54/dataEnvio'] String "2025-05-03 22:28:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/55/dataEnvio'] String "2025-05-03 22:25:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/56/dataEnvio'] String "2025-05-03 22:24:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/57/dataEnvio'] String "2025-05-03 22:23:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/58/dataEnvio'] String "2025-05-03 22:23:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/59/dataEnvio'] String "2025-05-03 22:23:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/60/dataEnvio'] String "2025-05-03 22:23:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/61/dataEnvio'] String "2025-05-03 22:23:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/62/dataEnvio'] String "2025-05-03 22:23:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/63/dataEnvio'] String "2025-05-03 22:23:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/64/dataEnvio'] String "2025-05-03 22:23:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/65/dataEnvio'] String "2025-05-03 22:23:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/66/dataEnvio'] String "2025-05-03 22:22:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/67/dataEnvio'] String "2025-05-03 22:21:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/68/dataEnvio'] String "2025-05-03 22:21:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/69/dataEnvio'] String "2025-05-03 22:21:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/70/dataEnvio'] String "2025-05-03 22:21:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/71/dataEnvio'] String "2025-05-03 22:21:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/72/dataEnvio'] String "2025-05-03 22:20:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/73/dataEnvio'] String "2025-05-03 22:20:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/74/dataEnvio'] String "2025-05-03 22:20:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/75/dataEnvio'] String "2025-05-03 22:20:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/76/dataEnvio'] String "2025-05-03 22:20:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/77/dataEnvio'] String "2025-05-03 22:20:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/78/dataEnvio'] String "2025-05-03 22:20:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/79/dataEnvio'] String "2025-05-03 22:19:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/80/dataEnvio'] String "2025-05-03 22:19:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/81/dataEnvio'] String "2025-05-03 22:19:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/82/dataEnvio'] String "2025-05-03 22:19:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/83/dataEnvio'] String "2025-05-03 22:19:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/84/dataEnvio'] String "2025-05-03 22:19:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/85/dataEnvio'] String "2025-05-03 22:18:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/86/dataEnvio'] String "2025-05-03 22:18:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/87/dataEnvio'] String "2025-05-03 22:15:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/88/dataEnvio'] String "2025-05-03 22:15:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/89/dataEnvio'] String "2025-05-03 22:13:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/90/dataEnvio'] String "2025-05-03 22:12:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/91/dataEnvio'] String "2025-05-03 22:12:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/92/dataEnvio'] String "2025-05-03 22:11:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/93/dataEnvio'] String "2025-05-03 22:11:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/94/dataEnvio'] String "2025-05-03 22:11:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/95/dataEnvio'] String "2025-05-03 22:11:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote?per_page=96",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_0.json()["data"]) == 96
        assert res_0.json()["data"][0]["dataEnvio"] == "2025-05-03 23:45:41"
        assert res_0.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_0.json()["data"][1]["dataEnvio"] == "2025-05-03 23:45:09"
        assert res_0.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_0.json()["data"][2]["dataEnvio"] == "2025-05-03 23:44:33"
        assert res_0.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 93 elements. This limit of 3 elements can be increased in the configurations
        assert res_0.json()["pagination"]["total"] == 2389.0
        assert res_0.json()["pagination"]["count"] == 96.0
        assert res_0.json()["pagination"]["per_page"] == 96.0
        assert res_0.json()["pagination"]["current_page"] == 1.0
        assert res_0.json()["pagination"]["total_pages"] == 25.0
        assert res_0.json()["pagination"]["links"]["previous"] is None
        assert res_0.json()["pagination"]["links"]["next"] == 2.0
    
    
    # Calls:
    # 1 - (200) GET:/v1/estudantes/solicitacoes-alteracoes
    # 2 - (200) GET:/v1/profissionais/lote
    # 3 - (200) GET:/v1/profissionais/lote/{id}
    # 4 - (200) GET:/v1/estudantes/lote
    # Found 298 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_58(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/3'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/4'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/5'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/6'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/7'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/8'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/9'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/10'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/11'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/12'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/13'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/14'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/15'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/16'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/17'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/18'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/19'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/20'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/21'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/22'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/23'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/24'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/25'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/26'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/27'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/28'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/29'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/30'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/31'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/32'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/33'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/34'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/35'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/36'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/37'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/38'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/39'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/40'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/41'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/42'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/43'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/44'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/45'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/46'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/47'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/48'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/49'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/50'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/51'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/52'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/53'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/54'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/55'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/56'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/57'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/58'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/59'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/60'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/61'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/62'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/63'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/64'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/65'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/66'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/67'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/68'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/69'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/70'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/data/71'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/solicitacoes-alteracoes?per_page=260",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        assert len(res_0.json()["data"]) == 72
        assert res_0.json()["data"][0]["cpfAtual"] == "13213485179"
        assert res_0.json()["data"][0]["cpfNovo"] == "13213485179"
        assert res_0.json()["data"][0]["situacaoCpf"] is None
        assert res_0.json()["data"][0]["descricaoSituacaoCpf"] is None
        assert res_0.json()["data"][0]["tipoSituacaoCpf"] is None
        assert res_0.json()["data"][0]["nomeAtual"] == "Audrey Roob"
        assert res_0.json()["data"][0]["nomeNovo"] == "nome certo"
        assert res_0.json()["data"][0]["nomeValidado"] is None
        assert res_0.json()["data"][0]["dataNascimentoAtual"] == "2024-12-28"
        assert res_0.json()["data"][0]["dataNascimentoNovo"] == "2024-12-28"
        assert res_0.json()["data"][0]["dataNascimentoValidada"] is None
        assert res_0.json()["data"][0]["nomeMaeEstudanteAtual"] == "Teresa Harris IV"
        assert res_0.json()["data"][0]["nomeMaeEstudanteNovo"] == "Teresa Harris IV"
        assert res_0.json()["data"][0]["nomeMaeEstudanteValidado"] is None
        assert res_0.json()["data"][0]["dataValidacaoCadastral"] is None
        assert res_0.json()["data"][1]["cpfAtual"] == "49255179888"
        assert res_0.json()["data"][1]["cpfNovo"] == "02742633359"
        assert res_0.json()["data"][1]["situacaoCpf"] is None
        assert res_0.json()["data"][1]["descricaoSituacaoCpf"] is None
        assert res_0.json()["data"][1]["tipoSituacaoCpf"] is None
        assert res_0.json()["data"][1]["nomeAtual"] == "111"
        assert res_0.json()["data"][1]["nomeNovo"] == "111"
        assert res_0.json()["data"][1]["nomeValidado"] is None
        assert res_0.json()["data"][1]["dataNascimentoAtual"] == "2024-12-28"
        assert res_0.json()["data"][1]["dataNascimentoNovo"] == "2024-12-28"
        assert res_0.json()["data"][1]["dataNascimentoValidada"] is None
        assert res_0.json()["data"][1]["nomeMaeEstudanteAtual"] == "Valentina Rezende"
        assert res_0.json()["data"][1]["nomeMaeEstudanteNovo"] == "Valentina Rezende"
        assert res_0.json()["data"][1]["nomeMaeEstudanteValidado"] is None
        assert res_0.json()["data"][1]["dataValidacaoCadastral"] is None
        assert res_0.json()["data"][2]["cpfAtual"] == "49255179888"
        assert res_0.json()["data"][2]["cpfNovo"] == "02742633359"
        assert res_0.json()["data"][2]["situacaoCpf"] is None
        assert res_0.json()["data"][2]["descricaoSituacaoCpf"] is None
        assert res_0.json()["data"][2]["tipoSituacaoCpf"] is None
        assert res_0.json()["data"][2]["nomeAtual"] == "111"
        assert res_0.json()["data"][2]["nomeNovo"] == "111"
        assert res_0.json()["data"][2]["nomeValidado"] is None
        assert res_0.json()["data"][2]["dataNascimentoAtual"] == "2024-12-28"
        assert res_0.json()["data"][2]["dataNascimentoNovo"] == "2024-12-28"
        assert res_0.json()["data"][2]["dataNascimentoValidada"] is None
        assert res_0.json()["data"][2]["nomeMaeEstudanteAtual"] == "Valentina Rezende"
        assert res_0.json()["data"][2]["nomeMaeEstudanteNovo"] == "Valentina Rezende"
        assert res_0.json()["data"][2]["nomeMaeEstudanteValidado"] is None
        assert res_0.json()["data"][2]["dataValidacaoCadastral"] is None
        # Skipping assertions on the remaining 69 elements. This limit of 3 elements can be increased in the configurations
        assert res_0.json()["pagination"]["total"] == 72.0
        assert res_0.json()["pagination"]["count"] == 72.0
        assert res_0.json()["pagination"]["per_page"] == 260.0
        assert res_0.json()["pagination"]["current_page"] == 1.0
        assert res_0.json()["pagination"]["total_pages"] == 1.0
        assert res_0.json()["pagination"]["links"]["previous"] is None
        assert res_0.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/0/dataEnvio'] String "2025-05-03 23:45:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1/dataEnvio'] String "2025-05-03 23:44:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2/dataEnvio'] String "2025-05-03 23:40:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/3/dataEnvio'] String "2025-05-03 23:39:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/4/dataEnvio'] String "2025-05-03 23:38:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/5/dataEnvio'] String "2025-05-03 23:36:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/6/dataEnvio'] String "2025-05-03 23:35:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/7/dataEnvio'] String "2025-05-03 23:33:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/8/dataEnvio'] String "2025-05-03 23:28:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/9/dataEnvio'] String "2025-05-03 23:28:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/10/dataEnvio'] String "2025-05-03 23:25:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/11/dataEnvio'] String "2025-05-03 23:23:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/12/dataEnvio'] String "2025-05-03 23:22:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/13/dataEnvio'] String "2025-05-03 23:21:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/14/dataEnvio'] String "2025-05-03 23:19:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/15/dataEnvio'] String "2025-05-03 23:19:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/16/dataEnvio'] String "2025-05-03 23:19:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/17/dataEnvio'] String "2025-05-03 23:18:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/18/dataEnvio'] String "2025-05-03 23:18:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/19/dataEnvio'] String "2025-05-03 23:11:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/20/dataEnvio'] String "2025-05-03 23:11:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/21/dataEnvio'] String "2025-05-03 23:11:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/22/dataEnvio'] String "2025-05-03 23:10:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/23/dataEnvio'] String "2025-05-03 23:05:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/24/dataEnvio'] String "2025-05-03 23:04:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/25/dataEnvio'] String "2025-05-03 23:03:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/26/dataEnvio'] String "2025-05-03 23:03:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/27/dataEnvio'] String "2025-05-03 23:01:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/28/dataEnvio'] String "2025-05-03 23:01:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/29/dataEnvio'] String "2025-05-03 22:59:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/30/dataEnvio'] String "2025-05-03 22:57:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/31/dataEnvio'] String "2025-05-03 22:53:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/32/dataEnvio'] String "2025-05-03 22:51:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/33/dataEnvio'] String "2025-05-03 22:50:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/34/dataEnvio'] String "2025-05-03 22:50:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/35/dataEnvio'] String "2025-05-03 22:49:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/36/dataEnvio'] String "2025-05-03 22:49:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/37/dataEnvio'] String "2025-05-03 22:48:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/38/dataEnvio'] String "2025-05-03 22:48:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/39/dataEnvio'] String "2025-05-03 22:47:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/40/dataEnvio'] String "2025-05-03 22:44:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/41/dataEnvio'] String "2025-05-03 22:42:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/42/dataEnvio'] String "2025-05-03 22:40:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/43/dataEnvio'] String "2025-05-03 22:38:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/44/dataEnvio'] String "2025-05-03 22:37:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/45/dataEnvio'] String "2025-05-03 22:36:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/46/dataEnvio'] String "2025-05-03 22:35:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/47/dataEnvio'] String "2025-05-03 22:34:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/48/dataEnvio'] String "2025-05-03 22:34:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/49/dataEnvio'] String "2025-05-03 22:33:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/50/dataEnvio'] String "2025-05-03 22:31:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/51/dataEnvio'] String "2025-05-03 22:30:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/52/dataEnvio'] String "2025-05-03 22:29:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/53/dataEnvio'] String "2025-05-03 22:28:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/54/dataEnvio'] String "2025-05-03 22:25:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/55/dataEnvio'] String "2025-05-03 22:24:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/56/dataEnvio'] String "2025-05-03 22:23:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/57/dataEnvio'] String "2025-05-03 22:23:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/58/dataEnvio'] String "2025-05-03 22:23:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/59/dataEnvio'] String "2025-05-03 22:23:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/60/dataEnvio'] String "2025-05-03 22:23:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/61/dataEnvio'] String "2025-05-03 22:23:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/62/dataEnvio'] String "2025-05-03 22:23:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/63/dataEnvio'] String "2025-05-03 22:23:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/64/dataEnvio'] String "2025-05-03 22:23:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/65/dataEnvio'] String "2025-05-03 22:22:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/66/dataEnvio'] String "2025-05-03 22:21:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/67/dataEnvio'] String "2025-05-03 22:21:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/68/dataEnvio'] String "2025-05-03 22:21:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/69/dataEnvio'] String "2025-05-03 22:21:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/70/dataEnvio'] String "2025-05-03 22:21:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/71/dataEnvio'] String "2025-05-03 22:20:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/72/dataEnvio'] String "2025-05-03 22:20:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/73/dataEnvio'] String "2025-05-03 22:20:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/74/dataEnvio'] String "2025-05-03 22:20:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/75/dataEnvio'] String "2025-05-03 22:20:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/76/dataEnvio'] String "2025-05-03 22:20:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/77/dataEnvio'] String "2025-05-03 22:20:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/78/dataEnvio'] String "2025-05-03 22:19:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/79/dataEnvio'] String "2025-05-03 22:19:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/80/dataEnvio'] String "2025-05-03 22:19:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/81/dataEnvio'] String "2025-05-03 22:19:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/82/dataEnvio'] String "2025-05-03 22:19:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/83/dataEnvio'] String "2025-05-03 22:19:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/84/dataEnvio'] String "2025-05-03 22:18:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/85/dataEnvio'] String "2025-05-03 22:18:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/86/dataEnvio'] String "2025-05-03 22:15:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/87/dataEnvio'] String "2025-05-03 22:15:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/88/dataEnvio'] String "2025-05-03 22:13:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/89/dataEnvio'] String "2025-05-03 22:12:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/90/dataEnvio'] String "2025-05-03 22:12:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/91/dataEnvio'] String "2025-05-03 22:11:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/92/dataEnvio'] String "2025-05-03 22:11:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/93/dataEnvio'] String "2025-05-03 22:11:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/94/dataEnvio'] String "2025-05-03 22:11:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/95/dataEnvio'] String "2025-05-03 22:11:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/96/dataEnvio'] String "2025-05-03 22:10:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/97/dataEnvio'] String "2025-05-03 22:10:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/98/dataEnvio'] String "2025-05-03 22:10:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/99/dataEnvio'] String "2025-05-03 22:09:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/100/dataEnvio'] String "2025-05-03 22:09:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/101/dataEnvio'] String "2025-05-03 22:06:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/102/dataEnvio'] String "2025-05-03 22:05:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/103/dataEnvio'] String "2025-05-03 22:04:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/104/dataEnvio'] String "2025-05-03 22:04:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/105/dataEnvio'] String "2025-05-03 22:04:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/106/dataEnvio'] String "2025-05-03 22:04:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/107/dataEnvio'] String "2025-05-03 22:04:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/108/dataEnvio'] String "2025-05-03 22:04:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/109/dataEnvio'] String "2025-05-03 22:04:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/110/dataEnvio'] String "2025-05-03 22:03:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/111/dataEnvio'] String "2025-05-03 22:03:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/112/dataEnvio'] String "2025-05-03 22:03:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/113/dataEnvio'] String "2025-05-03 22:02:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/114/dataEnvio'] String "2025-05-03 22:01:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/115/dataEnvio'] String "2025-05-03 22:00:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/116/dataEnvio'] String "2025-05-03 21:59:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/117/dataEnvio'] String "2025-05-03 21:59:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/118/dataEnvio'] String "2025-05-03 21:59:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/119/dataEnvio'] String "2025-05-03 21:58:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/120/dataEnvio'] String "2025-05-03 21:57:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/121/dataEnvio'] String "2025-05-03 21:57:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/122/dataEnvio'] String "2025-05-03 21:56:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/123/dataEnvio'] String "2025-05-03 21:56:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/124/dataEnvio'] String "2025-05-03 21:56:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/125/dataEnvio'] String "2025-05-03 21:56:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/126/dataEnvio'] String "2025-05-03 21:56:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/127/dataEnvio'] String "2025-05-03 21:55:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/128/dataEnvio'] String "2025-05-03 21:55:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/129/dataEnvio'] String "2025-05-03 21:55:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/130/dataEnvio'] String "2025-05-03 21:55:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/131/dataEnvio'] String "2025-05-03 21:55:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/132/dataEnvio'] String "2025-05-03 21:55:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/133/dataEnvio'] String "2025-05-03 21:55:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/134/dataEnvio'] String "2025-05-03 21:55:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/135/dataEnvio'] String "2025-05-03 21:55:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/136/dataEnvio'] String "2025-05-03 21:55:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/137/dataEnvio'] String "2025-05-03 21:54:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/138/dataEnvio'] String "2025-05-03 21:54:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/139/dataEnvio'] String "2025-05-03 21:54:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/140/dataEnvio'] String "2025-05-03 21:54:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/141/dataEnvio'] String "2025-05-03 21:54:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/142/dataEnvio'] String "2025-05-03 21:54:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/143/dataEnvio'] String "2025-05-03 21:53:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/144/dataEnvio'] String "2025-05-03 21:53:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/145/dataEnvio'] String "2025-05-03 21:53:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/146/dataEnvio'] String "2025-05-03 21:53:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/147/dataEnvio'] String "2025-05-03 21:53:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/148/dataEnvio'] String "2025-05-03 21:52:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/149/dataEnvio'] String "2025-05-03 21:52:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/150/dataEnvio'] String "2025-05-03 21:51:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/151/dataEnvio'] String "2025-05-03 21:51:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/152/dataEnvio'] String "2025-05-03 21:51:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/153/dataEnvio'] String "2025-05-03 21:51:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/154/dataEnvio'] String "2025-05-03 21:51:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/155/dataEnvio'] String "2025-05-03 21:50:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/156/dataEnvio'] String "2025-05-03 21:49:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/157/dataEnvio'] String "2025-05-03 21:49:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/158/dataEnvio'] String "2025-05-03 21:49:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/159/dataEnvio'] String "2025-05-03 21:48:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/160/dataEnvio'] String "2025-05-03 21:46:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/161/dataEnvio'] String "2025-05-03 21:44:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/162/dataEnvio'] String "2025-05-03 21:43:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/163/dataEnvio'] String "2025-05-03 21:43:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/164/dataEnvio'] String "2025-05-03 21:42:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/165/dataEnvio'] String "2025-05-03 21:41:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/166/dataEnvio'] String "2025-05-03 21:40:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/167/dataEnvio'] String "2025-05-03 21:38:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/168/dataEnvio'] String "2025-05-03 21:38:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/169/dataEnvio'] String "2025-05-03 21:37:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/170/dataEnvio'] String "2025-05-03 21:37:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/171/dataEnvio'] String "2025-05-03 21:34:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/172/dataEnvio'] String "2025-05-03 21:28:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/173/dataEnvio'] String "2025-05-03 21:28:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/174/dataEnvio'] String "2025-05-03 21:25:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/175/dataEnvio'] String "2025-05-03 21:24:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/176/dataEnvio'] String "2025-05-03 21:24:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/177/dataEnvio'] String "2025-05-03 21:23:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/178/dataEnvio'] String "2025-05-03 21:23:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/179/dataEnvio'] String "2025-05-03 21:21:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/180/dataEnvio'] String "2025-05-03 21:20:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/181/dataEnvio'] String "2025-05-03 21:16:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/182/dataEnvio'] String "2025-05-03 21:16:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/183/dataEnvio'] String "2025-05-03 21:11:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/184/dataEnvio'] String "2025-05-03 21:11:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/185/dataEnvio'] String "2025-05-03 21:09:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/186/dataEnvio'] String "2025-05-03 21:09:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/187/dataEnvio'] String "2025-05-03 21:09:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/188/dataEnvio'] String "2025-05-03 21:06:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/189/dataEnvio'] String "2025-05-03 21:05:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/190/dataEnvio'] String "2025-05-03 21:05:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/191/dataEnvio'] String "2025-05-03 21:03:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/192/dataEnvio'] String "2025-05-03 21:03:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/193/dataEnvio'] String "2025-05-03 21:01:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/194/dataEnvio'] String "2025-05-03 20:59:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/195/dataEnvio'] String "2025-05-03 20:56:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/196/dataEnvio'] String "2025-05-03 20:55:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/197/dataEnvio'] String "2025-05-03 20:54:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/198/dataEnvio'] String "2025-05-03 20:54:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/199/dataEnvio'] String "2025-05-03 20:54:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/200/dataEnvio'] String "2025-05-03 20:52:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/201/dataEnvio'] String "2025-05-03 20:52:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/202/dataEnvio'] String "2025-05-03 20:51:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/203/dataEnvio'] String "2025-05-03 20:50:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/204/dataEnvio'] String "2025-05-03 20:50:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/205/dataEnvio'] String "2025-05-03 20:49:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/206/dataEnvio'] String "2025-05-03 20:47:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/207/dataEnvio'] String "2025-05-03 20:45:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/208/dataEnvio'] String "2025-05-03 20:42:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/209/dataEnvio'] String "2025-05-03 20:42:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/210/dataEnvio'] String "2025-05-03 20:41:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/211/dataEnvio'] String "2025-05-03 20:41:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/212/dataEnvio'] String "2025-05-03 20:40:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/213/dataEnvio'] String "2025-05-03 20:40:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/214/dataEnvio'] String "2025-05-03 20:38:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/215/dataEnvio'] String "2025-05-03 20:35:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/216/dataEnvio'] String "2025-05-03 20:30:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote?per_page=217",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_1.json()["data"]) == 217
        assert res_1.json()["data"][0]["dataEnvio"] == "2025-05-03 23:45:09"
        assert res_1.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_1.json()["data"][1]["dataEnvio"] == "2025-05-03 23:44:33"
        assert res_1.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_1.json()["data"][2]["dataEnvio"] == "2025-05-03 23:40:05"
        assert res_1.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 214 elements. This limit of 3 elements can be increased in the configurations
        assert res_1.json()["pagination"]["total"] == 2388.0
        assert res_1.json()["pagination"]["count"] == 217.0
        assert res_1.json()["pagination"]["per_page"] == 217.0
        assert res_1.json()["pagination"]["current_page"] == 1.0
        assert res_1.json()["pagination"]["total_pages"] == 12.0
        assert res_1.json()["pagination"]["links"]["previous"] is None
        assert res_1.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id} -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/5648f0f3-8ac6-4da0-9076-4fae16a3edda?incluir_objetos_processados=false",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["status_processamento"] == "Enviado"
        assert res_2.json()["message"] == "Lote recuperado com sucesso. ID: 5648f0f3-8ac6-4da0-9076-4fae16a3edda"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?per_page=892",
                    headers=headers)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_3.json()["data"]) == 892
        assert res_3.json()["data"][0]["dataEnvio"] == "2025-05-03 23:44:52"
        assert res_3.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_3.json()["data"][1]["dataEnvio"] == "2025-05-03 23:43:36"
        assert res_3.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_3.json()["data"][2]["dataEnvio"] == "2025-05-03 23:43:20"
        assert res_3.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 889 elements. This limit of 3 elements can be increased in the configurations
        assert res_3.json()["pagination"]["total"] == 9450.0
        assert res_3.json()["pagination"]["count"] == 892.0
        assert res_3.json()["pagination"]["per_page"] == 892.0
        assert res_3.json()["pagination"]["current_page"] == 1.0
        assert res_3.json()["pagination"]["total_pages"] == 11.0
        assert res_3.json()["pagination"]["links"]["previous"] is None
        assert res_3.json()["pagination"]["links"]["next"] == 2.0
    
    
    # Calls:
    # 1 - (200) GET:/v1/estudantes/inep/{inep}
    # 2 - (404) GET:/v1/profissionais/{cpf}
    # 3 - (404) GET:/v1/profissionais/{cpf}
    # 4 - (200) GET:/v1/estudantes/validacao-cadastro
    # 5 - (422) POST:/v1/profissionais
    # Found 340 potential faults of type-code 200
    # Using 1 example:
    #   2024
    @timeout_decorator.timeout(60)
    def test_59(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/inep/{inep} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/32026846?ano_matricula=2024",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Estudantes obtidos com sucesso."
        assert len(res_0.json()["data"]) == 10
        assert res_0.json()["data"][0]["cpf"] == "68246248707"
        assert res_0.json()["data"][0]["nome"] == "Agostinho Joaquin Branco Neto"
        assert res_0.json()["data"][0]["nomeSocial"] is None
        assert res_0.json()["data"][0]["numeroNIS"] == "20717611838"
        assert res_0.json()["data"][0]["rg"] == "6707739419938446"
        assert res_0.json()["data"][0]["orgaoEmissor"] == "SSP-SP"
        assert res_0.json()["data"][0]["cpfResponsavel"] == "49919585203"
        assert res_0.json()["data"][0]["nomeMaeEstudante"] == "Luzia Louise Ferreira Jr."
        assert res_0.json()["data"][0]["numeroNISResponsavel"] == "06497498803"
        assert res_0.json()["data"][0]["dataNascimento"] == "2009-01-16"
        assert res_0.json()["data"][0]["logradouro"] == "Rua R. Marinho"
        assert res_0.json()["data"][0]["bairro"] == "São Pontes"
        assert res_0.json()["data"][0]["numero"] == "5411"
        assert res_0.json()["data"][0]["cep"] == "80161556"
        assert res_0.json()["data"][0]["municipio"] == 3550308.0
        assert res_0.json()["data"][0]["certidaoNascimento"] == "50160074966020098054524894724141"
        assert res_0.json()["data"][0]["cnh"] is None
        assert res_0.json()["data"][0]["uf"] == 35.0
        assert res_0.json()["data"][0]["racaCor"] == 3.0
        assert len(res_0.json()["data"][0]["tipoDeficiencia"]) == 0
        assert res_0.json()["data"][0]["genero"] == 3.0
        assert res_0.json()["data"][0]["telefone"] is None
        assert res_0.json()["data"][0]["email"] == "agostinho.joaquin.branco.neto@fake.com"
        assert res_0.json()["data"][0]["situacaoCadastroValidado"] is None
        assert len(res_0.json()["data"][0]["matriculas"]) == 1
        assert res_0.json()["data"][0]["matriculas"][0]["codigoMatriculaSgp"] == 7800354.0
        assert res_0.json()["data"][0]["matriculas"][0]["codInstituicao"] == 132879.0
        assert res_0.json()["data"][0]["matriculas"][0]["dataInicioMatricula"] == "2024-01-01"
        assert res_0.json()["data"][0]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_0.json()["data"][0]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["situacaoMatricula"] == True
        assert res_0.json()["data"][0]["matriculas"][0]["serieAno"] == 26.0
        assert res_0.json()["data"][0]["matriculas"][0]["etapaEnsinoConsolidado"] == "Ensino Médio"
        assert res_0.json()["data"][0]["matriculas"][0]["matriculaRede"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["deletadaEm"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["inep"] == "32026846"
        assert res_0.json()["data"][0]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["estudanteIntegral"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["anoMatricula"] is None
        assert len(res_0.json()["data"][0]["outrasMatriculas"]) == 0
        assert res_0.json()["data"][1]["cpf"] == "46881528337"
        assert res_0.json()["data"][1]["nome"] == "Alan Jácomo Velasques Jr."
        assert res_0.json()["data"][1]["nomeSocial"] is None
        assert res_0.json()["data"][1]["numeroNIS"] == "93598492577"
        assert res_0.json()["data"][1]["rg"] == "3033368089584138"
        assert res_0.json()["data"][1]["orgaoEmissor"] == "SSP-SP"
        assert res_0.json()["data"][1]["cpfResponsavel"] == "28283660659"
        assert res_0.json()["data"][1]["nomeMaeEstudante"] == "Cristiana Urias"
        assert res_0.json()["data"][1]["numeroNISResponsavel"] == "59253676517"
        assert res_0.json()["data"][1]["dataNascimento"] == "2006-02-13"
        assert res_0.json()["data"][1]["logradouro"] == "Rua Rua Maximiano"
        assert res_0.json()["data"][1]["bairro"] == "São Delvalle"
        assert res_0.json()["data"][1]["numero"] == "65753"
        assert res_0.json()["data"][1]["cep"] == "26728316"
        assert res_0.json()["data"][1]["municipio"] == 3550308.0
        assert res_0.json()["data"][1]["certidaoNascimento"] == "57448402392328057167235231173882"
        assert res_0.json()["data"][1]["cnh"] is None
        assert res_0.json()["data"][1]["uf"] == 35.0
        assert res_0.json()["data"][1]["racaCor"] == 3.0
        assert len(res_0.json()["data"][1]["tipoDeficiencia"]) == 0
        assert res_0.json()["data"][1]["genero"] == 0.0
        assert res_0.json()["data"][1]["telefone"] is None
        assert res_0.json()["data"][1]["email"] == "alan.jacomo.velasques.jr@fake.com"
        assert res_0.json()["data"][1]["situacaoCadastroValidado"] is None
        assert len(res_0.json()["data"][1]["matriculas"]) == 1
        assert res_0.json()["data"][1]["matriculas"][0]["codigoMatriculaSgp"] == 7801582.0
        assert res_0.json()["data"][1]["matriculas"][0]["codInstituicao"] == 132879.0
        assert res_0.json()["data"][1]["matriculas"][0]["dataInicioMatricula"] == "2024-01-01"
        assert res_0.json()["data"][1]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_0.json()["data"][1]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["situacaoMatricula"] == True
        assert res_0.json()["data"][1]["matriculas"][0]["serieAno"] == 26.0
        assert res_0.json()["data"][1]["matriculas"][0]["etapaEnsinoConsolidado"] == "Ensino Médio"
        assert res_0.json()["data"][1]["matriculas"][0]["matriculaRede"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["deletadaEm"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["inep"] == "32026846"
        assert res_0.json()["data"][1]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["estudanteIntegral"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["anoMatricula"] is None
        assert len(res_0.json()["data"][1]["outrasMatriculas"]) == 0
        assert res_0.json()["data"][2]["cpf"] == "53783084962"
        assert res_0.json()["data"][2]["nome"] == "Alessandra Azevedo Jr."
        assert res_0.json()["data"][2]["nomeSocial"] is None
        assert res_0.json()["data"][2]["numeroNIS"] == "78061841770"
        assert res_0.json()["data"][2]["rg"] == "6416825505525841"
        assert res_0.json()["data"][2]["orgaoEmissor"] == "SSP-SP"
        assert res_0.json()["data"][2]["cpfResponsavel"] == "16418429702"
        assert res_0.json()["data"][2]["nomeMaeEstudante"] == "Melissa Montenegro Filho"
        assert res_0.json()["data"][2]["numeroNISResponsavel"] == "63202341605"
        assert res_0.json()["data"][2]["dataNascimento"] == "2008-04-10"
        assert res_0.json()["data"][2]["logradouro"] == "Rua Avenida Medina"
        assert res_0.json()["data"][2]["bairro"] == "São Montenegro"
        assert res_0.json()["data"][2]["numero"] == "7"
        assert res_0.json()["data"][2]["cep"] == "16752285"
        assert res_0.json()["data"][2]["municipio"] == 3550308.0
        assert res_0.json()["data"][2]["certidaoNascimento"] == "95952779632151278953586432450570"
        assert res_0.json()["data"][2]["cnh"] is None
        assert res_0.json()["data"][2]["uf"] == 35.0
        assert res_0.json()["data"][2]["racaCor"] == 5.0
        assert len(res_0.json()["data"][2]["tipoDeficiencia"]) == 0
        assert res_0.json()["data"][2]["genero"] == 0.0
        assert res_0.json()["data"][2]["telefone"] is None
        assert res_0.json()["data"][2]["email"] == "alessandra.azevedo.jr@fake.com"
        assert res_0.json()["data"][2]["situacaoCadastroValidado"] is None
        assert len(res_0.json()["data"][2]["matriculas"]) == 1
        assert res_0.json()["data"][2]["matriculas"][0]["codigoMatriculaSgp"] == 7800517.0
        assert res_0.json()["data"][2]["matriculas"][0]["codInstituicao"] == 132879.0
        assert res_0.json()["data"][2]["matriculas"][0]["dataInicioMatricula"] == "2024-01-01"
        assert res_0.json()["data"][2]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_0.json()["data"][2]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["situacaoMatricula"] == True
        assert res_0.json()["data"][2]["matriculas"][0]["serieAno"] == 45.0
        assert res_0.json()["data"][2]["matriculas"][0]["etapaEnsinoConsolidado"] == "EJA - Ensino Médio"
        assert res_0.json()["data"][2]["matriculas"][0]["matriculaRede"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["deletadaEm"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["inep"] == "32026846"
        assert res_0.json()["data"][2]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["estudanteAnoPeriodo"] == 1.0
        assert res_0.json()["data"][2]["matriculas"][0]["estudanteIntegral"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["anoMatricula"] is None
        assert len(res_0.json()["data"][2]["outrasMatriculas"]) == 0
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_0.json()["pagination"]["total"] == 500.0
        assert res_0.json()["pagination"]["count"] == 10.0
        assert res_0.json()["pagination"]["per_page"] == 10.0
        assert res_0.json()["pagination"]["current_page"] == 1.0
        assert res_0.json()["pagination"]["total_pages"] == 50.0
        assert res_0.json()["pagination"]["links"]["previous"] is None
        assert res_0.json()["pagination"]["links"]["next"] == 2.0
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/47486521440",
                    headers=headers)
        
        assert res_1.status_code == 404
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Nenhum profissional de educação encontrado."
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/74482876801",
                    headers=headers)
        
        assert res_2.status_code == 404
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Nenhum profissional de educação encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/3'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/4'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/5'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/6'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/7'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/8'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/9'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/10'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/11'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/12'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/13'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/14'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/15'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/16'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/17'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/18'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/19'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/20'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/21'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/22'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/23'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/24'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/25'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/26'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/27'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/28'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/29'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/30'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/31'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/32'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/33'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/34'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/35'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/36'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/37'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/38'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/39'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/40'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/41'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/42'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/43'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/44'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/45'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/46'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/47'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/48'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/49'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/50'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/51'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/52'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/53'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/54'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/55'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/56'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/57'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/58'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/59'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/60'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/61'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/62'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/63'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/64'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/65'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/66'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/67'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/68'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/69'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/70'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/71'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/72'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/73'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/74'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/75'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/76'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/77'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/78'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/79'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/80'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/81'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/82'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/83'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/84'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/85'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/86'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/87'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/88'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/89'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/90'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/91'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/92'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/93'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/94'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/95'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/96'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/97'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/98'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/99'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/100'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/101'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/102'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/103'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/104'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/105'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/106'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/107'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/108'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/109'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/110'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/111'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/112'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/113'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/114'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/115'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/116'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/117'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/118'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/119'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/120'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/121'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/122'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/123'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/124'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/125'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/126'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/127'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/128'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/129'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/130'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/131'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/132'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/133'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/134'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/135'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/136'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/137'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/138'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/139'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/140'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/141'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/142'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/143'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/144'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/145'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/146'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/147'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/148'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/149'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/150'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/151'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/152'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/153'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/154'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/155'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/156'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/157'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/158'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/159'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/160'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/161'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/162'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/163'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/164'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/165'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/166'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/167'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/168'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/169'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/170'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/171'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/172'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/173'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/174'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/175'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/176'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/177'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/178'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/179'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/180'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/181'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/182'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/183'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/184'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/185'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/186'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/187'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/188'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/189'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/190'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/191'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/192'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/193'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/194'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/195'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/196'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/197'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/198'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/199'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/200'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/201'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/202'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/203'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/204'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/205'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/206'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/207'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/208'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/209'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/210'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/211'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/212'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/213'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/214'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/215'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/216'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/217'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/218'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/219'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/220'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/221'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/222'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/223'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/224'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/225'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/226'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/227'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/228'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/229'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/230'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/231'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/232'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/233'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/234'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/235'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/236'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/237'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/238'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/239'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/240'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/241'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/242'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/243'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/244'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/245'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/246'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/247'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/248'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/249'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/250'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/251'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/252'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/253'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/254'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/255'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/256'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/257'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/258'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/259'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/260'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/261'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/262'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/263'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/264'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/265'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/266'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/267'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/268'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/269'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/270'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/271'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/272'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/273'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/274'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/275'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/276'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/277'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/278'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/279'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/280'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/281'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/282'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/283'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/284'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/285'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/286'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/287'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/288'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/289'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/290'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/291'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/292'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/293'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/294'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/295'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/296'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/297'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/298'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/299'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/300'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/301'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/302'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/303'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/304'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/305'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/306'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/307'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/308'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/309'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/310'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/311'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/312'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/313'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/314'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/315'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/316'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/317'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/318'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/319'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/320'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/321'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/322'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/323'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/324'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/325'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/326'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/327'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/328'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/329'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/330'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/331'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/332'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/333'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/334'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/335'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/validacao-cadastro?" + 
                    "page=1&" + 
                    "per_page=336",
                    headers=headers)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Operação realizada com sucesso"
        assert len(res_3.json()["data"]) == 336
        assert res_3.json()["data"][0]["cpf"] == "99999701094"
        assert res_3.json()["data"][0]["numeroNIS"] is None
        assert res_3.json()["data"][0]["situacaoCadastral"] == "Autenticada"
        assert res_3.json()["data"][0]["situacaoCpf"] == "CPF não encontrado na base do BCPF"
        assert res_3.json()["data"][0]["nome"] == "Bryan  Chen"
        assert res_3.json()["data"][0]["nomeValidado"] == True
        assert res_3.json()["data"][0]["dataNascimento"] == "1956-01-11"
        assert res_3.json()["data"][0]["dataNascimentoValidada"] == True
        assert res_3.json()["data"][0]["nomeMaeEstudante"] == "Mr. Daniel Johnson DVM"
        assert res_3.json()["data"][0]["nomeMaeEstudanteValidado"] == True
        assert res_3.json()["data"][0]["dataValidacaoCadastral"] == "2025-03-11 01:39:26"
        assert res_3.json()["data"][1]["cpf"] == "34535377693"
        assert res_3.json()["data"][1]["numeroNIS"] == "11979328182"
        assert res_3.json()["data"][1]["situacaoCadastral"] == "Não autenticada"
        assert res_3.json()["data"][1]["situacaoCpf"] == "Testando o serviço de validação"
        assert res_3.json()["data"][1]["nome"] == "Trevor Hester"
        assert res_3.json()["data"][1]["nomeValidado"] == True
        assert res_3.json()["data"][1]["dataNascimento"] == "1968-02-26"
        assert res_3.json()["data"][1]["dataNascimentoValidada"] == False
        assert res_3.json()["data"][1]["nomeMaeEstudante"] == "Juan Mccullough"
        assert res_3.json()["data"][1]["nomeMaeEstudanteValidado"] == True
        assert res_3.json()["data"][1]["dataValidacaoCadastral"] == "2023-06-16 00:00:00"
        assert res_3.json()["data"][2]["cpf"] == "14064786602"
        assert res_3.json()["data"][2]["numeroNIS"] == "124112231"
        assert res_3.json()["data"][2]["situacaoCadastral"] == "Não autenticada"
        assert res_3.json()["data"][2]["situacaoCpf"] == "Quando há omissão de DIRPF em um dos últimos 5 exercícios"
        assert res_3.json()["data"][2]["nome"] == "Donald Jackson"
        assert res_3.json()["data"][2]["nomeValidado"] == False
        assert res_3.json()["data"][2]["dataNascimento"] == "1954-08-23"
        assert res_3.json()["data"][2]["dataNascimentoValidada"] == False
        assert res_3.json()["data"][2]["nomeMaeEstudante"] == "Timothy Garcia"
        assert res_3.json()["data"][2]["nomeMaeEstudanteValidado"] == True
        assert res_3.json()["data"][2]["dataValidacaoCadastral"] == "2024-04-23 00:00:00"
        # Skipping assertions on the remaining 333 elements. This limit of 3 elements can be increased in the configurations
        assert res_3.json()["pagination"]["total"] == 54714.0
        assert res_3.json()["pagination"]["count"] == 336.0
        assert res_3.json()["pagination"]["per_page"] == 336.0
        assert res_3.json()["pagination"]["current_page"] == 1.0
        assert res_3.json()["pagination"]["total_pages"] == 163.0
        assert res_3.json()["pagination"]["links"]["previous"] is None
        assert res_3.json()["pagination"]["links"]["next"] == 2.0
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nome\": \"Dr. Miguel Barros\", " + \
            " \"dataNascimento\": \"1989-05-09\", " + \
            " \"email\": \"hortencia.ester.pacheco.jr@fake.com\", " + \
            " \"tipoDeficiencia\": [], " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"bairro\": \"São Molina\", " + \
            " \"cep\": \"98888538\", " + \
            " \"uf\": 25, " + \
            " \"matriculaRede\": \"56789\", " + \
            " \"codigoFuncao\": 14, " + \
            " \"dataIngresso\": \"1939-11-06\" " + \
            " } "
        headers['Accept'] = "application/json"
        res_4 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_4.status_code == 422
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "O campo nivelEscolaridade deve estar entre 1 e 10."
    
    
    # Calls:
    # 1 - (200) PATCH:/v1/estudantes/lote
    # 2 - (200) GET:/v1/profissionais/inep/{inep}
    # 3 - (200) GET:/v1/profissionais/lote
    # 4 - (200) GET:/v1/estudantes/lote
    # 5 - (200) PATCH:/v1/estudantes/lote
    # 6 - (400) GET:/v1/profissionais/lote/{id}/erros
    # Found 344 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_60(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_50_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_51_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_0.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/inep/{inep} -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/inep/41065344",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_1.json()["data"]) == 0
        assert res_1.json()["pagination"]["total"] == 0.0
        assert res_1.json()["pagination"]["count"] == 0.0
        assert res_1.json()["pagination"]["per_page"] == 10.0
        assert res_1.json()["pagination"]["current_page"] == 1.0
        assert res_1.json()["pagination"]["total_pages"] == 1.0
        assert res_1.json()["pagination"]["links"]["previous"] is None
        assert res_1.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/0/dataEnvio'] String "2025-05-03 23:59:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1/dataEnvio'] String "2025-05-03 23:58:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2/dataEnvio'] String "2025-05-03 23:56:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/3/dataEnvio'] String "2025-05-03 23:56:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/4/dataEnvio'] String "2025-05-03 23:56:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/5/dataEnvio'] String "2025-05-03 23:45:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/6/dataEnvio'] String "2025-05-03 23:45:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/7/dataEnvio'] String "2025-05-03 23:44:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/8/dataEnvio'] String "2025-05-03 23:40:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/9/dataEnvio'] String "2025-05-03 23:39:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/10/dataEnvio'] String "2025-05-03 23:38:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/11/dataEnvio'] String "2025-05-03 23:36:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/12/dataEnvio'] String "2025-05-03 23:35:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/13/dataEnvio'] String "2025-05-03 23:33:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/14/dataEnvio'] String "2025-05-03 23:28:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/15/dataEnvio'] String "2025-05-03 23:28:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/16/dataEnvio'] String "2025-05-03 23:25:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/17/dataEnvio'] String "2025-05-03 23:23:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/18/dataEnvio'] String "2025-05-03 23:22:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/19/dataEnvio'] String "2025-05-03 23:21:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/20/dataEnvio'] String "2025-05-03 23:19:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/21/dataEnvio'] String "2025-05-03 23:19:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/22/dataEnvio'] String "2025-05-03 23:19:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/23/dataEnvio'] String "2025-05-03 23:18:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/24/dataEnvio'] String "2025-05-03 23:18:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/25/dataEnvio'] String "2025-05-03 23:11:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/26/dataEnvio'] String "2025-05-03 23:11:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/27/dataEnvio'] String "2025-05-03 23:11:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/28/dataEnvio'] String "2025-05-03 23:10:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/29/dataEnvio'] String "2025-05-03 23:05:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/30/dataEnvio'] String "2025-05-03 23:04:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/31/dataEnvio'] String "2025-05-03 23:03:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/32/dataEnvio'] String "2025-05-03 23:03:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/33/dataEnvio'] String "2025-05-03 23:01:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/34/dataEnvio'] String "2025-05-03 23:01:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/35/dataEnvio'] String "2025-05-03 22:59:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/36/dataEnvio'] String "2025-05-03 22:57:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/37/dataEnvio'] String "2025-05-03 22:53:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/38/dataEnvio'] String "2025-05-03 22:51:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/39/dataEnvio'] String "2025-05-03 22:50:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/40/dataEnvio'] String "2025-05-03 22:50:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/41/dataEnvio'] String "2025-05-03 22:49:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/42/dataEnvio'] String "2025-05-03 22:49:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/43/dataEnvio'] String "2025-05-03 22:48:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/44/dataEnvio'] String "2025-05-03 22:48:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/45/dataEnvio'] String "2025-05-03 22:47:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/46/dataEnvio'] String "2025-05-03 22:44:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/47/dataEnvio'] String "2025-05-03 22:42:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/48/dataEnvio'] String "2025-05-03 22:40:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/49/dataEnvio'] String "2025-05-03 22:38:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/50/dataEnvio'] String "2025-05-03 22:37:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/51/dataEnvio'] String "2025-05-03 22:36:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/52/dataEnvio'] String "2025-05-03 22:35:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/53/dataEnvio'] String "2025-05-03 22:34:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/54/dataEnvio'] String "2025-05-03 22:34:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/55/dataEnvio'] String "2025-05-03 22:33:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/56/dataEnvio'] String "2025-05-03 22:31:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/57/dataEnvio'] String "2025-05-03 22:30:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/58/dataEnvio'] String "2025-05-03 22:29:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/59/dataEnvio'] String "2025-05-03 22:28:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/60/dataEnvio'] String "2025-05-03 22:25:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/61/dataEnvio'] String "2025-05-03 22:24:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/62/dataEnvio'] String "2025-05-03 22:23:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/63/dataEnvio'] String "2025-05-03 22:23:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/64/dataEnvio'] String "2025-05-03 22:23:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/65/dataEnvio'] String "2025-05-03 22:23:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/66/dataEnvio'] String "2025-05-03 22:23:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/67/dataEnvio'] String "2025-05-03 22:23:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/68/dataEnvio'] String "2025-05-03 22:23:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/69/dataEnvio'] String "2025-05-03 22:23:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/70/dataEnvio'] String "2025-05-03 22:23:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/71/dataEnvio'] String "2025-05-03 22:22:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/72/dataEnvio'] String "2025-05-03 22:21:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/73/dataEnvio'] String "2025-05-03 22:21:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/74/dataEnvio'] String "2025-05-03 22:21:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/75/dataEnvio'] String "2025-05-03 22:21:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/76/dataEnvio'] String "2025-05-03 22:21:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/77/dataEnvio'] String "2025-05-03 22:20:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/78/dataEnvio'] String "2025-05-03 22:20:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/79/dataEnvio'] String "2025-05-03 22:20:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/80/dataEnvio'] String "2025-05-03 22:20:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/81/dataEnvio'] String "2025-05-03 22:20:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/82/dataEnvio'] String "2025-05-03 22:20:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/83/dataEnvio'] String "2025-05-03 22:20:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/84/dataEnvio'] String "2025-05-03 22:19:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/85/dataEnvio'] String "2025-05-03 22:19:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/86/dataEnvio'] String "2025-05-03 22:19:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/87/dataEnvio'] String "2025-05-03 22:19:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/88/dataEnvio'] String "2025-05-03 22:19:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/89/dataEnvio'] String "2025-05-03 22:19:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/90/dataEnvio'] String "2025-05-03 22:18:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/91/dataEnvio'] String "2025-05-03 22:18:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/92/dataEnvio'] String "2025-05-03 22:15:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/93/dataEnvio'] String "2025-05-03 22:15:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/94/dataEnvio'] String "2025-05-03 22:13:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/95/dataEnvio'] String "2025-05-03 22:12:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/96/dataEnvio'] String "2025-05-03 22:12:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/97/dataEnvio'] String "2025-05-03 22:11:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/98/dataEnvio'] String "2025-05-03 22:11:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/99/dataEnvio'] String "2025-05-03 22:11:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/100/dataEnvio'] String "2025-05-03 22:11:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/101/dataEnvio'] String "2025-05-03 22:11:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/102/dataEnvio'] String "2025-05-03 22:10:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/103/dataEnvio'] String "2025-05-03 22:10:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/104/dataEnvio'] String "2025-05-03 22:10:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/105/dataEnvio'] String "2025-05-03 22:09:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/106/dataEnvio'] String "2025-05-03 22:09:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/107/dataEnvio'] String "2025-05-03 22:06:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/108/dataEnvio'] String "2025-05-03 22:05:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/109/dataEnvio'] String "2025-05-03 22:04:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/110/dataEnvio'] String "2025-05-03 22:04:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/111/dataEnvio'] String "2025-05-03 22:04:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/112/dataEnvio'] String "2025-05-03 22:04:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/113/dataEnvio'] String "2025-05-03 22:04:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/114/dataEnvio'] String "2025-05-03 22:04:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/115/dataEnvio'] String "2025-05-03 22:04:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/116/dataEnvio'] String "2025-05-03 22:03:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/117/dataEnvio'] String "2025-05-03 22:03:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/118/dataEnvio'] String "2025-05-03 22:03:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/119/dataEnvio'] String "2025-05-03 22:02:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/120/dataEnvio'] String "2025-05-03 22:01:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/121/dataEnvio'] String "2025-05-03 22:00:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/122/dataEnvio'] String "2025-05-03 21:59:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/123/dataEnvio'] String "2025-05-03 21:59:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/124/dataEnvio'] String "2025-05-03 21:59:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/125/dataEnvio'] String "2025-05-03 21:58:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/126/dataEnvio'] String "2025-05-03 21:57:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/127/dataEnvio'] String "2025-05-03 21:57:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/128/dataEnvio'] String "2025-05-03 21:56:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/129/dataEnvio'] String "2025-05-03 21:56:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/130/dataEnvio'] String "2025-05-03 21:56:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/131/dataEnvio'] String "2025-05-03 21:56:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/132/dataEnvio'] String "2025-05-03 21:56:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/133/dataEnvio'] String "2025-05-03 21:55:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/134/dataEnvio'] String "2025-05-03 21:55:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/135/dataEnvio'] String "2025-05-03 21:55:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/136/dataEnvio'] String "2025-05-03 21:55:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/137/dataEnvio'] String "2025-05-03 21:55:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/138/dataEnvio'] String "2025-05-03 21:55:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/139/dataEnvio'] String "2025-05-03 21:55:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/140/dataEnvio'] String "2025-05-03 21:55:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/141/dataEnvio'] String "2025-05-03 21:55:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/142/dataEnvio'] String "2025-05-03 21:55:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/143/dataEnvio'] String "2025-05-03 21:54:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/144/dataEnvio'] String "2025-05-03 21:54:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/145/dataEnvio'] String "2025-05-03 21:54:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/146/dataEnvio'] String "2025-05-03 21:54:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/147/dataEnvio'] String "2025-05-03 21:54:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/148/dataEnvio'] String "2025-05-03 21:54:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/149/dataEnvio'] String "2025-05-03 21:53:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/150/dataEnvio'] String "2025-05-03 21:53:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/151/dataEnvio'] String "2025-05-03 21:53:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/152/dataEnvio'] String "2025-05-03 21:53:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/153/dataEnvio'] String "2025-05-03 21:53:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/154/dataEnvio'] String "2025-05-03 21:52:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/155/dataEnvio'] String "2025-05-03 21:52:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/156/dataEnvio'] String "2025-05-03 21:51:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/157/dataEnvio'] String "2025-05-03 21:51:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/158/dataEnvio'] String "2025-05-03 21:51:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/159/dataEnvio'] String "2025-05-03 21:51:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/160/dataEnvio'] String "2025-05-03 21:51:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/161/dataEnvio'] String "2025-05-03 21:50:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/162/dataEnvio'] String "2025-05-03 21:49:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/163/dataEnvio'] String "2025-05-03 21:49:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/164/dataEnvio'] String "2025-05-03 21:49:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/165/dataEnvio'] String "2025-05-03 21:48:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/166/dataEnvio'] String "2025-05-03 21:46:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/167/dataEnvio'] String "2025-05-03 21:44:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/168/dataEnvio'] String "2025-05-03 21:43:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/169/dataEnvio'] String "2025-05-03 21:43:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/170/dataEnvio'] String "2025-05-03 21:42:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/171/dataEnvio'] String "2025-05-03 21:41:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/172/dataEnvio'] String "2025-05-03 21:40:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/173/dataEnvio'] String "2025-05-03 21:38:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/174/dataEnvio'] String "2025-05-03 21:38:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/175/dataEnvio'] String "2025-05-03 21:37:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/176/dataEnvio'] String "2025-05-03 21:37:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/177/dataEnvio'] String "2025-05-03 21:34:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/178/dataEnvio'] String "2025-05-03 21:28:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/179/dataEnvio'] String "2025-05-03 21:28:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/180/dataEnvio'] String "2025-05-03 21:25:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/181/dataEnvio'] String "2025-05-03 21:24:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/182/dataEnvio'] String "2025-05-03 21:24:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/183/dataEnvio'] String "2025-05-03 21:23:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/184/dataEnvio'] String "2025-05-03 21:23:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/185/dataEnvio'] String "2025-05-03 21:21:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/186/dataEnvio'] String "2025-05-03 21:20:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/187/dataEnvio'] String "2025-05-03 21:16:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/188/dataEnvio'] String "2025-05-03 21:16:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/189/dataEnvio'] String "2025-05-03 21:11:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/190/dataEnvio'] String "2025-05-03 21:11:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/191/dataEnvio'] String "2025-05-03 21:09:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/192/dataEnvio'] String "2025-05-03 21:09:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/193/dataEnvio'] String "2025-05-03 21:09:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/194/dataEnvio'] String "2025-05-03 21:06:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/195/dataEnvio'] String "2025-05-03 21:05:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/196/dataEnvio'] String "2025-05-03 21:05:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/197/dataEnvio'] String "2025-05-03 21:03:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/198/dataEnvio'] String "2025-05-03 21:03:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/199/dataEnvio'] String "2025-05-03 21:01:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/200/dataEnvio'] String "2025-05-03 20:59:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/201/dataEnvio'] String "2025-05-03 20:56:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/202/dataEnvio'] String "2025-05-03 20:55:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/203/dataEnvio'] String "2025-05-03 20:54:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/204/dataEnvio'] String "2025-05-03 20:54:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/205/dataEnvio'] String "2025-05-03 20:54:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/206/dataEnvio'] String "2025-05-03 20:52:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/207/dataEnvio'] String "2025-05-03 20:52:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/208/dataEnvio'] String "2025-05-03 20:51:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/209/dataEnvio'] String "2025-05-03 20:50:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/210/dataEnvio'] String "2025-05-03 20:50:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/211/dataEnvio'] String "2025-05-03 20:49:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/212/dataEnvio'] String "2025-05-03 20:47:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/213/dataEnvio'] String "2025-05-03 20:45:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/214/dataEnvio'] String "2025-05-03 20:42:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/215/dataEnvio'] String "2025-05-03 20:42:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/216/dataEnvio'] String "2025-05-03 20:41:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/217/dataEnvio'] String "2025-05-03 20:41:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/218/dataEnvio'] String "2025-05-03 20:40:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/219/dataEnvio'] String "2025-05-03 20:40:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/220/dataEnvio'] String "2025-05-03 20:38:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/221/dataEnvio'] String "2025-05-03 20:35:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/222/dataEnvio'] String "2025-05-03 20:30:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/223/dataEnvio'] String "2025-05-03 20:28:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/224/dataEnvio'] String "2025-05-03 20:25:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/225/dataEnvio'] String "2025-05-03 20:24:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/226/dataEnvio'] String "2025-05-03 20:24:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/227/dataEnvio'] String "2025-05-03 20:23:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/228/dataEnvio'] String "2025-05-03 20:21:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/229/dataEnvio'] String "2025-05-03 20:21:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/230/dataEnvio'] String "2025-05-03 20:16:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/231/dataEnvio'] String "2025-05-03 20:15:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/232/dataEnvio'] String "2025-05-03 20:14:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/233/dataEnvio'] String "2025-05-03 20:14:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/234/dataEnvio'] String "2025-05-03 20:13:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/235/dataEnvio'] String "2025-05-03 20:13:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/236/dataEnvio'] String "2025-05-03 20:11:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/237/dataEnvio'] String "2025-05-03 20:10:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/238/dataEnvio'] String "2025-05-03 20:10:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/239/dataEnvio'] String "2025-05-03 20:08:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/240/dataEnvio'] String "2025-05-03 20:08:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/241/dataEnvio'] String "2025-05-03 20:07:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/242/dataEnvio'] String "2025-05-03 20:05:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/243/dataEnvio'] String "2025-05-03 20:00:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/244/dataEnvio'] String "2025-05-03 19:59:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/245/dataEnvio'] String "2025-05-03 19:59:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/246/dataEnvio'] String "2025-05-03 19:59:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/247/dataEnvio'] String "2025-05-03 19:59:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/248/dataEnvio'] String "2025-05-03 19:59:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/249/dataEnvio'] String "2025-05-03 19:59:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/250/dataEnvio'] String "2025-05-03 19:59:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/251/dataEnvio'] String "2025-05-03 19:59:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/252/dataEnvio'] String "2025-05-03 19:59:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/253/dataEnvio'] String "2025-05-03 19:58:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/254/dataEnvio'] String "2025-05-03 19:58:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/255/dataEnvio'] String "2025-05-03 19:58:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/256/dataEnvio'] String "2025-05-03 19:58:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/257/dataEnvio'] String "2025-05-03 19:58:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/258/dataEnvio'] String "2025-05-03 19:58:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/259/dataEnvio'] String "2025-05-03 19:57:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/260/dataEnvio'] String "2025-05-03 19:57:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/261/dataEnvio'] String "2025-05-03 19:56:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/262/dataEnvio'] String "2025-05-03 19:56:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/263/dataEnvio'] String "2025-05-03 19:56:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/264/dataEnvio'] String "2025-05-03 19:56:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/265/dataEnvio'] String "2025-05-03 19:56:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/266/dataEnvio'] String "2025-05-03 19:56:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/267/dataEnvio'] String "2025-05-03 19:56:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/268/dataEnvio'] String "2025-05-03 19:56:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/269/dataEnvio'] String "2025-05-03 19:56:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/270/dataEnvio'] String "2025-05-03 19:55:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/271/dataEnvio'] String "2025-05-03 19:55:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/272/dataEnvio'] String "2025-05-03 19:55:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/273/dataEnvio'] String "2025-05-03 19:55:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/274/dataEnvio'] String "2025-05-03 19:55:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/275/dataEnvio'] String "2025-05-03 19:55:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/276/dataEnvio'] String "2025-05-03 19:55:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/277/dataEnvio'] String "2025-05-03 19:55:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/278/dataEnvio'] String "2025-05-03 19:55:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/279/dataEnvio'] String "2025-05-03 19:55:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/280/dataEnvio'] String "2025-05-03 19:54:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/281/dataEnvio'] String "2025-05-03 19:54:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/282/dataEnvio'] String "2025-05-03 19:54:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/283/dataEnvio'] String "2025-05-03 19:54:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/284/dataEnvio'] String "2025-05-03 19:54:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/285/dataEnvio'] String "2025-05-03 19:51:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/286/dataEnvio'] String "2025-05-03 19:51:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/287/dataEnvio'] String "2025-05-03 19:51:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/288/dataEnvio'] String "2025-05-03 19:51:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/289/dataEnvio'] String "2025-05-03 19:49:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/290/dataEnvio'] String "2025-05-03 19:49:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/291/dataEnvio'] String "2025-05-03 19:49:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/292/dataEnvio'] String "2025-05-03 19:48:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/293/dataEnvio'] String "2025-05-03 19:47:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/294/dataEnvio'] String "2025-05-03 19:47:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/295/dataEnvio'] String "2025-05-03 19:47:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/296/dataEnvio'] String "2025-05-03 19:47:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/297/dataEnvio'] String "2025-05-03 19:47:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/298/dataEnvio'] String "2025-05-03 19:46:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/299/dataEnvio'] String "2025-05-03 19:46:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/300/dataEnvio'] String "2025-05-03 19:46:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/301/dataEnvio'] String "2025-05-03 19:45:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/302/dataEnvio'] String "2025-05-03 19:45:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/303/dataEnvio'] String "2025-05-03 19:45:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/304/dataEnvio'] String "2025-05-03 19:44:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/305/dataEnvio'] String "2025-05-03 19:44:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/306/dataEnvio'] String "2025-05-03 19:44:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/307/dataEnvio'] String "2025-05-03 19:44:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/308/dataEnvio'] String "2025-05-03 19:44:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/309/dataEnvio'] String "2025-05-03 19:44:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/310/dataEnvio'] String "2025-05-03 19:44:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/311/dataEnvio'] String "2025-05-03 19:44:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/312/dataEnvio'] String "2025-05-03 19:44:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/313/dataEnvio'] String "2025-05-03 19:43:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/314/dataEnvio'] String "2025-05-03 19:42:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/315/dataEnvio'] String "2025-05-03 19:42:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/316/dataEnvio'] String "2025-05-03 19:41:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/317/dataEnvio'] String "2025-05-03 19:41:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/318/dataEnvio'] String "2025-05-03 19:41:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/319/dataEnvio'] String "2025-05-03 19:41:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/320/dataEnvio'] String "2025-05-03 19:41:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/321/dataEnvio'] String "2025-05-03 19:41:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/322/dataEnvio'] String "2025-05-03 19:41:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/323/dataEnvio'] String "2025-05-03 19:41:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/324/dataEnvio'] String "2025-05-03 19:41:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/325/dataEnvio'] String "2025-05-03 19:40:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/326/dataEnvio'] String "2025-05-03 19:40:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/327/dataEnvio'] String "2025-05-03 19:40:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/328/dataEnvio'] String "2025-05-03 19:40:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/329/dataEnvio'] String "2025-05-03 19:40:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/330/dataEnvio'] String "2025-05-03 19:40:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/331/dataEnvio'] String "2025-05-03 19:40:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/332/dataEnvio'] String "2025-05-03 19:39:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/333/dataEnvio'] String "2025-05-03 19:39:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/334/dataEnvio'] String "2025-05-03 19:39:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/335/dataEnvio'] String "2025-05-03 19:38:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote?per_page=336",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_2.json()["data"]) == 336
        assert res_2.json()["data"][0]["dataEnvio"] == "2025-05-03 23:59:19"
        assert res_2.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_2.json()["data"][1]["dataEnvio"] == "2025-05-03 23:58:26"
        assert res_2.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_2.json()["data"][2]["dataEnvio"] == "2025-05-03 23:56:49"
        assert res_2.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 333 elements. This limit of 3 elements can be increased in the configurations
        assert res_2.json()["pagination"]["total"] == 2394.0
        assert res_2.json()["pagination"]["count"] == 336.0
        assert res_2.json()["pagination"]["per_page"] == 336.0
        assert res_2.json()["pagination"]["current_page"] == 1.0
        assert res_2.json()["pagination"]["total_pages"] == 8.0
        assert res_2.json()["pagination"]["links"]["previous"] is None
        assert res_2.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?per_page=892",
                    headers=headers)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_3.json()["data"]) == 892
        assert res_3.json()["data"][0]["dataEnvio"] == "2025-05-04 00:01:42"
        assert res_3.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_3.json()["data"][1]["dataEnvio"] == "2025-05-04 00:01:28"
        assert res_3.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_3.json()["data"][2]["dataEnvio"] == "2025-05-04 00:01:24"
        assert res_3.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 889 elements. This limit of 3 elements can be increased in the configurations
        assert res_3.json()["pagination"]["total"] == 9486.0
        assert res_3.json()["pagination"]["count"] == 892.0
        assert res_3.json()["pagination"]["per_page"] == 892.0
        assert res_3.json()["pagination"]["current_page"] == 1.0
        assert res_3.json()["pagination"]["total_pages"] == 11.0
        assert res_3.json()["pagination"]["links"]["previous"] is None
        assert res_3.json()["pagination"]["links"]["next"] == 2.0
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_52_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_53_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_54_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_55_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_4 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_4.status_code == 200
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == True
        assert res_4.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_4.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id}/erros -> Response status 400 not defined for path '/v1/profissionais/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/13/erros?page=1",
                    headers=headers)
        
        assert res_5.status_code == 400
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "O ID fornecido não é um UUID válido. ID: 13"
    
    
    # Calls:
    # 1 - (200) PATCH:/v1/estudantes/lote
    # 2 - (401) GET:/v1/estudantes/lote
    # 3 - (200) GET:/v1/profissionais/lote/{id}
    # 4 - (200) GET:/v1/profissionais/lote
    # 5 - (400) GET:/v1/profissionais/lote/{id}/erros
    # 6 - (422) POST:/v1/profissionais
    # Found 534 potential faults of type-code 200
    # Using 1 example:
    #   1
    @timeout_decorator.timeout(60)
    def test_61(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_68_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_69_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_70_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_71_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_72_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_0.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Response status 401 not defined for path '/v1/estudantes/lote'.
        headers = {}
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers)
        
        assert res_1.status_code == 401
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Não autorizado"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id} -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/bd8334ba-2ba6-47d0-a7f7-972da72734ea",
                    headers=headers)
        
        assert res_2.status_code == 200
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["status_processamento"] == "Enviado"
        assert res_2.json()["message"] == "Lote recuperado com sucesso. ID: bd8334ba-2ba6-47d0-a7f7-972da72734ea"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/0/dataEnvio'] String "2025-05-03 23:45:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1/dataEnvio'] String "2025-05-03 23:45:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2/dataEnvio'] String "2025-05-03 23:44:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/3/dataEnvio'] String "2025-05-03 23:40:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/4/dataEnvio'] String "2025-05-03 23:39:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/5/dataEnvio'] String "2025-05-03 23:38:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/6/dataEnvio'] String "2025-05-03 23:36:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/7/dataEnvio'] String "2025-05-03 23:35:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/8/dataEnvio'] String "2025-05-03 23:33:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/9/dataEnvio'] String "2025-05-03 23:28:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/10/dataEnvio'] String "2025-05-03 23:28:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/11/dataEnvio'] String "2025-05-03 23:25:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/12/dataEnvio'] String "2025-05-03 23:23:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/13/dataEnvio'] String "2025-05-03 23:22:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/14/dataEnvio'] String "2025-05-03 23:21:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/15/dataEnvio'] String "2025-05-03 23:19:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/16/dataEnvio'] String "2025-05-03 23:19:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/17/dataEnvio'] String "2025-05-03 23:19:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/18/dataEnvio'] String "2025-05-03 23:18:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/19/dataEnvio'] String "2025-05-03 23:18:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/20/dataEnvio'] String "2025-05-03 23:11:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/21/dataEnvio'] String "2025-05-03 23:11:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/22/dataEnvio'] String "2025-05-03 23:11:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/23/dataEnvio'] String "2025-05-03 23:10:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/24/dataEnvio'] String "2025-05-03 23:05:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/25/dataEnvio'] String "2025-05-03 23:04:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/26/dataEnvio'] String "2025-05-03 23:03:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/27/dataEnvio'] String "2025-05-03 23:03:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/28/dataEnvio'] String "2025-05-03 23:01:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/29/dataEnvio'] String "2025-05-03 23:01:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/30/dataEnvio'] String "2025-05-03 22:59:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/31/dataEnvio'] String "2025-05-03 22:57:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/32/dataEnvio'] String "2025-05-03 22:53:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/33/dataEnvio'] String "2025-05-03 22:51:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/34/dataEnvio'] String "2025-05-03 22:50:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/35/dataEnvio'] String "2025-05-03 22:50:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/36/dataEnvio'] String "2025-05-03 22:49:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/37/dataEnvio'] String "2025-05-03 22:49:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/38/dataEnvio'] String "2025-05-03 22:48:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/39/dataEnvio'] String "2025-05-03 22:48:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/40/dataEnvio'] String "2025-05-03 22:47:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/41/dataEnvio'] String "2025-05-03 22:44:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/42/dataEnvio'] String "2025-05-03 22:42:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/43/dataEnvio'] String "2025-05-03 22:40:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/44/dataEnvio'] String "2025-05-03 22:38:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/45/dataEnvio'] String "2025-05-03 22:37:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/46/dataEnvio'] String "2025-05-03 22:36:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/47/dataEnvio'] String "2025-05-03 22:35:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/48/dataEnvio'] String "2025-05-03 22:34:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/49/dataEnvio'] String "2025-05-03 22:34:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/50/dataEnvio'] String "2025-05-03 22:33:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/51/dataEnvio'] String "2025-05-03 22:31:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/52/dataEnvio'] String "2025-05-03 22:30:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/53/dataEnvio'] String "2025-05-03 22:29:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/54/dataEnvio'] String "2025-05-03 22:28:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/55/dataEnvio'] String "2025-05-03 22:25:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/56/dataEnvio'] String "2025-05-03 22:24:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/57/dataEnvio'] String "2025-05-03 22:23:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/58/dataEnvio'] String "2025-05-03 22:23:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/59/dataEnvio'] String "2025-05-03 22:23:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/60/dataEnvio'] String "2025-05-03 22:23:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/61/dataEnvio'] String "2025-05-03 22:23:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/62/dataEnvio'] String "2025-05-03 22:23:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/63/dataEnvio'] String "2025-05-03 22:23:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/64/dataEnvio'] String "2025-05-03 22:23:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/65/dataEnvio'] String "2025-05-03 22:23:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/66/dataEnvio'] String "2025-05-03 22:22:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/67/dataEnvio'] String "2025-05-03 22:21:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/68/dataEnvio'] String "2025-05-03 22:21:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/69/dataEnvio'] String "2025-05-03 22:21:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/70/dataEnvio'] String "2025-05-03 22:21:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/71/dataEnvio'] String "2025-05-03 22:21:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/72/dataEnvio'] String "2025-05-03 22:20:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/73/dataEnvio'] String "2025-05-03 22:20:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/74/dataEnvio'] String "2025-05-03 22:20:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/75/dataEnvio'] String "2025-05-03 22:20:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/76/dataEnvio'] String "2025-05-03 22:20:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/77/dataEnvio'] String "2025-05-03 22:20:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/78/dataEnvio'] String "2025-05-03 22:20:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/79/dataEnvio'] String "2025-05-03 22:19:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/80/dataEnvio'] String "2025-05-03 22:19:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/81/dataEnvio'] String "2025-05-03 22:19:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/82/dataEnvio'] String "2025-05-03 22:19:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/83/dataEnvio'] String "2025-05-03 22:19:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/84/dataEnvio'] String "2025-05-03 22:19:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/85/dataEnvio'] String "2025-05-03 22:18:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/86/dataEnvio'] String "2025-05-03 22:18:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/87/dataEnvio'] String "2025-05-03 22:15:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/88/dataEnvio'] String "2025-05-03 22:15:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/89/dataEnvio'] String "2025-05-03 22:13:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/90/dataEnvio'] String "2025-05-03 22:12:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/91/dataEnvio'] String "2025-05-03 22:12:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/92/dataEnvio'] String "2025-05-03 22:11:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/93/dataEnvio'] String "2025-05-03 22:11:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/94/dataEnvio'] String "2025-05-03 22:11:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/95/dataEnvio'] String "2025-05-03 22:11:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/96/dataEnvio'] String "2025-05-03 22:11:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/97/dataEnvio'] String "2025-05-03 22:10:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/98/dataEnvio'] String "2025-05-03 22:10:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/99/dataEnvio'] String "2025-05-03 22:10:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/100/dataEnvio'] String "2025-05-03 22:09:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/101/dataEnvio'] String "2025-05-03 22:09:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/102/dataEnvio'] String "2025-05-03 22:06:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/103/dataEnvio'] String "2025-05-03 22:05:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/104/dataEnvio'] String "2025-05-03 22:04:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/105/dataEnvio'] String "2025-05-03 22:04:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/106/dataEnvio'] String "2025-05-03 22:04:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/107/dataEnvio'] String "2025-05-03 22:04:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/108/dataEnvio'] String "2025-05-03 22:04:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/109/dataEnvio'] String "2025-05-03 22:04:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/110/dataEnvio'] String "2025-05-03 22:04:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/111/dataEnvio'] String "2025-05-03 22:03:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/112/dataEnvio'] String "2025-05-03 22:03:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/113/dataEnvio'] String "2025-05-03 22:03:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/114/dataEnvio'] String "2025-05-03 22:02:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/115/dataEnvio'] String "2025-05-03 22:01:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/116/dataEnvio'] String "2025-05-03 22:00:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/117/dataEnvio'] String "2025-05-03 21:59:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/118/dataEnvio'] String "2025-05-03 21:59:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/119/dataEnvio'] String "2025-05-03 21:59:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/120/dataEnvio'] String "2025-05-03 21:58:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/121/dataEnvio'] String "2025-05-03 21:57:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/122/dataEnvio'] String "2025-05-03 21:57:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/123/dataEnvio'] String "2025-05-03 21:56:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/124/dataEnvio'] String "2025-05-03 21:56:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/125/dataEnvio'] String "2025-05-03 21:56:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/126/dataEnvio'] String "2025-05-03 21:56:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/127/dataEnvio'] String "2025-05-03 21:56:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/128/dataEnvio'] String "2025-05-03 21:55:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/129/dataEnvio'] String "2025-05-03 21:55:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/130/dataEnvio'] String "2025-05-03 21:55:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/131/dataEnvio'] String "2025-05-03 21:55:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/132/dataEnvio'] String "2025-05-03 21:55:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/133/dataEnvio'] String "2025-05-03 21:55:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/134/dataEnvio'] String "2025-05-03 21:55:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/135/dataEnvio'] String "2025-05-03 21:55:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/136/dataEnvio'] String "2025-05-03 21:55:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/137/dataEnvio'] String "2025-05-03 21:55:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/138/dataEnvio'] String "2025-05-03 21:54:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/139/dataEnvio'] String "2025-05-03 21:54:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/140/dataEnvio'] String "2025-05-03 21:54:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/141/dataEnvio'] String "2025-05-03 21:54:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/142/dataEnvio'] String "2025-05-03 21:54:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/143/dataEnvio'] String "2025-05-03 21:54:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/144/dataEnvio'] String "2025-05-03 21:53:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/145/dataEnvio'] String "2025-05-03 21:53:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/146/dataEnvio'] String "2025-05-03 21:53:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/147/dataEnvio'] String "2025-05-03 21:53:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/148/dataEnvio'] String "2025-05-03 21:53:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/149/dataEnvio'] String "2025-05-03 21:52:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/150/dataEnvio'] String "2025-05-03 21:52:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/151/dataEnvio'] String "2025-05-03 21:51:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/152/dataEnvio'] String "2025-05-03 21:51:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/153/dataEnvio'] String "2025-05-03 21:51:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/154/dataEnvio'] String "2025-05-03 21:51:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/155/dataEnvio'] String "2025-05-03 21:51:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/156/dataEnvio'] String "2025-05-03 21:50:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/157/dataEnvio'] String "2025-05-03 21:49:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/158/dataEnvio'] String "2025-05-03 21:49:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/159/dataEnvio'] String "2025-05-03 21:49:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/160/dataEnvio'] String "2025-05-03 21:48:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/161/dataEnvio'] String "2025-05-03 21:46:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/162/dataEnvio'] String "2025-05-03 21:44:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/163/dataEnvio'] String "2025-05-03 21:43:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/164/dataEnvio'] String "2025-05-03 21:43:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/165/dataEnvio'] String "2025-05-03 21:42:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/166/dataEnvio'] String "2025-05-03 21:41:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/167/dataEnvio'] String "2025-05-03 21:40:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/168/dataEnvio'] String "2025-05-03 21:38:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/169/dataEnvio'] String "2025-05-03 21:38:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/170/dataEnvio'] String "2025-05-03 21:37:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/171/dataEnvio'] String "2025-05-03 21:37:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/172/dataEnvio'] String "2025-05-03 21:34:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/173/dataEnvio'] String "2025-05-03 21:28:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/174/dataEnvio'] String "2025-05-03 21:28:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/175/dataEnvio'] String "2025-05-03 21:25:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/176/dataEnvio'] String "2025-05-03 21:24:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/177/dataEnvio'] String "2025-05-03 21:24:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/178/dataEnvio'] String "2025-05-03 21:23:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/179/dataEnvio'] String "2025-05-03 21:23:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/180/dataEnvio'] String "2025-05-03 21:21:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/181/dataEnvio'] String "2025-05-03 21:20:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/182/dataEnvio'] String "2025-05-03 21:16:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/183/dataEnvio'] String "2025-05-03 21:16:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/184/dataEnvio'] String "2025-05-03 21:11:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/185/dataEnvio'] String "2025-05-03 21:11:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/186/dataEnvio'] String "2025-05-03 21:09:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/187/dataEnvio'] String "2025-05-03 21:09:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/188/dataEnvio'] String "2025-05-03 21:09:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/189/dataEnvio'] String "2025-05-03 21:06:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/190/dataEnvio'] String "2025-05-03 21:05:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/191/dataEnvio'] String "2025-05-03 21:05:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/192/dataEnvio'] String "2025-05-03 21:03:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/193/dataEnvio'] String "2025-05-03 21:03:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/194/dataEnvio'] String "2025-05-03 21:01:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/195/dataEnvio'] String "2025-05-03 20:59:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/196/dataEnvio'] String "2025-05-03 20:56:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/197/dataEnvio'] String "2025-05-03 20:55:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/198/dataEnvio'] String "2025-05-03 20:54:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/199/dataEnvio'] String "2025-05-03 20:54:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/200/dataEnvio'] String "2025-05-03 20:54:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/201/dataEnvio'] String "2025-05-03 20:52:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/202/dataEnvio'] String "2025-05-03 20:52:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/203/dataEnvio'] String "2025-05-03 20:51:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/204/dataEnvio'] String "2025-05-03 20:50:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/205/dataEnvio'] String "2025-05-03 20:50:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/206/dataEnvio'] String "2025-05-03 20:49:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/207/dataEnvio'] String "2025-05-03 20:47:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/208/dataEnvio'] String "2025-05-03 20:45:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/209/dataEnvio'] String "2025-05-03 20:42:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/210/dataEnvio'] String "2025-05-03 20:42:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/211/dataEnvio'] String "2025-05-03 20:41:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/212/dataEnvio'] String "2025-05-03 20:41:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/213/dataEnvio'] String "2025-05-03 20:40:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/214/dataEnvio'] String "2025-05-03 20:40:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/215/dataEnvio'] String "2025-05-03 20:38:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/216/dataEnvio'] String "2025-05-03 20:35:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/217/dataEnvio'] String "2025-05-03 20:30:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/218/dataEnvio'] String "2025-05-03 20:28:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/219/dataEnvio'] String "2025-05-03 20:25:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/220/dataEnvio'] String "2025-05-03 20:24:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/221/dataEnvio'] String "2025-05-03 20:24:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/222/dataEnvio'] String "2025-05-03 20:23:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/223/dataEnvio'] String "2025-05-03 20:21:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/224/dataEnvio'] String "2025-05-03 20:21:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/225/dataEnvio'] String "2025-05-03 20:16:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/226/dataEnvio'] String "2025-05-03 20:15:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/227/dataEnvio'] String "2025-05-03 20:14:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/228/dataEnvio'] String "2025-05-03 20:14:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/229/dataEnvio'] String "2025-05-03 20:13:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/230/dataEnvio'] String "2025-05-03 20:13:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/231/dataEnvio'] String "2025-05-03 20:11:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/232/dataEnvio'] String "2025-05-03 20:10:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/233/dataEnvio'] String "2025-05-03 20:10:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/234/dataEnvio'] String "2025-05-03 20:08:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/235/dataEnvio'] String "2025-05-03 20:08:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/236/dataEnvio'] String "2025-05-03 20:07:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/237/dataEnvio'] String "2025-05-03 20:05:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/238/dataEnvio'] String "2025-05-03 20:00:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/239/dataEnvio'] String "2025-05-03 19:59:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/240/dataEnvio'] String "2025-05-03 19:59:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/241/dataEnvio'] String "2025-05-03 19:59:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/242/dataEnvio'] String "2025-05-03 19:59:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/243/dataEnvio'] String "2025-05-03 19:59:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/244/dataEnvio'] String "2025-05-03 19:59:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/245/dataEnvio'] String "2025-05-03 19:59:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/246/dataEnvio'] String "2025-05-03 19:59:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/247/dataEnvio'] String "2025-05-03 19:59:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/248/dataEnvio'] String "2025-05-03 19:58:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/249/dataEnvio'] String "2025-05-03 19:58:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/250/dataEnvio'] String "2025-05-03 19:58:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/251/dataEnvio'] String "2025-05-03 19:58:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/252/dataEnvio'] String "2025-05-03 19:58:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/253/dataEnvio'] String "2025-05-03 19:58:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/254/dataEnvio'] String "2025-05-03 19:57:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/255/dataEnvio'] String "2025-05-03 19:57:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/256/dataEnvio'] String "2025-05-03 19:56:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/257/dataEnvio'] String "2025-05-03 19:56:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/258/dataEnvio'] String "2025-05-03 19:56:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/259/dataEnvio'] String "2025-05-03 19:56:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/260/dataEnvio'] String "2025-05-03 19:56:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/261/dataEnvio'] String "2025-05-03 19:56:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/262/dataEnvio'] String "2025-05-03 19:56:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/263/dataEnvio'] String "2025-05-03 19:56:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/264/dataEnvio'] String "2025-05-03 19:56:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/265/dataEnvio'] String "2025-05-03 19:55:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/266/dataEnvio'] String "2025-05-03 19:55:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/267/dataEnvio'] String "2025-05-03 19:55:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/268/dataEnvio'] String "2025-05-03 19:55:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/269/dataEnvio'] String "2025-05-03 19:55:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/270/dataEnvio'] String "2025-05-03 19:55:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/271/dataEnvio'] String "2025-05-03 19:55:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/272/dataEnvio'] String "2025-05-03 19:55:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/273/dataEnvio'] String "2025-05-03 19:55:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/274/dataEnvio'] String "2025-05-03 19:55:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/275/dataEnvio'] String "2025-05-03 19:54:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/276/dataEnvio'] String "2025-05-03 19:54:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/277/dataEnvio'] String "2025-05-03 19:54:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/278/dataEnvio'] String "2025-05-03 19:54:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/279/dataEnvio'] String "2025-05-03 19:54:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/280/dataEnvio'] String "2025-05-03 19:51:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/281/dataEnvio'] String "2025-05-03 19:51:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/282/dataEnvio'] String "2025-05-03 19:51:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/283/dataEnvio'] String "2025-05-03 19:51:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/284/dataEnvio'] String "2025-05-03 19:49:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/285/dataEnvio'] String "2025-05-03 19:49:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/286/dataEnvio'] String "2025-05-03 19:49:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/287/dataEnvio'] String "2025-05-03 19:48:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/288/dataEnvio'] String "2025-05-03 19:47:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/289/dataEnvio'] String "2025-05-03 19:47:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/290/dataEnvio'] String "2025-05-03 19:47:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/291/dataEnvio'] String "2025-05-03 19:47:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/292/dataEnvio'] String "2025-05-03 19:47:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/293/dataEnvio'] String "2025-05-03 19:46:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/294/dataEnvio'] String "2025-05-03 19:46:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/295/dataEnvio'] String "2025-05-03 19:46:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/296/dataEnvio'] String "2025-05-03 19:45:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/297/dataEnvio'] String "2025-05-03 19:45:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/298/dataEnvio'] String "2025-05-03 19:45:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/299/dataEnvio'] String "2025-05-03 19:44:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/300/dataEnvio'] String "2025-05-03 19:44:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/301/dataEnvio'] String "2025-05-03 19:44:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/302/dataEnvio'] String "2025-05-03 19:44:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/303/dataEnvio'] String "2025-05-03 19:44:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/304/dataEnvio'] String "2025-05-03 19:44:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/305/dataEnvio'] String "2025-05-03 19:44:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/306/dataEnvio'] String "2025-05-03 19:44:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/307/dataEnvio'] String "2025-05-03 19:44:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/308/dataEnvio'] String "2025-05-03 19:43:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/309/dataEnvio'] String "2025-05-03 19:42:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/310/dataEnvio'] String "2025-05-03 19:42:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/311/dataEnvio'] String "2025-05-03 19:41:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/312/dataEnvio'] String "2025-05-03 19:41:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/313/dataEnvio'] String "2025-05-03 19:41:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/314/dataEnvio'] String "2025-05-03 19:41:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/315/dataEnvio'] String "2025-05-03 19:41:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/316/dataEnvio'] String "2025-05-03 19:41:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/317/dataEnvio'] String "2025-05-03 19:41:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/318/dataEnvio'] String "2025-05-03 19:41:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/319/dataEnvio'] String "2025-05-03 19:41:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/320/dataEnvio'] String "2025-05-03 19:40:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/321/dataEnvio'] String "2025-05-03 19:40:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/322/dataEnvio'] String "2025-05-03 19:40:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/323/dataEnvio'] String "2025-05-03 19:40:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/324/dataEnvio'] String "2025-05-03 19:40:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/325/dataEnvio'] String "2025-05-03 19:40:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/326/dataEnvio'] String "2025-05-03 19:40:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/327/dataEnvio'] String "2025-05-03 19:39:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/328/dataEnvio'] String "2025-05-03 19:39:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/329/dataEnvio'] String "2025-05-03 19:39:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/330/dataEnvio'] String "2025-05-03 19:38:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/331/dataEnvio'] String "2025-05-03 19:38:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/332/dataEnvio'] String "2025-05-03 19:38:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/333/dataEnvio'] String "2025-05-03 19:36:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/334/dataEnvio'] String "2025-05-03 19:36:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/335/dataEnvio'] String "2025-05-03 19:35:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/336/dataEnvio'] String "2025-05-03 19:35:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/337/dataEnvio'] String "2025-05-03 19:35:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/338/dataEnvio'] String "2025-05-03 19:35:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/339/dataEnvio'] String "2025-05-03 19:35:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/340/dataEnvio'] String "2025-05-03 19:35:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/341/dataEnvio'] String "2025-05-03 19:35:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/342/dataEnvio'] String "2025-05-03 19:35:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/343/dataEnvio'] String "2025-05-03 19:35:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/344/dataEnvio'] String "2025-05-03 19:34:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/345/dataEnvio'] String "2025-05-03 19:34:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/346/dataEnvio'] String "2025-05-03 19:34:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/347/dataEnvio'] String "2025-05-03 19:33:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/348/dataEnvio'] String "2025-05-03 19:33:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/349/dataEnvio'] String "2025-05-03 19:33:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/350/dataEnvio'] String "2025-05-03 19:32:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/351/dataEnvio'] String "2025-05-03 19:31:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/352/dataEnvio'] String "2025-05-03 19:31:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/353/dataEnvio'] String "2025-05-03 19:31:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/354/dataEnvio'] String "2025-05-03 19:31:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/355/dataEnvio'] String "2025-05-03 19:31:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/356/dataEnvio'] String "2025-05-03 19:31:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/357/dataEnvio'] String "2025-05-03 19:30:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/358/dataEnvio'] String "2025-05-03 19:30:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/359/dataEnvio'] String "2025-05-03 19:30:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/360/dataEnvio'] String "2025-05-03 19:30:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/361/dataEnvio'] String "2025-05-03 19:29:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/362/dataEnvio'] String "2025-05-03 19:29:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/363/dataEnvio'] String "2025-05-03 19:29:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/364/dataEnvio'] String "2025-05-03 19:28:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/365/dataEnvio'] String "2025-05-03 19:27:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/366/dataEnvio'] String "2025-05-03 19:27:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/367/dataEnvio'] String "2025-05-03 19:27:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/368/dataEnvio'] String "2025-05-03 19:27:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/369/dataEnvio'] String "2025-05-03 19:27:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/370/dataEnvio'] String "2025-05-03 19:27:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/371/dataEnvio'] String "2025-05-03 19:27:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/372/dataEnvio'] String "2025-05-03 19:27:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/373/dataEnvio'] String "2025-05-03 19:26:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/374/dataEnvio'] String "2025-05-03 19:26:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/375/dataEnvio'] String "2025-05-03 19:25:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/376/dataEnvio'] String "2025-05-03 19:25:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/377/dataEnvio'] String "2025-05-03 19:25:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/378/dataEnvio'] String "2025-05-03 19:25:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/379/dataEnvio'] String "2025-05-03 19:25:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/380/dataEnvio'] String "2025-05-03 19:25:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/381/dataEnvio'] String "2025-05-03 19:24:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/382/dataEnvio'] String "2025-05-03 19:24:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/383/dataEnvio'] String "2025-05-03 19:23:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/384/dataEnvio'] String "2025-05-03 19:23:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/385/dataEnvio'] String "2025-05-03 19:23:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/386/dataEnvio'] String "2025-05-03 19:23:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/387/dataEnvio'] String "2025-05-03 19:23:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/388/dataEnvio'] String "2025-05-03 19:23:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/389/dataEnvio'] String "2025-05-03 19:21:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/390/dataEnvio'] String "2025-05-03 19:20:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/391/dataEnvio'] String "2025-05-03 19:18:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/392/dataEnvio'] String "2025-05-03 19:17:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/393/dataEnvio'] String "2025-05-03 19:16:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/394/dataEnvio'] String "2025-05-03 19:11:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/395/dataEnvio'] String "2025-05-03 19:10:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/396/dataEnvio'] String "2025-05-03 19:08:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/397/dataEnvio'] String "2025-05-03 19:07:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/398/dataEnvio'] String "2025-05-03 19:05:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/399/dataEnvio'] String "2025-05-03 19:03:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/400/dataEnvio'] String "2025-05-03 19:01:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/401/dataEnvio'] String "2025-05-03 19:00:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/402/dataEnvio'] String "2025-05-03 19:00:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/403/dataEnvio'] String "2025-05-03 18:59:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/404/dataEnvio'] String "2025-05-03 18:58:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/405/dataEnvio'] String "2025-05-03 18:57:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/406/dataEnvio'] String "2025-05-03 18:56:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/407/dataEnvio'] String "2025-05-03 18:54:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/408/dataEnvio'] String "2025-05-03 18:51:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/409/dataEnvio'] String "2025-05-03 18:50:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/410/dataEnvio'] String "2025-05-03 18:47:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/411/dataEnvio'] String "2025-05-03 18:46:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/412/dataEnvio'] String "2025-05-03 18:45:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/413/dataEnvio'] String "2025-05-03 18:44:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/414/dataEnvio'] String "2025-05-03 18:43:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/415/dataEnvio'] String "2025-05-03 18:41:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/416/dataEnvio'] String "2025-05-03 18:41:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/417/dataEnvio'] String "2025-05-03 18:40:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/418/dataEnvio'] String "2025-05-03 18:35:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/419/dataEnvio'] String "2025-05-03 18:35:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/420/dataEnvio'] String "2025-05-03 18:34:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/421/dataEnvio'] String "2025-05-03 18:32:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/422/dataEnvio'] String "2025-05-03 18:31:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/423/dataEnvio'] String "2025-05-03 18:31:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/424/dataEnvio'] String "2025-05-03 18:29:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/425/dataEnvio'] String "2025-05-03 18:29:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/426/dataEnvio'] String "2025-05-03 18:27:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/427/dataEnvio'] String "2025-05-03 11:35:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/428/dataEnvio'] String "2025-05-03 11:34:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/429/dataEnvio'] String "2025-05-03 11:33:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/430/dataEnvio'] String "2025-05-03 11:33:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/431/dataEnvio'] String "2025-05-03 11:32:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/432/dataEnvio'] String "2025-05-03 11:31:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/433/dataEnvio'] String "2025-05-03 11:30:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/434/dataEnvio'] String "2025-05-03 11:28:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/435/dataEnvio'] String "2025-05-03 11:27:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/436/dataEnvio'] String "2025-05-03 11:27:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/437/dataEnvio'] String "2025-05-03 11:26:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/438/dataEnvio'] String "2025-05-03 11:26:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/439/dataEnvio'] String "2025-05-03 11:25:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/440/dataEnvio'] String "2025-05-03 11:24:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/441/dataEnvio'] String "2025-05-03 11:24:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/442/dataEnvio'] String "2025-05-03 11:22:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/443/dataEnvio'] String "2025-05-03 11:20:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/444/dataEnvio'] String "2025-05-03 11:20:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/445/dataEnvio'] String "2025-05-03 11:19:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/446/dataEnvio'] String "2025-05-03 11:16:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/447/dataEnvio'] String "2025-05-03 11:16:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/448/dataEnvio'] String "2025-05-03 11:15:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/449/dataEnvio'] String "2025-05-03 11:15:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/450/dataEnvio'] String "2025-05-03 11:14:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/451/dataEnvio'] String "2025-05-03 11:14:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/452/dataEnvio'] String "2025-05-03 11:14:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/453/dataEnvio'] String "2025-05-03 11:13:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/454/dataEnvio'] String "2025-05-03 11:13:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/455/dataEnvio'] String "2025-05-03 11:12:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/456/dataEnvio'] String "2025-05-03 11:10:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/457/dataEnvio'] String "2025-05-03 11:10:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/458/dataEnvio'] String "2025-05-03 11:10:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/459/dataEnvio'] String "2025-05-03 11:09:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/460/dataEnvio'] String "2025-05-03 11:09:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/461/dataEnvio'] String "2025-05-03 11:09:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/462/dataEnvio'] String "2025-05-03 11:09:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/463/dataEnvio'] String "2025-05-03 11:09:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/464/dataEnvio'] String "2025-05-03 11:09:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/465/dataEnvio'] String "2025-05-03 11:08:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/466/dataEnvio'] String "2025-05-03 11:08:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/467/dataEnvio'] String "2025-05-03 11:07:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/468/dataEnvio'] String "2025-05-03 11:07:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/469/dataEnvio'] String "2025-05-03 11:07:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/470/dataEnvio'] String "2025-05-03 11:07:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/471/dataEnvio'] String "2025-05-03 11:07:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/472/dataEnvio'] String "2025-05-03 11:07:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/473/dataEnvio'] String "2025-05-03 11:07:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/474/dataEnvio'] String "2025-05-03 11:07:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/475/dataEnvio'] String "2025-05-03 11:07:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/476/dataEnvio'] String "2025-05-03 11:07:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/477/dataEnvio'] String "2025-05-03 11:07:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/478/dataEnvio'] String "2025-05-03 11:07:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/479/dataEnvio'] String "2025-05-03 11:06:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/480/dataEnvio'] String "2025-05-03 11:06:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/481/dataEnvio'] String "2025-05-03 11:06:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/482/dataEnvio'] String "2025-05-03 11:05:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/483/dataEnvio'] String "2025-05-03 11:04:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/484/dataEnvio'] String "2025-05-03 11:02:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/485/dataEnvio'] String "2025-05-03 11:01:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/486/dataEnvio'] String "2025-05-03 11:01:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/487/dataEnvio'] String "2025-05-03 11:00:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/488/dataEnvio'] String "2025-05-03 11:00:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/489/dataEnvio'] String "2025-05-03 10:59:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/490/dataEnvio'] String "2025-05-03 10:59:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/491/dataEnvio'] String "2025-05-03 10:59:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/492/dataEnvio'] String "2025-05-03 10:59:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/493/dataEnvio'] String "2025-05-03 10:58:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/494/dataEnvio'] String "2025-05-03 10:58:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/495/dataEnvio'] String "2025-05-03 10:58:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/496/dataEnvio'] String "2025-05-03 10:57:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/497/dataEnvio'] String "2025-05-03 10:57:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/498/dataEnvio'] String "2025-05-03 10:57:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/499/dataEnvio'] String "2025-05-03 10:57:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/500/dataEnvio'] String "2025-05-03 10:57:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/501/dataEnvio'] String "2025-05-03 10:57:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/502/dataEnvio'] String "2025-05-03 10:57:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/503/dataEnvio'] String "2025-05-03 10:56:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/504/dataEnvio'] String "2025-05-03 10:55:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/505/dataEnvio'] String "2025-05-03 10:55:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/506/dataEnvio'] String "2025-05-03 10:55:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/507/dataEnvio'] String "2025-05-03 10:54:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/508/dataEnvio'] String "2025-05-03 10:53:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/509/dataEnvio'] String "2025-05-03 10:53:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/510/dataEnvio'] String "2025-05-03 10:53:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/511/dataEnvio'] String "2025-05-03 10:53:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/512/dataEnvio'] String "2025-05-03 10:53:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/513/dataEnvio'] String "2025-05-03 10:53:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/514/dataEnvio'] String "2025-05-03 10:53:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/515/dataEnvio'] String "2025-05-03 10:52:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/516/dataEnvio'] String "2025-05-03 10:52:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/517/dataEnvio'] String "2025-05-03 10:52:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/518/dataEnvio'] String "2025-05-03 10:52:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/519/dataEnvio'] String "2025-05-03 10:52:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/520/dataEnvio'] String "2025-05-03 10:52:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/521/dataEnvio'] String "2025-05-03 10:52:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/522/dataEnvio'] String "2025-05-03 10:52:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/523/dataEnvio'] String "2025-05-03 10:50:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/524/dataEnvio'] String "2025-05-03 10:48:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/525/dataEnvio'] String "2025-05-03 10:47:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/526/dataEnvio'] String "2025-05-03 10:47:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/527/dataEnvio'] String "2025-05-03 10:46:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/528/dataEnvio'] String "2025-05-03 10:45:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote?per_page=529",
                    headers=headers)
        
        assert res_3.status_code == 200
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == True
        assert res_3.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_3.json()["data"]) == 529
        assert res_3.json()["data"][0]["dataEnvio"] == "2025-05-03 23:45:41"
        assert res_3.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_3.json()["data"][1]["dataEnvio"] == "2025-05-03 23:45:09"
        assert res_3.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_3.json()["data"][2]["dataEnvio"] == "2025-05-03 23:44:33"
        assert res_3.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 526 elements. This limit of 3 elements can be increased in the configurations
        assert res_3.json()["pagination"]["total"] == 2389.0
        assert res_3.json()["pagination"]["count"] == 529.0
        assert res_3.json()["pagination"]["per_page"] == 529.0
        assert res_3.json()["pagination"]["current_page"] == 1.0
        assert res_3.json()["pagination"]["total_pages"] == 5.0
        assert res_3.json()["pagination"]["links"]["previous"] is None
        assert res_3.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id}/erros -> Response status 400 not defined for path '/v1/profissionais/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/27/erros?" + 
                    "page=229&" + 
                    "per_page=770",
                    headers=headers)
        
        assert res_4.status_code == 400
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "O ID fornecido não é um UUID válido. ID: 27"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"tipoEnsinoMedio\": 1, " + \
            " \"nome\": \"TgDfBZDKzyy9J\", " + \
            " \"genero\": 3, " + \
            " \"racaCor\": 4, " + \
            " \"email\": \"186oz_noTLunhAG\", " + \
            " \"bairro\": \"São Fontes\", " + \
            " \"uf\": 13, " + \
            " \"inep\": 41384733, " + \
            " \"dataIngresso\": \"2025-07-21\", " + \
            " \"dataFim\": \"1989-00-22\", " + \
            " \"cargaHoraria\": 40 " + \
            " } "
        headers['Accept'] = "application/json"
        res_5 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_5.status_code == 422
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #2 ($dataNascimento) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
    
    
    # Calls:
    # 1 - (200) GET:/v1/estudantes/lote
    # 2 - (200) PATCH:/v1/estudantes/lote
    # 3 - (422) POST:/v1/profissionais
    # 4 - (422) POST:/v1/profissionais
    # 5 - (404) GET:/v1/estudantes/validacao-cadastro
    # 6 - (200) GET:/v1/profissionais/lote
    # 7 - (201) POST:/v1/estudantes/lote
    # 8 - (400) GET:/v1/estudantes/lote/{id}/erros
    # 9 - (200) GET:/v1/profissionais
    # 10 - (200) GET:/v1/profissionais/lote
    # Found 527 potential faults of type-code 200
    # Using 4 examples:
    #   1
    #   123456789
    #   2010
    #   2014
    @timeout_decorator.timeout(60)
    def test_62(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote -> [Path '/pagination/links/previous'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote?" + 
                    "page=551&" + 
                    "per_page=10",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Lotes de estudantes obtidos com sucesso."
        assert len(res_0.json()["data"]) == 10
        assert res_0.json()["data"][0]["dataEnvio"] == "2025-03-21 01:48:26"
        assert res_0.json()["data"][0]["status_processamento"] == "Processado com erro"
        assert res_0.json()["data"][1]["dataEnvio"] == "2025-03-21 01:47:52"
        assert res_0.json()["data"][1]["status_processamento"] == "Processado com erro"
        assert res_0.json()["data"][2]["dataEnvio"] == "2025-03-21 01:47:50"
        assert res_0.json()["data"][2]["status_processamento"] == "Processado com erro"
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_0.json()["pagination"]["total"] == 9478.0
        assert res_0.json()["pagination"]["count"] == 10.0
        assert res_0.json()["pagination"]["per_page"] == 10.0
        assert res_0.json()["pagination"]["current_page"] == 551.0
        assert res_0.json()["pagination"]["total_pages"] == 948.0
        assert res_0.json()["pagination"]["links"]["previous"] == 550.0
        assert res_0.json()["pagination"]["links"]["next"] == 552.0
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_42_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_1.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"cpf\": \"37734322670\", " + \
            " \"nome\": \"Matheus da Paz\", " + \
            " \"nomeSocial\": \"vYHSe9eaiB\", " + \
            " \"sexo\": \"5\", " + \
            " \"logradouro\": \"Rua Rua Maximiano\", " + \
            " \"bairro\": \"YPZ0\", " + \
            " \"numero\": \"56\", " + \
            " \"cep\": \"45771961\", " + \
            " \"uf\": 25, " + \
            " \"inep\": 23264063, " + \
            " \"matriculaRede\": \"123456789\", " + \
            " \"codigoFuncao\": 1, " + \
            " \"dataIngresso\": \"1982-04-18\", " + \
            " \"dataFim\": \"2003-02-13\" " + \
            " } "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_2.status_code == 422
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #2 ($dataNascimento) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"cpf\": \"95293835840\", " + \
            " \"dataNascimento\": \"2019-01-01\", " + \
            " \"genero\": 6, " + \
            " \"email\": \"hortencia.maraisa.maia@fake.com\", " + \
            " \"telefone\": \"11942878677\", " + \
            " \"bairro\": \"\", " + \
            " \"cep\": \"Wn\", " + \
            " \"municipio\": 4314902, " + \
            " \"uf\": 31, " + \
            " \"inep\": 29481899, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6, " + \
            " \"anoInicioFormacaoAcademica\": 2010, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 250, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\", " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 6 " + \
            " }, " + \
            " { " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Instituto de Tecnologia do Piaui\" " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 1, " + \
            " \"anoInicioFormacaoAcademica\": 2016 " + \
            " } " + \
            " ], " + \
            " \"matriculaRede\": \"qyWPbnYsup9Y\", " + \
            " \"codigoFuncao\": 1, " + \
            " \"dataIngresso\": \"1923-10-27\", " + \
            " \"dataFim\": \"1973-02-17\" " + \
            " } "
        headers['Accept'] = "application/json"
        res_3 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_3.status_code == 422
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #1 ($nome) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> Response status 404 not defined for path '/v1/estudantes/validacao-cadastro'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/validacao-cadastro?" + 
                    "page=573&" + 
                    "per_page=922&" + 
                    "cpf=28326328405",
                    headers=headers)
        
        assert res_4.status_code == 404
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "Ocorreu um erro inesperado."
        assert res_4.json()["errors"]["message"] == "Nenhum dado encontrado"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/0/dataEnvio'] String "2025-05-03 23:59:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1/dataEnvio'] String "2025-05-03 23:58:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2/dataEnvio'] String "2025-05-03 23:56:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/3/dataEnvio'] String "2025-05-03 23:56:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/4/dataEnvio'] String "2025-05-03 23:56:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/5/dataEnvio'] String "2025-05-03 23:45:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/6/dataEnvio'] String "2025-05-03 23:45:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/7/dataEnvio'] String "2025-05-03 23:44:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/8/dataEnvio'] String "2025-05-03 23:40:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/9/dataEnvio'] String "2025-05-03 23:39:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/10/dataEnvio'] String "2025-05-03 23:38:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/11/dataEnvio'] String "2025-05-03 23:36:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/12/dataEnvio'] String "2025-05-03 23:35:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/13/dataEnvio'] String "2025-05-03 23:33:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/14/dataEnvio'] String "2025-05-03 23:28:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/15/dataEnvio'] String "2025-05-03 23:28:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/16/dataEnvio'] String "2025-05-03 23:25:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/17/dataEnvio'] String "2025-05-03 23:23:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/18/dataEnvio'] String "2025-05-03 23:22:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/19/dataEnvio'] String "2025-05-03 23:21:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/20/dataEnvio'] String "2025-05-03 23:19:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/21/dataEnvio'] String "2025-05-03 23:19:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/22/dataEnvio'] String "2025-05-03 23:19:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/23/dataEnvio'] String "2025-05-03 23:18:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/24/dataEnvio'] String "2025-05-03 23:18:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/25/dataEnvio'] String "2025-05-03 23:11:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/26/dataEnvio'] String "2025-05-03 23:11:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/27/dataEnvio'] String "2025-05-03 23:11:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/28/dataEnvio'] String "2025-05-03 23:10:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/29/dataEnvio'] String "2025-05-03 23:05:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/30/dataEnvio'] String "2025-05-03 23:04:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/31/dataEnvio'] String "2025-05-03 23:03:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/32/dataEnvio'] String "2025-05-03 23:03:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/33/dataEnvio'] String "2025-05-03 23:01:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/34/dataEnvio'] String "2025-05-03 23:01:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/35/dataEnvio'] String "2025-05-03 22:59:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/36/dataEnvio'] String "2025-05-03 22:57:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/37/dataEnvio'] String "2025-05-03 22:53:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/38/dataEnvio'] String "2025-05-03 22:51:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/39/dataEnvio'] String "2025-05-03 22:50:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/40/dataEnvio'] String "2025-05-03 22:50:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/41/dataEnvio'] String "2025-05-03 22:49:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/42/dataEnvio'] String "2025-05-03 22:49:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/43/dataEnvio'] String "2025-05-03 22:48:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/44/dataEnvio'] String "2025-05-03 22:48:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/45/dataEnvio'] String "2025-05-03 22:47:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/46/dataEnvio'] String "2025-05-03 22:44:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/47/dataEnvio'] String "2025-05-03 22:42:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/48/dataEnvio'] String "2025-05-03 22:40:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/49/dataEnvio'] String "2025-05-03 22:38:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/50/dataEnvio'] String "2025-05-03 22:37:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/51/dataEnvio'] String "2025-05-03 22:36:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/52/dataEnvio'] String "2025-05-03 22:35:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/53/dataEnvio'] String "2025-05-03 22:34:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/54/dataEnvio'] String "2025-05-03 22:34:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/55/dataEnvio'] String "2025-05-03 22:33:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/56/dataEnvio'] String "2025-05-03 22:31:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/57/dataEnvio'] String "2025-05-03 22:30:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/58/dataEnvio'] String "2025-05-03 22:29:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/59/dataEnvio'] String "2025-05-03 22:28:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/60/dataEnvio'] String "2025-05-03 22:25:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/61/dataEnvio'] String "2025-05-03 22:24:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/62/dataEnvio'] String "2025-05-03 22:23:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/63/dataEnvio'] String "2025-05-03 22:23:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/64/dataEnvio'] String "2025-05-03 22:23:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/65/dataEnvio'] String "2025-05-03 22:23:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/66/dataEnvio'] String "2025-05-03 22:23:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/67/dataEnvio'] String "2025-05-03 22:23:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/68/dataEnvio'] String "2025-05-03 22:23:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/69/dataEnvio'] String "2025-05-03 22:23:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/70/dataEnvio'] String "2025-05-03 22:23:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/71/dataEnvio'] String "2025-05-03 22:22:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/72/dataEnvio'] String "2025-05-03 22:21:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/73/dataEnvio'] String "2025-05-03 22:21:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/74/dataEnvio'] String "2025-05-03 22:21:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/75/dataEnvio'] String "2025-05-03 22:21:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/76/dataEnvio'] String "2025-05-03 22:21:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/77/dataEnvio'] String "2025-05-03 22:20:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/78/dataEnvio'] String "2025-05-03 22:20:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/79/dataEnvio'] String "2025-05-03 22:20:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/80/dataEnvio'] String "2025-05-03 22:20:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/81/dataEnvio'] String "2025-05-03 22:20:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/82/dataEnvio'] String "2025-05-03 22:20:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/83/dataEnvio'] String "2025-05-03 22:20:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/84/dataEnvio'] String "2025-05-03 22:19:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/85/dataEnvio'] String "2025-05-03 22:19:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/86/dataEnvio'] String "2025-05-03 22:19:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/87/dataEnvio'] String "2025-05-03 22:19:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/88/dataEnvio'] String "2025-05-03 22:19:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/89/dataEnvio'] String "2025-05-03 22:19:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/90/dataEnvio'] String "2025-05-03 22:18:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/91/dataEnvio'] String "2025-05-03 22:18:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/92/dataEnvio'] String "2025-05-03 22:15:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/93/dataEnvio'] String "2025-05-03 22:15:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/94/dataEnvio'] String "2025-05-03 22:13:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/95/dataEnvio'] String "2025-05-03 22:12:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/96/dataEnvio'] String "2025-05-03 22:12:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/97/dataEnvio'] String "2025-05-03 22:11:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/98/dataEnvio'] String "2025-05-03 22:11:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/99/dataEnvio'] String "2025-05-03 22:11:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/100/dataEnvio'] String "2025-05-03 22:11:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/101/dataEnvio'] String "2025-05-03 22:11:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/102/dataEnvio'] String "2025-05-03 22:10:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/103/dataEnvio'] String "2025-05-03 22:10:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/104/dataEnvio'] String "2025-05-03 22:10:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/105/dataEnvio'] String "2025-05-03 22:09:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/106/dataEnvio'] String "2025-05-03 22:09:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/107/dataEnvio'] String "2025-05-03 22:06:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/108/dataEnvio'] String "2025-05-03 22:05:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/109/dataEnvio'] String "2025-05-03 22:04:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/110/dataEnvio'] String "2025-05-03 22:04:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/111/dataEnvio'] String "2025-05-03 22:04:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/112/dataEnvio'] String "2025-05-03 22:04:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/113/dataEnvio'] String "2025-05-03 22:04:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/114/dataEnvio'] String "2025-05-03 22:04:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/115/dataEnvio'] String "2025-05-03 22:04:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/116/dataEnvio'] String "2025-05-03 22:03:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/117/dataEnvio'] String "2025-05-03 22:03:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/118/dataEnvio'] String "2025-05-03 22:03:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/119/dataEnvio'] String "2025-05-03 22:02:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/120/dataEnvio'] String "2025-05-03 22:01:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/121/dataEnvio'] String "2025-05-03 22:00:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/122/dataEnvio'] String "2025-05-03 21:59:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/123/dataEnvio'] String "2025-05-03 21:59:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/124/dataEnvio'] String "2025-05-03 21:59:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/125/dataEnvio'] String "2025-05-03 21:58:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/126/dataEnvio'] String "2025-05-03 21:57:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/127/dataEnvio'] String "2025-05-03 21:57:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/128/dataEnvio'] String "2025-05-03 21:56:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/129/dataEnvio'] String "2025-05-03 21:56:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/130/dataEnvio'] String "2025-05-03 21:56:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/131/dataEnvio'] String "2025-05-03 21:56:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/132/dataEnvio'] String "2025-05-03 21:56:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/133/dataEnvio'] String "2025-05-03 21:55:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/134/dataEnvio'] String "2025-05-03 21:55:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/135/dataEnvio'] String "2025-05-03 21:55:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/136/dataEnvio'] String "2025-05-03 21:55:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/137/dataEnvio'] String "2025-05-03 21:55:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/138/dataEnvio'] String "2025-05-03 21:55:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/139/dataEnvio'] String "2025-05-03 21:55:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/140/dataEnvio'] String "2025-05-03 21:55:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/141/dataEnvio'] String "2025-05-03 21:55:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/142/dataEnvio'] String "2025-05-03 21:55:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/143/dataEnvio'] String "2025-05-03 21:54:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/144/dataEnvio'] String "2025-05-03 21:54:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/145/dataEnvio'] String "2025-05-03 21:54:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/146/dataEnvio'] String "2025-05-03 21:54:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/147/dataEnvio'] String "2025-05-03 21:54:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/148/dataEnvio'] String "2025-05-03 21:54:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/149/dataEnvio'] String "2025-05-03 21:53:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/150/dataEnvio'] String "2025-05-03 21:53:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/151/dataEnvio'] String "2025-05-03 21:53:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/152/dataEnvio'] String "2025-05-03 21:53:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/153/dataEnvio'] String "2025-05-03 21:53:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/154/dataEnvio'] String "2025-05-03 21:52:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/155/dataEnvio'] String "2025-05-03 21:52:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/156/dataEnvio'] String "2025-05-03 21:51:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/157/dataEnvio'] String "2025-05-03 21:51:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/158/dataEnvio'] String "2025-05-03 21:51:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/159/dataEnvio'] String "2025-05-03 21:51:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/160/dataEnvio'] String "2025-05-03 21:51:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/161/dataEnvio'] String "2025-05-03 21:50:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/162/dataEnvio'] String "2025-05-03 21:49:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/163/dataEnvio'] String "2025-05-03 21:49:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/164/dataEnvio'] String "2025-05-03 21:49:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/165/dataEnvio'] String "2025-05-03 21:48:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/166/dataEnvio'] String "2025-05-03 21:46:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/167/dataEnvio'] String "2025-05-03 21:44:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/168/dataEnvio'] String "2025-05-03 21:43:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/169/dataEnvio'] String "2025-05-03 21:43:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/170/dataEnvio'] String "2025-05-03 21:42:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/171/dataEnvio'] String "2025-05-03 21:41:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/172/dataEnvio'] String "2025-05-03 21:40:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/173/dataEnvio'] String "2025-05-03 21:38:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/174/dataEnvio'] String "2025-05-03 21:38:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/175/dataEnvio'] String "2025-05-03 21:37:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/176/dataEnvio'] String "2025-05-03 21:37:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/177/dataEnvio'] String "2025-05-03 21:34:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/178/dataEnvio'] String "2025-05-03 21:28:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/179/dataEnvio'] String "2025-05-03 21:28:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/180/dataEnvio'] String "2025-05-03 21:25:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/181/dataEnvio'] String "2025-05-03 21:24:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/182/dataEnvio'] String "2025-05-03 21:24:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/183/dataEnvio'] String "2025-05-03 21:23:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/184/dataEnvio'] String "2025-05-03 21:23:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/185/dataEnvio'] String "2025-05-03 21:21:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/186/dataEnvio'] String "2025-05-03 21:20:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/187/dataEnvio'] String "2025-05-03 21:16:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/188/dataEnvio'] String "2025-05-03 21:16:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/189/dataEnvio'] String "2025-05-03 21:11:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/190/dataEnvio'] String "2025-05-03 21:11:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/191/dataEnvio'] String "2025-05-03 21:09:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/192/dataEnvio'] String "2025-05-03 21:09:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/193/dataEnvio'] String "2025-05-03 21:09:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/194/dataEnvio'] String "2025-05-03 21:06:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/195/dataEnvio'] String "2025-05-03 21:05:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/196/dataEnvio'] String "2025-05-03 21:05:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/197/dataEnvio'] String "2025-05-03 21:03:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/198/dataEnvio'] String "2025-05-03 21:03:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/199/dataEnvio'] String "2025-05-03 21:01:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/200/dataEnvio'] String "2025-05-03 20:59:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/201/dataEnvio'] String "2025-05-03 20:56:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/202/dataEnvio'] String "2025-05-03 20:55:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/203/dataEnvio'] String "2025-05-03 20:54:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/204/dataEnvio'] String "2025-05-03 20:54:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/205/dataEnvio'] String "2025-05-03 20:54:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/206/dataEnvio'] String "2025-05-03 20:52:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/207/dataEnvio'] String "2025-05-03 20:52:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/208/dataEnvio'] String "2025-05-03 20:51:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/209/dataEnvio'] String "2025-05-03 20:50:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/210/dataEnvio'] String "2025-05-03 20:50:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/211/dataEnvio'] String "2025-05-03 20:49:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/212/dataEnvio'] String "2025-05-03 20:47:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/213/dataEnvio'] String "2025-05-03 20:45:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/214/dataEnvio'] String "2025-05-03 20:42:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/215/dataEnvio'] String "2025-05-03 20:42:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/216/dataEnvio'] String "2025-05-03 20:41:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/217/dataEnvio'] String "2025-05-03 20:41:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/218/dataEnvio'] String "2025-05-03 20:40:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/219/dataEnvio'] String "2025-05-03 20:40:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/220/dataEnvio'] String "2025-05-03 20:38:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/221/dataEnvio'] String "2025-05-03 20:35:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/222/dataEnvio'] String "2025-05-03 20:30:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/223/dataEnvio'] String "2025-05-03 20:28:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/224/dataEnvio'] String "2025-05-03 20:25:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/225/dataEnvio'] String "2025-05-03 20:24:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/226/dataEnvio'] String "2025-05-03 20:24:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/227/dataEnvio'] String "2025-05-03 20:23:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/228/dataEnvio'] String "2025-05-03 20:21:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/229/dataEnvio'] String "2025-05-03 20:21:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/230/dataEnvio'] String "2025-05-03 20:16:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/231/dataEnvio'] String "2025-05-03 20:15:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/232/dataEnvio'] String "2025-05-03 20:14:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/233/dataEnvio'] String "2025-05-03 20:14:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/234/dataEnvio'] String "2025-05-03 20:13:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/235/dataEnvio'] String "2025-05-03 20:13:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/236/dataEnvio'] String "2025-05-03 20:11:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/237/dataEnvio'] String "2025-05-03 20:10:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/238/dataEnvio'] String "2025-05-03 20:10:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/239/dataEnvio'] String "2025-05-03 20:08:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/240/dataEnvio'] String "2025-05-03 20:08:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/241/dataEnvio'] String "2025-05-03 20:07:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/242/dataEnvio'] String "2025-05-03 20:05:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/243/dataEnvio'] String "2025-05-03 20:00:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/244/dataEnvio'] String "2025-05-03 19:59:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/245/dataEnvio'] String "2025-05-03 19:59:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/246/dataEnvio'] String "2025-05-03 19:59:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/247/dataEnvio'] String "2025-05-03 19:59:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/248/dataEnvio'] String "2025-05-03 19:59:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/249/dataEnvio'] String "2025-05-03 19:59:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/250/dataEnvio'] String "2025-05-03 19:59:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/251/dataEnvio'] String "2025-05-03 19:59:10" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/252/dataEnvio'] String "2025-05-03 19:59:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/253/dataEnvio'] String "2025-05-03 19:58:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/254/dataEnvio'] String "2025-05-03 19:58:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/255/dataEnvio'] String "2025-05-03 19:58:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/256/dataEnvio'] String "2025-05-03 19:58:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/257/dataEnvio'] String "2025-05-03 19:58:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/258/dataEnvio'] String "2025-05-03 19:58:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/259/dataEnvio'] String "2025-05-03 19:57:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/260/dataEnvio'] String "2025-05-03 19:57:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/261/dataEnvio'] String "2025-05-03 19:56:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/262/dataEnvio'] String "2025-05-03 19:56:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/263/dataEnvio'] String "2025-05-03 19:56:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/264/dataEnvio'] String "2025-05-03 19:56:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/265/dataEnvio'] String "2025-05-03 19:56:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/266/dataEnvio'] String "2025-05-03 19:56:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/267/dataEnvio'] String "2025-05-03 19:56:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/268/dataEnvio'] String "2025-05-03 19:56:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/269/dataEnvio'] String "2025-05-03 19:56:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/270/dataEnvio'] String "2025-05-03 19:55:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/271/dataEnvio'] String "2025-05-03 19:55:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/272/dataEnvio'] String "2025-05-03 19:55:37" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/273/dataEnvio'] String "2025-05-03 19:55:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/274/dataEnvio'] String "2025-05-03 19:55:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/275/dataEnvio'] String "2025-05-03 19:55:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/276/dataEnvio'] String "2025-05-03 19:55:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/277/dataEnvio'] String "2025-05-03 19:55:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/278/dataEnvio'] String "2025-05-03 19:55:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/279/dataEnvio'] String "2025-05-03 19:55:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/280/dataEnvio'] String "2025-05-03 19:54:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/281/dataEnvio'] String "2025-05-03 19:54:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/282/dataEnvio'] String "2025-05-03 19:54:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/283/dataEnvio'] String "2025-05-03 19:54:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/284/dataEnvio'] String "2025-05-03 19:54:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/285/dataEnvio'] String "2025-05-03 19:51:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/286/dataEnvio'] String "2025-05-03 19:51:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/287/dataEnvio'] String "2025-05-03 19:51:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/288/dataEnvio'] String "2025-05-03 19:51:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/289/dataEnvio'] String "2025-05-03 19:49:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/290/dataEnvio'] String "2025-05-03 19:49:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/291/dataEnvio'] String "2025-05-03 19:49:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/292/dataEnvio'] String "2025-05-03 19:48:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/293/dataEnvio'] String "2025-05-03 19:47:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/294/dataEnvio'] String "2025-05-03 19:47:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/295/dataEnvio'] String "2025-05-03 19:47:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/296/dataEnvio'] String "2025-05-03 19:47:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/297/dataEnvio'] String "2025-05-03 19:47:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/298/dataEnvio'] String "2025-05-03 19:46:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/299/dataEnvio'] String "2025-05-03 19:46:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/300/dataEnvio'] String "2025-05-03 19:46:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/301/dataEnvio'] String "2025-05-03 19:45:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/302/dataEnvio'] String "2025-05-03 19:45:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/303/dataEnvio'] String "2025-05-03 19:45:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/304/dataEnvio'] String "2025-05-03 19:44:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/305/dataEnvio'] String "2025-05-03 19:44:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/306/dataEnvio'] String "2025-05-03 19:44:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/307/dataEnvio'] String "2025-05-03 19:44:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/308/dataEnvio'] String "2025-05-03 19:44:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/309/dataEnvio'] String "2025-05-03 19:44:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/310/dataEnvio'] String "2025-05-03 19:44:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/311/dataEnvio'] String "2025-05-03 19:44:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/312/dataEnvio'] String "2025-05-03 19:44:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/313/dataEnvio'] String "2025-05-03 19:43:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/314/dataEnvio'] String "2025-05-03 19:42:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/315/dataEnvio'] String "2025-05-03 19:42:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/316/dataEnvio'] String "2025-05-03 19:41:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/317/dataEnvio'] String "2025-05-03 19:41:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/318/dataEnvio'] String "2025-05-03 19:41:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/319/dataEnvio'] String "2025-05-03 19:41:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/320/dataEnvio'] String "2025-05-03 19:41:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/321/dataEnvio'] String "2025-05-03 19:41:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/322/dataEnvio'] String "2025-05-03 19:41:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/323/dataEnvio'] String "2025-05-03 19:41:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/324/dataEnvio'] String "2025-05-03 19:41:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/325/dataEnvio'] String "2025-05-03 19:40:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/326/dataEnvio'] String "2025-05-03 19:40:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/327/dataEnvio'] String "2025-05-03 19:40:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/328/dataEnvio'] String "2025-05-03 19:40:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/329/dataEnvio'] String "2025-05-03 19:40:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/330/dataEnvio'] String "2025-05-03 19:40:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/331/dataEnvio'] String "2025-05-03 19:40:18" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/332/dataEnvio'] String "2025-05-03 19:39:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/333/dataEnvio'] String "2025-05-03 19:39:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/334/dataEnvio'] String "2025-05-03 19:39:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/335/dataEnvio'] String "2025-05-03 19:38:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/336/dataEnvio'] String "2025-05-03 19:38:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/337/dataEnvio'] String "2025-05-03 19:38:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/338/dataEnvio'] String "2025-05-03 19:36:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/339/dataEnvio'] String "2025-05-03 19:36:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/340/dataEnvio'] String "2025-05-03 19:35:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/341/dataEnvio'] String "2025-05-03 19:35:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/342/dataEnvio'] String "2025-05-03 19:35:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/343/dataEnvio'] String "2025-05-03 19:35:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/344/dataEnvio'] String "2025-05-03 19:35:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/345/dataEnvio'] String "2025-05-03 19:35:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/346/dataEnvio'] String "2025-05-03 19:35:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/347/dataEnvio'] String "2025-05-03 19:35:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/348/dataEnvio'] String "2025-05-03 19:35:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/349/dataEnvio'] String "2025-05-03 19:34:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/350/dataEnvio'] String "2025-05-03 19:34:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/351/dataEnvio'] String "2025-05-03 19:34:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/352/dataEnvio'] String "2025-05-03 19:33:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/353/dataEnvio'] String "2025-05-03 19:33:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/354/dataEnvio'] String "2025-05-03 19:33:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/355/dataEnvio'] String "2025-05-03 19:32:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/356/dataEnvio'] String "2025-05-03 19:31:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/357/dataEnvio'] String "2025-05-03 19:31:27" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/358/dataEnvio'] String "2025-05-03 19:31:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/359/dataEnvio'] String "2025-05-03 19:31:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/360/dataEnvio'] String "2025-05-03 19:31:12" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/361/dataEnvio'] String "2025-05-03 19:31:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/362/dataEnvio'] String "2025-05-03 19:30:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/363/dataEnvio'] String "2025-05-03 19:30:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/364/dataEnvio'] String "2025-05-03 19:30:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/365/dataEnvio'] String "2025-05-03 19:30:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/366/dataEnvio'] String "2025-05-03 19:29:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/367/dataEnvio'] String "2025-05-03 19:29:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/368/dataEnvio'] String "2025-05-03 19:29:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/369/dataEnvio'] String "2025-05-03 19:28:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/370/dataEnvio'] String "2025-05-03 19:27:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/371/dataEnvio'] String "2025-05-03 19:27:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/372/dataEnvio'] String "2025-05-03 19:27:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/373/dataEnvio'] String "2025-05-03 19:27:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/374/dataEnvio'] String "2025-05-03 19:27:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/375/dataEnvio'] String "2025-05-03 19:27:23" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/376/dataEnvio'] String "2025-05-03 19:27:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/377/dataEnvio'] String "2025-05-03 19:27:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/378/dataEnvio'] String "2025-05-03 19:26:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/379/dataEnvio'] String "2025-05-03 19:26:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/380/dataEnvio'] String "2025-05-03 19:25:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/381/dataEnvio'] String "2025-05-03 19:25:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/382/dataEnvio'] String "2025-05-03 19:25:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/383/dataEnvio'] String "2025-05-03 19:25:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/384/dataEnvio'] String "2025-05-03 19:25:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/385/dataEnvio'] String "2025-05-03 19:25:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/386/dataEnvio'] String "2025-05-03 19:24:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/387/dataEnvio'] String "2025-05-03 19:24:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/388/dataEnvio'] String "2025-05-03 19:23:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/389/dataEnvio'] String "2025-05-03 19:23:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/390/dataEnvio'] String "2025-05-03 19:23:52" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/391/dataEnvio'] String "2025-05-03 19:23:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/392/dataEnvio'] String "2025-05-03 19:23:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/393/dataEnvio'] String "2025-05-03 19:23:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/394/dataEnvio'] String "2025-05-03 19:21:31" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/395/dataEnvio'] String "2025-05-03 19:20:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/396/dataEnvio'] String "2025-05-03 19:18:47" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/397/dataEnvio'] String "2025-05-03 19:17:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/398/dataEnvio'] String "2025-05-03 19:16:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/399/dataEnvio'] String "2025-05-03 19:11:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/400/dataEnvio'] String "2025-05-03 19:10:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/401/dataEnvio'] String "2025-05-03 19:08:21" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/402/dataEnvio'] String "2025-05-03 19:07:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/403/dataEnvio'] String "2025-05-03 19:05:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/404/dataEnvio'] String "2025-05-03 19:03:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/405/dataEnvio'] String "2025-05-03 19:01:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/406/dataEnvio'] String "2025-05-03 19:00:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/407/dataEnvio'] String "2025-05-03 19:00:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/408/dataEnvio'] String "2025-05-03 18:59:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/409/dataEnvio'] String "2025-05-03 18:58:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/410/dataEnvio'] String "2025-05-03 18:57:40" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/411/dataEnvio'] String "2025-05-03 18:56:35" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/412/dataEnvio'] String "2025-05-03 18:54:43" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/413/dataEnvio'] String "2025-05-03 18:51:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/414/dataEnvio'] String "2025-05-03 18:50:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/415/dataEnvio'] String "2025-05-03 18:47:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/416/dataEnvio'] String "2025-05-03 18:46:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/417/dataEnvio'] String "2025-05-03 18:45:28" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/418/dataEnvio'] String "2025-05-03 18:44:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/419/dataEnvio'] String "2025-05-03 18:43:15" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/420/dataEnvio'] String "2025-05-03 18:41:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/421/dataEnvio'] String "2025-05-03 18:41:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/422/dataEnvio'] String "2025-05-03 18:40:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/423/dataEnvio'] String "2025-05-03 18:35:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/424/dataEnvio'] String "2025-05-03 18:35:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/425/dataEnvio'] String "2025-05-03 18:34:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/426/dataEnvio'] String "2025-05-03 18:32:48" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/427/dataEnvio'] String "2025-05-03 18:31:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/428/dataEnvio'] String "2025-05-03 18:31:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/429/dataEnvio'] String "2025-05-03 18:29:58" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/430/dataEnvio'] String "2025-05-03 18:29:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/431/dataEnvio'] String "2025-05-03 18:27:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/432/dataEnvio'] String "2025-05-03 11:35:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/433/dataEnvio'] String "2025-05-03 11:34:29" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/434/dataEnvio'] String "2025-05-03 11:33:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/435/dataEnvio'] String "2025-05-03 11:33:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/436/dataEnvio'] String "2025-05-03 11:32:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/437/dataEnvio'] String "2025-05-03 11:31:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/438/dataEnvio'] String "2025-05-03 11:30:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/439/dataEnvio'] String "2025-05-03 11:28:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/440/dataEnvio'] String "2025-05-03 11:27:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/441/dataEnvio'] String "2025-05-03 11:27:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/442/dataEnvio'] String "2025-05-03 11:26:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/443/dataEnvio'] String "2025-05-03 11:26:22" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/444/dataEnvio'] String "2025-05-03 11:25:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/445/dataEnvio'] String "2025-05-03 11:24:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/446/dataEnvio'] String "2025-05-03 11:24:50" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/447/dataEnvio'] String "2025-05-03 11:22:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/448/dataEnvio'] String "2025-05-03 11:20:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/449/dataEnvio'] String "2025-05-03 11:20:00" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/450/dataEnvio'] String "2025-05-03 11:19:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/451/dataEnvio'] String "2025-05-03 11:16:46" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/452/dataEnvio'] String "2025-05-03 11:16:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/453/dataEnvio'] String "2025-05-03 11:15:44" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/454/dataEnvio'] String "2025-05-03 11:15:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/455/dataEnvio'] String "2025-05-03 11:14:34" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/456/dataEnvio'] String "2025-05-03 11:14:13" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/457/dataEnvio'] String "2025-05-03 11:14:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/458/dataEnvio'] String "2025-05-03 11:13:54" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/459/dataEnvio'] String "2025-05-03 11:13:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/460/dataEnvio'] String "2025-05-03 11:12:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/461/dataEnvio'] String "2025-05-03 11:10:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/462/dataEnvio'] String "2025-05-03 11:10:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/463/dataEnvio'] String "2025-05-03 11:10:01" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/464/dataEnvio'] String "2025-05-03 11:09:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/465/dataEnvio'] String "2025-05-03 11:09:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/466/dataEnvio'] String "2025-05-03 11:09:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/467/dataEnvio'] String "2025-05-03 11:09:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/468/dataEnvio'] String "2025-05-03 11:09:07" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/469/dataEnvio'] String "2025-05-03 11:09:04" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/470/dataEnvio'] String "2025-05-03 11:08:55" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/471/dataEnvio'] String "2025-05-03 11:08:24" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/472/dataEnvio'] String "2025-05-03 11:07:57" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/473/dataEnvio'] String "2025-05-03 11:07:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/474/dataEnvio'] String "2025-05-03 11:07:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/475/dataEnvio'] String "2025-05-03 11:07:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/476/dataEnvio'] String "2025-05-03 11:07:42" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/477/dataEnvio'] String "2025-05-03 11:07:39" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/478/dataEnvio'] String "2025-05-03 11:07:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/479/dataEnvio'] String "2025-05-03 11:07:30" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/480/dataEnvio'] String "2025-05-03 11:07:16" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/481/dataEnvio'] String "2025-05-03 11:07:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/482/dataEnvio'] String "2025-05-03 11:07:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/483/dataEnvio'] String "2025-05-03 11:07:02" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/484/dataEnvio'] String "2025-05-03 11:06:59" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/485/dataEnvio'] String "2025-05-03 11:06:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/486/dataEnvio'] String "2025-05-03 11:06:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/487/dataEnvio'] String "2025-05-03 11:05:14" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/488/dataEnvio'] String "2025-05-03 11:04:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/489/dataEnvio'] String "2025-05-03 11:02:08" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/490/dataEnvio'] String "2025-05-03 11:01:36" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/491/dataEnvio'] String "2025-05-03 11:01:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/492/dataEnvio'] String "2025-05-03 11:00:38" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/493/dataEnvio'] String "2025-05-03 11:00:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/494/dataEnvio'] String "2025-05-03 10:59:32" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/495/dataEnvio'] String "2025-05-03 10:59:11" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/496/dataEnvio'] String "2025-05-03 10:59:06" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/497/dataEnvio'] String "2025-05-03 10:59:03" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/498/dataEnvio'] String "2025-05-03 10:58:56" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/499/dataEnvio'] String "2025-05-03 10:58:20" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/500/dataEnvio'] String "2025-05-03 10:58:17" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/501/dataEnvio'] String "2025-05-03 10:57:51" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/502/dataEnvio'] String "2025-05-03 10:57:45" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_5 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote?per_page=503",
                    headers=headers)
        
        assert res_5.status_code == 200
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == True
        assert res_5.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_5.json()["data"]) == 503
        assert res_5.json()["data"][0]["dataEnvio"] == "2025-05-03 23:59:19"
        assert res_5.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_5.json()["data"][1]["dataEnvio"] == "2025-05-03 23:58:26"
        assert res_5.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_5.json()["data"][2]["dataEnvio"] == "2025-05-03 23:56:49"
        assert res_5.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 500 elements. This limit of 3 elements can be increased in the configurations
        assert res_5.json()["pagination"]["total"] == 2394.0
        assert res_5.json()["pagination"]["count"] == 503.0
        assert res_5.json()["pagination"]["per_page"] == 503.0
        assert res_5.json()["pagination"]["current_page"] == 1.0
        assert res_5.json()["pagination"]["total_pages"] == 5.0
        assert res_5.json()["pagination"]["links"]["previous"] is None
        assert res_5.json()["pagination"]["links"]["next"] == 2.0
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpfResponsavel\": \"79186856529\", " + \
            " \"numeroNISResponsavel\": \"29369061142\", " + \
            " \"nomeMaeEstudante\": \"João Pedro Palhares\", " + \
            " \"cpf\": \"98484626865\", " + \
            " \"nome\": \"Eduarda Menendes\", " + \
            " \"racaCor\": 0, " + \
            " \"rg\": \"ZgN86E9qT9I\", " + \
            " \"bairro\": \"São Santana\", " + \
            " \"cep\": \"26728316\", " + \
            " \"municipio\": 501, " + \
            " \"uf\": 970, " + \
            " \"inep\": 32035063, " + \
            " \"dataInicioPeriodoLetivo\": \"1953-10-19\", " + \
            " \"formaOrganizacaoTurma\": 1, " + \
            " \"anoMatricula\": 2024 " + \
            " }, " + \
            " { " + \
            " \"cpfResponsavel\": \"49919585203\", " + \
            " \"numeroNISResponsavel\": \"dU6zXdoE\", " + \
            " \"cpf\": \"hN4kr4zJ\", " + \
            " \"dataNascimento\": \"MtG1G0csFjeQ_uk\", " + \
            " \"genero\": 5, " + \
            " \"telefone\": \"11951045305\", " + \
            " \"numeroNIS\": \"8alzsp6v\", " + \
            " \"orgaoEmissor\": \"SSP-PE\", " + \
            " \"cnh\": \"10142015477\", " + \
            " \"logradouro\": \"V6BRylQkNl4\", " + \
            " \"numero\": \"9\", " + \
            " \"cep\": \"54958697\", " + \
            " \"municipio\": 2700409, " + \
            " \"uf\": 29, " + \
            " \"dataInicioMatricula\": \"1939-01-25\", " + \
            " \"serieAno\": 19, " + \
            " \"matriculaRede\": \"AhMTo\", " + \
            " \"instituicao\": 149264, " + \
            " \"formaOrganizacaoTurma\": 4, " + \
            " \"anoMatricula\": 2024 " + \
            " }, " + \
            " { " + \
            " \"nome\": \"CSqZsmWaGkeBWPRc\", " + \
            " \"dataNascimento\": \"2005-01-01\", " + \
            " \"genero\": 7, " + \
            " \"telefone\": \"0pxFxT\", " + \
            " \"sexo\": \"3\", " + \
            " \"certidaoNascimento\": \"EVRyh\", " + \
            " \"bairro\": \"São Aguiar\", " + \
            " \"municipio\": 477, " + \
            " \"estudantePpl\": 42, " + \
            " \"matriculaRede\": \"AhMTo\", " + \
            " \"inep\": 41066537, " + \
            " \"dataInicioPeriodoLetivo\": \"1920-08-32\", " + \
            " \"estudanteAnoPeriodo\": 3, " + \
            " \"estudanteIntegral\": 42, " + \
            " \"anoMatricula\": 2024 " + \
            " }, " + \
            " { " + \
            " \"cpfResponsavel\": \"92978217073\", " + \
            " \"numeroNISResponsavel\": \"NTZp9_Ou6\", " + \
            " \"nomeMaeEstudante\": \"dimIaPSr\", " + \
            " \"cpf\": \"fV\", " + \
            " \"nome\": \"Fábio Lobos\", " + \
            " \"dataNascimento\": \"1988-07-17\", " + \
            " \"email\": \"hortencia.de.oliveira.paz@fake.com\", " + \
            " \"tipoDeficiencia\": [], " + \
            " \"numeroNIS\": \"44225343610\", " + \
            " \"rg\": \"P2\", " + \
            " \"orgaoEmissor\": \"ZHH\", " + \
            " \"certidaoNascimento\": \"49183986346288970732283211450118\", " + \
            " \"cnh\": \"t\", " + \
            " \"logradouro\": \"Rua Largo Campos\", " + \
            " \"numero\": \"55200\", " + \
            " \"cep\": \"90794779\", " + \
            " \"uf\": 772, " + \
            " \"dataInicioMatricula\": \"1901-02-17\", " + \
            " \"serieAno\": 28, " + \
            " \"matriculaRede\": \"3ArBS\", " + \
            " \"inep\": 29191084 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_6 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_6.status_code == 201
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == True
        assert res_6.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_7 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/43/erros?page=971",
                    headers=headers)
        
        assert res_7.status_code == 400
        assert "application/json" in res_7.headers["content-type"]
        assert res_7.json()["success"] == False
        assert res_7.json()["message"] == "O ID fornecido não é um UUID válido. ID: 43"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 5)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/next'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_8 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais?per_page=336",
                    headers=headers)
        
        assert res_8.status_code == 200
        assert "application/json" in res_8.headers["content-type"]
        assert res_8.json()["success"] == True
        assert res_8.json()["message"] == "Dados obtidos com sucesso."
        assert len(res_8.json()["data"]) == 3
        assert res_8.json()["data"][0]["tipoEnsinoMedio"] == 2.0
        assert res_8.json()["data"][0]["nivelEscolaridade"] == 10.0
        assert res_8.json()["data"][0]["cpf"] == "43839402000"
        assert res_8.json()["data"][0]["nome"] == "João da Silva 2"
        assert res_8.json()["data"][0]["dataNascimento"] == "1985-06-15"
        assert res_8.json()["data"][0]["genero"] == 1.0
        assert res_8.json()["data"][0]["racaCor"] == 2.0
        assert res_8.json()["data"][0]["email"] == "joao.silva@email.com"
        assert res_8.json()["data"][0]["telefone"] is None
        assert res_8.json()["data"][0]["nomeSocial"] is None
        assert res_8.json()["data"][0]["logradouro"] == "Rua das Flores"
        assert res_8.json()["data"][0]["bairro"] == "Centro"
        assert res_8.json()["data"][0]["numero"] == "123"
        assert res_8.json()["data"][0]["cep"] == "01001000"
        assert res_8.json()["data"][0]["municipio"] == 2700409.0
        assert res_8.json()["data"][0]["uf"] == 27.0
        assert res_8.json()["data"][0]["codigoInstituicao"] == 6.0
        assert res_8.json()["data"][0]["cargaHoraria"] == 40.0
        assert res_8.json()["data"][0]["situacaoAtiva"] == True
        assert res_8.json()["data"][0]["dataIngresso"] == "2015-02-10"
        assert res_8.json()["data"][0]["dataFim"] is None
        assert res_8.json()["data"][0]["codigoFuncao"] == 2.0
        assert res_8.json()["data"][0]["matriculaRede"] == "56789"
        assert res_8.json()["data"][0]["tipoVinculo"] == 0.0
        assert res_8.json()["data"][0]["inep"] == "27014088"
        assert len(res_8.json()["data"][0]["tipoDeficiencia"]) == 3
        assert res_8.json()["data"][0]["tipoDeficiencia"][0] == 1.0
        assert res_8.json()["data"][0]["tipoDeficiencia"][1] == 2.0
        assert res_8.json()["data"][0]["tipoDeficiencia"][2] == 3.0
        assert len(res_8.json()["data"][0]["formacoesAcademicas"]) == 2
        assert res_8.json()["data"][0]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_8.json()["data"][0]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_8.json()["data"][0]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_8.json()["data"][0]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_8.json()["data"][0]["formacoesAcademicas"][0]["principal"] is None
        assert res_8.json()["data"][0]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_8.json()["data"][0]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_8.json()["data"][0]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_8.json()["data"][0]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_8.json()["data"][0]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_8.json()["data"][0]["formacoesAcademicas"][1]["principal"] is None
        assert res_8.json()["data"][0]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_8.json()["data"][1]["tipoEnsinoMedio"] == 2.0
        assert res_8.json()["data"][1]["nivelEscolaridade"] == 10.0
        assert res_8.json()["data"][1]["cpf"] == "33722248094"
        assert res_8.json()["data"][1]["nome"] == "João da Silva 2"
        assert res_8.json()["data"][1]["dataNascimento"] == "1985-06-15"
        assert res_8.json()["data"][1]["genero"] == 1.0
        assert res_8.json()["data"][1]["racaCor"] == 2.0
        assert res_8.json()["data"][1]["email"] == "joao.silva@email.com"
        assert res_8.json()["data"][1]["telefone"] is None
        assert res_8.json()["data"][1]["nomeSocial"] is None
        assert res_8.json()["data"][1]["logradouro"] == "Rua das Flores"
        assert res_8.json()["data"][1]["bairro"] == "Centro"
        assert res_8.json()["data"][1]["numero"] == "123"
        assert res_8.json()["data"][1]["cep"] == "01001000"
        assert res_8.json()["data"][1]["municipio"] == 2700409.0
        assert res_8.json()["data"][1]["uf"] == 27.0
        assert res_8.json()["data"][1]["codigoInstituicao"] == 6.0
        assert res_8.json()["data"][1]["cargaHoraria"] == 40.0
        assert res_8.json()["data"][1]["situacaoAtiva"] == True
        assert res_8.json()["data"][1]["dataIngresso"] == "2015-02-10"
        assert res_8.json()["data"][1]["dataFim"] is None
        assert res_8.json()["data"][1]["codigoFuncao"] == 2.0
        assert res_8.json()["data"][1]["matriculaRede"] == "56789"
        assert res_8.json()["data"][1]["tipoVinculo"] == 0.0
        assert res_8.json()["data"][1]["inep"] == "27014088"
        assert len(res_8.json()["data"][1]["tipoDeficiencia"]) == 3
        assert res_8.json()["data"][1]["tipoDeficiencia"][0] == 1.0
        assert res_8.json()["data"][1]["tipoDeficiencia"][1] == 2.0
        assert res_8.json()["data"][1]["tipoDeficiencia"][2] == 3.0
        assert len(res_8.json()["data"][1]["formacoesAcademicas"]) == 2
        assert res_8.json()["data"][1]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_8.json()["data"][1]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_8.json()["data"][1]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_8.json()["data"][1]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_8.json()["data"][1]["formacoesAcademicas"][0]["principal"] is None
        assert res_8.json()["data"][1]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_8.json()["data"][1]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_8.json()["data"][1]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_8.json()["data"][1]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_8.json()["data"][1]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_8.json()["data"][1]["formacoesAcademicas"][1]["principal"] is None
        assert res_8.json()["data"][1]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_8.json()["data"][2]["tipoEnsinoMedio"] == 2.0
        assert res_8.json()["data"][2]["nivelEscolaridade"] == 10.0
        assert res_8.json()["data"][2]["cpf"] == "31863200037"
        assert res_8.json()["data"][2]["nome"] == "João da Silva 2"
        assert res_8.json()["data"][2]["dataNascimento"] == "1985-06-15"
        assert res_8.json()["data"][2]["genero"] == 1.0
        assert res_8.json()["data"][2]["racaCor"] == 2.0
        assert res_8.json()["data"][2]["email"] == "joao.silva@email.com"
        assert res_8.json()["data"][2]["telefone"] is None
        assert res_8.json()["data"][2]["nomeSocial"] is None
        assert res_8.json()["data"][2]["logradouro"] == "Rua das Flores"
        assert res_8.json()["data"][2]["bairro"] == "Centro"
        assert res_8.json()["data"][2]["numero"] == "123"
        assert res_8.json()["data"][2]["cep"] == "01001000"
        assert res_8.json()["data"][2]["municipio"] == 2700409.0
        assert res_8.json()["data"][2]["uf"] == 27.0
        assert res_8.json()["data"][2]["codigoInstituicao"] == 6.0
        assert res_8.json()["data"][2]["cargaHoraria"] == 40.0
        assert res_8.json()["data"][2]["situacaoAtiva"] == True
        assert res_8.json()["data"][2]["dataIngresso"] == "2015-02-10"
        assert res_8.json()["data"][2]["dataFim"] is None
        assert res_8.json()["data"][2]["codigoFuncao"] == 2.0
        assert res_8.json()["data"][2]["matriculaRede"] == "56789"
        assert res_8.json()["data"][2]["tipoVinculo"] == 0.0
        assert res_8.json()["data"][2]["inep"] == "27014088"
        assert len(res_8.json()["data"][2]["tipoDeficiencia"]) == 3
        assert res_8.json()["data"][2]["tipoDeficiencia"][0] == 1.0
        assert res_8.json()["data"][2]["tipoDeficiencia"][1] == 2.0
        assert res_8.json()["data"][2]["tipoDeficiencia"][2] == 3.0
        assert len(res_8.json()["data"][2]["formacoesAcademicas"]) == 2
        assert res_8.json()["data"][2]["formacoesAcademicas"][0]["noInstituicaoEnsinoFormacaoAcademica"] == "Universidade Federal do Brasil"
        assert res_8.json()["data"][2]["formacoesAcademicas"][0]["anoInicioFormacaoAcademica"] == 2016.0
        assert res_8.json()["data"][2]["formacoesAcademicas"][0]["anoConclusaoFormacaoAcademica"] == 2021.0
        assert res_8.json()["data"][2]["formacoesAcademicas"][0]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_8.json()["data"][2]["formacoesAcademicas"][0]["principal"] is None
        assert res_8.json()["data"][2]["formacoesAcademicas"][0]["tipoFormacaoAcademica"] == 7.0
        assert res_8.json()["data"][2]["formacoesAcademicas"][1]["noInstituicaoEnsinoFormacaoAcademica"] == "Instituto de Tecnologia do Piaui"
        assert res_8.json()["data"][2]["formacoesAcademicas"][1]["anoInicioFormacaoAcademica"] == 2010.0
        assert res_8.json()["data"][2]["formacoesAcademicas"][1]["anoConclusaoFormacaoAcademica"] == 2014.0
        assert res_8.json()["data"][2]["formacoesAcademicas"][1]["areaDoConhecimentoFormacaoAcademica"] == 6.0
        assert res_8.json()["data"][2]["formacoesAcademicas"][1]["principal"] is None
        assert res_8.json()["data"][2]["formacoesAcademicas"][1]["tipoFormacaoAcademica"] == 6.0
        assert res_8.json()["pagination"]["total"] == 3.0
        assert res_8.json()["pagination"]["count"] == 3.0
        assert res_8.json()["pagination"]["per_page"] == 336.0
        assert res_8.json()["pagination"]["current_page"] == 1.0
        assert res_8.json()["pagination"]["total_pages"] == 1.0
        assert res_8.json()["pagination"]["links"]["previous"] is None
        assert res_8.json()["pagination"]["links"]["next"] is None
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/0/dataEnvio'] String "2025-05-03 23:59:19" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/1/dataEnvio'] String "2025-05-03 23:58:26" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/2/dataEnvio'] String "2025-05-03 23:56:49" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/3/dataEnvio'] String "2025-05-03 23:56:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/4/dataEnvio'] String "2025-05-03 23:56:25" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/5/dataEnvio'] String "2025-05-03 23:45:41" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/6/dataEnvio'] String "2025-05-03 23:45:09" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/7/dataEnvio'] String "2025-05-03 23:44:33" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/8/dataEnvio'] String "2025-05-03 23:40:05" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/data/9/dataEnvio'] String "2025-05-03 23:39:53" is invalid against requested date format(s) [yyyy-MM-dd'T'HH:mm:ssZ, yyyy-MM-dd'T'HH:mm:ss.[0-9]{1,12}Z]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_9 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers)
        
        assert res_9.status_code == 200
        assert "application/json" in res_9.headers["content-type"]
        assert res_9.json()["success"] == True
        assert res_9.json()["message"] == "Lotes de profissionais de educação obtidos com sucesso."
        assert len(res_9.json()["data"]) == 10
        assert res_9.json()["data"][0]["dataEnvio"] == "2025-05-03 23:59:19"
        assert res_9.json()["data"][0]["status_processamento"] == "Enviado"
        assert res_9.json()["data"][1]["dataEnvio"] == "2025-05-03 23:58:26"
        assert res_9.json()["data"][1]["status_processamento"] == "Enviado"
        assert res_9.json()["data"][2]["dataEnvio"] == "2025-05-03 23:56:49"
        assert res_9.json()["data"][2]["status_processamento"] == "Enviado"
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_9.json()["pagination"]["total"] == 2394.0
        assert res_9.json()["pagination"]["count"] == 10.0
        assert res_9.json()["pagination"]["per_page"] == 10.0
        assert res_9.json()["pagination"]["current_page"] == 1.0
        assert res_9.json()["pagination"]["total_pages"] == 240.0
        assert res_9.json()["pagination"]["links"]["previous"] is None
        assert res_9.json()["pagination"]["links"]["next"] == 2.0
    
    
    # Calls:
    # 1 - (200) GET:/v1/estudantes/inep/{inep}
    # 2 - (200) GET:/v1/estudantes/validacao-cadastro
    # Found 926 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_63(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/inep/{inep} -> Invalid JSON Schema, cannot continue Syntax errors: [ {   "level" : "error",   "message" : "array must not contain duplicate elements",   "domain" : "syntax",   "schema" : {     "loadingURI" : "#",     "pointer" : "/properties/data/items/allOf/4/properties/matriculas/items/properties/situacaoMatricula"   },   "keyword" : "enum" } ]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/inep/33226210?ano_matricula=2024",
                    headers=headers)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Estudantes obtidos com sucesso."
        assert len(res_0.json()["data"]) == 10
        assert res_0.json()["data"][0]["cpf"] == "48685526949"
        assert res_0.json()["data"][0]["nome"] == "Aaron Jorge Fontes"
        assert res_0.json()["data"][0]["nomeSocial"] is None
        assert res_0.json()["data"][0]["numeroNIS"] == "26552967665"
        assert res_0.json()["data"][0]["rg"] == "1731834744890183"
        assert res_0.json()["data"][0]["orgaoEmissor"] == "SSP-AL"
        assert res_0.json()["data"][0]["cpfResponsavel"] == "50727684574"
        assert res_0.json()["data"][0]["nomeMaeEstudante"] == "Katherine Benites Santacruz"
        assert res_0.json()["data"][0]["numeroNISResponsavel"] == "16580461978"
        assert res_0.json()["data"][0]["dataNascimento"] == "2007-04-23"
        assert res_0.json()["data"][0]["logradouro"] == "Rua Largo Valéria"
        assert res_0.json()["data"][0]["bairro"] == "São Caldeira"
        assert res_0.json()["data"][0]["numero"] == "94221"
        assert res_0.json()["data"][0]["cep"] == "72069025"
        assert res_0.json()["data"][0]["municipio"] == 2704302.0
        assert res_0.json()["data"][0]["certidaoNascimento"] == "83728193281470616218341199420066"
        assert res_0.json()["data"][0]["cnh"] is None
        assert res_0.json()["data"][0]["uf"] == 27.0
        assert res_0.json()["data"][0]["racaCor"] == 2.0
        assert len(res_0.json()["data"][0]["tipoDeficiencia"]) == 0
        assert res_0.json()["data"][0]["genero"] == 1.0
        assert res_0.json()["data"][0]["telefone"] is None
        assert res_0.json()["data"][0]["email"] is None
        assert res_0.json()["data"][0]["situacaoCadastroValidado"] is None
        assert len(res_0.json()["data"][0]["matriculas"]) == 1
        assert res_0.json()["data"][0]["matriculas"][0]["codigoMatriculaSgp"] == 2074980.0
        assert res_0.json()["data"][0]["matriculas"][0]["codInstituicao"] == 148486.0
        assert res_0.json()["data"][0]["matriculas"][0]["dataInicioMatricula"] == "2024-01-01"
        assert res_0.json()["data"][0]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_0.json()["data"][0]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["situacaoMatricula"] == True
        assert res_0.json()["data"][0]["matriculas"][0]["serieAno"] == 25.0
        assert res_0.json()["data"][0]["matriculas"][0]["etapaEnsinoConsolidado"] == "Ensino Médio"
        assert res_0.json()["data"][0]["matriculas"][0]["matriculaRede"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["deletadaEm"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["inep"] == "33226210"
        assert res_0.json()["data"][0]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["estudanteIntegral"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_0.json()["data"][0]["matriculas"][0]["anoMatricula"] is None
        assert len(res_0.json()["data"][0]["outrasMatriculas"]) == 0
        assert res_0.json()["data"][1]["cpf"] == "28051115163"
        assert res_0.json()["data"][1]["nome"] == "Aaron Matheus Torres Neto"
        assert res_0.json()["data"][1]["nomeSocial"] is None
        assert res_0.json()["data"][1]["numeroNIS"] == "47425690969"
        assert res_0.json()["data"][1]["rg"] == "9213805763531105"
        assert res_0.json()["data"][1]["orgaoEmissor"] == "SSP-AL"
        assert res_0.json()["data"][1]["cpfResponsavel"] == "88130520656"
        assert res_0.json()["data"][1]["nomeMaeEstudante"] == "Katherine Benez Marés"
        assert res_0.json()["data"][1]["numeroNISResponsavel"] == "28075908158"
        assert res_0.json()["data"][1]["dataNascimento"] == "2005-02-04"
        assert res_0.json()["data"][1]["logradouro"] == "Rua Largo Bernardo Valentin"
        assert res_0.json()["data"][1]["bairro"] == "São Ortiz"
        assert res_0.json()["data"][1]["numero"] == "3"
        assert res_0.json()["data"][1]["cep"] == "49915804"
        assert res_0.json()["data"][1]["municipio"] == 2704302.0
        assert res_0.json()["data"][1]["certidaoNascimento"] == "24221048542982030962908869557373"
        assert res_0.json()["data"][1]["cnh"] is None
        assert res_0.json()["data"][1]["uf"] == 27.0
        assert res_0.json()["data"][1]["racaCor"] == 2.0
        assert len(res_0.json()["data"][1]["tipoDeficiencia"]) == 0
        assert res_0.json()["data"][1]["genero"] == 4.0
        assert res_0.json()["data"][1]["telefone"] is None
        assert res_0.json()["data"][1]["email"] is None
        assert res_0.json()["data"][1]["situacaoCadastroValidado"] is None
        assert len(res_0.json()["data"][1]["matriculas"]) == 1
        assert res_0.json()["data"][1]["matriculas"][0]["codigoMatriculaSgp"] == 2071978.0
        assert res_0.json()["data"][1]["matriculas"][0]["codInstituicao"] == 148486.0
        assert res_0.json()["data"][1]["matriculas"][0]["dataInicioMatricula"] == "2024-01-01"
        assert res_0.json()["data"][1]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_0.json()["data"][1]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["situacaoMatricula"] == True
        assert res_0.json()["data"][1]["matriculas"][0]["serieAno"] == 25.0
        assert res_0.json()["data"][1]["matriculas"][0]["etapaEnsinoConsolidado"] == "Ensino Médio"
        assert res_0.json()["data"][1]["matriculas"][0]["matriculaRede"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["deletadaEm"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["inep"] == "33226210"
        assert res_0.json()["data"][1]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["estudanteIntegral"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_0.json()["data"][1]["matriculas"][0]["anoMatricula"] is None
        assert len(res_0.json()["data"][1]["outrasMatriculas"]) == 0
        assert res_0.json()["data"][2]["cpf"] == "90409563242"
        assert res_0.json()["data"][2]["nome"] == "Aaron Wagner Benez Neto"
        assert res_0.json()["data"][2]["nomeSocial"] is None
        assert res_0.json()["data"][2]["numeroNIS"] == "92646389825"
        assert res_0.json()["data"][2]["rg"] == "1274057198993244"
        assert res_0.json()["data"][2]["orgaoEmissor"] == "SSP-AL"
        assert res_0.json()["data"][2]["cpfResponsavel"] == "47286273906"
        assert res_0.json()["data"][2]["nomeMaeEstudante"] == "Diana Montenegro Neto"
        assert res_0.json()["data"][2]["numeroNISResponsavel"] == "91486785789"
        assert res_0.json()["data"][2]["dataNascimento"] == "2010-08-18"
        assert res_0.json()["data"][2]["logradouro"] == "Rua Rua Perez"
        assert res_0.json()["data"][2]["bairro"] == "São Maia"
        assert res_0.json()["data"][2]["numero"] == "3"
        assert res_0.json()["data"][2]["cep"] == "40576510"
        assert res_0.json()["data"][2]["municipio"] == 2704302.0
        assert res_0.json()["data"][2]["certidaoNascimento"] == "13733664156270507621138680462289"
        assert res_0.json()["data"][2]["cnh"] is None
        assert res_0.json()["data"][2]["uf"] == 27.0
        assert res_0.json()["data"][2]["racaCor"] == 5.0
        assert len(res_0.json()["data"][2]["tipoDeficiencia"]) == 0
        assert res_0.json()["data"][2]["genero"] == 4.0
        assert res_0.json()["data"][2]["telefone"] is None
        assert res_0.json()["data"][2]["email"] is None
        assert res_0.json()["data"][2]["situacaoCadastroValidado"] is None
        assert len(res_0.json()["data"][2]["matriculas"]) == 1
        assert res_0.json()["data"][2]["matriculas"][0]["codigoMatriculaSgp"] == 2073877.0
        assert res_0.json()["data"][2]["matriculas"][0]["codInstituicao"] == 148486.0
        assert res_0.json()["data"][2]["matriculas"][0]["dataInicioMatricula"] == "2024-01-01"
        assert res_0.json()["data"][2]["matriculas"][0]["estudantePpl"] == 0.0
        assert res_0.json()["data"][2]["matriculas"][0]["dataFimOuAprovacao"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["situacaoMatricula"] == True
        assert res_0.json()["data"][2]["matriculas"][0]["serieAno"] == 25.0
        assert res_0.json()["data"][2]["matriculas"][0]["etapaEnsinoConsolidado"] == "Ensino Médio"
        assert res_0.json()["data"][2]["matriculas"][0]["matriculaRede"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["deletadaEm"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["inep"] == "33226210"
        assert res_0.json()["data"][2]["matriculas"][0]["estudanteSituacaoFinal"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["dataConclusaoEnsinoMedio"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["dataInicioPeriodoLetivo"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["formaOrganizacaoTurma"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["turmaOrganizacaoQuantidadeTotal"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["estudanteAnoPeriodo"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["estudanteIntegral"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["dataAtivacaoMatricula"] is None
        assert res_0.json()["data"][2]["matriculas"][0]["anoMatricula"] is None
        assert len(res_0.json()["data"][2]["outrasMatriculas"]) == 0
        # Skipping assertions on the remaining 7 elements. This limit of 3 elements can be increased in the configurations
        assert res_0.json()["pagination"]["total"] == 2500.0
        assert res_0.json()["pagination"]["count"] == 10.0
        assert res_0.json()["pagination"]["per_page"] == 10.0
        assert res_0.json()["pagination"]["current_page"] == 1.0
        assert res_0.json()["pagination"]["total_pages"] == 250.0
        assert res_0.json()["pagination"]["links"]["previous"] is None
        assert res_0.json()["pagination"]["links"]["next"] == 2.0
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> Object instance has properties which are not allowed by the schema: ["message","success"]
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/0'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/1'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/2'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/3'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/4'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/5'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/6'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/7'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/8'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/9'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/10'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/11'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/12'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/13'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/14'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/15'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/16'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/17'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/18'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/19'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/20'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/21'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/22'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/23'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/24'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/25'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/26'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/27'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/28'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/29'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/30'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/31'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/32'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/33'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/34'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/35'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/36'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/37'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/38'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/39'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/40'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/41'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/42'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/43'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/44'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/45'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/46'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/47'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/48'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/49'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/50'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/51'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/52'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/53'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/54'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/55'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/56'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/57'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/58'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/59'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/60'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/61'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/62'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/63'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/64'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/65'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/66'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/67'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/68'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/69'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/70'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/71'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/72'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/73'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/74'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/75'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/76'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/77'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/78'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/79'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/80'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/81'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/82'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/83'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/84'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/85'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/86'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/87'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/88'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/89'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/90'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/91'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/92'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/93'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/94'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/95'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/96'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/97'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/98'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/99'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/100'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/101'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/102'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/103'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/104'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/105'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/106'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/107'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/108'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/109'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/110'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/111'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/112'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/113'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/114'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/115'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/116'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/117'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/118'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/119'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/120'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/121'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/122'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/123'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/124'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/125'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/126'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/127'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/128'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/129'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/130'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/131'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/132'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/133'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/134'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/135'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/136'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/137'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/138'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/139'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/140'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/141'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/142'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/143'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/144'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/145'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/146'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/147'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/148'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/149'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/150'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/151'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/152'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/153'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/154'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/155'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/156'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/157'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/158'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/159'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/160'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/161'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/162'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/163'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/164'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/165'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/166'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/167'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/168'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/169'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/170'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/171'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/172'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/173'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/174'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/175'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/176'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/177'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/178'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/179'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/180'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/181'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/182'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/183'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/184'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/185'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/186'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/187'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/188'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/189'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/190'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/191'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/192'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/193'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/194'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/195'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/196'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/197'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/198'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/199'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/200'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/201'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/202'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/203'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/204'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/205'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/206'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/207'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/208'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/209'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/210'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/211'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/212'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/213'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/214'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/215'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/216'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/217'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/218'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/219'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/220'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/221'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/222'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/223'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/224'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/225'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/226'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/227'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/228'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/229'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/230'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/231'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/232'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/233'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/234'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/235'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/236'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/237'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/238'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/239'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/240'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/241'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/242'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/243'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/244'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/245'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/246'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/247'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/248'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/249'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/250'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/251'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/252'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/253'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/254'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/255'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/256'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/257'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/258'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/259'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/260'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/261'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/262'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/263'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/264'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/265'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/266'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/267'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/268'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/269'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/270'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/271'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/272'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/273'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/274'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/275'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/276'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/277'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/278'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/279'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/280'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/281'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/282'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/283'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/284'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/285'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/286'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/287'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/288'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/289'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/290'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/291'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/292'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/293'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/294'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/295'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/296'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/297'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/298'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/299'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/300'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/301'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/302'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/303'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/304'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/305'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/306'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/307'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/308'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/309'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/310'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/311'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/312'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/313'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/314'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/315'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/316'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/317'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/318'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/319'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/320'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/321'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/322'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/323'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/324'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/325'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/326'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/327'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/328'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/329'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/330'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/331'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/332'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/333'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/334'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/335'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/336'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/337'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/338'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/339'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/340'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/341'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/342'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/343'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/344'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/345'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/346'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/347'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/348'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/349'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/350'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/351'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/352'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/353'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/354'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/355'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/356'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/357'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/358'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/359'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/360'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/361'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/362'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/363'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/364'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/365'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/366'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/367'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/368'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/369'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/370'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/371'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/372'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/373'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/374'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/375'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/376'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/377'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/378'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/379'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/380'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/381'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/382'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/383'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/384'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/385'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/386'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/387'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/388'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/389'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/390'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/391'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/392'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/393'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/394'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/395'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/396'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/397'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/398'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/399'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/400'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/401'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/402'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/403'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/404'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/405'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/406'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/407'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/408'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/409'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/410'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/411'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/412'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/413'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/414'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/415'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/416'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/417'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/418'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/419'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/420'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/421'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/422'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/423'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/424'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/425'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/426'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/427'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/428'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/429'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/430'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/431'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/432'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/433'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/434'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/435'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/436'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/437'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/438'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/439'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/440'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/441'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/442'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/443'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/444'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/445'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/446'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/447'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/448'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/449'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/450'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/451'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/452'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/453'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/454'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/455'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/456'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/457'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/458'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/459'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/460'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/461'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/462'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/463'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/464'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/465'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/466'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/467'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/468'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/469'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/470'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/471'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/472'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/473'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/474'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/475'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/476'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/477'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/478'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/479'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/480'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/481'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/482'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/483'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/484'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/485'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/486'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/487'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/488'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/489'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/490'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/491'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/492'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/493'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/494'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/495'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/496'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/497'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/498'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/499'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/500'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/501'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/502'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/503'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/504'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/505'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/506'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/507'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/508'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/509'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/510'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/511'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/512'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/513'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/514'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/515'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/516'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/517'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/518'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/519'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/520'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/521'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/522'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/523'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/524'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/525'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/526'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/527'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/528'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/529'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/530'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/531'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/532'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/533'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/534'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/535'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/536'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/537'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/538'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/539'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/540'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/541'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/542'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/543'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/544'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/545'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/546'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/547'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/548'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/549'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/550'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/551'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/552'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/553'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/554'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/555'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/556'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/557'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/558'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/559'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/560'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/561'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/562'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/563'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/564'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/565'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/566'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/567'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/568'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/569'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/570'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/571'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/572'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/573'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/574'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/575'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/576'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/577'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/578'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/579'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/580'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/581'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/582'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/583'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/584'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/585'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/586'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/587'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/588'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/589'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/590'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/591'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/592'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/593'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/594'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/595'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/596'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/597'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/598'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/599'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/600'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/601'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/602'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/603'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/604'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/605'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/606'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/607'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/608'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/609'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/610'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/611'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/612'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/613'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/614'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/615'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/616'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/617'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/618'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/619'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/620'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/621'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/622'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/623'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/624'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/625'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/626'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/627'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/628'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/629'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/630'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/631'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/632'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/633'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/634'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/635'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/636'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/637'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/638'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/639'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/640'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/641'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/642'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/643'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/644'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/645'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/646'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/647'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/648'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/649'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/650'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/651'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/652'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/653'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/654'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/655'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/656'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/657'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/658'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/659'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/660'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/661'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/662'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/663'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/664'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/665'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/666'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/667'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/668'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/669'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/670'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/671'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/672'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/673'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/674'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/675'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/676'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/677'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/678'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/679'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/680'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/681'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/682'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/683'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/684'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/685'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/686'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/687'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/688'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/689'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/690'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/691'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/692'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/693'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/694'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/695'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/696'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/697'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/698'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/699'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/700'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/701'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/702'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/703'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/704'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/705'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/706'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/707'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/708'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/709'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/710'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/711'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/712'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/713'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/714'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/715'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/716'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/717'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/718'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/719'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/720'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/721'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/722'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/723'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/724'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/725'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/726'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/727'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/728'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/729'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/730'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/731'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/732'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/733'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/734'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/735'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/736'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/737'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/738'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/739'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/740'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/741'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/742'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/743'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/744'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/745'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/746'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/747'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/748'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/749'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/750'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/751'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/752'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/753'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/754'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/755'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/756'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/757'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/758'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/759'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/760'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/761'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/762'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/763'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/764'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/765'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/766'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/767'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/768'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/769'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/770'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/771'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/772'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/773'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/774'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/775'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/776'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/777'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/778'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/779'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/780'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/781'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/782'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/783'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/784'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/785'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/786'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/787'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/788'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/789'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/790'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/791'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/792'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/793'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/794'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/795'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/796'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/797'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/798'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/799'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/800'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/801'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/802'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/803'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/804'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/805'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/806'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/807'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/808'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/809'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/810'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/811'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/812'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/813'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/814'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/815'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/816'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/817'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/818'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/819'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/820'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/821'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/822'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/823'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/824'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/825'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/826'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/827'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/828'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/829'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/830'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/831'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/832'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/833'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/834'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/835'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/836'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/837'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/838'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/839'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/840'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/841'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/842'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/843'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/844'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/845'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/846'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/847'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/848'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/849'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/850'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/851'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/852'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/853'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/854'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/855'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/856'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/857'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/858'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/859'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/860'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/861'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/862'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/863'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/864'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/865'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/866'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/867'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/868'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/869'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/870'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/871'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/872'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/873'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/874'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/875'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/876'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/877'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/878'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/879'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/880'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/881'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/882'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/883'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/884'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/885'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/886'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/887'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/888'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/889'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/890'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/891'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/892'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/893'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/894'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/895'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/896'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/897'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/898'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/899'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/900'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/901'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/902'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/903'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/904'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/905'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/906'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/907'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/908'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/909'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/910'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/911'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/912'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/913'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/914'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/915'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/916'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/917'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/918'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/919'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/920'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/data/921'] Instance failed to match all required schemas (matched only 0 out of 1)
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/next'] Instance type (integer) does not match any allowed primitive type (allowed: ["string"])
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> [Path '/pagination/links/previous'] Instance type (null) does not match any allowed primitive type (allowed: ["string"])
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/validacao-cadastro?per_page=922",
                    headers=headers)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Operação realizada com sucesso"
        assert len(res_1.json()["data"]) == 922
        assert res_1.json()["data"][0]["cpf"] == "99999701094"
        assert res_1.json()["data"][0]["numeroNIS"] is None
        assert res_1.json()["data"][0]["situacaoCadastral"] == "Autenticada"
        assert res_1.json()["data"][0]["situacaoCpf"] == "CPF não encontrado na base do BCPF"
        assert res_1.json()["data"][0]["nome"] == "Bryan  Chen"
        assert res_1.json()["data"][0]["nomeValidado"] == True
        assert res_1.json()["data"][0]["dataNascimento"] == "1956-01-11"
        assert res_1.json()["data"][0]["dataNascimentoValidada"] == True
        assert res_1.json()["data"][0]["nomeMaeEstudante"] == "Mr. Daniel Johnson DVM"
        assert res_1.json()["data"][0]["nomeMaeEstudanteValidado"] == True
        assert res_1.json()["data"][0]["dataValidacaoCadastral"] == "2025-03-11 01:39:26"
        assert res_1.json()["data"][1]["cpf"] == "34535377693"
        assert res_1.json()["data"][1]["numeroNIS"] == "11979328182"
        assert res_1.json()["data"][1]["situacaoCadastral"] == "Não autenticada"
        assert res_1.json()["data"][1]["situacaoCpf"] == "Testando o serviço de validação"
        assert res_1.json()["data"][1]["nome"] == "Trevor Hester"
        assert res_1.json()["data"][1]["nomeValidado"] == True
        assert res_1.json()["data"][1]["dataNascimento"] == "1968-02-26"
        assert res_1.json()["data"][1]["dataNascimentoValidada"] == False
        assert res_1.json()["data"][1]["nomeMaeEstudante"] == "Juan Mccullough"
        assert res_1.json()["data"][1]["nomeMaeEstudanteValidado"] == True
        assert res_1.json()["data"][1]["dataValidacaoCadastral"] == "2023-06-16 00:00:00"
        assert res_1.json()["data"][2]["cpf"] == "14064786602"
        assert res_1.json()["data"][2]["numeroNIS"] == "124112231"
        assert res_1.json()["data"][2]["situacaoCadastral"] == "Não autenticada"
        assert res_1.json()["data"][2]["situacaoCpf"] == "Quando há omissão de DIRPF em um dos últimos 5 exercícios"
        assert res_1.json()["data"][2]["nome"] == "Donald Jackson"
        assert res_1.json()["data"][2]["nomeValidado"] == False
        assert res_1.json()["data"][2]["dataNascimento"] == "1954-08-23"
        assert res_1.json()["data"][2]["dataNascimentoValidada"] == False
        assert res_1.json()["data"][2]["nomeMaeEstudante"] == "Timothy Garcia"
        assert res_1.json()["data"][2]["nomeMaeEstudanteValidado"] == True
        assert res_1.json()["data"][2]["dataValidacaoCadastral"] == "2024-04-23 00:00:00"
        # Skipping assertions on the remaining 919 elements. This limit of 3 elements can be increased in the configurations
        assert res_1.json()["pagination"]["total"] == 54714.0
        assert res_1.json()["pagination"]["count"] == 922.0
        assert res_1.json()["pagination"]["per_page"] == 922.0
        assert res_1.json()["pagination"]["current_page"] == 1.0
        assert res_1.json()["pagination"]["total_pages"] == 60.0
        assert res_1.json()["pagination"]["links"]["previous"] is None
        assert res_1.json()["pagination"]["links"]["next"] == 2.0
    
    
    # Calls:
    # (201) POST:/v1/profissionais/lote
    # Found 1 potential fault of type-code 200
    # Using 1 example:
    #   123456789
    @timeout_decorator.timeout(60)
    def test_64(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"nivelEscolaridade\": 50, " + \
            " \"cpf\": \"12961118220\", " + \
            " \"dataNascimento\": \"1985-12-14\", " + \
            " \"genero\": 4, " + \
            " \"email\": \"hortencia.lutero@fake.com\", " + \
            " \"telefone\": \"tmo2Ai\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 131, " + \
            " 813, " + \
            " 578, " + \
            " 5 " + \
            " ], " + \
            " \"logradouro\": \"\", " + \
            " \"bairro\": \"São Jimenes\", " + \
            " \"cep\": \"98888538\", " + \
            " \"inep\": \"23131802\", " + \
            " \"codigoFuncao\": 2 " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"cpf\": \"95293835840\", " + \
            " \"nome\": \"Maria Luiza Rezende Jr.\", " + \
            " \"email\": \"hortencia.liz.carmona@fake.com\", " + \
            " \"sexo\": \"4\", " + \
            " \"bairro\": \"São Delvalle\", " + \
            " \"cep\": \"09780872\", " + \
            " \"formacoesAcademicas\": [], " + \
            " \"inep\": 12031801, " + \
            " \"matriculaRede\": \"123456789\", " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"2094-07-17\", " + \
            " \"dataFim\": \"1914-07-28\" " + \
            " }, " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"dataNascimento\": \"1986-12-11\", " + \
            " \"nomeSocial\": \"YXWGpw\", " + \
            " \"logradouro\": \"i\", " + \
            " \"bairro\": \"São Verdugo\", " + \
            " \"municipio\": 3106200, " + \
            " \"formacoesAcademicas\": [], " + \
            " \"inep\": 171, " + \
            " \"codigoFuncao\": 881, " + \
            " \"dataIngresso\": \"1926-08-07\" " + \
            " }, " + \
            " { " + \
            " \"dataNascimento\": \"1999-02-19\", " + \
            " \"genero\": 7, " + \
            " \"email\": \"hortencia.lovato.bittencourt@fake.com\", " + \
            " \"nomeSocial\": \"pTHV8vSd9RrhJbwi\", " + \
            " \"logradouro\": \"\", " + \
            " \"bairro\": \"São Cordeiro\", " + \
            " \"numero\": \"196\", " + \
            " \"municipio\": 4314902, " + \
            " \"inep\": \"12029564\", " + \
            " \"dataIngresso\": \"1914-02-14\", " + \
            " \"dataFim\": \"1970-11-23\", " + \
            " \"cargaHoraria\": 40 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
    
    
    # Calls:
    # 1 - (404) GET:/v1/estudantes/{cpfNis}
    # 2 - (400) GET:/v1/estudantes/lote/{id}/erros
    # 3 - (201) POST:/v1/profissionais/lote
    # 4 - (404) GET:/v1/estudantes/solicitacoes-alteracoes
    # Found 3 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_65(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/Y2dJsxbmXeejgs",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Nenhum estudante encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/35/erros?" + 
                    "page=700&" + 
                    "per_page=503",
                    headers=headers)
        
        assert res_1.status_code == 400
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "O ID fornecido não é um UUID válido. ID: 35"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. POST:/v1/profissionais/lote -> Object instance has properties which are not allowed by the schema: ["message","success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"tipoEnsinoMedio\": 2, " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"nome\": \"Dra. Elisa Farias\", " + \
            " \"dataNascimento\": \"1969-08-16\", " + \
            " \"racaCor\": 1, " + \
            " \"email\": \"AFTER-TWO@AFTER-TWO.com\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 101, " + \
            " 3 " + \
            " ], " + \
            " \"cep\": \"06403567\", " + \
            " \"municipio\": 1714302, " + \
            " \"inep\": 41075412, " + \
            " \"tipoVinculo\": 0, " + \
            " \"dataIngresso\": \"1979-10-32\" " + \
            " }, " + \
            " { " + \
            " \"cpf\": \"42017985769\", " + \
            " \"nome\": \"Felícia Neves\", " + \
            " \"email\": \"Krh2PcoseRosd@example.com\", " + \
            " \"nomeSocial\": \"K4M5REPemK60\", " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"logradouro\": \"Ponte Roberta Hernandes\", " + \
            " \"bairro\": \"São Lourenço\", " + \
            " \"cep\": \"73693985\", " + \
            " \"municipio\": 1714302, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 294244736, " + \
            " \"anoInicioFormacaoAcademica\": 2016 " + \
            " } " + \
            " ], " + \
            " \"inep\": 29182034, " + \
            " \"matriculaRede\": \"xwMoaf3Z1\", " + \
            " \"codigoFuncao\": 2, " + \
            " \"cargaHoraria\": 40 " + \
            " }, " + \
            " { " + \
            " \"dataNascimento\": \"1993-01-05\", " + \
            " \"racaCor\": 3, " + \
            " \"email\": \"aaron.afonso.galvao.jr@fake.com\", " + \
            " \"nomeSocial\": \"YXWGpw\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 312, " + \
            " 1, " + \
            " 490, " + \
            " 3, " + \
            " 1 " + \
            " ], " + \
            " \"sexo\": \"5\", " + \
            " \"logradouro\": \"ysb\", " + \
            " \"numero\": \"59\", " + \
            " \"cep\": \"96923012\", " + \
            " \"uf\": 42, " + \
            " \"formacoesAcademicas\": [], " + \
            " \"inep\": 833, " + \
            " \"matriculaRede\": \"jvjvjv1\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"1904-09-16\", " + \
            " \"cargaHoraria\": 40 " + \
            " }, " + \
            " { " + \
            " \"dataNascimento\": \"AuHtIy\", " + \
            " \"genero\": 2, " + \
            " \"nomeSocial\": \"YXWGpw\", " + \
            " \"sexo\": \"0\", " + \
            " \"cep\": \"57018780\", " + \
            " \"municipio\": 1714302, " + \
            " \"uf\": 42, " + \
            " \"inep\": 26540720, " + \
            " \"dataIngresso\": \"2071-04-32\", " + \
            " \"dataFim\": \"1985-06-16\", " + \
            " \"cargaHoraria\": 818 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_2 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_2.status_code == 201
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == True
        assert res_2.json()["message"] == "Operação realizada com sucesso"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> Response status 404 not defined for path '/v1/estudantes/solicitacoes-alteracoes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/solicitacoes-alteracoes?cpfAtual=08372852657",
                    headers=headers)
        
        assert res_3.status_code == 404
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "Ocorreu um erro inesperado."
        assert res_3.json()["errors"]["message"] == "Nenhum dado encontrado"
    
    
    # Calls:
    # 1 - (201) POST:/v1/estudantes/lote
    # 2 - (404) GET:/v1/estudantes/{cpfNis}
    # 3 - (404) GET:/v1/estudantes/{cpfNis}
    # 4 - (400) GET:/v1/estudantes/lote/{id}
    # 5 - (400) GET:/v1/profissionais/lote/{id}
    # 6 - (422) POST:/v1/profissionais/lote
    # 7 - (404) GET:/v1/estudantes/{cpfNis}
    # Found 2 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_66(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"nome\": \"D2S2juAvStGgAWs\", " + \
            " \"dataNascimento\": \"7YM7K7q\", " + \
            " \"genero\": 6, " + \
            " \"email\": \"gtTX_J\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 780 " + \
            " ], " + \
            " \"numeroNIS\": \"\", " + \
            " \"rg\": \"TG5sDwr3t_lE\", " + \
            " \"orgaoEmissor\": \"XjpEbsv\", " + \
            " \"cnh\": \"PEP\", " + \
            " \"bairro\": \"if3ctu6A\", " + \
            " \"cep\": \"Qd1gL\", " + \
            " \"municipio\": 169, " + \
            " \"estudantePpl\": 0, " + \
            " \"dataInicioMatricula\": \"2038-01-30\", " + \
            " \"serieAno\": 184, " + \
            " \"instituicao\": 364, " + \
            " \"formaOrganizacaoTurma\": 954, " + \
            " \"estudanteAnoPeriodo\": 42, " + \
            " \"anoMatricula\": 441 " + \
            " }, " + \
            " { " + \
            " \"cpfResponsavel\": \"XUR\", " + \
            " \"cpf\": \"WszyRveDuR\", " + \
            " \"dataNascimento\": \"5d\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 353 " + \
            " ], " + \
            " \"sexo\": \"2\", " + \
            " \"numeroNIS\": \"2qp7_01d\", " + \
            " \"rg\": \"3Gpy8Yz\", " + \
            " \"orgaoEmissor\": \"lFVqr_\", " + \
            " \"certidaoNascimento\": \"Hfo\", " + \
            " \"cep\": \"zFqIwf\", " + \
            " \"municipio\": 830, " + \
            " \"uf\": 443, " + \
            " \"estudantePpl\": 0, " + \
            " \"matriculaRede\": \"SXbp0n\", " + \
            " \"instituicao\": 587, " + \
            " \"formaOrganizacaoTurma\": 776, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 402, " + \
            " \"anoMatricula\": 959 " + \
            " }, " + \
            " { " + \
            " \"cpfResponsavel\": \"hFRxYRClo\", " + \
            " \"numeroNISResponsavel\": \"xf0zY94u6UB\", " + \
            " \"nomeMaeEstudante\": \"CYrQvNC\", " + \
            " \"cpf\": \"z\", " + \
            " \"nome\": \"Fh0wit\", " + \
            " \"genero\": 42, " + \
            " \"racaCor\": 5, " + \
            " \"rg\": \"SHMW2jwUwG9h\", " + \
            " \"orgaoEmissor\": \"phlh\", " + \
            " \"logradouro\": \"09dQl9\", " + \
            " \"bairro\": \"\", " + \
            " \"numero\": \"TNQpI\", " + \
            " \"cep\": \"\", " + \
            " \"municipio\": 650, " + \
            " \"uf\": 136, " + \
            " \"dataInicioMatricula\": \"2015-01-10\", " + \
            " \"inep\": 466, " + \
            " \"dataInicioPeriodoLetivo\": \"2018-11-03\" " + \
            " }, " + \
            " { " + \
            " \"cpfResponsavel\": \"ceg\", " + \
            " \"nomeMaeEstudante\": \"QU6wf\", " + \
            " \"cpf\": \"1UJ\", " + \
            " \"nome\": \"DizYDSUQV\", " + \
            " \"dataNascimento\": \"cEHeDSzqgFxa\", " + \
            " \"genero\": 3, " + \
            " \"email\": \"jbpez9AJKsYz_sY8\", " + \
            " \"telefone\": \"lH5pqCChLGbsdB8\", " + \
            " \"rg\": \"sRfUbkCf\", " + \
            " \"orgaoEmissor\": \"gnYY\", " + \
            " \"certidaoNascimento\": \"uVkaS7lt\", " + \
            " \"cnh\": \"QyZQu\", " + \
            " \"numero\": \"VEPqmJ\", " + \
            " \"estudantePpl\": 42, " + \
            " \"dataInicioMatricula\": \"2093-01-09\", " + \
            " \"dataInicioPeriodoLetivo\": \"2051-02-00\", " + \
            " \"formaOrganizacaoTurma\": 904, " + \
            " \"estudanteAnoPeriodo\": 42, " + \
            " \"estudanteIntegral\": 1 " + \
            " }, " + \
            " { " + \
            " \"cpfResponsavel\": \"\", " + \
            " \"numeroNISResponsavel\": \"MSrP\", " + \
            " \"cpf\": \"3jvDmqkd6C\", " + \
            " \"nome\": \"iAybT\", " + \
            " \"genero\": 6, " + \
            " \"racaCor\": 4, " + \
            " \"telefone\": \"KJql2\", " + \
            " \"numeroNIS\": \"ZbjcrQ\", " + \
            " \"rg\": \"E7\", " + \
            " \"orgaoEmissor\": \"O\", " + \
            " \"certidaoNascimento\": \"GaF0pjTsHsP3q\", " + \
            " \"cnh\": \"8_d_9ikLICG\", " + \
            " \"logradouro\": \"In_HuHHh4qKqkEN\", " + \
            " \"cep\": \"\", " + \
            " \"municipio\": 383, " + \
            " \"uf\": 898, " + \
            " \"estudantePpl\": 0, " + \
            " \"matriculaRede\": \"gM1zghq5\", " + \
            " \"instituicao\": 379, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 569 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/x17UeLMOoy",
                    headers=headers)
        
        assert res_1.status_code == 404
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Nenhum estudante encontrado."
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_2 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/gnv_yg5c",
                    headers=headers)
        
        assert res_2.status_code == 404
        assert "application/json" in res_2.headers["content-type"]
        assert res_2.json()["success"] == False
        assert res_2.json()["message"] == "Nenhum estudante encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id} -> Object instance has properties which are not allowed by the schema: ["success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_3 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/W?" + 
                    "per_page=295&" + 
                    "incluir_objetos_processados=false",
                    headers=headers)
        
        assert res_3.status_code == 400
        assert "application/json" in res_3.headers["content-type"]
        assert res_3.json()["success"] == False
        assert res_3.json()["message"] == "O ID fornecido não é um UUID válido. ID: W"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id} -> Object instance has properties which are not allowed by the schema: ["success"]
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_4 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/yjRmrfc6Fc",
                    headers=headers)
        
        assert res_4.status_code == 400
        assert "application/json" in res_4.headers["content-type"]
        assert res_4.json()["success"] == False
        assert res_4.json()["message"] == "O ID fornecido não é um UUID válido. ID: yjRmrfc6Fc"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_5 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_5.status_code == 422
        assert "application/json" in res_5.headers["content-type"]
        assert res_5.json()["success"] == False
        assert res_5.json()["message"] == "JSON inválido."
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_6 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/h45cwm_x7fCo",
                    headers=headers)
        
        assert res_6.status_code == 404
        assert "application/json" in res_6.headers["content-type"]
        assert res_6.json()["success"] == False
        assert res_6.json()["message"] == "Nenhum estudante encontrado."
    
    
    # Calls:
    # (400) GET:/v1/estudantes/lote/{id}/erros
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_67(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/31/erros",
                    headers=headers)
        
        assert res_0.status_code == 400
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "O ID fornecido não é um UUID válido. ID: 31"
    
    
    # Calls:
    # 1 - (400) GET:/v1/estudantes/lote/{id}/erros
    # 2 - (400) GET:/v1/estudantes/lote/{id}/erros
    # Found 2 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_68(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/8Y0qlEawh/erros?per_page=554",
                    headers=headers)
        
        assert res_0.status_code == 400
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "O ID fornecido não é um UUID válido. ID: 8Y0qlEawh"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 400 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/15/erros?" + 
                    "page=489&" + 
                    "per_page=416",
                    headers=headers)
        
        assert res_1.status_code == 400
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "O ID fornecido não é um UUID válido. ID: 15"
    
    
    # Calls:
    # 1 - (404) GET:/v1/profissionais/{cpf}
    # 2 - (400) GET:/v1/profissionais/lote/{id}/erros
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_69(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/14748485167",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Nenhum profissional de educação encontrado."
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id}/erros -> Response status 400 not defined for path '/v1/profissionais/lote/{id}/erros'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/43/erros?page=712",
                    headers=headers)
        
        assert res_1.status_code == 400
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "O ID fornecido não é um UUID válido. ID: 43"
    
    
    # Calls:
    # (401) GET:/v1/estudantes/lote/{id}/erros
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_70(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/lote/{id}/erros -> Response status 401 not defined for path '/v1/estudantes/lote/{id}/erros'.
        headers = {}
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/lote/35/erros",
                    headers=headers)
        
        assert res_0.status_code == 401
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # 1 - (404) GET:/v1/estudantes/solicitacoes-alteracoes
    # 2 - (401) GET:/v1/profissionais/lote/{id}/erros
    # Found 2 potential faults of type-code 200
    @timeout_decorator.timeout(60)
    def test_71(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> Response status 404 not defined for path '/v1/estudantes/solicitacoes-alteracoes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/solicitacoes-alteracoes?" + 
                    "per_page=503&" + 
                    "cpfAtual=32021261646",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Ocorreu um erro inesperado."
        assert res_0.json()["errors"]["message"] == "Nenhum dado encontrado"
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/profissionais/lote/{id}/erros -> Response status 401 not defined for path '/v1/profissionais/lote/{id}/erros'.
        headers = {}
        headers['Accept'] = "application/json"
        res_1 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/lote/11/erros?" + 
                    "page=806&" + 
                    "per_page=10",
                    headers=headers)
        
        assert res_1.status_code == 401
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Não autorizado"
    
    
    # Calls:
    # (404) GET:/v1/estudantes/validacao-cadastro
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_72(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/validacao-cadastro -> Response status 404 not defined for path '/v1/estudantes/validacao-cadastro'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/validacao-cadastro?" + 
                    "page=353&" + 
                    "cpf=24205173158",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Ocorreu um erro inesperado."
        assert res_0.json()["errors"]["message"] == "Nenhum dado encontrado"
    
    
    # Calls:
    # (404) GET:/v1/estudantes/solicitacoes-alteracoes
    # Found 1 potential fault of type-code 200
    @timeout_decorator.timeout(60)
    def test_73(self):
        
        # Fault200. Received A Response From API That Is Not Valid According To Its Schema. GET:/v1/estudantes/solicitacoes-alteracoes -> Response status 404 not defined for path '/v1/estudantes/solicitacoes-alteracoes'.
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/solicitacoes-alteracoes?" + 
                    "page=232&" + 
                    "cpfAtual=00217638577&" + 
                    "cpfNovo=06447847568",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Ocorreu um erro inesperado."
        assert res_0.json()["errors"]["message"] == "Nenhum dado encontrado"


if __name__ == '__main__':
    unittest.main()
