#!/usr/bin/env python

import json
import unittest
import requests
import os
if os.name == 'nt':
    class timeout_decorator:
        @staticmethod
        def timeout(*args, **kwargs):
            return lambda f: f # return a no-op decorator
else:
    import timeout_decorator
from em_test_utils import *


#  This file was automatically generated by EvoMaster on 2025-05-04T16:28:46.004Z[Etc/UTC]
#  
#  The generated test suite contains 2 tests
#  
#  Covered targets: 10
#  
#  Used time: 0h 50m 59s
#  
#  Needed budget for current results: 100%
#  
#  This file contains test cases that represent successful calls.
class EvoMaster_successes_Test(unittest.TestCase):

    
    baseUrlOfSut = "http://localhost:8000"
    
    
    
    
    
    
    
    
    
    
    # Calls:
    # (200) PATCH:/v1/estudantes/lote
    @timeout_decorator.timeout(60)
    def test_0(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_14_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_15_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 200
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_0.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
    
    
    # Calls:
    # 1 - (201) POST:/v1/estudantes/lote
    # 2 - (200) PATCH:/v1/estudantes/lote
    @timeout_decorator.timeout(60)
    def test_1(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"numeroNISResponsavel\": \"kHlJhgzh\", " + \
            " \"nome\": \"Aaron Afonso Zambrano\", " + \
            " \"racaCor\": 4, " + \
            " \"email\": \"alan.alonso.madeira@fake.com\", " + \
            " \"nomeSocial\": \"test\", " + \
            " \"numeroNIS\": \"71067152065\", " + \
            " \"rg\": \"3660299363794479\", " + \
            " \"orgaoEmissor\": \"i4tf\", " + \
            " \"cnh\": \"c8SLACq\", " + \
            " \"logradouro\": \"Rua R. Olívia Martines\", " + \
            " \"numero\": \"94\", " + \
            " \"estudantePpl\": 2, " + \
            " \"dataInicioMatricula\": \"2004-03-12\", " + \
            " \"matriculaRede\": \"e2XouiaD2aNA 8\", " + \
            " \"instituicao\": 133116, " + \
            " \"dataInicioPeriodoLetivo\": \"2092-07-17\", " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 750, " + \
            " \"estudanteAnoPeriodo\": 2 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_23_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_24_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_25_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_26_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_1.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."


if __name__ == '__main__':
    unittest.main()
