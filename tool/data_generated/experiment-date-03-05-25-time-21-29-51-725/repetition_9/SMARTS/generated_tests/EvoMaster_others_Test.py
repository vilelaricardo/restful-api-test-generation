#!/usr/bin/env python

import json
import unittest
import requests
import os
if os.name == 'nt':
    class timeout_decorator:
        @staticmethod
        def timeout(*args, **kwargs):
            return lambda f: f # return a no-op decorator
else:
    import timeout_decorator
from em_test_utils import *


#  This file was automatically generated by EvoMaster on 2025-05-04T20:26:17.905Z[Etc/UTC]
#  
#  The generated test suite contains 5 tests
#  
#  Covered targets: 18
#  
#  Used time: 0h 43m 24s
#  
#  Needed budget for current results: 98%
#  
#  This file contains test cases that represent failed calls, but not indicative of faults.
class EvoMaster_others_Test(unittest.TestCase):

    
    baseUrlOfSut = "http://localhost:8000"
    
    
    
    
    
    
    
    
    
    
    # Calls:
    # 1 - (201) POST:/v1/estudantes/lote
    # 2 - (422) PATCH:/v1/estudantes/lote
    @timeout_decorator.timeout(60)
    def test_0(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"cpfResponsavel\": \"12111123521\", " + \
            " \"cpf\": \"n\", " + \
            " \"genero\": 6, " + \
            " \"telefone\": \"tlKU_MVD9Z2tmT4l\", " + \
            " \"nomeSocial\": \"Teresa Collier\", " + \
            " \"sexo\": \"EVOMASTER\", " + \
            " \"numeroNIS\": \"28713967021\", " + \
            " \"certidaoNascimento\": \"m8ez\", " + \
            " \"cnh\": \"101302420\", " + \
            " \"logradouro\": \"Rua teste\", " + \
            " \"bairro\": \"Santa Lucia\", " + \
            " \"numero\": \"220\", " + \
            " \"cep\": \"57018780\", " + \
            " \"estudantePpl\": 2, " + \
            " \"matriculaRede\": \"vMuo5Cs4hbLZ12\", " + \
            " \"instituicao\": 6, " + \
            " \"inep\": 27014088, " + \
            " \"formaOrganizacaoTurma\": 21046302, " + \
            " \"anoMatricula\": 162 " + \
            " }, " + \
            " { " + \
            " \"cpfResponsavel\": \"12111123521\", " + \
            " \"nome\": \"Veronica Salinas\", " + \
            " \"dataNascimento\": \"1956-01-11\", " + \
            " \"genero\": 3, " + \
            " \"nomeSocial\": \"Andrew Kelley\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 128 " + \
            " ], " + \
            " \"rg\": \"21046302\", " + \
            " \"orgaoEmissor\": \"DKp\", " + \
            " \"logradouro\": \"Rua teste\", " + \
            " \"bairro\": \"Santa Lucia\", " + \
            " \"municipio\": 2704302, " + \
            " \"uf\": 27, " + \
            " \"estudantePpl\": 1, " + \
            " \"dataInicioMatricula\": \"2025-03-11\", " + \
            " \"instituicao\": 6, " + \
            " \"dataInicioPeriodoLetivo\": \"2060-02-13\", " + \
            " \"formaOrganizacaoTurma\": 21046302, " + \
            " \"estudanteIntegral\": 42, " + \
            " \"anoMatricula\": 679 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_1.status_code == 422
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Não foi possível processar as informações."
        assert res_1.json()["errors"]["message"] == "JSON inválido."
    
    
    # Calls:
    # (404) GET:/v1/profissionais/{cpf}
    @timeout_decorator.timeout(60)
    def test_1(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/TehBifu",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Nenhum profissional de educação encontrado."
    
    
    # Calls:
    # (404) GET:/v1/estudantes/{cpfNis}
    @timeout_decorator.timeout(60)
    def test_2(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/zEk71PzYa",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Nenhum estudante encontrado."
    
    
    # Calls:
    # (422) POST:/v1/profissionais/lote
    @timeout_decorator.timeout(60)
    def test_3(self):
        
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 422
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "JSON inválido."
    
    
    # Calls:
    # (422) POST:/v1/profissionais
    @timeout_decorator.timeout(60)
    def test_4(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"nivelEscolaridade\": 643, " + \
            " \"nome\": \"Wbs5x\", " + \
            " \"dataNascimento\": \"\", " + \
            " \"genero\": 1, " + \
            " \"tipoDeficiencia\": [ " + \
            " 213, " + \
            " 297, " + \
            " 102 " + \
            " ], " + \
            " \"sexo\": \"3\", " + \
            " \"numero\": \"aW\", " + \
            " \"cep\": \"\", " + \
            " \"uf\": 820, " + \
            " \"inep\": 873, " + \
            " \"formacoesAcademicas\": [], " + \
            " \"codigoFuncao\": 583, " + \
            " \"dataIngresso\": \"2042-11-16\", " + \
            " \"cargaHoraria\": 287 " + \
            " } "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_0.status_code == 422
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #2 ($dataNascimento) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"


if __name__ == '__main__':
    unittest.main()
