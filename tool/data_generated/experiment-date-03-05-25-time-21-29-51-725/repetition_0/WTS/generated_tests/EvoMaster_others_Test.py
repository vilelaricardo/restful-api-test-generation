#!/usr/bin/env python

import json
import unittest
import requests
import os
if os.name == 'nt':
    class timeout_decorator:
        @staticmethod
        def timeout(*args, **kwargs):
            return lambda f: f # return a no-op decorator
else:
    import timeout_decorator
from em_test_utils import *


#  This file was automatically generated by EvoMaster on 2025-05-03T23:52:20.109Z[Etc/UTC]
#  
#  The generated test suite contains 4 tests
#  
#  Covered targets: 21
#  
#  Used time: 0h 51m 13s
#  
#  Needed budget for current results: 100%
#  
#  This file contains test cases that represent failed calls, but not indicative of faults.
class EvoMaster_others_Test(unittest.TestCase):

    
    baseUrlOfSut = "http://localhost:8000"
    
    
    
    
    
    
    
    
    
    
    # Calls:
    # (null) POST:/v1/profissionais
    @timeout_decorator.timeout(60)
    def test_0(self):
        
        try:
            headers = {}
            headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
            headers["content-type"] = "application/json"
            body = {}
            body = " { " + \
                " \"email\": \"joao.silva@email.com\", " + \
                " \"telefone\": \"deS1SawzxCWU\", " + \
                " \"logradouro\": \"Rua das Flores\", " + \
                " \"cep\": \"S2FyC\", " + \
                " \"inep\": 27014088, " + \
                " \"codigoFuncao\": 2, " + \
                " \"dataIngresso\": \"1957-13-13\", " + \
                " \"dataFim\": \"2061-13-11\" " + \
                " } "
            headers['Accept'] = "*/*"
            requests \
                    .post(self.baseUrlOfSut + "/v1/profissionais",
                        headers=headers, data=body)
        except AssertionError as e:
            raise e
        except Exception as e:
            pass
    
    
    # Calls:
    # (null) GET:/v1/estudantes
    @timeout_decorator.timeout(60)
    def test_1(self):
        
        try:
            headers = {}
            headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
            headers['Accept'] = "*/*"
            requests \
                    .get(self.baseUrlOfSut + "/v1/estudantes?" + 
                        "page=458&" + 
                        "per_page=417",
                        headers=headers)
        except AssertionError as e:
            raise e
        except Exception as e:
            pass
    
    
    # Calls:
    # 1 - (422) POST:/v1/profissionais
    # 2 - (200) PATCH:/v1/estudantes/lote
    # Using 1 example:
    #   123456789
    @timeout_decorator.timeout(60)
    def test_2(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"nivelEscolaridade\": 10, " + \
            " \"cpf\": \"00018119166\", " + \
            " \"dataNascimento\": \"9siApGbnp7dwX\", " + \
            " \"email\": \"dr.murilo.sales.valentin@fake.com\", " + \
            " \"nomeSocial\": \"8hbo50Mnoym\", " + \
            " \"tipoDeficiencia\": [ " + \
            " 1, " + \
            " 975 " + \
            " ], " + \
            " \"sexo\": \"3\", " + \
            " \"bairro\": \"São Grego\", " + \
            " \"inep\": 41063287, " + \
            " \"matriculaRede\": \"123456789\", " + \
            " \"tipoVinculo\": 0, " + \
            " \"codigoFuncao\": 2, " + \
            " \"dataIngresso\": \"2100-12-22\", " + \
            " \"dataFim\": \"2069-13-10\" " + \
            " } "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_0.status_code == 422
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #1 ($nome) must be of type string, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_49_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_50_XYZ_\" " + \
            " }, " + \
            " { " + \
            " \"EM_tainted_map\": \"_EM_51_XYZ_\" " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_1.status_code == 200
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == True
        assert res_1.json()["message"] == "Lote de atualização de estudante criado com sucesso."
        assert res_1.json()["detalhesValidacao"] == "Dados sensíveis são pendentes de validação. Consulte a rota /estudantes/solicitacoes-alteracoes para obter mais informações."
    
    
    # Calls:
    # (404) GET:/v1/profissionais/{cpf}
    @timeout_decorator.timeout(60)
    def test_3(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/17988487833",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Nenhum profissional de educação encontrado."


if __name__ == '__main__':
    unittest.main()
