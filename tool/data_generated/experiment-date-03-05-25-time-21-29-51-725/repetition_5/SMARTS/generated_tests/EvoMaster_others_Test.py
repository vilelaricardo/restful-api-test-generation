#!/usr/bin/env python

import json
import unittest
import requests
import os
if os.name == 'nt':
    class timeout_decorator:
        @staticmethod
        def timeout(*args, **kwargs):
            return lambda f: f # return a no-op decorator
else:
    import timeout_decorator
from em_test_utils import *


#  This file was automatically generated by EvoMaster on 2025-05-04T10:53:43.683Z[Etc/UTC]
#  
#  The generated test suite contains 5 tests
#  
#  Covered targets: 18
#  
#  Used time: 0h 40m 39s
#  
#  Needed budget for current results: 100%
#  
#  This file contains test cases that represent failed calls, but not indicative of faults.
class EvoMaster_others_Test(unittest.TestCase):

    
    baseUrlOfSut = "http://localhost:8000"
    
    
    
    
    
    
    
    
    
    
    # Calls:
    # 1 - (201) POST:/v1/estudantes/lote
    # 2 - (422) PATCH:/v1/estudantes/lote
    @timeout_decorator.timeout(60)
    def test_0(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [ " + \
            " { " + \
            " \"numeroNISResponsavel\": \"16517823531\", " + \
            " \"nomeMaeEstudante\": \"Cecília Guedes Jr.\", " + \
            " \"nome\": \"sZhNV_DHnqfc\", " + \
            " \"dataNascimento\": \"1994-04-22\", " + \
            " \"email\": \"davi.souza.lira@fake.com\", " + \
            " \"numeroNIS\": \"kfy_Y0\", " + \
            " \"logradouro\": \"Rua R. Caio\", " + \
            " \"numero\": \"4\", " + \
            " \"cep\": \"\", " + \
            " \"estudantePpl\": 42, " + \
            " \"dataInicioMatricula\": \"1981-02-25\", " + \
            " \"dataInicioPeriodoLetivo\": \"2012-00-16\", " + \
            " \"formaOrganizacaoTurma\": 735, " + \
            " \"turmaOrganizacaoQuantidadeTotal\": 4, " + \
            " \"estudanteAnoPeriodo\": 3 " + \
            " } " + \
            " ] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 201
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == True
        assert res_0.json()["message"] == "Operação realizada com sucesso"
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_1 = requests \
                .patch(self.baseUrlOfSut + "/v1/estudantes/lote",
                    headers=headers, data=body)
        
        assert res_1.status_code == 422
        assert "application/json" in res_1.headers["content-type"]
        assert res_1.json()["success"] == False
        assert res_1.json()["message"] == "Não foi possível processar as informações."
        assert res_1.json()["errors"]["message"] == "JSON inválido."
    
    
    # Calls:
    # (404) GET:/v1/estudantes/{cpfNis}
    @timeout_decorator.timeout(60)
    def test_1(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/estudantes/bp6EbK8XjSEwZ",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Nenhum estudante encontrado."
    
    
    # Calls:
    # (404) GET:/v1/profissionais/{cpf}
    @timeout_decorator.timeout(60)
    def test_2(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers['Accept'] = "application/json"
        res_0 = requests \
                .get(self.baseUrlOfSut + "/v1/profissionais/rnUXtxwfZcunS8e",
                    headers=headers)
        
        assert res_0.status_code == 404
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "Nenhum profissional de educação encontrado."
    
    
    # Calls:
    # (422) POST:/v1/profissionais/lote
    @timeout_decorator.timeout(60)
    def test_3(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " [] "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais/lote",
                    headers=headers, data=body)
        
        assert res_0.status_code == 422
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "JSON inválido."
    
    
    # Calls:
    # (422) POST:/v1/profissionais
    # Using 3 examples:
    #   1
    #   2014
    #   Universidade Federal do Rio de Janeiro
    @timeout_decorator.timeout(60)
    def test_4(self):
        
        headers = {}
        headers["x-api-key"] = "8jgd4t567yhgbv!&uj*9l;m83$gt7yh1"
        headers["content-type"] = "application/json"
        body = {}
        body = " { " + \
            " \"tipoEnsinoMedio\": 1, " + \
            " \"nivelEscolaridade\": 182, " + \
            " \"nome\": \"ddsbA5bd3e\", " + \
            " \"dataNascimento\": \"6gqZui\", " + \
            " \"genero\": 1, " + \
            " \"racaCor\": 3, " + \
            " \"email\": \"qYXtOYMYO6T9Q\", " + \
            " \"bairro\": \"PRro0NLtnA\", " + \
            " \"cep\": \"la\", " + \
            " \"municipio\": 689, " + \
            " \"uf\": 261, " + \
            " \"inep\": 551, " + \
            " \"formacoesAcademicas\": [ " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 729, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 979, " + \
            " \"anoInicioFormacaoAcademica\": 588, " + \
            " \"anoConclusaoFormacaoAcademica\": 647 " + \
            " }, " + \
            " { " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 256, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"9LT1\", " + \
            " \"anoInicioFormacaoAcademica\": 615, " + \
            " \"anoConclusaoFormacaoAcademica\": 2014 " + \
            " }, " + \
            " { " + \
            " \"tipoFormacaoAcademica\": 116, " + \
            " \"areaDoConhecimentoFormacaoAcademica\": 141, " + \
            " \"noInstituicaoEnsinoFormacaoAcademica\": \"Universidade Federal do Rio de Janeiro\" " + \
            " } " + \
            " ], " + \
            " \"tipoVinculo\": 1, " + \
            " \"dataIngresso\": \"1940-09-31\", " + \
            " \"dataFim\": \"1932-04-06\" " + \
            " } "
        headers['Accept'] = "application/json"
        res_0 = requests \
                .post(self.baseUrlOfSut + "/v1/profissionais",
                    headers=headers, data=body)
        
        assert res_0.status_code == 422
        assert "application/json" in res_0.headers["content-type"]
        assert res_0.json()["success"] == False
        assert res_0.json()["message"] == "App\\Repositories\\DTOs\\Entrada\\Estudante\\PessoaEntradaDTO::__construct(): Argument #10 ($tipoDeficiencia) must be of type array, null given, called in /home/wanderson/Documentos/experimento/api-cmde-develop/app/Repositories/DTOs/Entrada/ProfissionalEducacao/ProfissionalEducacaoDadosEntradaDTO.php on line 90"


if __name__ == '__main__':
    unittest.main()
